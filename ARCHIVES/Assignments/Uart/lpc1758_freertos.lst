
lpc1758_freertos.elf:     file format elf32-littlearm
lpc1758_freertos.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x000266d0 vaddr 0x000266d0 paddr 0x000266d0 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x000166d8 memsz 0x000166d8 flags r-x
    LOAD off    0x0002c000 vaddr 0x2007c000 paddr 0x000266d8 align 2**16
         filesz 0x000001c8 memsz 0x00000794 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         000166d0  00010000  00010000  00010000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001c8  2007c000  000266d8  0002c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000005cc  2007c1c8  000268a0  0002c1c8  2**3  ALLOC
  3 .comment      0000006e  00000000  00000000  0002c1c8  2**0  CONTENTS, READONLY
  4 .ARM.attributes 00000031  00000000  00000000  0002c236  2**0  CONTENTS, READONLY
  5 .ARM.exidx    00000008  000266d0  000266d0  000266d0  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .debug_frame  0000206c  00000000  00000000  0002c268  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c1c8 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
000266d0 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
0001adf0 l     F .text	0000003c isr_forwarder_routine
2007c04c l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c1d0 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 lpc_timers.c
00010c9c l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 can.c
00010db4 l     F .text	00000032 CAN_tx_now
00010de8 l     F .text	000000a0 CAN_handle_isr
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 eint.c
00010f90 l     F .text	0000002c handle_eint_list
00010fbc l     F .text	00000038 eint3_enable.isra.0
2007c1d8 l     O .bss	00000004 gp_port2_rising_list
2007c1dc l     O .bss	00000004 gp_port2_falling_list
2007c1e0 l     O .bss	00000004 gp_port0_rising_list
2007c1e4 l     O .bss	00000004 gp_port0_falling_list
00000000 l    df *ABS*	00000000 adc.c
000110a4 l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 nrf_stream.cpp
00000000 l    df *ABS*	00000000 spi_sem.c
2007c1f4 l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 newlib_syscalls.c
2007c1f8 l     O .bss	00000004 g_input_dev_fptr
2007c1fc l     O .bss	00000004 g_output_dev_fptr
00000000 l    df *ABS*	00000000 memory.cpp
00011694 l     F .text	00000020 _GLOBAL__sub_I__sbrk
2007c200 l     O .bss	00000004 g_last_sbrk_ptr
2007c204 l     O .bss	00000004 g_next_heap_ptr
2007c208 l     O .bss	00000004 g_last_sbrk_size
2007c20c l     O .bss	00000004 ram_region_1_end
2007c210 l     O .bss	00000004 ram_region_2_end
2007c214 l     O .bss	00000004 g_sbrk_calls
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 wireless.c
000116bc l     F .text	00000030 nrf_irq_callback
000116ec l     F .text	00000070 nrf_driver_init
0001175c l     F .text	00000050 nrf_driver_app_recv
000117ac l     F .text	0000005c nrf_driver_send
00011808 l     F .text	00000022 nrf_driver_receive
0001182a l     F .text	00000064 wireless_get_queued_pkt
0001188e l     F .text	00000028 nrf_driver_get_timer
2007c218 l     O .bss	00000004 g_ack_queue
2007c21c l     O .bss	00000004 g_rx_queue
2007c220 l     O .bss	00000004 g_nrf_activity_sem
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00011970 l     F .text	00000104 nordic_transfer
00011a74 l     F .text	00000020 nordic_readRegister
00011a94 l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 mesh.c
00011e10 l     F .text	00000026 mesh_incr_soft_timers_for_arr
00011e38 l     F .text	0000004c mesh_update_soft_timers
00011e84 l     F .text	0000003c mesh_send_packet
00011ec0 l     F .text	00000034 mesh_send_retry_packet
00011ef4 l     F .text	00000024 mesh_find_rte_tbl_entry
00011f18 l     F .text	00000028 mesh_update_rte_scores
00011f40 l     F .text	00000042 mesh_get_pnd_pkt_slot
00011f84 l     F .text	00000090 mesh_pending_packets_add
00012014 l     F .text	00000058 mesh_get_rte_to_modify
0001206c l     F .text	00000184 mesh_handle_pnd_pkts_for_arr
000124b4 l     F .text	0000001a mesh_send_ack
2007c224 l     O .bss	00000001 s_next_packet_id.5126
2007c228 l     O .bss	00000014 g_driver
2007c23c l     O .bss	00000090 g_mesh_pnd_pkts
2007c2cc l     O .bss	00000018 g_our_name
2007c2e4 l     O .bss	0000000c g_mesh_stats
2007c2f0 l     O .bss	00000001 g_locked
2007c2f1 l     O .bss	00000001 g_rpt_node
2007c2f4 l     O .bss	00000004 s_prev_time_ms.5140
2007c2f8 l     O .bss	00000010 g_rte_table
2007c040 l     O .data	00000004 g_pkt_hist_wptr
2007c308 l     O .bss	0000000c g_pkt_hist
2007c044 l     O .data	00000001 g_retry_count
2007c045 l     O .data	00000001 g_our_node_id
2007c314 l     O .bss	00000001 g_error_mask
2007c315 l     O .bss	00000048 g_our_pnd_pkts
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 ff.c
0001289a l     F .text	00000038 mem_cpy
000128d2 l     F .text	0000000e mem_set
000128e0 l     F .text	0000001e sum_sfn
000128fe l     F .text	0000003c get_ldnumber
0001293a l     F .text	000000c4 get_fileinfo
000129fe l     F .text	00000046 sync_window.part.1
00012a44 l     F .text	0000000c sync_window
00012a50 l     F .text	00000074 sync_fs
00012ac4 l     F .text	00000034 move_window
00012af8 l     F .text	0000004c check_fs
00012b44 l     F .text	0000023c find_volume
00012d80 l     F .text	0000003a validate
00012dba l     F .text	0000001a unlock_fs
00012e90 l     F .text	0000007e dir_sdi
00012fde l     F .text	000000a2 create_chain
00013080 l     F .text	000000ee dir_next
00013170 l     F .text	00000124 dir_find.part.9
00013294 l     F .text	00000268 follow_path
000134fc l     F .text	00000224 dir_register
00013720 l     F .text	0000005a dir_remove
0001377c l     F .text	000000e8 dir_read.constprop.11
00013864 l     F .text	00000058 remove_chain
0002372a l     O .text	00000016 cst.6335
2007c35e l     O .bss	00000002 Fsid
00023784 l     O .text	00000080 ExCvt
00023804 l     O .text	0000000d LfnOfs
00023812 l     O .text	00000016 vst.6334
2007c360 l     O .bss	00000008 FatFs
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 ccsbcs.c
00023828 l     O .text	000001e0 tbl_lower.5762
00023a08 l     O .text	00000100 Tbl
00023b08 l     O .text	000001e0 tbl_upper.5763
00000000 l    df *ABS*	00000000 spi_flash.cpp
00014a00 l     F .text	00000020 flash_get_mem_size_bytes()
00014a20 l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
00014a94 l     F .text	000000c4 ssp1_exchange_data
00014b58 l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
00014b80 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00014bc4 l     F .text	00000044 flash_wait_for_ready()
00014e04 l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
00023cf0 l     O .text	00000010 CSWTCH.71
2007c368 l     O .bss	00000002 g_flash_pagesize
2007c36a l     O .bss	00000001 g_flash_capacity
2007c36c l     O .bss	00000004 g_sector_count
00000000 l    df *ABS*	00000000 sd.c
00014f10 l     F .text	00000012 sys_get_uptime_ms
00014f24 l     F .text	00000030 ssp1_set_max_clock
00014f54 l     F .text	00000018 ssp1_exchange_byte
2007c370 l     O .bss	00000001 g_card_type
2007c046 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 io_source.cpp
2007c374 l     O .bss	00000004 g_last_decoded_signal
2007c378 l     O .bss	00000002 g_signal_count
00023d00 l     O .text	00000080 LED_DISPLAY_CHARMAP
2007c37c l     O .bss	00000080 g_ir_timings
00000000 l    df *ABS*	00000000 terminal.cpp
00015c3a l     F .text	00000040 VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.4]
00000000 l    df *ABS*	00000000 wireless_handlers.cpp
000162a8 l     F .text	00000034 wsAddrHandler(str&, CharDev&, void*)
000162dc l     F .text	0000003c wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char) [clone .constprop.4]
00016318 l     F .text	00000114 wsTxHandler(str&, CharDev&, void*)
0001642c l     F .text	0000001e wsStatsHandler(str&, CharDev&, void*)
0001644c l     F .text	00000080 wsRxHandler(str&, CharDev&, void*)
000168ec l     F .text	00000120 wsStreamHandler(str&, CharDev&, void*)
000166c0 l     F .text	0000022c wsFileTxHandler(str&, CharDev&, void*)
2007c400 l     O .bss	00000004 wirelessHandler(str&, CharDev&, void*)::pCmdProcessor
00000000 l    df *ABS*	00000000 handlers.cpp
000249c8 l     O .text	0000000b logHandler(str&, CharDev&, void*)::__FUNCTION__
00000000 l    df *ABS*	00000000 prog_handlers.cpp
2007c41c l     O .bss	00000004 getFileHandler(str&, CharDev&, void*)::spBuffer
2007c420 l     O .bss	00000004 guard variable for getFileHandler(str&, CharDev&, void*)::spBuffer
00000000 l    df *ABS*	00000000 high_level_init.cpp
00017adc l     F .text	0000000c hl_print_line()
00017ae8 l     F .text	0000002c ssp_set_max_clock
00017b14 l     F .text	00000094 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 prd_dispatcher.cpp
2007c438 l     O .bss	00000004 periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)::counters
000256d8 l     O .text	00000010 periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)::overrunMsg
2007c43c l     O .bss	00000010 sems
00000000 l    df *ABS*	00000000 period_callbacks.cpp
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 examples.cpp
2007c44c l     O .bss	00000001 ComTask2::run(void*)::Buffer_Position
2007c450 l     O .bss	00000008 ComTask::run(void*)::X_Velocity
2007c458 l     O .bss	00000001 ComTask::run(void*)::Acceleration_Trigger
2007c45c l     O .bss	00000004 ComTask2::run(void*)::Position
2007c460 l     O .bss	00000008 ComTask::run(void*)::X_Acceleration_lowpass
2007c468 l     O .bss	00000004 ComTask::run(void*)::X_Position_Delta
2007c470 l     O .bss	00000008 ComTask::run(void*)::X_Position
2007c478 l     O .bss	00000001 ComTask::run(void*)::counter
2007c479 l     O .bss	000000ff ComTask2::run(void*)::Buffer
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 str.cpp
00000000 l    df *ABS*	00000000 scheduler_task.cpp
00018d54 l     F .text	0000002c __sputc_r
00018d80 l     F .text	00000034 dbg_print(char const*, char const*)
00018db4 l     F .text	00000038 printline(char const*, char const*)
2007c578 l     O .bss	00000001 g_dbg_print
2007c57c l     O .bss	00000008 gEnumObjects
2007c584 l     O .bss	00000004 gRunTaskSemaphore
2007c588 l     O .bss	00000004 gTaskEntryTaskHandle
2007c58c l     O .bss	00000004 gpTaskList
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 command_handler.cpp
00000000 l    df *ABS*	00000000 rtc_alarm.c
000193e8 l     F .text	00000026 for_each_recur_alarm_callback
0001940e l     F .text	0000005c for_each_alarm_callback
2007c590 l     O .bss	00000010 g_list_recur_alarms
2007c5a0 l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 file_logger.c
0001956c l     F .text	00000044 logger_get_buffer_ptr
000195b0 l     F .text	000000b4 logger_write_to_file
00019664 l     F .text	000000d0 logger_task
00019734 l     F .text	00000048 logger_write_log_message
2007c5a4 l     O .bss	00000004 g_write_buffer_queue
2007c047 l     O .data	00000001 g_logger_printf_mask
2007c5a8 l     O .bss	00000002 g_highest_file_write_time
2007c5aa l     O .bss	00000002 g_blocked_calls
2007c5ac l     O .bss	00000010 g_logger_calls
2007c5bc l     O .bss	00000004 gp_file_buffer
2007c5c0 l     O .bss	00000004 g_empty_buffer_queue
2007c5c4 l     O .bss	00000002 g_buffer_watermark
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c5c8 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 port.c
00019a8c l     F .text	0000001a prvPortStartFirstTask
00019b18 l     F .text	00000008 prvTaskExitError
00019ae8 l       .text	00000000 pxCurrentTCBConst2
00019b98 l       .text	00000000 pxCurrentTCBConst
2007c5d0 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 tasks.c
00019c64 l     F .text	00000032 prvResetRunTimeStatsInList
00019c98 l     F .text	00000018 prvIdleTask
00019cb0 l     F .text	00000024 prvResetNextTaskUnblockTime
00019cd4 l     F .text	00000050 prvAddCurrentTaskToDelayedList
00019d24 l     F .text	000000a0 prvListTaskWithinSingleList
2007c5d4 l     O .bss	00000004 ulTaskSwitchedInTime
2007c5d8 l     O .bss	00000004 xNumOfOverflows
2007c5dc l     O .bss	00000004 pxDelayedTaskList
2007c5e0 l     O .bss	00000004 xSchedulerRunning
2007c5e4 l     O .bss	00000014 xDelayedTaskList1
2007c5f8 l     O .bss	00000014 xDelayedTaskList2
2007c60c l     O .bss	00000004 uxPendedTicks
2007c610 l     O .bss	000000c8 pxReadyTasksLists
2007c6d8 l     O .bss	00000004 uxSchedulerSuspended
00025ef3 l     O .text	00000014 ucExpectedStackBytes.6574
2007c6e0 l     O .bss	00000014 xPendingReadyList
2007c6f4 l     O .bss	00000004 xTickCount
2007c6f8 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c6fc l     O .bss	00000004 uxTaskNumber
2007c700 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c048 l     O .data	00000004 xNextTaskUnblockTime
2007c704 l     O .bss	00000004 xIdleTaskHandle
2007c708 l     O .bss	00000014 xSuspendedTaskList
2007c71c l     O .bss	00000004 uxTopReadyPriority
2007c720 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
0001a874 l     F .text	0000006a prvCopyDataToQueue
0001a8de l     F .text	00000036 prvNotifyQueueSetContainer
0001a914 l     F .text	00000028 prvCopyDataFromQueue
0001a93c l     F .text	0000007c prvUnlockQueue
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 sys_clock.cpp
0001ae84 l     F .text	00000014 sys_clock_pll0_feed()
0001ae98 l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c724 l     O .bss	00000001 g_sys_boot_type
2007c725 l     O .bss	0000000c g_rtc_boot_time
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c732 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 ctime.c
00000000 l    df *ABS*	00000000 findfp.c
0001ceb8 l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lcltime.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
0001d36c l     F .text	000001b8 validate_structure
0002639c l     O .text	00000030 _DAYS_BEFORE_MONTH
000263cc l     O .text	00000030 DAYS_IN_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 refill.c
0001e83c l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
0001ee5a l     F .text	00000042 sulp
00026494 l     O .text	00000014 fpinan.5401
000264a8 l     O .text	00000014 fpi.5365
000264c0 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tolower.c
00000000 l    df *ABS*	00000000 toupper.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007c768 l     O .bss	0000000b __tzname_dst
2007c773 l     O .bss	0000000b __tzname_std
2007c780 l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 asctime.c
00000000 l    df *ABS*	00000000 asctime_r.c
00026524 l     O .text	00000015 day_name.4752
00026559 l     O .text	00000024 mon_name.4753
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
0002040c l     F .text	00000116 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
000211dc l     F .text	0000006c rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
000216b0 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c14c l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 gmtime_r.c
00000000 l    df *ABS*	00000000 locale.c
2007c18c l     O .data	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mprec.c
00026658 l     O .text	0000000c p05.5408
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00022918 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
2007c0e0 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007c78c l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
0001125c g     F .text	0000001c Uart3::Uart3()
00019020 g     F .text	00000044 scheduler_start(bool, bool)
0002347c g     F .text	00000014 _malloc_usable_size_r
00017510 g     F .text	00000030 rebootHandler(str&, CharDev&, void*)
0001d9d4 g     F .text	000000c0 __cvt
000189fc g     F .text	0000002e str::beginsWith(char const*) const
0001b2c0 g     F .text	00000054 lpc_sys_setup_system_timer
00022e98 g     F .text	000000cc _scanf_chars
0001badc g     F .text	00000004 std::type_info::__is_function_p() const
00023490 g     F .text	0000002c .hidden __aeabi_dcmpun
00010b9c g     F .text	000000d0 rtc_init
00022272 g     F .text	00000044 __any_on
0002345c g     F .text	00000020 _isatty_r
0001c4b4 g     F .text	00000012 .hidden __aeabi_dcmple
00018be4 g     F .text	00000006 str::operator int() const
0001ed4a g     F .text	00000010 strcpy
0002034c g     F .text	0000002c asctime
0001bc34 g     F .text	00000018 .hidden __ashldi3
000114cc g     F .text	00000004 _getpid
0001e6a4 g     F .text	000000b4 _puts_r
00010148  w    F .text	00000010 TIMER2_IRQHandler
00019004 g     F .text	0000001c scheduler_add_task(scheduler_task*)
0001c3f0 g     F .text	0000007a .hidden __cmpdf2
00021a00 g     F .text	00000024 _lseek_r
00012dea g     F .text	000000a6 get_fat
00010c80 g     F .text	0000001c RIT_IRQHandler
0001593e g     F .text	00000012 Acceleration_Sensor::getX()
00012224 g     F .text	00000100 mesh_form_pkt
00018a90 g     F .text	00000028 str::eraseFirst(int)
00018bdc g     F .text	00000004 str::operator==(char const*) const
0001c3f0 g     F .text	0000007a .hidden __eqdf2
00014df4 g     F .text	00000010 flash_supports_metadata
000234ed g     O .text	00000009 typeinfo name for UartDev
000100cc g       .text	00000000 __section_table_start
000218a0 g     F .text	00000024 _gettimeofday_r
00019b44 g     F .text	00000014 vPortExitCritical
0001faf6 g     F .text	00000006 strtok_r
0001bf60 g     F .text	0000005a .hidden __floatdidf
00010148  w    F .text	00000010 I2C0_IRQHandler
0001130c  w    F .text	00000012 NordicStream::~NordicStream()
2007c428  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001eb70 g     F .text	00000024 _kill_r
0001e674 g     F .text	00000030 printf
0001b314 g     F .text	0000002c sys_get_uptime_us
000183d4  w    F .text	0000000c wirelessTask::~wirelessTask()
0001ec92 g     F .text	00000024 __sseek
0001cf2c g     F .text	00000060 __sinit
000111f4  w    F .text	00000014 Uart3::~Uart3()
000201a4 g     F .text	000000a8 __swbuf_r
2007c784 g     O .bss	00000004 _daylight
00019b08 g     F .text	00000010 ulPortSetInterruptMask
00016c14 g     F .text	00000022 memInfoHandler(str&, CharDev&, void*)
2007c418  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
0001b558 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00026138 g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00023650  w    O .text	0000001c vtable for Uart3
0001cf00 g     F .text	0000002c __sfmoreglue
00020148 g     F .text	00000048 _vsiscanf_r
000116b8 g     F .text	00000004 __malloc_unlock
000198dc g     F .text	00000134 logger_log
000257e8 g     O .text	0000000c typeinfo for ComTask
00015b7a g     F .text	00000030 I2C_Temp::getCelsius()
0001b9ae g     F .text	0000012c __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000164cc g     F .text	00000074 wsRteHandler(str&, CharDev&, void*)
0001eea0 g     F .text	00000c00 _strtod_r
0001c9a4 g     F .text	00000136 .hidden __divsf3
000152cc g     F .text	00000098 sd_read
00023604  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
00021248 g     F .text	0000002a __hexdig_fun
00025acc  w    O .text	00000020 vtable for scheduler_task
000183c8  w    F .text	00000002 wirelessTask::~wirelessTask()
000103ec g     F .text	0000006e UartDev::getChar(char*, unsigned int)
00023620  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00010cbc g     F .text	00000050 lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
000184e4 g     F .text	0000002c ComTask::ComTask()
0001d324 g     F .text	00000036 memmove
00011b20 g     F .text	00000008 nordic_clear_packet_sent_flag
2007c1c8  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
0001abe4 g     F .text	00000076 xQueueGenericSendFromISR
00021ae4 g     F .text	0000006a _Balloc
000188e8 g     F .text	0000004c str::tokenize(char const*, int, ...)
00018210 g     F .text	000000ec periodicSchedulerTask::periodicSchedulerTask()
000266d8 g       .ARM.exidx	00000000 __exidx_end
0001faa0 g     F .text	00000056 __strtok_r
00010ae4 g     F .text	00000050 rtc_gettime
0001cadc g     F .text	0000004c .hidden __fixsfsi
000100d8 g       .text	00000000 __data_section_table_end
00015d2c g     F .text	00000074 terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)
000182fc g     F .text	00000088 periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)
00011074 g     F .text	00000030 eint3_enable_port0
00025a98 g     O .text	00000020 vtable for ComTask2
00010148  w    F .text	00000010 I2C1_IRQHandler
0001883c g     F .text	0000000e is_freertos_running
0002366c  w    O .text	00000024 typeinfo name for SingletonTemplate<NordicStream>
00016a9c g     F .text	00000090 UARTHandler(str&, CharDev&, void*)
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
0001c3e0 g     F .text	0000008a .hidden __gtdf2
0001817c g     F .text	00000020 period_task_1Hz(void*)
00019064 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00023514 g     O .text	0000000c typeinfo for UartDev
0001af10 g     F .text	000000b4 sys_clock_configure()
000236c4 g     O .text	00000020 typeinfo for NordicStream
0001d8b4 g     F .text	00000064 _mallinfo_r
0001adc6 g     F .text	00000018 xQueueSelectFromSet
0001a7e0 g     F .text	00000010 vRunTimeStatIsrExit
00017730  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007c6dc g     O .bss	00000004 pxCurrentTCB
00017540 g     F .text	00000038 learnIrHandler(str&, CharDev&, void*)
00014f6c g     F .text	0000002e wait_ready
00010ff4 g     F .text	00000080 EINT3_IRQHandler
0001596c g     F .text	00000064 IR_Sensor::decodeIrCode()
00011ad4 g     F .text	00000016 nordic_standby1_to_tx_mode1
000188c4 g     F .text	00000008 str::clear()
00010a64 g     F .text	00000040 Uart0::init(unsigned int, int, int)
00012208 g     F .text	0000000c mesh_get_node_address
00018558 g     F .text	00000210 ComTask::run(void*)
000159d0 g     F .text	00000034 IR_Sensor::init()
00023438 g     F .text	00000024 _fstat_r
00018b62 g     F .text	00000040 str::trimStart(char const*)
000124d0 g     F .text	0000002c mesh_get_routing_entry
2007c790 g     O .bss	00000004 errno
00022f64 g     F .text	000001e4 _scanf_i
0001ec56 g     F .text	00000004 __seofread
000266d8 g       .ARM.exidx	00000000 _etext
00016b2c g     F .text	000000e8 taskListHandler(str&, CharDev&, void*)
00011bba g     F .text	0000003e nordic_set_intr_signals
0001c47c g     F .text	00000010 .hidden __aeabi_cdcmple
2007c1d4  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
00011ac0 g     F .text	00000008 nordic_clear_all_intr_flags
00019098 g     F .text	00000018 scheduler_task::getSharedObject(unsigned char)
0001072e g     F .text	00000016 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
0001c62c g     F .text	00000160 .hidden __aeabi_fadd
00018896 g     F .text	00000024 str::~str()
0001c628 g     F .text	00000164 .hidden __subsf3
000149dc g     F .text	00000024 ff_wtoupper
00023da0 g     O .text	00000020 vtable for terminalTask
000236a8 g     O .text	0000001c vtable for NordicStream
00018c5a g     F .text	0000000c str::str(int)
00020190 g     F .text	00000014 vsscanf
00017758 g     F .text	00000030 onDemandTemperatureHandler(str&, CharDev&, void*)
00022e48 g     F .text	00000050 _vfiscanf_r
00015bd8  w    F .text	00000004 scheduler_task::taskEntry()
0001b510 g     F .text	00000048 lpc_pclk
000187a0 g     F .text	00000080 ComTask2::run(void*)
00010148  w    F .text	00000010 TIMER3_IRQHandler
00010a04 g     F .text	00000014 I2C2::I2C2()
00011d3a g     F .text	0000000c nordic_set_rx_pipe0_addr
00010ac0 g     F .text	00000024 UART0_IRQHandler
00019bd4 g     F .text	00000030 xPortStartScheduler
00016a54  w    F .text	00000048 Storage::getSDDrive()
00019fb8 g     F .text	00000018 vTaskEndScheduler
00018200 g     F .text	00000004 periodicSchedulerTask::regTlm()
0001d30e g     F .text	00000016 memcpy
0001a4b0 g     F .text	0000005c vTaskPlaceOnEventList
000216fa g     F .text	0000011c __hexnan
00010ecc g     F .text	000000c4 ssp1_dma_transfer_block
0001c46c g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c734 g     O .bss	00000004 gp_timer_ptr
00019dc4 g     F .text	000001a0 xTaskGenericCreate
0001e9b0 g     F .text	00000154 setvbuf
00016a0c  w    F .text	00000048 Storage::getFlashDrive()
0002359c  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
0001ceac g     F .text	0000000c _cleanup_r
0001bb40 g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000223d0 g     F .text	000001e8 _svfprintf_r
0001bef0 g     F .text	00000022 .hidden __floatsidf
00019bc0  w    F .text	00000014 vPortSetupTimerInterrupt
00023698 g     O .text	0000000f typeinfo name for NordicStream
00011bae g     F .text	0000000c nordic_flush_rx_fifo
0001c3e8 g     F .text	00000082 .hidden __ltdf2
000100fa  w    F .text	0000000e isr_nmi
00019b9c g     F .text	00000024 xPortSysTickHandler
0001564c g     F .text	00000026 disk_initialize
00012214 g     F .text	00000010 mesh_set_retry_count
0001bb4c g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001cb68 g     F .text	00000000 .hidden __aeabi_uldivmod
00010848 g     F .text	00000122 I2C_Base::i2cStateMachine()
0001e758 g     F .text	00000010 puts
00026160 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
000183c8  w    F .text	00000002 wirelessTask::~wirelessTask()
0001a9d6 g     F .text	0000001a vPortFree
00017900 g     F .text	000000a8 flashProgHandler(str&, CharDev&, void*)
0001fc44 g     F .text	00000018 tolower
00022e48 g     F .text	00000050 _vfscanf_r
000221ee g     F .text	00000050 __ratio
0001e980 g     F .text	00000030 iscanf
00014338 g     F .text	00000120 f_rename
00015aa6 g     F .text	00000004 LED::init()
00015be0  w    F .text	00000048 terminalTask::~terminalTask()
00014958 g     F .text	00000004 ff_del_syncobj
0001d2b4 g     F .text	00000010 malloc
00023544  w    O .text	00000007 typeinfo name for Uart0
00010204  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
00015a04 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001eb0c g     F .text	00000054 _raise_r
0001152a g     F .text	00000004 _fstat
000113c4 g     F .text	00000030 spi1_lock
0001c794 g     F .text	0000001c .hidden __aeabi_i2f
00026590 g     O .text	000000c8 __mprec_tens
0001a5ec g     F .text	00000020 uxTaskGetStackHighWaterMark
00017260 g     F .text	000000b0 newFileHandler(str&, CharDev&, void*)
00019b58 g     F .text	00000044 xPortPendSVHandler
00017310 g     F .text	00000140 dcpHandler(str&, CharDev&, void*)
0002012c g     F .text	0000001c vsnprintf
0001c540 g     F .text	00000040 .hidden __fixunsdfsi
0001a80c g     F .text	00000018 vListInsertEnd
0001514c g     F .text	00000170 sd_initialize
00011d18 g     F .text	00000016 nordic_set_addr_width
00010628 g     F .text	000000dc I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)
00022634 g     F .text	0000003a __ssrefill_r
000184c8  w    F .text	00000002 ComTask2::~ComTask2()
00011d48 g     F .text	000000c8 nordic_init
0001eb94 g     F .text	00000004 _getpid_r
00015672 g     F .text	00000010 disk_status
000118b8 g     F .text	0000004c wireless_init
000232c8 g     F .text	00000014 strtoul
0001bed0 g     F .text	0000001e .hidden __aeabi_ui2d
0001099c g     F .text	00000068 I2C2::init(unsigned int)
000219f8 g     F .text	00000008 _localeconv_r
000257bc  w    O .text	0000000c typeinfo for wirelessTask
0001b65c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00021d08 g     F .text	00000012 __i2b
0001bbc2 g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0001cb98 g     F .text	000002ec .hidden __udivmoddi4
00011c5e g     F .text	00000024 nordic_set_channel
0001bc4c g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	00000070 isr_reset
0001e960 g     F .text	00000020 _sbrk_r
00012478 g     F .text	0000003c mesh_send
00016cfc g     F .text	00000194 logHandler(str&, CharDev&, void*)
000235b8  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
00023148 g     F .text	00000024 _read_r
00024460 g     O .text	0000000f typeinfo name for terminalTask
0001a806 g     F .text	00000006 vListInitialiseItem
000156f2 g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
0001c4a0 g     F .text	00000012 .hidden __aeabi_dcmplt
0001131e g     F .text	00000044 NordicStream::getChar(char*, unsigned int)
00010e88 g     F .text	00000028 CAN_IRQHandler
000211b8 g     F .text	00000024 fflush
00019b3c g     F .text	00000006 vPortClearInterruptMask
00010118  w    F .text	00000010 isr_bus_fault
000197d0 g     F .text	0000000c logger_get_highest_file_write_time_ms
000183bc g     F .text	00000004 period_reg_tlm
00010148  w    F .text	00000010 PLL1_IRQHandler
000234e4 g     O .text	00000009 typeinfo name for CharDev
00015a34 g     F .text	00000038 LED_Display::init()
0001bf14 g     F .text	0000003a .hidden __extendsfdf2
00022670 g     F .text	000002a8 __ssvfscanf_r
0001c210 g     F .text	000001d0 .hidden __aeabi_ddiv
00010148  w    F .text	00000010 SSP0_IRQHandler
00011c82 g     F .text	0000002c nordic_set_air_data_rate
0001bc58 g     F .text	00000276 .hidden __adddf3
0001718c g     F .text	0000003c mkdirHandler(str&, CharDev&, void*)
000183c2 g     F .text	00000002 period_10Hz
00010148  w    F .text	00000010 CANAct_IRQHandler
00026100 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
00019a10 g     F .text	00000040 logger_log_raw
00012810 g     F .text	00000024 mesh_get_max_timeout_before_packet_fails
000220b8 g     F .text	0000009a __b2d
000266d0 g       .text	00000000 __exidx_start
0001bfbc g     F .text	00000254 .hidden __aeabi_dmul
0001b068 g     F .text	0000000c sys_get_boot_type
00011530 g     F .text	00000024 _isatty
0001bb72 g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00011d2e g     F .text	0000000c nordic_set_tx_address
000115d4 g     F .text	00000004 operator delete(void*)
00026398 g     O .text	00000004 _global_impure_ptr
0001b670 g     F .text	00000012 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
000222d2 g     F .text	0000004c _realloc_r
0001d078 g     F .text	0000004c __libc_init_array
0001ed6c g     F .text	00000044 strncasecmp
0001929c g     F .text	0000014c CommandProcessor::handleCommand(str&, CharDev&)
0001504c g     F .text	0000004c xmit_datablock
00010392 g     F .text	0000005a UartDev::putChar(char, unsigned int)
00011b9a g     F .text	00000014 nordic_read_rx_fifo
00017598 g     F .text	00000198 i2cIoHandler(str&, CharDev&, void*)
000197dc g     F .text	0000000c logger_get_num_buffers_watermark
00026668 g     O .text	00000028 __mprec_bigtens
00021bf2 g     F .text	0000007c __s2b
0001ce88 g     F .text	0000000e abort
0001bed0 g     F .text	0000001e .hidden __floatunsidf
00014c08 g     F .text	00000098 flash_initialize
0001155c g     F .text	00000074 _sbrk
000112f8  w    F .text	00000014 NordicStream::~NordicStream()
00021f7a g     F .text	00000038 __mcmp
0001a9b8 g     F .text	0000001e pvPortMalloc
000181dc g     F .text	00000020 period_task_1000Hz(void*)
000218cc g     F .text	0000012c gmtime_r
000235c0  w    O .text	00000007 typeinfo name for Uart2
0001412c g     F .text	000000ba f_unlink
00010a50  w    F .text	00000012 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
000114d0 g     F .text	00000004 _init
00018160  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
00019aec g     F .text	00000002 vPortEndScheduler
00010a18 g     F .text	00000024 I2C2_IRQHandler
0001a7f0 g     F .text	00000016 vListInitialise
00011528 g     F .text	00000002 syscalls_init
000111f4  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
0001fc08 g     F .text	00000014 strtol
00010d0c  w    F .text	00000014 Uart2::~Uart2()
0001bc28 g     F .text	0000000a std::terminate()
0001c580 g     F .text	0000009e .hidden __aeabi_d2f
0001029c g     F .text	00000078 CharDev::printf(char const*, ...)
00019fe0 g     F .text	00000018 xTaskGetTickCount
0001aaac g     F .text	000000ec xQueueGenericSend
00018768 g     F .text	00000038 ComTask2::ComTask2()
0001c628 g     F .text	00000164 .hidden __aeabi_fsub
0001946c g     F .text	000000a4 RTC_IRQHandler
000257c8  w    O .text	00000020 vtable for wirelessTask
000216d4 g     F .text	00000026 __match
2007c794 g       .bss	00000000 _ebss
00018dec g     F .text	00000120 scheduler_c_task_private(void*)
0001b682 g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
0001adde g     F .text	00000006 __set_PSP
00015c7c g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
0001024c g     F .text	00000050 CharDev::gets(char*, int, unsigned int)
00010372 g     F .text	00000020 UartDev::flush()
0002012c g     F .text	0000001c vsniprintf
00026210 g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0001fdc6 g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
0001ee00 g     F .text	00000026 strrchr
00021c6e g     F .text	00000040 __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00011d04 g     F .text	00000014 nordic_set_payload_for_pipe
0001a2bc g     F .text	00000090 uxTaskGetSystemState
0001c4f0 g     F .text	0000004e .hidden __fixdfsi
0001a6c0 g     F .text	00000070 xTaskPriorityDisinherit
000171c8 g     F .text	0000003c rmHandler(str&, CharDev&, void*)
00011384 g     F .text	00000040 NordicStream::NordicStream()
00014d5c g     F .text	00000044 flash_write_permanent_id
2007c1e8 g     O .bss	00000004 g_adc_result_queue
0001c7c0 g     F .text	0000007c .hidden __floatdisf
000235e8  w    O .text	0000001c vtable for Uart2
00017c18 g     F .text	00000548 high_level_init()
00010550 g     F .text	00000028 UartDev::UartDev(unsigned int*)
0001a748 g     F .text	00000070 vTaskResetRunTimeStats
0001886c g     F .text	0000002a str::str(char*, int)
0001bada g     F .text	00000002 std::type_info::~type_info()
00016f10 g     F .text	00000104 catHandler(str&, CharDev&, void*)
0001afc4 g     F .text	000000a4 sys_get_cpu_clock
000184ca  w    F .text	00000002 ComTask::~ComTask()
00025ac1 g     O .text	0000000a typeinfo name for ComTask2
000158f4  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
0001b088 g     F .text	00000238 low_level_init()
2007c144 g     O .data	00000008 _tzname
00017ba8  w    F .text	00000024 SingletonTemplate<LED_Display>::getInstance()
000198c0 g     F .text	0000001c logger_set_printf
0001a50c g     F .text	00000070 xTaskRemoveFromEventList
00019c40 g     F .text	00000024 vApplicationMallocFailedHook
2007c1c4 g     O .data	00000004 environ
0001ae2c g     F .text	00000058 isr_hard_fault_handler
00010aa4 g     F .text	0000001c Uart0::Uart0()
00018bea g     F .text	00000014 str::operator[](int)
0001bc58 g     F .text	00000276 .hidden __aeabi_dadd
000183c4 g     F .text	00000002 period_100Hz
0001c3e8 g     F .text	00000082 .hidden __ledf2
0001ce9e g     F .text	0000000e ctime
2007c434  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
0001070c g     F .text	0000001a I2C_Base::readReg(unsigned char, unsigned char)
000190b0 g     F .text	0000002a c_list_for_each_elm
0001ecfc g     F .text	0000001e strcat
00021e3c g     F .text	0000009c __pow5mult
0001bf50 g     F .text	0000006a .hidden __aeabi_ul2d
00011afc g     F .text	00000024 nordic_standby1_to_rx
00010148  w    F .text	00000010 EINT1_IRQHandler
000257a4 g     O .text	00000004 PERIOD_TASKS_STACK_SIZE_BYTES
0001b378 g     F .text	000000bc TIMER1_IRQHandler
00015b40 g     F .text	00000018 Switches::getSwitchValues()
00026374 g     O .text	00000020 __sf_fake_stderr
000235c8  w    O .text	00000020 typeinfo for Uart2
000190dc g     F .text	0000007c CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)
0001bc18 g     F .text	00000010 std::get_terminate()
00018cfa g     F .text	0000001a str::operator+=(char)
00015fd4  w    F .text	00000022 Uart0::getcharIntrDriven(char)
00018a2a g     F .text	0000002e str::beginsWithIgnoreCase(char const*) const
000183ca  w    F .text	0000000a wirelessTask::run(void*)
00011b34 g     F .text	0000004c nordic_mode1_send_single_packet
00017450 g     F .text	000000c0 storageHandler(str&, CharDev&, void*)
00014fc0 g     F .text	0000008c rcvr_datablock
00010d90 g     F .text	00000024 UART2_IRQHandler
0001034c  w    F .text	00000014 UartDev::~UartDev()
00019a64 g     F .text	00000014 uxGetTimerForRunTimeStats
000124fc g     F .text	0000001c mesh_get_num_routing_entries
0002231e g     F .text	000000b2 __ssputs_r
000184cc  w    F .text	0000000c ComTask2::~ComTask2()
000121f0 g     F .text	00000018 mesh_set_node_address
0001a730 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00010a3c  w    F .text	00000014 Uart0::~Uart0()
0001bb8a g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001b65c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00015bd0  w    F .text	00000004 scheduler_task::init()
00018ab8 g     F .text	00000020 str::eraseLast(int)
0001c4dc g     F .text	00000012 .hidden __aeabi_dcmpgt
0001bb0c g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c404  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
00022944 g     F .text	00000024 __sfputs_r
00015b34 g     F .text	00000006 Light_Sensor::getRawValue()
0001d2d4 g     F .text	0000001c memchr
0001daf8  w    F .text	00000488 _printf_float
000113f4 g     F .text	00000024 spi1_unlock
00018178  w    F .text	00000002 periodicSchedulerTask::~periodicSchedulerTask()
0001a594 g     F .text	0000004c xTaskCheckForTimeOut
0001d81c g     F .text	00000098 _free_r
00019158 g     F .text	00000098 CommandProcessor::getRegisteredCommandList(CharDev&)
0001c4c8 g     F .text	00000012 .hidden __aeabi_dcmpge
00010d74 g     F .text	0000001c Uart2::Uart2()
000189e6 g     F .text	00000016 str::firstIndexOf(char const*) const
00017578  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
0001b434 g     F .text	00000060 uart0_init
2007c1c8 g       .bss	00000000 _bss
00018cb6 g     F .text	00000022 str::ensureMemoryToInsertNChars(int)
000225b8 g     F .text	0000007c _sungetc_r
00017c00  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00013e0a g     F .text	00000024 f_close
000152bc g     F .text	00000010 sd_status
0001bc54 g     F .text	0000027a .hidden __aeabi_dsub
0001d524 g     F .text	000002e4 mktime
00010148 g     F .text	00000010 isr_default_handler
00011b92 g     F .text	00000008 nordic_clear_packet_available_flag
0002353c  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
00019fd0 g     F .text	00000010 vTaskSuspendAll
0001ee26 g     F .text	00000034 strstr
2007c1f0  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
000261c8 g     O .text	0000000d typeinfo name for std::type_info
00019ff8 g     F .text	00000018 xTaskGetTickCountFromISR
00018204  w    F .text	0000000c periodicSchedulerTask::~periodicSchedulerTask()
0001bf50 g     F .text	0000006a .hidden __floatundidf
00014de8 g     F .text	0000000c flash_get_page_size
0001e7b8 g     F .text	00000074 rand
00011554 g     F .text	00000004 _lseek
0001bc0a g     F .text	00000006 __cxa_pure_virtual
00021ed8 g     F .text	000000a2 __lshift
000257a8 g     O .text	00000004 PERIOD_DISPATCHER_TASK_STACK_SIZE_BYTES
00015da0 g     F .text	00000040 terminalTask::addCommandChannel(CharDev*, bool)
00025ab8 g     O .text	00000009 typeinfo name for ComTask
0001c794 g     F .text	0000001c .hidden __floatsisf
0001a854 g     F .text	00000020 uxListRemove
000158e8  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
00010d34 g     F .text	00000040 Uart2::init(unsigned int, int, int)
00015818 g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
000184c8  w    F .text	00000002 ComTask2::~ComTask2()
00013a6c g     F .text	00000170 f_read
00011384 g     F .text	00000040 NordicStream::NordicStream()
0001edb0 g     F .text	0000002a strncmp
000110c8 g     F .text	00000040 ADC_IRQHandler
0001b57e g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001b494 g     F .text	00000018 uart0_getchar
00018c74 g     F .text	00000042 str::printf(char const*, ...)
00018934 g     F .text	00000014 str::compareTo(char const*) const
00017014 g     F .text	00000178 lsHandler(str&, CharDev&, void*)
00021d1a g     F .text	00000120 __multiply
00014004 g     F .text	0000005e f_readdir
000166a0  w    F .text	00000020 SingletonTemplate<NordicStream>::getInstance()
0001a62c g     F .text	00000094 vTaskPriorityInherit
20083fe0 g       .bss	00000000 _vStackTop
00014944 g     F .text	00000014 ff_cre_syncobj
0001cadc g     F .text	0000004c .hidden __aeabi_f2iz
000263fc g     O .text	00000060 __month_lengths
00018896 g     F .text	00000024 str::~str()
000188ba g     F .text	00000006 str::getLen() const
0001edda g     F .text	00000026 strncpy
2007c738 g     O .bss	00000028 __malloc_current_mallinfo
00018ba2 g     F .text	0000003a str::trimEnd(char const*)
00022152 g     F .text	0000009c __d2b
0001ecc0 g     F .text	0000003c strcasecmp
2007c410  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
0001a34c g     F .text	000000c0 vTaskSwitchContext
0001bada g     F .text	00000002 std::type_info::~type_info()
00010148  w    F .text	00000010 SSP1_IRQHandler
00010aa4 g     F .text	0000001c Uart0::Uart0()
000234bc g     O .text	0000001c vtable for CharDev
00010726 g     F .text	00000008 I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001b632 g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00015c28  w    F .text	00000012 terminalTask::~terminalTask()
0001e82c g     F .text	00000010 realloc
00010208 g     F .text	00000028 CharDev::put(char const*, unsigned int)
0002616c g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
000183b8 g     F .text	00000004 period_init
00011924 g     F .text	0000004c wireless_service
000231cc g     F .text	000000fc _strtoul_r
00014ca0 g     F .text	00000044 flash_read_sectors
00011b80 g     F .text	00000012 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
000197b0 g     F .text	00000014 logger_get_logged_call_count
000188c0 g     F .text	00000004 str::getCapacity() const
0001c9a4 g     F .text	00000136 .hidden __aeabi_fdiv
000203c4 g     F .text	00000020 _close_r
2007c1cc  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
0001bef0 g     F .text	00000022 .hidden __aeabi_i2d
00016e90 g     F .text	00000080 cpHandler(str&, CharDev&, void*)
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
00012374 g     F .text	00000104 mesh_init
0001096c g     F .text	00000030 I2C_Base::handleInterrupt()
000257f4 g     O .text	00000020 vtable for ComTask
0001d2f0 g     F .text	0000001e memcmp
2007c3fc  w    O .bss	00000004 SingletonTemplate<NordicStream>::mpSingletonInstance
00018d50 g     F .text	00000004 str::operator=(char const*)
00010148  w    F .text	00000010 USB_IRQHandler
0001c7b0 g     F .text	0000008c .hidden __floatundisf
0001b558 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001ebe0 g     F .text	00000054 sscanf
00020270 g     F .text	000000dc __swsetup_r
00015de0 g     F .text	00000124 terminalTask::getCommand()
2007c1ec g     O .bss	00000004 g_adc_mutex
00019c08 g     F .text	00000038 vApplicationStackOverflowHook
0001ce84  w    F .text	00000002 .hidden __aeabi_ldiv0
0001a40c g     F .text	000000a4 vTaskSuspend
0001c210 g     F .text	000001d0 .hidden __divdf3
0001cf8c g     F .text	00000078 __sfp
0002223e g     F .text	00000034 __copybits
0001badc g     F .text	00000004 std::type_info::__is_pointer_p() const
0001a010 g     F .text	0000000c uxTaskGetNumberOfTasks
000179a8 g     F .text	00000134 getFileHandler(str&, CharDev&, void*)
00017bcc  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
00010148  w    F .text	00000010 BOD_IRQHandler
0001c78c g     F .text	00000024 .hidden __aeabi_ui2f
2007c000 g     O .data	00000040 g_can_structs
000200d4 g     F .text	00000056 _vsnprintf_r
0001bfbc g     F .text	00000254 .hidden __muldf3
0001ec34 g     F .text	00000022 __sread
00019260 g     F .text	0000003c CommandProcessor::prepareCmdParam(str&, char const*)
00012848 g     F .text	00000052 get_fattime
00018820 g     F .text	0000001c delay_us
0002576c g     O .text	00000018 typeinfo name for periodicSchedulerTask
00011bf8 g     F .text	00000038 nordic_set_crc
00010360  w    F .text	00000012 UartDev::~UartDev()
0001b4c4 g     F .text	0000001a uart0_puts
00019af0 g     F .text	00000018 vPortYield
00010d0c  w    F .text	00000014 Uart2::~Uart2()
00010314 g     F .text	00000020 CharDev::CharDev()
000116b4 g     F .text	00000004 __malloc_lock
000261d8 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
00021164 g     F .text	00000054 _fflush_r
00011914 g     F .text	00000010 wireless_get_ack_pkt
00018cd8 g     F .text	00000022 str::insertAtEnd(char const*)
000222b6 g     F .text	0000001c _calloc_r
000107b8 g     F .text	00000090 I2C_Base::init(unsigned long, unsigned long)
0001b074 g     F .text	00000014 sys_get_boot_time
00026334 g     O .text	00000020 __sf_fake_stdin
0001fdc4 g     F .text	00000002 __tz_lock
00012834 g     F .text	00000014 mesh_get_stats
000183c6 g     F .text	00000002 period_1000Hz
00020378 g     F .text	0000004c asctime_r
00011904 g     F .text	00000010 wireless_get_rx_pkt
0001d0c4 g     F .text	00000024 localtime
0001d35a g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
000183e0 g     F .text	000000e8 main
00023520  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
0001884a g     F .text	00000022 delay_ms
00018c66 g     F .text	0000000e str::reserve(int)
00011ab2 g     F .text	0000000e nordic_is_tx_fifo_empty
00015b08 g     F .text	00000028 LED::toggle(unsigned char)
00015b3a g     F .text	00000004 Switches::init()
00015724 g     F .text	000000f4 Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)
000115dc g     F .text	000000b8 sys_get_mem_info
2007c430  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00011b28 g     F .text	0000000c nordic_flush_tx_fifo
000184e4 g     F .text	0000002c ComTask::ComTask()
0001c7c0 g     F .text	0000007c .hidden __aeabi_l2f
0001e768 g     F .text	00000050 srand
00019064 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00010550 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00013d7e g     F .text	0000008c f_sync
0001075c g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00010148  w    F .text	00000010 WDT_IRQHandler
00015a1c g     F .text	00000018 LED_Display::setRightDigit(char)
00012518 g     F .text	000002c4 mesh_service
0001a824 g     F .text	00000030 vListInsert
00015f9c  w    F .text	00000020 SingletonTemplate<Uart0>::getInstance()
0001ecb6 g     F .text	00000008 __sclose
000115d8 g     F .text	00000004 operator delete[](void*)
000189d8 g     F .text	0000000e str::containsIgnoreCase(char const*) const
2007c40c  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
0001fafc g     F .text	0000010c _strtol_r
0001c580 g     F .text	0000009e .hidden __truncdfsf2
00011108 g     F .text	00000074 adc0_init
00021818 g     F .text	00000078 _findenv_r
000266d0 g       .text	00000000 __init_array_end
00019ac8 g     F .text	00000024 vPortSVCHandler
00020528 g     F .text	00000b30 _dtoa_r
0001d918 g     F .text	000000bc _malloc_r
0001fc1c g     F .text	00000028 time
00012324 g     F .text	00000050 mesh_send_formed_pkt
00014458 g     F .text	000004ec f_mkfs
0001bf60 g     F .text	0000005a .hidden __aeabi_l2d
00015aac g     F .text	0000005c LED::setAll(unsigned char)
00018a58 g     F .text	00000038 str::beginsWithWholeWordIgnoreCase(char const*, char) const
000138bc g     F .text	0000007c f_mount
0001a1fc g     F .text	00000070 vTaskDelayUntil
000232dc g     F .text	00000072 __submore
00023436 g     F .text	00000002 __env_unlock
00026204 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
00015950 g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
0001d004 g     F .text	00000038 _fwalk
00015f04 g     F .text	00000098 terminalTask::run(void*)
000158a0 g     F .text	00000048 Storage::append(char const*, void const*, unsigned int, unsigned int)
00013f7c g     F .text	00000088 f_opendir
0001ad5e g     F .text	00000052 xQueueReceiveFromISR
0001c7b0 g     F .text	0000008c .hidden __aeabi_ul2f
00015364 g     F .text	000000b4 sd_write
0001aa4a g     F .text	00000050 xQueueGenericCreate
00023630  w    O .text	00000020 typeinfo for Uart3
0001c83c g     F .text	00000168 .hidden __mulsf3
0001977c g     F .text	00000034 logger_send_flush_request
00010108  w    F .text	00000010 isr_mem_fault
00018530  w    F .text	00000024 SingletonTemplate<Acceleration_Sensor>::getInstance()
00010704 g     F .text	00000008 I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001fdc8 g     F .text	0000000c _tzset_unlocked
0001ed36 g     F .text	00000014 strcmp
0001ebe0 g     F .text	00000054 siscanf
0001aa9a g     F .text	00000012 xQueueCreateCountingSemaphore
00017788 g     F .text	00000178 healthHandler(str&, CharDev&, void*)
00015c7c g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
000191f0 g     F .text	00000070 CommandProcessor::getHelpText(str&, CharDev&)
00011c30 g     F .text	00000018 nordic_power_up
00018510  w    F .text	00000020 SingletonTemplate<Uart3>::getInstance()
000114a0 g     F .text	0000000c sys_set_inchar_func
000257ac  w    O .text	0000000f typeinfo name for wirelessTask
00012f0e g     F .text	000000d0 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
0001c3f0 g     F .text	0000007a .hidden __nedf2
000234dc g     O .text	00000008 typeinfo for CharDev
00015be0  w    F .text	00000048 terminalTask::~terminalTask()
00017be8  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001e674 g     F .text	00000030 iprintf
00014982 g     F .text	0000001e ff_rel_grant
0001125c g     F .text	0000001c Uart3::Uart3()
0001b56c g     F .text	00000012 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001a134 g     F .text	000000c8 xTaskResumeAll
00022ba0 g     F .text	000002a8 __svfiscanf_r
00013e2e g     F .text	0000014e f_lseek
0001eb98 g     F .text	00000048 sprintf
0001034c  w    F .text	00000014 UartDev::~UartDev()
00019f64 g     F .text	00000054 vTaskStartScheduler
0001da94 g     F .text	00000062 __exponent
00023628  w    O .text	00000007 typeinfo name for Uart3
0001591e g     F .text	00000020 Acceleration_Sensor::init()
0001bc04 g     F .text	00000006 __cxa_guard_release
00010314 g     F .text	00000020 CharDev::CharDev()
0002024c g     F .text	00000024 _write_r
000234f8 g     O .text	0000001c vtable for UartDev
0001045c g     F .text	0000003c UartDev::setBaudRate(unsigned int)
00019a50 g     F .text	00000014 vConfigureTimerForRunTimeStats
000184ca  w    F .text	00000002 ComTask::~ComTask()
0001e980 g     F .text	00000030 scanf
2007c408  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
0001c620 g     F .text	0000016c .hidden __aeabi_frsub
00026194 g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00011494 g     F .text	0000000c sys_set_outchar_func
00014ee4 g     F .text	0000002c flash_chip_erase
0001eb04 g     F .text	00000008 nanf
0001df80 g     F .text	000000ec _printf_common
0001117c g     F .text	00000078 adc0_get_reading
2007c140 g     O .data	00000004 _impure_ptr
0001952e g     F .text	0000003c u0_dbg_printf
00021058 g     F .text	0000010c __sflush_r
0001819c g     F .text	00000020 period_task_10Hz(void*)
0001c83c g     F .text	00000168 .hidden __aeabi_fmul
0002356c  w    O .text	0000001c vtable for Uart0
000266cc g       .text	00000000 __preinit_array_end
000223d0 g     F .text	000001e8 _svfiprintf_r
0001e850 g     F .text	00000110 __srefill_r
00014f9c g     F .text	00000024 power_off
00015bac g     F .text	00000024 I2C_Temp::getFarenheit()
2007c000 g       .data	00000000 _data
0001ade4 g     F .text	00000006 __set_MSP
00010a04 g     F .text	00000014 I2C2::I2C2()
00022070 g     F .text	00000048 __ulp
00015ff8 g     F .text	000002b0 terminalTask::taskEntry()
00025760 g     O .text	0000000c typeinfo for periodicSchedulerTask
0001886c g     F .text	0000002a str::str(char*, int)
00011208  w    F .text	00000012 Uart3::~Uart3()
00010d20  w    F .text	00000012 Uart2::~Uart2()
0001a5e0 g     F .text	0000000c vTaskMissedYield
00011ac8 g     F .text	0000000c nordic_queue_tx_fifo
000112f8  w    F .text	00000014 NordicStream::~NordicStream()
00024454 g     O .text	0000000c typeinfo for terminalTask
2007c794 g       .bss	00000000 _pvHeapStart
0001b4ac g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
0001d808 g     F .text	00000014 mallinfo
0001121c g     F .text	00000040 Uart3::init(unsigned int, int, int)
00019510 g     F .text	0000001e u0_dbg_put
00018948 g     F .text	00000010 str::compareToIgnoreCase(char const*) const
00010498 g     F .text	000000b8 UartDev::handleInterrupt()
00010744 g     F .text	00000016 I2C_Base::checkDeviceResponse(unsigned char)
000200d4 g     F .text	00000056 _vsniprintf_r
0001adb0 g     F .text	00000012 uxQueueMessagesWaiting
0001ac5a g     F .text	00000104 xQueueGenericReceive
0001c540 g     F .text	00000040 .hidden __aeabi_d2uiz
0001075c g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007c788 g     O .bss	00000004 _timezone
0001d0e8 g     F .text	000001cc localtime_r
00015098 g     F .text	00000090 send_cmd
0001bb4c g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00010a3c  w    F .text	00000014 Uart0::~Uart0()
0001a01c g     F .text	00000118 xTaskIncrementTick
00022670 g     F .text	000002a8 __ssvfiscanf_r
00011c48 g     F .text	00000016 nordic_power_down
00010b34 g     F .text	00000068 rtc_settime
00018ad8 g     F .text	00000038 str::eraseAfter(int, int)
2007c414  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
00018768 g     F .text	00000038 ComTask2::ComTask2()
00012dd4 g     F .text	00000016 clust2sect
0001bc34 g     F .text	00000018 .hidden __aeabi_llsl
0001b340 g     F .text	00000038 sys_get_mem_info_str
00023690  w    O .text	00000008 typeinfo for SingletonTemplate<NordicStream>
00021a24 g     F .text	00000046 __swhatbuf_r
2007c0d8 g     O .data	00000004 __cxxabiv1::__terminate_handler
000197c4 g     F .text	0000000c logger_get_blocked_call_count
0001adea g     F .text	00000006 __set_BASEPRI
0001c48c g     F .text	00000012 .hidden __aeabi_dcmpeq
00010eb0 g     F .text	0000001c ssp1_dma_init
00010d74 g     F .text	0000001c Uart2::Uart2()
0002612c g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
0001a9f0 g     F .text	0000005a xQueueGenericReset
000114d4 g     F .text	00000028 _write
2007c1c8 g       .data	00000000 _edata
0001b720 g     F .text	0000028e __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00015a6c g     F .text	0000003a LED_Display::setNumber(char)
000127dc g     F .text	00000034 mesh_get_pnd_pkt_count
0001585c g     F .text	00000044 Storage::write(char const*, void*, unsigned int, unsigned int)
00014dc8 g     F .text	00000020 flash_get_page_count
00018210 g     F .text	000000ec periodicSchedulerTask::periodicSchedulerTask()
00013bdc g     F .text	000001a2 f_write
00018be0 g     F .text	00000004 str::operator()() const
00015b58 g     F .text	00000022 I2C_Temp::init()
00014ce4 g     F .text	00000040 flash_write_sectors
0001fdd4 g     F .text	00000300 _tzset_unlocked_r
00020148 g     F .text	00000048 _vsscanf_r
0001cb28 g     F .text	0000003e .hidden __aeabi_f2uiz
00010334 g     F .text	00000018 CharDev::~CharDev()
000183c0 g     F .text	00000002 period_1Hz
00018958 g     F .text	00000080 str::firstIndexOfIgnoreCase(char const*) const
00011362 g     F .text	00000022 NordicStream::putChar(char, unsigned int)
0001129c g     F .text	0000005c NordicStream::flush()
0001ec5a g     F .text	00000038 __swrite
000115d0 g     F .text	00000004 operator new(unsigned int)
00013938 g     F .text	00000134 f_open
00018b10 g     F .text	00000028 str::erase(char const*)
0001b6f6  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000156ba g     F .text	00000038 disk_write
00014d24 g     F .text	00000036 flash_ioctl
00011cd2 g     F .text	00000032 nordic_set_auto_transmit_options
00022968 g     F .text	00000238 _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00015bd4  w    F .text	00000004 scheduler_task::regTlm()
00017204 g     F .text	0000005c mvHandler(str&, CharDev&, void*)
0001d03c g     F .text	0000003c _fwalk_reent
0001b5fa g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001c78c g     F .text	00000024 .hidden __floatunsisf
00021fb2 g     F .text	000000be __mdiff
00010334 g     F .text	00000018 CharDev::~CharDev()
0001c4f0 g     F .text	0000004e .hidden __aeabi_d2iz
0001bc10 g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
0001495c g     F .text	00000026 ff_req_grant
00020190 g     F .text	00000014 vsiscanf
2007c424  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
000114ac g     F .text	00000010 _kill
2007c0dc g     O .data	00000004 __ctype_ptr__
00018bfe g     F .text	0000004c str::reAllocateMem(int)
00010148  w    F .text	00000010 DMA_IRQHandler
00015bdc g     F .text	00000004 terminalTask::regTlm()
0001a26c g     F .text	00000050 vTaskDelay
00015fbc  w    F .text	00000018 Uart0::putcharIntrDriven(char)
00018f0c g     F .text	000000f8 scheduler_init_all(bool)
00026354 g     O .text	00000020 __sf_fake_stdout
0001eb98 g     F .text	00000048 siprintf
0002316c g     F .text	00000060 __sccl
000181fc g     F .text	00000004 periodicSchedulerTask::init()
0001ce96 g     F .text	00000008 atoi
00011418 g     F .text	0000007a _gettimeofday
0001a60c g     F .text	00000020 xTaskGetSchedulerState
00026232 g     O .text	00000101 _ctype_
000114fc g     F .text	0000002c _read
000266cc g       .text	00000000 __init_array_start
0001ce84  w    F .text	00000002 .hidden __aeabi_idiv0
00016c38 g     F .text	000000c4 timeHandler(str&, CharDev&, void*)
00023490 g     F .text	0000002c .hidden __unorddf2
00023d94  w    O .text	00000008 typeinfo for scheduler_task
000197e8 g     F .text	000000d8 logger_init
000141e6 g     F .text	00000152 f_mkdir
0001cb28 g     F .text	0000003e .hidden __fixunssfsi
000188cc g     F .text	0000001c str::scanf(char const*, ...)
000114bc g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
000184d8  w    F .text	0000000c ComTask::~ComTask()
00015b30 g     F .text	00000004 Light_Sensor::init()
00021a6c g     F .text	00000078 __smakebuf_r
00018c5a g     F .text	0000000c str::str(int)
0001ed5a g     F .text	00000010 strlen
00015682 g     F .text	00000038 disk_read
00019aac g     F .text	0000001c pxPortInitialiseStack
0001e06c g     F .text	0000024c _printf_i
000261c0 g     O .text	00000008 typeinfo for std::type_info
00010230 g     F .text	0000001c CharDev::putline(char const*, unsigned int)
0001fc5c g     F .text	00000018 toupper
0001c47c g     F .text	00000010 .hidden __aeabi_cdcmpeq
00025a8c g     O .text	0000000c typeinfo for ComTask2
0001c3e0 g     F .text	0000008a .hidden __gedf2
00011278 g     F .text	00000024 UART3_IRQHandler
00021272 g     F .text	0000043e __gethex
2007c760 g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
000181bc g     F .text	00000020 period_task_100Hz(void*)
00016540 g     F .text	00000160 wirelessHandler(str&, CharDev&, void*)
000203e4 g     F .text	00000028 div
0001ed1a g     F .text	0000001c strchr
00014062 g     F .text	000000ca f_getfree
00018178  w    F .text	00000002 periodicSchedulerTask::~periodicSchedulerTask()
0001a57c g     F .text	00000018 vTaskSetTimeOutState
000149a0 g     F .text	0000003c ff_convert
0001bf14 g     F .text	0000003a .hidden __aeabi_f2d
00018d14 g     F .text	0000003c str::copyFrom(char const*)
00019b20 g     F .text	0000001c vPortEnterCritical
00018b38 g     F .text	0000002a str::eraseFirstWords(int, char)
00018384 g     F .text	00000034 periodicSchedulerTask::run(void*)
00015128 g     F .text	00000024 sd_update_card_status
00019a78 g     F .text	00000014 resetRunTimeCounter
00014da0 g     F .text	00000028 flash_read_permanent_id
00014e90 g     F .text	00000054 flash_get_page_write_count
2007c764 g     O .bss	00000004 __malloc_free_list
00018c4a  w    F .text	00000010 str::init(int)
2007c42c  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00011aec g     F .text	00000010 nordic_rx_to_Stanby1
0001adc2 g     F .text	00000004 uxQueueMessagesWaitingFromISR
00023434 g     F .text	00000002 __env_lock
00010c6c g     F .text	00000014 rtc_get_date_time_str
00025784 g     O .text	00000020 vtable for periodicSchedulerTask
0001bc54 g     F .text	0000027a .hidden __subdf3
00022968 g     F .text	00000238 _vfprintf_r
000266cc g       .text	00000000 __preinit_array_start
00023d80  w    O .text	00000011 typeinfo name for scheduler_task
00021cae g     F .text	0000005a __lo0bits
00022ba0 g     F .text	000002a8 __svfscanf_r
0001fc74 g     F .text	00000150 __tzcalc_limits
0001a7b8 g     F .text	00000028 vRunTimeStatIsrEntry
00023350 g     F .text	000000e4 _ungetc_r
0001bae0 g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
0001bbec g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
0001ab98 g     F .text	0000004c xQueueCreateMutex
0001c62c g     F .text	00000160 .hidden __addsf3
00011cae g     F .text	00000024 nordic_set_power_level
00010138  w    F .text	00000010 isr_debug_mon
000218c4 g     F .text	00000008 __gettzinfo
0001eb60 g     F .text	00000010 raise
00011558 g     F .text	00000004 _close
0001d2c4 g     F .text	00000010 free
0001e2b8  w    F .text	000003bc _scanf_float
00015418 g     F .text	00000234 sd_ioctl
0002354c  w    O .text	00000020 typeinfo for Uart0
00021b7c g     F .text	00000076 __multadd
0001bb60 g     F .text	00000012 __cxxabiv1::__class_type_info::~__class_type_info()
00021b4e g     F .text	0000002e _Bfree
00010578 g     F .text	000000b0 UartDev::init(unsigned int, unsigned int, int, int)
00021890 g     F .text	0000000e _getenv_r
0001b4e0 g     F .text	00000030 lpc_pconp
00019c04 g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
$d():
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	c9 9a 01 00 39 01 01 00 00 00 00 00 59 9b 01 00     ....9.......Y...
   1003c:	59 01 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     Y...............
   1004c:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................
   1005c:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................
   1006c:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................
   1007c:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................
   1008c:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................
   1009c:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................
   100ac:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................
   100bc:	f1 ad 01 00 f1 ad 01 00 f1 ad 01 00 f1 ad 01 00     ................

000100cc <__data_section_table>:
__section_table_start():
   100cc:	000266d8 	.word	0x000266d8
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000001c8 	.word	0x000001c8

000100d8 <__bss_section_table>:
__data_section_table_end():
   100d8:	2007c1c8 	.word	0x2007c1c8
   100dc:	000005cc 	.word	0x000005cc

000100e0 <isr_hard_fault>:
isr_hard_fault():
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f00a be9e 	b.w	1ae2c <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f00a be9a 	b.w	1ae2c <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f009 fa07 	bl	19510 <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	00025f43 	.word	0x00025f43

00010108 <isr_mem_fault>:
isr_mem_fault():
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f009 fa00 	bl	19510 <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	00025f4e 	.word	0x00025f4e

00010118 <isr_bus_fault>:
isr_bus_fault():
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f009 f9f8 	bl	19510 <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	00025f59 	.word	0x00025f59

00010128 <isr_usage_fault>:
isr_usage_fault():
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f009 f9f0 	bl	19510 <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	00025f64 	.word	0x00025f64

00010138 <isr_debug_mon>:
isr_debug_mon():
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f009 f9e8 	bl	19510 <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	00025f71 	.word	0x00025f71

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f009 f9e0 	bl	19510 <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	00025f7f 	.word	0x00025f7f

00010158 <isr_sys_tick>:
isr_sys_tick():
   10158:	b508      	push	{r3, lr}
   1015a:	f00a fb2d 	bl	1a7b8 <vRunTimeStatIsrEntry>
   1015e:	f009 fd1d 	bl	19b9c <xPortSysTickHandler>
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   10166:	f00a bb3b 	b.w	1a7e0 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
   1016e:	1a40      	subs	r0, r0, r1
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
   10180:	4603      	mov	r3, r0
   10182:	b510      	push	{r4, lr}
   10184:	2200      	movs	r2, #0
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
   1018c:	f843 2b04 	str.w	r2, [r3], #4
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
   10194:	4816      	ldr	r0, [pc, #88]	; (101f0 <isr_reset+0x5c>)
   10196:	f00a fe22 	bl	1adde <__set_PSP>
   1019a:	4815      	ldr	r0, [pc, #84]	; (101f0 <isr_reset+0x5c>)
   1019c:	f00a fe22 	bl	1ade4 <__set_MSP>
   101a0:	4c14      	ldr	r4, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a2:	4d15      	ldr	r5, [pc, #84]	; (101f8 <isr_reset+0x64>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d301      	bcc.n	101ac <isr_reset+0x18>
   101a8:	4d14      	ldr	r5, [pc, #80]	; (101fc <isr_reset+0x68>)
   101aa:	e007      	b.n	101bc <isr_reset+0x28>
   101ac:	e894 0003 	ldmia.w	r4, {r0, r1}
   101b0:	340c      	adds	r4, #12
   101b2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101b6:	f7ff ffd8 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
   101ba:	e7f3      	b.n	101a4 <isr_reset+0x10>
   101bc:	42ac      	cmp	r4, r5
   101be:	d206      	bcs.n	101ce <isr_reset+0x3a>
   101c0:	f854 0b08 	ldr.w	r0, [r4], #8
   101c4:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101c8:	f7ff ffda 	bl	10180 <bss_init(unsigned int, unsigned int)>
   101cc:	e7f6      	b.n	101bc <isr_reset+0x28>
   101ce:	f00c ff53 	bl	1d078 <__libc_init_array>
   101d2:	f00a ff59 	bl	1b088 <low_level_init()>
   101d6:	f007 fd1f 	bl	17c18 <high_level_init()>
   101da:	f008 f901 	bl	183e0 <main>
   101de:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e2:	f00b f927 	bl	1b434 <uart0_init>
   101e6:	4806      	ldr	r0, [pc, #24]	; (10200 <isr_reset+0x6c>)
   101e8:	f009 f992 	bl	19510 <u0_dbg_put>
   101ec:	e7fe      	b.n	101ec <isr_reset+0x58>
   101ee:	bf00      	nop
   101f0:	20083fe0 	.word	0x20083fe0
   101f4:	000100cc 	.word	0x000100cc
   101f8:	000100d8 	.word	0x000100d8
   101fc:	000100e0 	.word	0x000100e0
   10200:	00025f93 	.word	0x00025f93

00010204 <CharDev::flush()>:
_ZN7CharDev5flushEv():
   10204:	2001      	movs	r0, #1
   10206:	4770      	bx	lr

00010208 <CharDev::put(char const*, unsigned int)>:
_ZN7CharDev3putEPKcj():
   10208:	b570      	push	{r4, r5, r6, lr}
   1020a:	4605      	mov	r5, r0
   1020c:	4616      	mov	r6, r2
   1020e:	b909      	cbnz	r1, 10214 <CharDev::put(char const*, unsigned int)+0xc>
   10210:	2000      	movs	r0, #0
   10212:	bd70      	pop	{r4, r5, r6, pc}
   10214:	1e4c      	subs	r4, r1, #1
   10216:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   1021a:	b139      	cbz	r1, 1022c <CharDev::put(char const*, unsigned int)+0x24>
   1021c:	682b      	ldr	r3, [r5, #0]
   1021e:	4632      	mov	r2, r6
   10220:	685b      	ldr	r3, [r3, #4]
   10222:	4628      	mov	r0, r5
   10224:	4798      	blx	r3
   10226:	2800      	cmp	r0, #0
   10228:	d1f5      	bne.n	10216 <CharDev::put(char const*, unsigned int)+0xe>
   1022a:	e7f1      	b.n	10210 <CharDev::put(char const*, unsigned int)+0x8>
   1022c:	2001      	movs	r0, #1
   1022e:	bd70      	pop	{r4, r5, r6, pc}

00010230 <CharDev::putline(char const*, unsigned int)>:
_ZN7CharDev7putlineEPKcj():
   10230:	b538      	push	{r3, r4, r5, lr}
   10232:	4604      	mov	r4, r0
   10234:	4615      	mov	r5, r2
   10236:	f7ff ffe7 	bl	10208 <CharDev::put(char const*, unsigned int)>
   1023a:	462a      	mov	r2, r5
   1023c:	4620      	mov	r0, r4
   1023e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   10242:	4901      	ldr	r1, [pc, #4]	; (10248 <CharDev::putline(char const*, unsigned int)+0x18>)
   10244:	f7ff bfe0 	b.w	10208 <CharDev::put(char const*, unsigned int)>
   10248:	000234d8 	.word	0x000234d8

0001024c <CharDev::gets(char*, int, unsigned int)>:
_ZN7CharDev4getsEPcij():
   1024c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   10250:	4607      	mov	r7, r0
   10252:	460d      	mov	r5, r1
   10254:	4690      	mov	r8, r2
   10256:	4699      	mov	r9, r3
   10258:	2400      	movs	r4, #0
   1025a:	ae02      	add	r6, sp, #8
   1025c:	f806 4d01 	strb.w	r4, [r6, #-1]!
   10260:	683b      	ldr	r3, [r7, #0]
   10262:	464a      	mov	r2, r9
   10264:	681b      	ldr	r3, [r3, #0]
   10266:	4631      	mov	r1, r6
   10268:	4638      	mov	r0, r7
   1026a:	4798      	blx	r3
   1026c:	b178      	cbz	r0, 1028e <CharDev::gets(char*, int, unsigned int)+0x42>
   1026e:	f89d 2007 	ldrb.w	r2, [sp, #7]
   10272:	2a0d      	cmp	r2, #13
   10274:	d003      	beq.n	1027e <CharDev::gets(char*, int, unsigned int)+0x32>
   10276:	2a0a      	cmp	r2, #10
   10278:	bf1c      	itt	ne
   1027a:	702a      	strbne	r2, [r5, #0]
   1027c:	3501      	addne	r5, #1
   1027e:	3401      	adds	r4, #1
   10280:	4544      	cmp	r4, r8
   10282:	da03      	bge.n	1028c <CharDev::gets(char*, int, unsigned int)+0x40>
   10284:	2a0a      	cmp	r2, #10
   10286:	d1eb      	bne.n	10260 <CharDev::gets(char*, int, unsigned int)+0x14>
   10288:	2001      	movs	r0, #1
   1028a:	e000      	b.n	1028e <CharDev::gets(char*, int, unsigned int)+0x42>
   1028c:	2000      	movs	r0, #0
   1028e:	2c00      	cmp	r4, #0
   10290:	bfc4      	itt	gt
   10292:	2300      	movgt	r3, #0
   10294:	702b      	strbgt	r3, [r5, #0]
   10296:	b003      	add	sp, #12
   10298:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0001029c <CharDev::printf(char const*, ...)>:
_ZN7CharDev6printfEPKcz():
   1029c:	b40e      	push	{r1, r2, r3}
   1029e:	b533      	push	{r0, r1, r4, r5, lr}
   102a0:	4604      	mov	r4, r0
   102a2:	f00a f9b3 	bl	1a60c <xTaskGetSchedulerState>
   102a6:	2802      	cmp	r0, #2
   102a8:	d106      	bne.n	102b8 <CharDev::printf(char const*, ...)+0x1c>
   102aa:	2300      	movs	r3, #0
   102ac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   102b0:	4619      	mov	r1, r3
   102b2:	68e0      	ldr	r0, [r4, #12]
   102b4:	f00a fcd1 	bl	1ac5a <xQueueGenericReceive>
   102b8:	ab06      	add	r3, sp, #24
   102ba:	9300      	str	r3, [sp, #0]
   102bc:	9b00      	ldr	r3, [sp, #0]
   102be:	9a05      	ldr	r2, [sp, #20]
   102c0:	8921      	ldrh	r1, [r4, #8]
   102c2:	6860      	ldr	r0, [r4, #4]
   102c4:	9301      	str	r3, [sp, #4]
   102c6:	f00f ff31 	bl	2012c <vsniprintf>
   102ca:	8923      	ldrh	r3, [r4, #8]
   102cc:	4605      	mov	r5, r0
   102ce:	4298      	cmp	r0, r3
   102d0:	db0a      	blt.n	102e8 <CharDev::printf(char const*, ...)+0x4c>
   102d2:	f020 010f 	bic.w	r1, r0, #15
   102d6:	3110      	adds	r1, #16
   102d8:	b289      	uxth	r1, r1
   102da:	8121      	strh	r1, [r4, #8]
   102dc:	6860      	ldr	r0, [r4, #4]
   102de:	f00e faa5 	bl	1e82c <realloc>
   102e2:	6060      	str	r0, [r4, #4]
   102e4:	2800      	cmp	r0, #0
   102e6:	d1e9      	bne.n	102bc <CharDev::printf(char const*, ...)+0x20>
   102e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   102ec:	6861      	ldr	r1, [r4, #4]
   102ee:	4620      	mov	r0, r4
   102f0:	f7ff ff8a 	bl	10208 <CharDev::put(char const*, unsigned int)>
   102f4:	f00a f98a 	bl	1a60c <xTaskGetSchedulerState>
   102f8:	2802      	cmp	r0, #2
   102fa:	d105      	bne.n	10308 <CharDev::printf(char const*, ...)+0x6c>
   102fc:	2300      	movs	r3, #0
   102fe:	461a      	mov	r2, r3
   10300:	4619      	mov	r1, r3
   10302:	68e0      	ldr	r0, [r4, #12]
   10304:	f00a fbd2 	bl	1aaac <xQueueGenericSend>
   10308:	4628      	mov	r0, r5
   1030a:	b002      	add	sp, #8
   1030c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   10310:	b003      	add	sp, #12
   10312:	4770      	bx	lr

00010314 <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
   10314:	4b06      	ldr	r3, [pc, #24]	; (10330 <CharDev::CharDev()+0x1c>)
   10316:	b510      	push	{r4, lr}
   10318:	6003      	str	r3, [r0, #0]
   1031a:	2300      	movs	r3, #0
   1031c:	4604      	mov	r4, r0
   1031e:	6043      	str	r3, [r0, #4]
   10320:	8103      	strh	r3, [r0, #8]
   10322:	7403      	strb	r3, [r0, #16]
   10324:	2001      	movs	r0, #1
   10326:	f00a fc37 	bl	1ab98 <xQueueCreateMutex>
   1032a:	60e0      	str	r0, [r4, #12]
   1032c:	4620      	mov	r0, r4
   1032e:	bd10      	pop	{r4, pc}
   10330:	000234c4 	.word	0x000234c4

00010334 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
   10334:	4b04      	ldr	r3, [pc, #16]	; (10348 <CharDev::~CharDev()+0x14>)
   10336:	b510      	push	{r4, lr}
   10338:	4604      	mov	r4, r0
   1033a:	6003      	str	r3, [r0, #0]
   1033c:	6840      	ldr	r0, [r0, #4]
   1033e:	b108      	cbz	r0, 10344 <CharDev::~CharDev()+0x10>
   10340:	f00c ffc0 	bl	1d2c4 <free>
   10344:	4620      	mov	r0, r4
   10346:	bd10      	pop	{r4, pc}
   10348:	000234c4 	.word	0x000234c4

0001034c <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
   1034c:	b510      	push	{r4, lr}
   1034e:	4604      	mov	r4, r0
   10350:	4b02      	ldr	r3, [pc, #8]	; (1035c <UartDev::~UartDev()+0x10>)
   10352:	6003      	str	r3, [r0, #0]
   10354:	f7ff ffee 	bl	10334 <CharDev::~CharDev()>
   10358:	4620      	mov	r0, r4
   1035a:	bd10      	pop	{r4, pc}
   1035c:	00023500 	.word	0x00023500

00010360 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   10360:	b510      	push	{r4, lr}
   10362:	4604      	mov	r4, r0
   10364:	f7ff fff2 	bl	1034c <UartDev::~UartDev()>
   10368:	4620      	mov	r0, r4
   1036a:	f001 f933 	bl	115d4 <operator delete(void*)>
   1036e:	4620      	mov	r0, r4
   10370:	bd10      	pop	{r4, pc}

00010372 <UartDev::flush()>:
_ZN7UartDev5flushEv():
   10372:	b510      	push	{r4, lr}
   10374:	4604      	mov	r4, r0
   10376:	f00a f949 	bl	1a60c <xTaskGetSchedulerState>
   1037a:	2802      	cmp	r0, #2
   1037c:	d107      	bne.n	1038e <UartDev::flush()+0x1c>
   1037e:	69e0      	ldr	r0, [r4, #28]
   10380:	f00a fd16 	bl	1adb0 <uxQueueMessagesWaiting>
   10384:	b118      	cbz	r0, 1038e <UartDev::flush()+0x1c>
   10386:	2001      	movs	r0, #1
   10388:	f009 ff70 	bl	1a26c <vTaskDelay>
   1038c:	e7f7      	b.n	1037e <UartDev::flush()+0xc>
   1038e:	2001      	movs	r0, #1
   10390:	bd10      	pop	{r4, pc}

00010392 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
   10392:	b537      	push	{r0, r1, r2, r4, r5, lr}
   10394:	4604      	mov	r4, r0
   10396:	4615      	mov	r5, r2
   10398:	f88d 1007 	strb.w	r1, [sp, #7]
   1039c:	f00a f936 	bl	1a60c <xTaskGetSchedulerState>
   103a0:	2802      	cmp	r0, #2
   103a2:	d008      	beq.n	103b6 <UartDev::putChar(char, unsigned int)+0x24>
   103a4:	f89d 2007 	ldrb.w	r2, [sp, #7]
   103a8:	6963      	ldr	r3, [r4, #20]
   103aa:	701a      	strb	r2, [r3, #0]
   103ac:	6962      	ldr	r2, [r4, #20]
   103ae:	7d13      	ldrb	r3, [r2, #20]
   103b0:	0659      	lsls	r1, r3, #25
   103b2:	d5fc      	bpl.n	103ae <UartDev::putChar(char, unsigned int)+0x1c>
   103b4:	e017      	b.n	103e6 <UartDev::putChar(char, unsigned int)+0x54>
   103b6:	2300      	movs	r3, #0
   103b8:	462a      	mov	r2, r5
   103ba:	f10d 0107 	add.w	r1, sp, #7
   103be:	69e0      	ldr	r0, [r4, #28]
   103c0:	f00a fb74 	bl	1aaac <xQueueGenericSend>
   103c4:	b180      	cbz	r0, 103e8 <UartDev::putChar(char, unsigned int)+0x56>
   103c6:	6963      	ldr	r3, [r4, #20]
   103c8:	7d1b      	ldrb	r3, [r3, #20]
   103ca:	065b      	lsls	r3, r3, #25
   103cc:	d50b      	bpl.n	103e6 <UartDev::putChar(char, unsigned int)+0x54>
   103ce:	2300      	movs	r3, #0
   103d0:	461a      	mov	r2, r3
   103d2:	f10d 0107 	add.w	r1, sp, #7
   103d6:	69e0      	ldr	r0, [r4, #28]
   103d8:	f00a fc3f 	bl	1ac5a <xQueueGenericReceive>
   103dc:	b118      	cbz	r0, 103e6 <UartDev::putChar(char, unsigned int)+0x54>
   103de:	6963      	ldr	r3, [r4, #20]
   103e0:	f89d 2007 	ldrb.w	r2, [sp, #7]
   103e4:	701a      	strb	r2, [r3, #0]
   103e6:	2001      	movs	r0, #1
   103e8:	b003      	add	sp, #12
   103ea:	bd30      	pop	{r4, r5, pc}

000103ec <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
   103ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   103ee:	4606      	mov	r6, r0
   103f0:	4614      	mov	r4, r2
   103f2:	460f      	mov	r7, r1
   103f4:	b909      	cbnz	r1, 103fa <UartDev::getChar(char*, unsigned int)+0xe>
   103f6:	2000      	movs	r0, #0
   103f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   103fa:	6983      	ldr	r3, [r0, #24]
   103fc:	2b00      	cmp	r3, #0
   103fe:	d0fa      	beq.n	103f6 <UartDev::getChar(char*, unsigned int)+0xa>
   10400:	f00a f904 	bl	1a60c <xTaskGetSchedulerState>
   10404:	2802      	cmp	r0, #2
   10406:	d109      	bne.n	1041c <UartDev::getChar(char*, unsigned int)+0x30>
   10408:	2300      	movs	r3, #0
   1040a:	4622      	mov	r2, r4
   1040c:	4639      	mov	r1, r7
   1040e:	69b0      	ldr	r0, [r6, #24]
   10410:	f00a fc23 	bl	1ac5a <xQueueGenericReceive>
   10414:	3000      	adds	r0, #0
   10416:	bf18      	it	ne
   10418:	2001      	movne	r0, #1
   1041a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1041c:	f00a ff7a 	bl	1b314 <sys_get_uptime_us>
   10420:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10424:	2300      	movs	r3, #0
   10426:	f00c fb9f 	bl	1cb68 <__aeabi_uldivmod>
   1042a:	4420      	add	r0, r4
   1042c:	4604      	mov	r4, r0
   1042e:	2500      	movs	r5, #0
   10430:	2300      	movs	r3, #0
   10432:	461a      	mov	r2, r3
   10434:	4639      	mov	r1, r7
   10436:	69b0      	ldr	r0, [r6, #24]
   10438:	f00a fc0f 	bl	1ac5a <xQueueGenericReceive>
   1043c:	b958      	cbnz	r0, 10456 <UartDev::getChar(char*, unsigned int)+0x6a>
   1043e:	f00a ff69 	bl	1b314 <sys_get_uptime_us>
   10442:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10446:	2300      	movs	r3, #0
   10448:	f00c fb8e 	bl	1cb68 <__aeabi_uldivmod>
   1044c:	428d      	cmp	r5, r1
   1044e:	bf08      	it	eq
   10450:	4284      	cmpeq	r4, r0
   10452:	d2ed      	bcs.n	10430 <UartDev::getChar(char*, unsigned int)+0x44>
   10454:	e7cf      	b.n	103f6 <UartDev::getChar(char*, unsigned int)+0xa>
   10456:	2001      	movs	r0, #1
   10458:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1045a:	ffff 6943 	vtbx.8	d22, {d15-d16}, d3

0001045c <UartDev::setBaudRate(unsigned int)>:
_ZN7UartDev11setBaudRateEj():
   1045c:	6943      	ldr	r3, [r0, #20]
   1045e:	2280      	movs	r2, #128	; 0x80
   10460:	b510      	push	{r4, lr}
   10462:	731a      	strb	r2, [r3, #12]
   10464:	4604      	mov	r4, r0
   10466:	6a00      	ldr	r0, [r0, #32]
   10468:	0109      	lsls	r1, r1, #4
   1046a:	fbb0 f0f1 	udiv	r0, r0, r1
   1046e:	f00b fd2f 	bl	1bed0 <__aeabi_ui2d>
   10472:	2200      	movs	r2, #0
   10474:	4b07      	ldr	r3, [pc, #28]	; (10494 <UartDev::setBaudRate(unsigned int)+0x38>)
   10476:	f00b fbef 	bl	1bc58 <__adddf3>
   1047a:	f00c f861 	bl	1c540 <__aeabi_d2uiz>
   1047e:	6963      	ldr	r3, [r4, #20]
   10480:	b280      	uxth	r0, r0
   10482:	0a02      	lsrs	r2, r0, #8
   10484:	711a      	strb	r2, [r3, #4]
   10486:	6963      	ldr	r3, [r4, #20]
   10488:	b2c0      	uxtb	r0, r0
   1048a:	7018      	strb	r0, [r3, #0]
   1048c:	6963      	ldr	r3, [r4, #20]
   1048e:	2203      	movs	r2, #3
   10490:	731a      	strb	r2, [r3, #12]
   10492:	bd10      	pop	{r4, pc}
   10494:	3fe00000 	.word	0x3fe00000

00010498 <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
   10498:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1049a:	6942      	ldr	r2, [r0, #20]
   1049c:	2300      	movs	r3, #0
   1049e:	9301      	str	r3, [sp, #4]
   104a0:	f88d 3003 	strb.w	r3, [sp, #3]
   104a4:	6893      	ldr	r3, [r2, #8]
   104a6:	4604      	mov	r4, r0
   104a8:	f003 030e 	and.w	r3, r3, #14
   104ac:	2b04      	cmp	r3, #4
   104ae:	d017      	beq.n	104e0 <UartDev::handleInterrupt()+0x48>
   104b0:	2b0c      	cmp	r3, #12
   104b2:	d015      	beq.n	104e0 <UartDev::handleInterrupt()+0x48>
   104b4:	2b02      	cmp	r3, #2
   104b6:	d135      	bne.n	10524 <UartDev::handleInterrupt()+0x8c>
   104b8:	69c0      	ldr	r0, [r0, #28]
   104ba:	f00a fc82 	bl	1adc2 <uxQueueMessagesWaitingFromISR>
   104be:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   104c0:	4298      	cmp	r0, r3
   104c2:	d903      	bls.n	104cc <UartDev::handleInterrupt()+0x34>
   104c4:	69e0      	ldr	r0, [r4, #28]
   104c6:	f00a fc7c 	bl	1adc2 <uxQueueMessagesWaitingFromISR>
   104ca:	84e0      	strh	r0, [r4, #38]	; 0x26
   104cc:	2610      	movs	r6, #16
   104ce:	2500      	movs	r5, #0
   104d0:	aa01      	add	r2, sp, #4
   104d2:	f10d 0103 	add.w	r1, sp, #3
   104d6:	69e0      	ldr	r0, [r4, #28]
   104d8:	f00a fc41 	bl	1ad5e <xQueueReceiveFromISR>
   104dc:	bb20      	cbnz	r0, 10528 <UartDev::handleInterrupt()+0x90>
   104de:	e02d      	b.n	1053c <UartDev::handleInterrupt()+0xa4>
   104e0:	f009 fd8a 	bl	19ff8 <xTaskGetTickCountFromISR>
   104e4:	2500      	movs	r5, #0
   104e6:	62a0      	str	r0, [r4, #40]	; 0x28
   104e8:	6963      	ldr	r3, [r4, #20]
   104ea:	7d1a      	ldrb	r2, [r3, #20]
   104ec:	07d2      	lsls	r2, r2, #31
   104ee:	d50e      	bpl.n	1050e <UartDev::handleInterrupt()+0x76>
   104f0:	781b      	ldrb	r3, [r3, #0]
   104f2:	aa01      	add	r2, sp, #4
   104f4:	f88d 3003 	strb.w	r3, [sp, #3]
   104f8:	f10d 0103 	add.w	r1, sp, #3
   104fc:	2300      	movs	r3, #0
   104fe:	69a0      	ldr	r0, [r4, #24]
   10500:	f00a fb70 	bl	1abe4 <xQueueGenericSendFromISR>
   10504:	9b01      	ldr	r3, [sp, #4]
   10506:	2b00      	cmp	r3, #0
   10508:	bf18      	it	ne
   1050a:	2501      	movne	r5, #1
   1050c:	e7ec      	b.n	104e8 <UartDev::handleInterrupt()+0x50>
   1050e:	69a0      	ldr	r0, [r4, #24]
   10510:	f00a fc57 	bl	1adc2 <uxQueueMessagesWaitingFromISR>
   10514:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   10516:	4298      	cmp	r0, r3
   10518:	d910      	bls.n	1053c <UartDev::handleInterrupt()+0xa4>
   1051a:	69a0      	ldr	r0, [r4, #24]
   1051c:	f00a fc51 	bl	1adc2 <uxQueueMessagesWaitingFromISR>
   10520:	84a0      	strh	r0, [r4, #36]	; 0x24
   10522:	e00b      	b.n	1053c <UartDev::handleInterrupt()+0xa4>
   10524:	7d13      	ldrb	r3, [r2, #20]
   10526:	e00e      	b.n	10546 <UartDev::handleInterrupt()+0xae>
   10528:	6963      	ldr	r3, [r4, #20]
   1052a:	f89d 2003 	ldrb.w	r2, [sp, #3]
   1052e:	701a      	strb	r2, [r3, #0]
   10530:	9b01      	ldr	r3, [sp, #4]
   10532:	2b00      	cmp	r3, #0
   10534:	bf18      	it	ne
   10536:	2501      	movne	r5, #1
   10538:	3e01      	subs	r6, #1
   1053a:	d1c9      	bne.n	104d0 <UartDev::handleInterrupt()+0x38>
   1053c:	b11d      	cbz	r5, 10546 <UartDev::handleInterrupt()+0xae>
   1053e:	4b03      	ldr	r3, [pc, #12]	; (1054c <UartDev::handleInterrupt()+0xb4>)
   10540:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10544:	601a      	str	r2, [r3, #0]
   10546:	b002      	add	sp, #8
   10548:	bd70      	pop	{r4, r5, r6, pc}
   1054a:	bf00      	nop
   1054c:	e000ed04 	.word	0xe000ed04

00010550 <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
   10550:	b538      	push	{r3, r4, r5, lr}
   10552:	4604      	mov	r4, r0
   10554:	460d      	mov	r5, r1
   10556:	f7ff fedd 	bl	10314 <CharDev::CharDev()>
   1055a:	4b06      	ldr	r3, [pc, #24]	; (10574 <UartDev::UartDev(unsigned int*)+0x24>)
   1055c:	6165      	str	r5, [r4, #20]
   1055e:	6023      	str	r3, [r4, #0]
   10560:	2300      	movs	r3, #0
   10562:	61a3      	str	r3, [r4, #24]
   10564:	61e3      	str	r3, [r4, #28]
   10566:	6223      	str	r3, [r4, #32]
   10568:	84a3      	strh	r3, [r4, #36]	; 0x24
   1056a:	84e3      	strh	r3, [r4, #38]	; 0x26
   1056c:	62a3      	str	r3, [r4, #40]	; 0x28
   1056e:	4620      	mov	r0, r4
   10570:	bd38      	pop	{r3, r4, r5, pc}
   10572:	bf00      	nop
   10574:	00023500 	.word	0x00023500

00010578 <UartDev::init(unsigned int, unsigned int, int, int)>:
_ZN7UartDev4initEjjii():
   10578:	b570      	push	{r4, r5, r6, lr}
   1057a:	4616      	mov	r6, r2
   1057c:	461d      	mov	r5, r3
   1057e:	4a26      	ldr	r2, [pc, #152]	; (10618 <UartDev::init(unsigned int, unsigned int, int, int)+0xa0>)
   10580:	6943      	ldr	r3, [r0, #20]
   10582:	4604      	mov	r4, r0
   10584:	4293      	cmp	r3, r2
   10586:	6201      	str	r1, [r0, #32]
   10588:	d105      	bne.n	10596 <UartDev::init(unsigned int, unsigned int, int, int)+0x1e>
   1058a:	2101      	movs	r1, #1
   1058c:	2003      	movs	r0, #3
   1058e:	f00a ffa7 	bl	1b4e0 <lpc_pconp>
   10592:	2220      	movs	r2, #32
   10594:	e011      	b.n	105ba <UartDev::init(unsigned int, unsigned int, int, int)+0x42>
   10596:	4a21      	ldr	r2, [pc, #132]	; (1061c <UartDev::init(unsigned int, unsigned int, int, int)+0xa4>)
   10598:	4293      	cmp	r3, r2
   1059a:	d105      	bne.n	105a8 <UartDev::init(unsigned int, unsigned int, int, int)+0x30>
   1059c:	2101      	movs	r1, #1
   1059e:	2018      	movs	r0, #24
   105a0:	f00a ff9e 	bl	1b4e0 <lpc_pconp>
   105a4:	2280      	movs	r2, #128	; 0x80
   105a6:	e008      	b.n	105ba <UartDev::init(unsigned int, unsigned int, int, int)+0x42>
   105a8:	4a1d      	ldr	r2, [pc, #116]	; (10620 <UartDev::init(unsigned int, unsigned int, int, int)+0xa8>)
   105aa:	4293      	cmp	r3, r2
   105ac:	d12f      	bne.n	1060e <UartDev::init(unsigned int, unsigned int, int, int)+0x96>
   105ae:	2101      	movs	r1, #1
   105b0:	2019      	movs	r0, #25
   105b2:	f00a ff95 	bl	1b4e0 <lpc_pconp>
   105b6:	f44f 7280 	mov.w	r2, #256	; 0x100
   105ba:	4b1a      	ldr	r3, [pc, #104]	; (10624 <UartDev::init(unsigned int, unsigned int, int, int)+0xac>)
   105bc:	4631      	mov	r1, r6
   105be:	601a      	str	r2, [r3, #0]
   105c0:	6963      	ldr	r3, [r4, #20]
   105c2:	2241      	movs	r2, #65	; 0x41
   105c4:	721a      	strb	r2, [r3, #8]
   105c6:	6962      	ldr	r2, [r4, #20]
   105c8:	4620      	mov	r0, r4
   105ca:	7a13      	ldrb	r3, [r2, #8]
   105cc:	f043 0306 	orr.w	r3, r3, #6
   105d0:	7213      	strb	r3, [r2, #8]
   105d2:	f7ff ff43 	bl	1045c <UartDev::setBaudRate(unsigned int)>
   105d6:	69a2      	ldr	r2, [r4, #24]
   105d8:	b942      	cbnz	r2, 105ec <UartDev::init(unsigned int, unsigned int, int, int)+0x74>
   105da:	2d08      	cmp	r5, #8
   105dc:	4628      	mov	r0, r5
   105de:	f04f 0101 	mov.w	r1, #1
   105e2:	bfb8      	it	lt
   105e4:	2008      	movlt	r0, #8
   105e6:	f00a fa30 	bl	1aa4a <xQueueGenericCreate>
   105ea:	61a0      	str	r0, [r4, #24]
   105ec:	69e2      	ldr	r2, [r4, #28]
   105ee:	b93a      	cbnz	r2, 10600 <UartDev::init(unsigned int, unsigned int, int, int)+0x88>
   105f0:	9804      	ldr	r0, [sp, #16]
   105f2:	2101      	movs	r1, #1
   105f4:	2808      	cmp	r0, #8
   105f6:	bfb8      	it	lt
   105f8:	2008      	movlt	r0, #8
   105fa:	f00a fa26 	bl	1aa4a <xQueueGenericCreate>
   105fe:	61e0      	str	r0, [r4, #28]
   10600:	6963      	ldr	r3, [r4, #20]
   10602:	2207      	movs	r2, #7
   10604:	605a      	str	r2, [r3, #4]
   10606:	69a3      	ldr	r3, [r4, #24]
   10608:	b10b      	cbz	r3, 1060e <UartDev::init(unsigned int, unsigned int, int, int)+0x96>
   1060a:	69e3      	ldr	r3, [r4, #28]
   1060c:	b90b      	cbnz	r3, 10612 <UartDev::init(unsigned int, unsigned int, int, int)+0x9a>
   1060e:	2000      	movs	r0, #0
   10610:	bd70      	pop	{r4, r5, r6, pc}
   10612:	2001      	movs	r0, #1
   10614:	bd70      	pop	{r4, r5, r6, pc}
   10616:	bf00      	nop
   10618:	4000c000 	.word	0x4000c000
   1061c:	40098000 	.word	0x40098000
   10620:	4009c000 	.word	0x4009c000
   10624:	e000e100 	.word	0xe000e100

00010628 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhhPhm():
   10628:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1062c:	7945      	ldrb	r5, [r0, #5]
   1062e:	4604      	mov	r4, r0
   10630:	4689      	mov	r9, r1
   10632:	4690      	mov	r8, r2
   10634:	461e      	mov	r6, r3
   10636:	9f08      	ldr	r7, [sp, #32]
   10638:	b10d      	cbz	r5, 1063e <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x16>
   1063a:	2500      	movs	r5, #0
   1063c:	e05f      	b.n	106fe <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0xd6>
   1063e:	2b00      	cmp	r3, #0
   10640:	d0fb      	beq.n	1063a <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x12>
   10642:	f009 ffe3 	bl	1a60c <xTaskGetSchedulerState>
   10646:	2802      	cmp	r0, #2
   10648:	d02c      	beq.n	106a4 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x7c>
   1064a:	6823      	ldr	r3, [r4, #0]
   1064c:	2220      	movs	r2, #32
   1064e:	6127      	str	r7, [r4, #16]
   10650:	61a6      	str	r6, [r4, #24]
   10652:	75a5      	strb	r5, [r4, #22]
   10654:	f884 9014 	strb.w	r9, [r4, #20]
   10658:	f884 8015 	strb.w	r8, [r4, #21]
   1065c:	601a      	str	r2, [r3, #0]
   1065e:	f00a fe59 	bl	1b314 <sys_get_uptime_us>
   10662:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10666:	2300      	movs	r3, #0
   10668:	f00c fa7e 	bl	1cb68 <__aeabi_uldivmod>
   1066c:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   10670:	f141 0700 	adc.w	r7, r1, #0
   10674:	2300      	movs	r3, #0
   10676:	461a      	mov	r2, r3
   10678:	4619      	mov	r1, r3
   1067a:	68e0      	ldr	r0, [r4, #12]
   1067c:	f00a faed 	bl	1ac5a <xQueueGenericReceive>
   10680:	b120      	cbz	r0, 1068c <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x64>
   10682:	7da5      	ldrb	r5, [r4, #22]
   10684:	fab5 f585 	clz	r5, r5
   10688:	096d      	lsrs	r5, r5, #5
   1068a:	e038      	b.n	106fe <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0xd6>
   1068c:	f00a fe42 	bl	1b314 <sys_get_uptime_us>
   10690:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10694:	2300      	movs	r3, #0
   10696:	f00c fa67 	bl	1cb68 <__aeabi_uldivmod>
   1069a:	428f      	cmp	r7, r1
   1069c:	bf08      	it	eq
   1069e:	4286      	cmpeq	r6, r0
   106a0:	d2e8      	bcs.n	10674 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x4c>
   106a2:	e7ee      	b.n	10682 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x5a>
   106a4:	462b      	mov	r3, r5
   106a6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   106aa:	4629      	mov	r1, r5
   106ac:	68a0      	ldr	r0, [r4, #8]
   106ae:	f00a fad4 	bl	1ac5a <xQueueGenericReceive>
   106b2:	2800      	cmp	r0, #0
   106b4:	d0c1      	beq.n	1063a <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x12>
   106b6:	462b      	mov	r3, r5
   106b8:	462a      	mov	r2, r5
   106ba:	4629      	mov	r1, r5
   106bc:	68e0      	ldr	r0, [r4, #12]
   106be:	f00a facc 	bl	1ac5a <xQueueGenericReceive>
   106c2:	6823      	ldr	r3, [r4, #0]
   106c4:	2220      	movs	r2, #32
   106c6:	75a5      	strb	r5, [r4, #22]
   106c8:	f884 9014 	strb.w	r9, [r4, #20]
   106cc:	f884 8015 	strb.w	r8, [r4, #21]
   106d0:	6127      	str	r7, [r4, #16]
   106d2:	61a6      	str	r6, [r4, #24]
   106d4:	4629      	mov	r1, r5
   106d6:	601a      	str	r2, [r3, #0]
   106d8:	68e0      	ldr	r0, [r4, #12]
   106da:	462b      	mov	r3, r5
   106dc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   106e0:	f00a fabb 	bl	1ac5a <xQueueGenericReceive>
   106e4:	b120      	cbz	r0, 106f0 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0xc8>
   106e6:	7da5      	ldrb	r5, [r4, #22]
   106e8:	fab5 f585 	clz	r5, r5
   106ec:	096d      	lsrs	r5, r5, #5
   106ee:	e000      	b.n	106f2 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0xca>
   106f0:	4605      	mov	r5, r0
   106f2:	2300      	movs	r3, #0
   106f4:	461a      	mov	r2, r3
   106f6:	4619      	mov	r1, r3
   106f8:	68a0      	ldr	r0, [r4, #8]
   106fa:	f00a f9d7 	bl	1aaac <xQueueGenericSend>
   106fe:	4628      	mov	r0, r5
   10700:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00010704 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
   10704:	f041 0101 	orr.w	r1, r1, #1
   10708:	f7ff bf8e 	b.w	10628 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>

0001070c <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
   1070c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1070e:	2400      	movs	r4, #0
   10710:	ab04      	add	r3, sp, #16
   10712:	f803 4d01 	strb.w	r4, [r3, #-1]!
   10716:	2401      	movs	r4, #1
   10718:	9400      	str	r4, [sp, #0]
   1071a:	f7ff fff3 	bl	10704 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
   1071e:	f89d 000f 	ldrb.w	r0, [sp, #15]
   10722:	b004      	add	sp, #16
   10724:	bd10      	pop	{r4, pc}

00010726 <I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhhPhm():
   10726:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   1072a:	f7ff bf7d 	b.w	10628 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>

0001072e <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
   1072e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   10730:	ac04      	add	r4, sp, #16
   10732:	f804 3d01 	strb.w	r3, [r4, #-1]!
   10736:	2301      	movs	r3, #1
   10738:	9300      	str	r3, [sp, #0]
   1073a:	4623      	mov	r3, r4
   1073c:	f7ff fff3 	bl	10726 <I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
   10740:	b004      	add	sp, #16
   10742:	bd10      	pop	{r4, pc}

00010744 <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
   10744:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   10746:	2200      	movs	r2, #0
   10748:	ab04      	add	r3, sp, #16
   1074a:	f803 2d01 	strb.w	r2, [r3, #-1]!
   1074e:	9200      	str	r2, [sp, #0]
   10750:	f7ff ffd8 	bl	10704 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
   10754:	b005      	add	sp, #20
   10756:	f85d fb04 	ldr.w	pc, [sp], #4
   1075a:	ffff b538 	vsli.32	d27, d24, #31

0001075c <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC1EP15LPC_I2C_TypeDef():
   1075c:	b538      	push	{r3, r4, r5, lr}
   1075e:	2500      	movs	r5, #0
   10760:	4604      	mov	r4, r0
   10762:	6001      	str	r1, [r0, #0]
   10764:	7145      	strb	r5, [r0, #5]
   10766:	2001      	movs	r0, #1
   10768:	f00a fa16 	bl	1ab98 <xQueueCreateMutex>
   1076c:	2203      	movs	r2, #3
   1076e:	60a0      	str	r0, [r4, #8]
   10770:	4629      	mov	r1, r5
   10772:	2001      	movs	r0, #1
   10774:	f00a f969 	bl	1aa4a <xQueueGenericCreate>
   10778:	462b      	mov	r3, r5
   1077a:	462a      	mov	r2, r5
   1077c:	60e0      	str	r0, [r4, #12]
   1077e:	4629      	mov	r1, r5
   10780:	f00a fa6b 	bl	1ac5a <xQueueGenericReceive>
   10784:	6823      	ldr	r3, [r4, #0]
   10786:	4a09      	ldr	r2, [pc, #36]	; (107ac <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x50>)
   10788:	4293      	cmp	r3, r2
   1078a:	d101      	bne.n	10790 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x34>
   1078c:	230a      	movs	r3, #10
   1078e:	e009      	b.n	107a4 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>
   10790:	4a07      	ldr	r2, [pc, #28]	; (107b0 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x54>)
   10792:	4293      	cmp	r3, r2
   10794:	d101      	bne.n	1079a <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x3e>
   10796:	230b      	movs	r3, #11
   10798:	e004      	b.n	107a4 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>
   1079a:	4a06      	ldr	r2, [pc, #24]	; (107b4 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
   1079c:	4293      	cmp	r3, r2
   1079e:	bf0c      	ite	eq
   107a0:	230c      	moveq	r3, #12
   107a2:	2363      	movne	r3, #99	; 0x63
   107a4:	7123      	strb	r3, [r4, #4]
   107a6:	4620      	mov	r0, r4
   107a8:	bd38      	pop	{r3, r4, r5, pc}
   107aa:	bf00      	nop
   107ac:	4001c000 	.word	0x4001c000
   107b0:	4005c000 	.word	0x4005c000
   107b4:	400a0000 	.word	0x400a0000

000107b8 <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
   107b8:	f990 3004 	ldrsb.w	r3, [r0, #4]
   107bc:	b570      	push	{r4, r5, r6, lr}
   107be:	2b0b      	cmp	r3, #11
   107c0:	4605      	mov	r5, r0
   107c2:	460c      	mov	r4, r1
   107c4:	4616      	mov	r6, r2
   107c6:	d006      	beq.n	107d6 <I2C_Base::init(unsigned long, unsigned long)+0x1e>
   107c8:	2b0c      	cmp	r3, #12
   107ca:	d007      	beq.n	107dc <I2C_Base::init(unsigned long, unsigned long)+0x24>
   107cc:	2b0a      	cmp	r3, #10
   107ce:	d134      	bne.n	1083a <I2C_Base::init(unsigned long, unsigned long)+0x82>
   107d0:	2101      	movs	r1, #1
   107d2:	2007      	movs	r0, #7
   107d4:	e004      	b.n	107e0 <I2C_Base::init(unsigned long, unsigned long)+0x28>
   107d6:	2101      	movs	r1, #1
   107d8:	2013      	movs	r0, #19
   107da:	e001      	b.n	107e0 <I2C_Base::init(unsigned long, unsigned long)+0x28>
   107dc:	2101      	movs	r1, #1
   107de:	201a      	movs	r0, #26
   107e0:	f00a fe7e 	bl	1b4e0 <lpc_pconp>
   107e4:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   107e8:	bf9a      	itte	ls
   107ea:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
   107ee:	4371      	mulls	r1, r6
   107f0:	4913      	ldrhi	r1, [pc, #76]	; (10840 <I2C_Base::init(unsigned long, unsigned long)+0x88>)
   107f2:	682b      	ldr	r3, [r5, #0]
   107f4:	fbb4 f1f1 	udiv	r1, r4, r1
   107f8:	226c      	movs	r2, #108	; 0x6c
   107fa:	619a      	str	r2, [r3, #24]
   107fc:	0849      	lsrs	r1, r1, #1
   107fe:	2228      	movs	r2, #40	; 0x28
   10800:	434a      	muls	r2, r1
   10802:	2064      	movs	r0, #100	; 0x64
   10804:	fbb2 f2f0 	udiv	r2, r2, r0
   10808:	611a      	str	r2, [r3, #16]
   1080a:	223c      	movs	r2, #60	; 0x3c
   1080c:	4351      	muls	r1, r2
   1080e:	fbb1 f1f0 	udiv	r1, r1, r0
   10812:	2200      	movs	r2, #0
   10814:	6159      	str	r1, [r3, #20]
   10816:	60da      	str	r2, [r3, #12]
   10818:	621a      	str	r2, [r3, #32]
   1081a:	625a      	str	r2, [r3, #36]	; 0x24
   1081c:	629a      	str	r2, [r3, #40]	; 0x28
   1081e:	2240      	movs	r2, #64	; 0x40
   10820:	601a      	str	r2, [r3, #0]
   10822:	f995 3004 	ldrsb.w	r3, [r5, #4]
   10826:	2001      	movs	r0, #1
   10828:	0959      	lsrs	r1, r3, #5
   1082a:	4a06      	ldr	r2, [pc, #24]	; (10844 <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
   1082c:	f003 031f 	and.w	r3, r3, #31
   10830:	fa00 f303 	lsl.w	r3, r0, r3
   10834:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   10838:	bd70      	pop	{r4, r5, r6, pc}
   1083a:	2000      	movs	r0, #0
   1083c:	bd70      	pop	{r4, r5, r6, pc}
   1083e:	bf00      	nop
   10840:	000186a0 	.word	0x000186a0
   10844:	e000e100 	.word	0xe000e100

00010848 <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
   10848:	6803      	ldr	r3, [r0, #0]
   1084a:	b530      	push	{r4, r5, lr}
   1084c:	6859      	ldr	r1, [r3, #4]
   1084e:	4602      	mov	r2, r0
   10850:	2928      	cmp	r1, #40	; 0x28
   10852:	d045      	beq.n	108e0 <I2C_Base::i2cStateMachine()+0x98>
   10854:	d809      	bhi.n	1086a <I2C_Base::i2cStateMachine()+0x22>
   10856:	2910      	cmp	r1, #16
   10858:	d024      	beq.n	108a4 <I2C_Base::i2cStateMachine()+0x5c>
   1085a:	2918      	cmp	r1, #24
   1085c:	d02a      	beq.n	108b4 <I2C_Base::i2cStateMachine()+0x6c>
   1085e:	2908      	cmp	r1, #8
   10860:	d177      	bne.n	10952 <I2C_Base::i2cStateMachine()+0x10a>
   10862:	7d02      	ldrb	r2, [r0, #20]
   10864:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   10868:	e037      	b.n	108da <I2C_Base::i2cStateMachine()+0x92>
   1086a:	2940      	cmp	r1, #64	; 0x40
   1086c:	d054      	beq.n	10918 <I2C_Base::i2cStateMachine()+0xd0>
   1086e:	d80a      	bhi.n	10886 <I2C_Base::i2cStateMachine()+0x3e>
   10870:	2938      	cmp	r1, #56	; 0x38
   10872:	d16e      	bne.n	10952 <I2C_Base::i2cStateMachine()+0x10a>
   10874:	7d01      	ldrb	r1, [r0, #20]
   10876:	685b      	ldr	r3, [r3, #4]
   10878:	f011 0f01 	tst.w	r1, #1
   1087c:	7593      	strb	r3, [r2, #22]
   1087e:	bf14      	ite	ne
   10880:	2001      	movne	r0, #1
   10882:	2002      	moveq	r0, #2
   10884:	bd30      	pop	{r4, r5, pc}
   10886:	2950      	cmp	r1, #80	; 0x50
   10888:	d04e      	beq.n	10928 <I2C_Base::i2cStateMachine()+0xe0>
   1088a:	2958      	cmp	r1, #88	; 0x58
   1088c:	d161      	bne.n	10952 <I2C_Base::i2cStateMachine()+0x10a>
   1088e:	6981      	ldr	r1, [r0, #24]
   10890:	689b      	ldr	r3, [r3, #8]
   10892:	700b      	strb	r3, [r1, #0]
   10894:	6803      	ldr	r3, [r0, #0]
   10896:	2120      	movs	r1, #32
   10898:	6199      	str	r1, [r3, #24]
   1089a:	2110      	movs	r1, #16
   1089c:	6019      	str	r1, [r3, #0]
   1089e:	2108      	movs	r1, #8
   108a0:	6199      	str	r1, [r3, #24]
   108a2:	e052      	b.n	1094a <I2C_Base::i2cStateMachine()+0x102>
   108a4:	7d02      	ldrb	r2, [r0, #20]
   108a6:	f042 0201 	orr.w	r2, r2, #1
   108aa:	609a      	str	r2, [r3, #8]
   108ac:	2208      	movs	r2, #8
   108ae:	619a      	str	r2, [r3, #24]
   108b0:	2000      	movs	r0, #0
   108b2:	bd30      	pop	{r4, r5, pc}
   108b4:	6914      	ldr	r4, [r2, #16]
   108b6:	2020      	movs	r0, #32
   108b8:	6198      	str	r0, [r3, #24]
   108ba:	2108      	movs	r1, #8
   108bc:	b964      	cbnz	r4, 108d8 <I2C_Base::i2cStateMachine()+0x90>
   108be:	6198      	str	r0, [r3, #24]
   108c0:	2010      	movs	r0, #16
   108c2:	6018      	str	r0, [r3, #0]
   108c4:	6199      	str	r1, [r3, #24]
   108c6:	6819      	ldr	r1, [r3, #0]
   108c8:	06c9      	lsls	r1, r1, #27
   108ca:	d4fc      	bmi.n	108c6 <I2C_Base::i2cStateMachine()+0x7e>
   108cc:	7d13      	ldrb	r3, [r2, #20]
   108ce:	07dd      	lsls	r5, r3, #31
   108d0:	bf4c      	ite	mi
   108d2:	2001      	movmi	r0, #1
   108d4:	2002      	movpl	r0, #2
   108d6:	bd30      	pop	{r4, r5, pc}
   108d8:	7d52      	ldrb	r2, [r2, #21]
   108da:	609a      	str	r2, [r3, #8]
   108dc:	6199      	str	r1, [r3, #24]
   108de:	e7e7      	b.n	108b0 <I2C_Base::i2cStateMachine()+0x68>
   108e0:	7d00      	ldrb	r0, [r0, #20]
   108e2:	f010 0001 	ands.w	r0, r0, #1
   108e6:	d001      	beq.n	108ec <I2C_Base::i2cStateMachine()+0xa4>
   108e8:	2220      	movs	r2, #32
   108ea:	e02c      	b.n	10946 <I2C_Base::i2cStateMachine()+0xfe>
   108ec:	6911      	ldr	r1, [r2, #16]
   108ee:	b949      	cbnz	r1, 10904 <I2C_Base::i2cStateMachine()+0xbc>
   108f0:	2120      	movs	r1, #32
   108f2:	6199      	str	r1, [r3, #24]
   108f4:	2110      	movs	r1, #16
   108f6:	6019      	str	r1, [r3, #0]
   108f8:	2108      	movs	r1, #8
   108fa:	6199      	str	r1, [r3, #24]
   108fc:	6819      	ldr	r1, [r3, #0]
   108fe:	06cc      	lsls	r4, r1, #27
   10900:	d4fc      	bmi.n	108fc <I2C_Base::i2cStateMachine()+0xb4>
   10902:	e7e3      	b.n	108cc <I2C_Base::i2cStateMachine()+0x84>
   10904:	6994      	ldr	r4, [r2, #24]
   10906:	3901      	subs	r1, #1
   10908:	f814 5b01 	ldrb.w	r5, [r4], #1
   1090c:	609d      	str	r5, [r3, #8]
   1090e:	6194      	str	r4, [r2, #24]
   10910:	6111      	str	r1, [r2, #16]
   10912:	2208      	movs	r2, #8
   10914:	619a      	str	r2, [r3, #24]
   10916:	bd30      	pop	{r4, r5, pc}
   10918:	6902      	ldr	r2, [r0, #16]
   1091a:	2120      	movs	r1, #32
   1091c:	2a01      	cmp	r2, #1
   1091e:	6199      	str	r1, [r3, #24]
   10920:	f04f 0204 	mov.w	r2, #4
   10924:	d80f      	bhi.n	10946 <I2C_Base::i2cStateMachine()+0xfe>
   10926:	e00c      	b.n	10942 <I2C_Base::i2cStateMachine()+0xfa>
   10928:	689b      	ldr	r3, [r3, #8]
   1092a:	6981      	ldr	r1, [r0, #24]
   1092c:	2204      	movs	r2, #4
   1092e:	700b      	strb	r3, [r1, #0]
   10930:	6983      	ldr	r3, [r0, #24]
   10932:	3301      	adds	r3, #1
   10934:	6183      	str	r3, [r0, #24]
   10936:	6903      	ldr	r3, [r0, #16]
   10938:	3b01      	subs	r3, #1
   1093a:	2b01      	cmp	r3, #1
   1093c:	6103      	str	r3, [r0, #16]
   1093e:	6803      	ldr	r3, [r0, #0]
   10940:	d101      	bne.n	10946 <I2C_Base::i2cStateMachine()+0xfe>
   10942:	619a      	str	r2, [r3, #24]
   10944:	e7b2      	b.n	108ac <I2C_Base::i2cStateMachine()+0x64>
   10946:	601a      	str	r2, [r3, #0]
   10948:	e7b0      	b.n	108ac <I2C_Base::i2cStateMachine()+0x64>
   1094a:	6819      	ldr	r1, [r3, #0]
   1094c:	06c8      	lsls	r0, r1, #27
   1094e:	d4fc      	bmi.n	1094a <I2C_Base::i2cStateMachine()+0x102>
   10950:	e7bc      	b.n	108cc <I2C_Base::i2cStateMachine()+0x84>
   10952:	6859      	ldr	r1, [r3, #4]
   10954:	7591      	strb	r1, [r2, #22]
   10956:	2120      	movs	r1, #32
   10958:	6199      	str	r1, [r3, #24]
   1095a:	2110      	movs	r1, #16
   1095c:	6019      	str	r1, [r3, #0]
   1095e:	2108      	movs	r1, #8
   10960:	6199      	str	r1, [r3, #24]
   10962:	6819      	ldr	r1, [r3, #0]
   10964:	06c9      	lsls	r1, r1, #27
   10966:	d4fc      	bmi.n	10962 <I2C_Base::i2cStateMachine()+0x11a>
   10968:	e7b0      	b.n	108cc <I2C_Base::i2cStateMachine()+0x84>
   1096a:	ffff b513 	vsli.32	d27, d3, #31

0001096c <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
   1096c:	b513      	push	{r0, r1, r4, lr}
   1096e:	4604      	mov	r4, r0
   10970:	f7ff ff6a 	bl	10848 <I2C_Base::i2cStateMachine()>
   10974:	b168      	cbz	r0, 10992 <I2C_Base::handleInterrupt()+0x26>
   10976:	2300      	movs	r3, #0
   10978:	aa02      	add	r2, sp, #8
   1097a:	f842 3d04 	str.w	r3, [r2, #-4]!
   1097e:	4619      	mov	r1, r3
   10980:	68e0      	ldr	r0, [r4, #12]
   10982:	f00a f92f 	bl	1abe4 <xQueueGenericSendFromISR>
   10986:	9b01      	ldr	r3, [sp, #4]
   10988:	b11b      	cbz	r3, 10992 <I2C_Base::handleInterrupt()+0x26>
   1098a:	4b03      	ldr	r3, [pc, #12]	; (10998 <I2C_Base::handleInterrupt()+0x2c>)
   1098c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10990:	601a      	str	r2, [r3, #0]
   10992:	b002      	add	sp, #8
   10994:	bd10      	pop	{r4, pc}
   10996:	bf00      	nop
   10998:	e000ed04 	.word	0xe000ed04

0001099c <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
   1099c:	b570      	push	{r4, r5, r6, lr}
   1099e:	4b17      	ldr	r3, [pc, #92]	; (109fc <I2C2::init(unsigned int)+0x60>)
   109a0:	460e      	mov	r6, r1
   109a2:	695c      	ldr	r4, [r3, #20]
   109a4:	4b16      	ldr	r3, [pc, #88]	; (10a00 <I2C2::init(unsigned int)+0x64>)
   109a6:	4605      	mov	r5, r0
   109a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   109aa:	201a      	movs	r0, #26
   109ac:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   109b0:	641a      	str	r2, [r3, #64]	; 0x40
   109b2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   109b4:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
   109b8:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   109bc:	641a      	str	r2, [r3, #64]	; 0x40
   109be:	6e99      	ldr	r1, [r3, #104]	; 0x68
   109c0:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   109c4:	6699      	str	r1, [r3, #104]	; 0x68
   109c6:	6819      	ldr	r1, [r3, #0]
   109c8:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   109cc:	6019      	str	r1, [r3, #0]
   109ce:	6819      	ldr	r1, [r3, #0]
   109d0:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   109d4:	6019      	str	r1, [r3, #0]
   109d6:	2103      	movs	r1, #3
   109d8:	f00a fd9a 	bl	1b510 <lpc_pclk>
   109dc:	f00a faf2 	bl	1afc4 <sys_get_cpu_clock>
   109e0:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   109e4:	d106      	bne.n	109f4 <I2C2::init(unsigned int)+0x58>
   109e6:	4632      	mov	r2, r6
   109e8:	08c1      	lsrs	r1, r0, #3
   109ea:	4628      	mov	r0, r5
   109ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   109f0:	f7ff bee2 	b.w	107b8 <I2C_Base::init(unsigned long, unsigned long)>
   109f4:	2301      	movs	r3, #1
   109f6:	716b      	strb	r3, [r5, #5]
   109f8:	2000      	movs	r0, #0
   109fa:	bd70      	pop	{r4, r5, r6, pc}
   109fc:	2009c000 	.word	0x2009c000
   10a00:	4002c000 	.word	0x4002c000

00010a04 <I2C2::I2C2()>:
_ZN4I2C2C1Ev():
   10a04:	b510      	push	{r4, lr}
   10a06:	4604      	mov	r4, r0
   10a08:	4902      	ldr	r1, [pc, #8]	; (10a14 <I2C2::I2C2()+0x10>)
   10a0a:	f7ff fea7 	bl	1075c <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
   10a0e:	4620      	mov	r0, r4
   10a10:	bd10      	pop	{r4, pc}
   10a12:	bf00      	nop
   10a14:	400a0000 	.word	0x400a0000

00010a18 <I2C2_IRQHandler>:
I2C2_IRQHandler():
   10a18:	b538      	push	{r3, r4, r5, lr}
   10a1a:	4c07      	ldr	r4, [pc, #28]	; (10a38 <I2C2_IRQHandler+0x20>)
   10a1c:	6823      	ldr	r3, [r4, #0]
   10a1e:	b933      	cbnz	r3, 10a2e <I2C2_IRQHandler+0x16>
   10a20:	201c      	movs	r0, #28
   10a22:	f000 fdd5 	bl	115d0 <operator new(unsigned int)>
   10a26:	4605      	mov	r5, r0
   10a28:	f7ff ffec 	bl	10a04 <I2C2::I2C2()>
   10a2c:	6025      	str	r5, [r4, #0]
   10a2e:	6820      	ldr	r0, [r4, #0]
   10a30:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   10a34:	f7ff bf9a 	b.w	1096c <I2C_Base::handleInterrupt()>
   10a38:	2007c1c8 	.word	0x2007c1c8

00010a3c <Uart0::~Uart0()>:
_ZN5Uart0D1Ev():
   10a3c:	b510      	push	{r4, lr}
   10a3e:	4604      	mov	r4, r0
   10a40:	4b02      	ldr	r3, [pc, #8]	; (10a4c <Uart0::~Uart0()+0x10>)
   10a42:	6003      	str	r3, [r0, #0]
   10a44:	f7ff fc76 	bl	10334 <CharDev::~CharDev()>
   10a48:	4620      	mov	r0, r4
   10a4a:	bd10      	pop	{r4, pc}
   10a4c:	00023500 	.word	0x00023500

00010a50 <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   10a50:	b510      	push	{r4, lr}
   10a52:	4604      	mov	r4, r0
   10a54:	f7ff fff2 	bl	10a3c <Uart0::~Uart0()>
   10a58:	4620      	mov	r0, r4
   10a5a:	f000 fdbb 	bl	115d4 <operator delete(void*)>
   10a5e:	4620      	mov	r0, r4
   10a60:	bd10      	pop	{r4, pc}
   10a62:	ffff b5f7 	vsli.64	<illegal reg q13.5>, <illegal reg q11.5>, #63	; 0x3f

00010a64 <Uart0::init(unsigned int, int, int)>:
_ZN5Uart04initEjii():
   10a64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10a66:	460d      	mov	r5, r1
   10a68:	490d      	ldr	r1, [pc, #52]	; (10aa0 <Uart0::init(unsigned int, int, int)+0x3c>)
   10a6a:	4604      	mov	r4, r0
   10a6c:	6808      	ldr	r0, [r1, #0]
   10a6e:	4616      	mov	r6, r2
   10a70:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   10a74:	6008      	str	r0, [r1, #0]
   10a76:	6808      	ldr	r0, [r1, #0]
   10a78:	461f      	mov	r7, r3
   10a7a:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   10a7e:	6008      	str	r0, [r1, #0]
   10a80:	2101      	movs	r1, #1
   10a82:	2003      	movs	r0, #3
   10a84:	f00a fd44 	bl	1b510 <lpc_pclk>
   10a88:	f00a fa9c 	bl	1afc4 <sys_get_cpu_clock>
   10a8c:	9700      	str	r7, [sp, #0]
   10a8e:	4601      	mov	r1, r0
   10a90:	4633      	mov	r3, r6
   10a92:	462a      	mov	r2, r5
   10a94:	4620      	mov	r0, r4
   10a96:	f7ff fd6f 	bl	10578 <UartDev::init(unsigned int, unsigned int, int, int)>
   10a9a:	b003      	add	sp, #12
   10a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   10a9e:	bf00      	nop
   10aa0:	4002c000 	.word	0x4002c000

00010aa4 <Uart0::Uart0()>:
_ZN5Uart0C1Ev():
   10aa4:	b510      	push	{r4, lr}
   10aa6:	4604      	mov	r4, r0
   10aa8:	4903      	ldr	r1, [pc, #12]	; (10ab8 <Uart0::Uart0()+0x14>)
   10aaa:	f7ff fd51 	bl	10550 <UartDev::UartDev(unsigned int*)>
   10aae:	4b03      	ldr	r3, [pc, #12]	; (10abc <Uart0::Uart0()+0x18>)
   10ab0:	4620      	mov	r0, r4
   10ab2:	6023      	str	r3, [r4, #0]
   10ab4:	bd10      	pop	{r4, pc}
   10ab6:	bf00      	nop
   10ab8:	4000c000 	.word	0x4000c000
   10abc:	00023574 	.word	0x00023574

00010ac0 <UART0_IRQHandler>:
UART0_IRQHandler():
   10ac0:	b538      	push	{r3, r4, r5, lr}
   10ac2:	4c07      	ldr	r4, [pc, #28]	; (10ae0 <UART0_IRQHandler+0x20>)
   10ac4:	6823      	ldr	r3, [r4, #0]
   10ac6:	b933      	cbnz	r3, 10ad6 <UART0_IRQHandler+0x16>
   10ac8:	202c      	movs	r0, #44	; 0x2c
   10aca:	f000 fd81 	bl	115d0 <operator new(unsigned int)>
   10ace:	4605      	mov	r5, r0
   10ad0:	f7ff ffe8 	bl	10aa4 <Uart0::Uart0()>
   10ad4:	6025      	str	r5, [r4, #0]
   10ad6:	6820      	ldr	r0, [r4, #0]
   10ad8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   10adc:	f7ff bcdc 	b.w	10498 <UartDev::handleInterrupt()>
   10ae0:	2007c1cc 	.word	0x2007c1cc

00010ae4 <rtc_gettime>:
rtc_gettime():
   10ae4:	b5f0      	push	{r4, r5, r6, r7, lr}
   10ae6:	4b12      	ldr	r3, [pc, #72]	; (10b30 <rtc_gettime+0x4c>)
   10ae8:	b087      	sub	sp, #28
   10aea:	466c      	mov	r4, sp
   10aec:	461d      	mov	r5, r3
   10aee:	4607      	mov	r7, r0
   10af0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   10af4:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
   10af8:	ae03      	add	r6, sp, #12
   10afa:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   10afe:	e886 0007 	stmia.w	r6, {r0, r1, r2}
   10b02:	220c      	movs	r2, #12
   10b04:	4631      	mov	r1, r6
   10b06:	4620      	mov	r0, r4
   10b08:	f00c fbf2 	bl	1d2f0 <memcmp>
   10b0c:	b140      	cbz	r0, 10b20 <rtc_gettime+0x3c>
   10b0e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   10b12:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   10b16:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   10b1a:	e886 0007 	stmia.w	r6, {r0, r1, r2}
   10b1e:	e7f0      	b.n	10b02 <rtc_gettime+0x1e>
   10b20:	cc03      	ldmia	r4!, {r0, r1}
   10b22:	6038      	str	r0, [r7, #0]
   10b24:	6820      	ldr	r0, [r4, #0]
   10b26:	6079      	str	r1, [r7, #4]
   10b28:	60b8      	str	r0, [r7, #8]
   10b2a:	4638      	mov	r0, r7
   10b2c:	b007      	add	sp, #28
   10b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   10b30:	40024014 	.word	0x40024014

00010b34 <rtc_settime>:
rtc_settime():
   10b34:	4b18      	ldr	r3, [pc, #96]	; (10b98 <rtc_settime+0x64>)
   10b36:	2200      	movs	r2, #0
   10b38:	721a      	strb	r2, [r3, #8]
   10b3a:	7802      	ldrb	r2, [r0, #0]
   10b3c:	f3c2 0205 	ubfx	r2, r2, #0, #6
   10b40:	f883 2020 	strb.w	r2, [r3, #32]
   10b44:	7842      	ldrb	r2, [r0, #1]
   10b46:	f3c2 0205 	ubfx	r2, r2, #0, #6
   10b4a:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
   10b4e:	7882      	ldrb	r2, [r0, #2]
   10b50:	f3c2 0204 	ubfx	r2, r2, #0, #5
   10b54:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
   10b58:	78c2      	ldrb	r2, [r0, #3]
   10b5a:	f3c2 0202 	ubfx	r2, r2, #0, #3
   10b5e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
   10b62:	7902      	ldrb	r2, [r0, #4]
   10b64:	f3c2 0204 	ubfx	r2, r2, #0, #5
   10b68:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
   10b6c:	7942      	ldrb	r2, [r0, #5]
   10b6e:	f3c2 0203 	ubfx	r2, r2, #0, #4
   10b72:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
   10b76:	79c2      	ldrb	r2, [r0, #7]
   10b78:	7981      	ldrb	r1, [r0, #6]
   10b7a:	f002 020f 	and.w	r2, r2, #15
   10b7e:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
   10b82:	879a      	strh	r2, [r3, #60]	; 0x3c
   10b84:	7a42      	ldrb	r2, [r0, #9]
   10b86:	7a01      	ldrb	r1, [r0, #8]
   10b88:	f002 020f 	and.w	r2, r2, #15
   10b8c:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
   10b90:	869a      	strh	r2, [r3, #52]	; 0x34
   10b92:	2201      	movs	r2, #1
   10b94:	721a      	strb	r2, [r3, #8]
   10b96:	4770      	bx	lr
   10b98:	40024000 	.word	0x40024000

00010b9c <rtc_init>:
rtc_init():
   10b9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   10b9e:	2101      	movs	r1, #1
   10ba0:	2009      	movs	r0, #9
   10ba2:	f00a fc9d 	bl	1b4e0 <lpc_pconp>
   10ba6:	4b30      	ldr	r3, [pc, #192]	; (10c68 <rtc_init+0xcc>)
   10ba8:	2201      	movs	r2, #1
   10baa:	721a      	strb	r2, [r3, #8]
   10bac:	a801      	add	r0, sp, #4
   10bae:	f7ff ff99 	bl	10ae4 <rtc_gettime>
   10bb2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   10bb6:	f603 0326 	addw	r3, r3, #2086	; 0x826
   10bba:	f3c3 030b 	ubfx	r3, r3, #0, #12
   10bbe:	2b0f      	cmp	r3, #15
   10bc0:	d81e      	bhi.n	10c00 <rtc_init+0x64>
   10bc2:	f89d 3005 	ldrb.w	r3, [sp, #5]
   10bc6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   10bca:	2b3b      	cmp	r3, #59	; 0x3b
   10bcc:	dc18      	bgt.n	10c00 <rtc_init+0x64>
   10bce:	f89d 3004 	ldrb.w	r3, [sp, #4]
   10bd2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   10bd6:	2b3b      	cmp	r3, #59	; 0x3b
   10bd8:	dc12      	bgt.n	10c00 <rtc_init+0x64>
   10bda:	f89d 3006 	ldrb.w	r3, [sp, #6]
   10bde:	f003 031f 	and.w	r3, r3, #31
   10be2:	2b17      	cmp	r3, #23
   10be4:	dc0c      	bgt.n	10c00 <rtc_init+0x64>
   10be6:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   10bea:	f3c3 030b 	ubfx	r3, r3, #0, #12
   10bee:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   10bf2:	da05      	bge.n	10c00 <rtc_init+0x64>
   10bf4:	f89d 3009 	ldrb.w	r3, [sp, #9]
   10bf8:	f003 030f 	and.w	r3, r3, #15
   10bfc:	2b0c      	cmp	r3, #12
   10bfe:	dd2f      	ble.n	10c60 <rtc_init+0xc4>
   10c00:	f89d 3008 	ldrb.w	r3, [sp, #8]
   10c04:	2201      	movs	r2, #1
   10c06:	f362 0304 	bfi	r3, r2, #0, #5
   10c0a:	f88d 3008 	strb.w	r3, [sp, #8]
   10c0e:	f89d 3009 	ldrb.w	r3, [sp, #9]
   10c12:	a801      	add	r0, sp, #4
   10c14:	f362 0303 	bfi	r3, r2, #0, #4
   10c18:	f240 72da 	movw	r2, #2010	; 0x7da
   10c1c:	f88d 3009 	strb.w	r3, [sp, #9]
   10c20:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   10c24:	f362 030b 	bfi	r3, r2, #0, #12
   10c28:	f8ad 300a 	strh.w	r3, [sp, #10]
   10c2c:	f89d 3007 	ldrb.w	r3, [sp, #7]
   10c30:	f36f 0302 	bfc	r3, #0, #3
   10c34:	f88d 3007 	strb.w	r3, [sp, #7]
   10c38:	f89d 3006 	ldrb.w	r3, [sp, #6]
   10c3c:	f36f 0304 	bfc	r3, #0, #5
   10c40:	f88d 3006 	strb.w	r3, [sp, #6]
   10c44:	f89d 3005 	ldrb.w	r3, [sp, #5]
   10c48:	f36f 0305 	bfc	r3, #0, #6
   10c4c:	f88d 3005 	strb.w	r3, [sp, #5]
   10c50:	f89d 3004 	ldrb.w	r3, [sp, #4]
   10c54:	f36f 0305 	bfc	r3, #0, #6
   10c58:	f88d 3004 	strb.w	r3, [sp, #4]
   10c5c:	f7ff ff6a 	bl	10b34 <rtc_settime>
   10c60:	b005      	add	sp, #20
   10c62:	f85d fb04 	ldr.w	pc, [sp], #4
   10c66:	bf00      	nop
   10c68:	40024000 	.word	0x40024000

00010c6c <rtc_get_date_time_str>:
rtc_get_date_time_str():
   10c6c:	b507      	push	{r0, r1, r2, lr}
   10c6e:	a801      	add	r0, sp, #4
   10c70:	f00e ffd4 	bl	1fc1c <time>
   10c74:	a801      	add	r0, sp, #4
   10c76:	f00c f912 	bl	1ce9e <ctime>
   10c7a:	b003      	add	sp, #12
   10c7c:	f85d fb04 	ldr.w	pc, [sp], #4

00010c80 <RIT_IRQHandler>:
RIT_IRQHandler():
   10c80:	b508      	push	{r3, lr}
   10c82:	4b04      	ldr	r3, [pc, #16]	; (10c94 <RIT_IRQHandler+0x14>)
   10c84:	681b      	ldr	r3, [r3, #0]
   10c86:	4798      	blx	r3
   10c88:	4a03      	ldr	r2, [pc, #12]	; (10c98 <RIT_IRQHandler+0x18>)
   10c8a:	7a13      	ldrb	r3, [r2, #8]
   10c8c:	f043 0301 	orr.w	r3, r3, #1
   10c90:	7213      	strb	r3, [r2, #8]
   10c92:	bd08      	pop	{r3, pc}
   10c94:	2007c1d0 	.word	0x2007c1d0
   10c98:	400b0000 	.word	0x400b0000

00010c9c <lpc_timer_get_struct>:
lpc_timer_get_struct():
   10c9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   10c9e:	4604      	mov	r4, r0
   10ca0:	4b05      	ldr	r3, [pc, #20]	; (10cb8 <lpc_timer_get_struct+0x1c>)
   10ca2:	f10d 0e10 	add.w	lr, sp, #16
   10ca6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   10ca8:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
   10cac:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
   10cb0:	f854 0c10 	ldr.w	r0, [r4, #-16]
   10cb4:	b004      	add	sp, #16
   10cb6:	bd10      	pop	{r4, pc}
   10cb8:	00023588 	.word	0x00023588

00010cbc <lpc_timer_enable>:
lpc_timer_enable():
   10cbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
   10cbe:	460e      	mov	r6, r1
   10cc0:	4605      	mov	r5, r0
   10cc2:	f7ff ffeb 	bl	10c9c <lpc_timer_get_struct>
   10cc6:	4604      	mov	r4, r0
   10cc8:	4b0e      	ldr	r3, [pc, #56]	; (10d04 <lpc_timer_enable+0x48>)
   10cca:	2101      	movs	r1, #1
   10ccc:	6818      	ldr	r0, [r3, #0]
   10cce:	ab02      	add	r3, sp, #8
   10cd0:	441d      	add	r5, r3
   10cd2:	9000      	str	r0, [sp, #0]
   10cd4:	9001      	str	r0, [sp, #4]
   10cd6:	f815 0c08 	ldrb.w	r0, [r5, #-8]
   10cda:	f00a fc01 	bl	1b4e0 <lpc_pconp>
   10cde:	2101      	movs	r1, #1
   10ce0:	f815 0c04 	ldrb.w	r0, [r5, #-4]
   10ce4:	f00a fc14 	bl	1b510 <lpc_pclk>
   10ce8:	2300      	movs	r3, #0
   10cea:	2201      	movs	r2, #1
   10cec:	60a3      	str	r3, [r4, #8]
   10cee:	6062      	str	r2, [r4, #4]
   10cf0:	6723      	str	r3, [r4, #112]	; 0x70
   10cf2:	f00a f967 	bl	1afc4 <sys_get_cpu_clock>
   10cf6:	4b04      	ldr	r3, [pc, #16]	; (10d08 <lpc_timer_enable+0x4c>)
   10cf8:	fbb0 f0f3 	udiv	r0, r0, r3
   10cfc:	4346      	muls	r6, r0
   10cfe:	60e6      	str	r6, [r4, #12]
   10d00:	b002      	add	sp, #8
   10d02:	bd70      	pop	{r4, r5, r6, pc}
   10d04:	00023598 	.word	0x00023598
   10d08:	000f4240 	.word	0x000f4240

00010d0c <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
   10d0c:	b510      	push	{r4, lr}
   10d0e:	4604      	mov	r4, r0
   10d10:	4b02      	ldr	r3, [pc, #8]	; (10d1c <Uart2::~Uart2()+0x10>)
   10d12:	6003      	str	r3, [r0, #0]
   10d14:	f7ff fb0e 	bl	10334 <CharDev::~CharDev()>
   10d18:	4620      	mov	r0, r4
   10d1a:	bd10      	pop	{r4, pc}
   10d1c:	00023500 	.word	0x00023500

00010d20 <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   10d20:	b510      	push	{r4, lr}
   10d22:	4604      	mov	r4, r0
   10d24:	f7ff fff2 	bl	10d0c <Uart2::~Uart2()>
   10d28:	4620      	mov	r0, r4
   10d2a:	f000 fc53 	bl	115d4 <operator delete(void*)>
   10d2e:	4620      	mov	r0, r4
   10d30:	bd10      	pop	{r4, pc}
   10d32:	ffff b5f7 	vsli.64	<illegal reg q13.5>, <illegal reg q11.5>, #63	; 0x3f

00010d34 <Uart2::init(unsigned int, int, int)>:
_ZN5Uart24initEjii():
   10d34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10d36:	460d      	mov	r5, r1
   10d38:	490d      	ldr	r1, [pc, #52]	; (10d70 <Uart2::init(unsigned int, int, int)+0x3c>)
   10d3a:	4604      	mov	r4, r0
   10d3c:	6908      	ldr	r0, [r1, #16]
   10d3e:	4616      	mov	r6, r2
   10d40:	f420 2070 	bic.w	r0, r0, #983040	; 0xf0000
   10d44:	6108      	str	r0, [r1, #16]
   10d46:	6908      	ldr	r0, [r1, #16]
   10d48:	461f      	mov	r7, r3
   10d4a:	f440 2020 	orr.w	r0, r0, #655360	; 0xa0000
   10d4e:	6108      	str	r0, [r1, #16]
   10d50:	2101      	movs	r1, #1
   10d52:	2018      	movs	r0, #24
   10d54:	f00a fbdc 	bl	1b510 <lpc_pclk>
   10d58:	f00a f934 	bl	1afc4 <sys_get_cpu_clock>
   10d5c:	9700      	str	r7, [sp, #0]
   10d5e:	4601      	mov	r1, r0
   10d60:	4633      	mov	r3, r6
   10d62:	462a      	mov	r2, r5
   10d64:	4620      	mov	r0, r4
   10d66:	f7ff fc07 	bl	10578 <UartDev::init(unsigned int, unsigned int, int, int)>
   10d6a:	b003      	add	sp, #12
   10d6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   10d6e:	bf00      	nop
   10d70:	4002c000 	.word	0x4002c000

00010d74 <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
   10d74:	b510      	push	{r4, lr}
   10d76:	4604      	mov	r4, r0
   10d78:	4903      	ldr	r1, [pc, #12]	; (10d88 <Uart2::Uart2()+0x14>)
   10d7a:	f7ff fbe9 	bl	10550 <UartDev::UartDev(unsigned int*)>
   10d7e:	4b03      	ldr	r3, [pc, #12]	; (10d8c <Uart2::Uart2()+0x18>)
   10d80:	4620      	mov	r0, r4
   10d82:	6023      	str	r3, [r4, #0]
   10d84:	bd10      	pop	{r4, pc}
   10d86:	bf00      	nop
   10d88:	40098000 	.word	0x40098000
   10d8c:	000235f0 	.word	0x000235f0

00010d90 <UART2_IRQHandler>:
UART2_IRQHandler():
   10d90:	b538      	push	{r3, r4, r5, lr}
   10d92:	4c07      	ldr	r4, [pc, #28]	; (10db0 <UART2_IRQHandler+0x20>)
   10d94:	6823      	ldr	r3, [r4, #0]
   10d96:	b933      	cbnz	r3, 10da6 <UART2_IRQHandler+0x16>
   10d98:	202c      	movs	r0, #44	; 0x2c
   10d9a:	f000 fc19 	bl	115d0 <operator new(unsigned int)>
   10d9e:	4605      	mov	r5, r0
   10da0:	f7ff ffe8 	bl	10d74 <Uart2::Uart2()>
   10da4:	6025      	str	r5, [r4, #0]
   10da6:	6820      	ldr	r0, [r4, #0]
   10da8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   10dac:	f7ff bb74 	b.w	10498 <UartDev::handleInterrupt()>
   10db0:	2007c1d4 	.word	0x2007c1d4

00010db4 <CAN_tx_now>:
CAN_tx_now():
   10db4:	6802      	ldr	r2, [r0, #0]
   10db6:	b530      	push	{r4, r5, lr}
   10db8:	69d3      	ldr	r3, [r2, #28]
   10dba:	f013 0304 	ands.w	r3, r3, #4
   10dbe:	d010      	beq.n	10de2 <CAN_tx_now+0x2e>
   10dc0:	f102 0330 	add.w	r3, r2, #48	; 0x30
   10dc4:	f101 0410 	add.w	r4, r1, #16
   10dc8:	f851 5b04 	ldr.w	r5, [r1], #4
   10dcc:	42a1      	cmp	r1, r4
   10dce:	f843 5b04 	str.w	r5, [r3], #4
   10dd2:	d1f9      	bne.n	10dc8 <CAN_tx_now+0x14>
   10dd4:	8a43      	ldrh	r3, [r0, #18]
   10dd6:	3301      	adds	r3, #1
   10dd8:	8243      	strh	r3, [r0, #18]
   10dda:	2321      	movs	r3, #33	; 0x21
   10ddc:	6053      	str	r3, [r2, #4]
   10dde:	2001      	movs	r0, #1
   10de0:	bd30      	pop	{r4, r5, pc}
   10de2:	4618      	mov	r0, r3
   10de4:	bd30      	pop	{r4, r5, pc}
   10de6:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

00010de8 <CAN_handle_isr>:
CAN_handle_isr():
   10de8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   10dec:	4d25      	ldr	r5, [pc, #148]	; (10e84 <CAN_handle_isr+0x9c>)
   10dee:	0144      	lsls	r4, r0, #5
   10df0:	f855 8004 	ldr.w	r8, [r5, r4]
   10df4:	192f      	adds	r7, r5, r4
   10df6:	f8d8 600c 	ldr.w	r6, [r8, #12]
   10dfa:	f8d8 3008 	ldr.w	r3, [r8, #8]
   10dfe:	4333      	orrs	r3, r6
   10e00:	07d9      	lsls	r1, r3, #31
   10e02:	d519      	bpl.n	10e38 <CAN_handle_isr+0x50>
   10e04:	6878      	ldr	r0, [r7, #4]
   10e06:	f009 ffdc 	bl	1adc2 <uxQueueMessagesWaitingFromISR>
   10e0a:	89fb      	ldrh	r3, [r7, #14]
   10e0c:	f108 0120 	add.w	r1, r8, #32
   10e10:	4298      	cmp	r0, r3
   10e12:	bf88      	it	hi
   10e14:	81f8      	strhhi	r0, [r7, #14]
   10e16:	2300      	movs	r3, #0
   10e18:	192f      	adds	r7, r5, r4
   10e1a:	461a      	mov	r2, r3
   10e1c:	6878      	ldr	r0, [r7, #4]
   10e1e:	f009 fee1 	bl	1abe4 <xQueueGenericSendFromISR>
   10e22:	b118      	cbz	r0, 10e2c <CAN_handle_isr+0x44>
   10e24:	8abb      	ldrh	r3, [r7, #20]
   10e26:	3301      	adds	r3, #1
   10e28:	82bb      	strh	r3, [r7, #20]
   10e2a:	e002      	b.n	10e32 <CAN_handle_isr+0x4a>
   10e2c:	89bb      	ldrh	r3, [r7, #12]
   10e2e:	3301      	adds	r3, #1
   10e30:	81bb      	strh	r3, [r7, #12]
   10e32:	2304      	movs	r3, #4
   10e34:	f8c8 3004 	str.w	r3, [r8, #4]
   10e38:	f240 6302 	movw	r3, #1538	; 0x602
   10e3c:	4033      	ands	r3, r6
   10e3e:	b193      	cbz	r3, 10e66 <CAN_handle_isr+0x7e>
   10e40:	192f      	adds	r7, r5, r4
   10e42:	68b8      	ldr	r0, [r7, #8]
   10e44:	f009 ffbd 	bl	1adc2 <uxQueueMessagesWaitingFromISR>
   10e48:	8a3b      	ldrh	r3, [r7, #16]
   10e4a:	2200      	movs	r2, #0
   10e4c:	4298      	cmp	r0, r3
   10e4e:	bf88      	it	hi
   10e50:	8238      	strhhi	r0, [r7, #16]
   10e52:	192f      	adds	r7, r5, r4
   10e54:	4669      	mov	r1, sp
   10e56:	68b8      	ldr	r0, [r7, #8]
   10e58:	f009 ff81 	bl	1ad5e <xQueueReceiveFromISR>
   10e5c:	b118      	cbz	r0, 10e66 <CAN_handle_isr+0x7e>
   10e5e:	4669      	mov	r1, sp
   10e60:	4638      	mov	r0, r7
   10e62:	f7ff ffa7 	bl	10db4 <CAN_tx_now>
   10e66:	06b2      	lsls	r2, r6, #26
   10e68:	d503      	bpl.n	10e72 <CAN_handle_isr+0x8a>
   10e6a:	192b      	adds	r3, r5, r4
   10e6c:	699b      	ldr	r3, [r3, #24]
   10e6e:	4630      	mov	r0, r6
   10e70:	4798      	blx	r3
   10e72:	0733      	lsls	r3, r6, #28
   10e74:	d503      	bpl.n	10e7e <CAN_handle_isr+0x96>
   10e76:	442c      	add	r4, r5
   10e78:	69e3      	ldr	r3, [r4, #28]
   10e7a:	4630      	mov	r0, r6
   10e7c:	4798      	blx	r3
   10e7e:	b004      	add	sp, #16
   10e80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10e84:	2007c000 	.word	0x2007c000

00010e88 <CAN_IRQHandler>:
CAN_IRQHandler():
   10e88:	4b08      	ldr	r3, [pc, #32]	; (10eac <CAN_IRQHandler+0x24>)
   10e8a:	b510      	push	{r4, lr}
   10e8c:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
   10e90:	04a2      	lsls	r2, r4, #18
   10e92:	d502      	bpl.n	10e9a <CAN_IRQHandler+0x12>
   10e94:	2000      	movs	r0, #0
   10e96:	f7ff ffa7 	bl	10de8 <CAN_handle_isr>
   10e9a:	0463      	lsls	r3, r4, #17
   10e9c:	d504      	bpl.n	10ea8 <CAN_IRQHandler+0x20>
   10e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   10ea2:	2001      	movs	r0, #1
   10ea4:	f7ff bfa0 	b.w	10de8 <CAN_handle_isr>
   10ea8:	bd10      	pop	{r4, pc}
   10eaa:	bf00      	nop
   10eac:	400fc000 	.word	0x400fc000

00010eb0 <ssp1_dma_init>:
ssp1_dma_init():
   10eb0:	b508      	push	{r3, lr}
   10eb2:	2101      	movs	r1, #1
   10eb4:	201d      	movs	r0, #29
   10eb6:	f00a fb13 	bl	1b4e0 <lpc_pconp>
   10eba:	4b03      	ldr	r3, [pc, #12]	; (10ec8 <ssp1_dma_init+0x18>)
   10ebc:	2201      	movs	r2, #1
   10ebe:	631a      	str	r2, [r3, #48]	; 0x30
   10ec0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   10ec2:	07d2      	lsls	r2, r2, #31
   10ec4:	d5fc      	bpl.n	10ec0 <ssp1_dma_init+0x10>
   10ec6:	bd08      	pop	{r3, pc}
   10ec8:	50004000 	.word	0x50004000

00010ecc <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
   10ecc:	b573      	push	{r0, r1, r4, r5, r6, lr}
   10ece:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   10ed2:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
   10ed6:	9301      	str	r3, [sp, #4]
   10ed8:	d24a      	bcs.n	10f70 <ssp1_dma_transfer_block+0xa4>
   10eda:	4b28      	ldr	r3, [pc, #160]	; (10f7c <ssp1_dma_transfer_block+0xb0>)
   10edc:	691c      	ldr	r4, [r3, #16]
   10ede:	07e4      	lsls	r4, r4, #31
   10ee0:	d448      	bmi.n	10f74 <ssp1_dma_transfer_block+0xa8>
   10ee2:	4c27      	ldr	r4, [pc, #156]	; (10f80 <ssp1_dma_transfer_block+0xb4>)
   10ee4:	6924      	ldr	r4, [r4, #16]
   10ee6:	07e6      	lsls	r6, r4, #31
   10ee8:	d444      	bmi.n	10f74 <ssp1_dma_transfer_block+0xa8>
   10eea:	4c26      	ldr	r4, [pc, #152]	; (10f84 <ssp1_dma_transfer_block+0xb8>)
   10eec:	68e5      	ldr	r5, [r4, #12]
   10eee:	076d      	lsls	r5, r5, #29
   10ef0:	d501      	bpl.n	10ef6 <ssp1_dma_transfer_block+0x2a>
   10ef2:	68a5      	ldr	r5, [r4, #8]
   10ef4:	e7fa      	b.n	10eec <ssp1_dma_transfer_block+0x20>
   10ef6:	4c24      	ldr	r4, [pc, #144]	; (10f88 <ssp1_dma_transfer_block+0xbc>)
   10ef8:	2503      	movs	r5, #3
   10efa:	60a5      	str	r5, [r4, #8]
   10efc:	6125      	str	r5, [r4, #16]
   10efe:	4c23      	ldr	r4, [pc, #140]	; (10f8c <ssp1_dma_transfer_block+0xc0>)
   10f00:	4e1e      	ldr	r6, [pc, #120]	; (10f7c <ssp1_dma_transfer_block+0xb0>)
   10f02:	601c      	str	r4, [r3, #0]
   10f04:	4625      	mov	r5, r4
   10f06:	b122      	cbz	r2, 10f12 <ssp1_dma_transfer_block+0x46>
   10f08:	ac01      	add	r4, sp, #4
   10f0a:	6074      	str	r4, [r6, #4]
   10f0c:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
   10f10:	e002      	b.n	10f18 <ssp1_dma_transfer_block+0x4c>
   10f12:	6070      	str	r0, [r6, #4]
   10f14:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   10f18:	60f4      	str	r4, [r6, #12]
   10f1a:	2400      	movs	r4, #0
   10f1c:	609c      	str	r4, [r3, #8]
   10f1e:	f241 0406 	movw	r4, #4102	; 0x1006
   10f22:	611c      	str	r4, [r3, #16]
   10f24:	4c16      	ldr	r4, [pc, #88]	; (10f80 <ssp1_dma_transfer_block+0xb4>)
   10f26:	b11a      	cbz	r2, 10f30 <ssp1_dma_transfer_block+0x64>
   10f28:	6020      	str	r0, [r4, #0]
   10f2a:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
   10f2e:	e001      	b.n	10f34 <ssp1_dma_transfer_block+0x68>
   10f30:	aa01      	add	r2, sp, #4
   10f32:	6022      	str	r2, [r4, #0]
   10f34:	2200      	movs	r2, #0
   10f36:	60e1      	str	r1, [r4, #12]
   10f38:	6065      	str	r5, [r4, #4]
   10f3a:	60a2      	str	r2, [r4, #8]
   10f3c:	f44f 6208 	mov.w	r2, #2176	; 0x880
   10f40:	6122      	str	r2, [r4, #16]
   10f42:	691a      	ldr	r2, [r3, #16]
   10f44:	f042 0201 	orr.w	r2, r2, #1
   10f48:	611a      	str	r2, [r3, #16]
   10f4a:	6922      	ldr	r2, [r4, #16]
   10f4c:	f042 0201 	orr.w	r2, r2, #1
   10f50:	6122      	str	r2, [r4, #16]
   10f52:	4a0c      	ldr	r2, [pc, #48]	; (10f84 <ssp1_dma_transfer_block+0xb8>)
   10f54:	6a51      	ldr	r1, [r2, #36]	; 0x24
   10f56:	f041 0103 	orr.w	r1, r1, #3
   10f5a:	6251      	str	r1, [r2, #36]	; 0x24
   10f5c:	68d8      	ldr	r0, [r3, #12]
   10f5e:	f3c0 000b 	ubfx	r0, r0, #0, #12
   10f62:	2800      	cmp	r0, #0
   10f64:	d1fa      	bne.n	10f5c <ssp1_dma_transfer_block+0x90>
   10f66:	6a53      	ldr	r3, [r2, #36]	; 0x24
   10f68:	f023 0303 	bic.w	r3, r3, #3
   10f6c:	6253      	str	r3, [r2, #36]	; 0x24
   10f6e:	e002      	b.n	10f76 <ssp1_dma_transfer_block+0xaa>
   10f70:	2001      	movs	r0, #1
   10f72:	e000      	b.n	10f76 <ssp1_dma_transfer_block+0xaa>
   10f74:	2002      	movs	r0, #2
   10f76:	b002      	add	sp, #8
   10f78:	bd70      	pop	{r4, r5, r6, pc}
   10f7a:	bf00      	nop
   10f7c:	50004120 	.word	0x50004120
   10f80:	50004100 	.word	0x50004100
   10f84:	40030000 	.word	0x40030000
   10f88:	50004000 	.word	0x50004000
   10f8c:	40030008 	.word	0x40030008

00010f90 <handle_eint_list>:
handle_eint_list():
   10f90:	b570      	push	{r4, r5, r6, lr}
   10f92:	4605      	mov	r5, r0
   10f94:	460e      	mov	r6, r1
   10f96:	4614      	mov	r4, r2
   10f98:	b17c      	cbz	r4, 10fba <handle_eint_list+0x2a>
   10f9a:	682b      	ldr	r3, [r5, #0]
   10f9c:	b16b      	cbz	r3, 10fba <handle_eint_list+0x2a>
   10f9e:	6822      	ldr	r2, [r4, #0]
   10fa0:	4213      	tst	r3, r2
   10fa2:	d008      	beq.n	10fb6 <handle_eint_list+0x26>
   10fa4:	6863      	ldr	r3, [r4, #4]
   10fa6:	4798      	blx	r3
   10fa8:	6822      	ldr	r2, [r4, #0]
   10faa:	682b      	ldr	r3, [r5, #0]
   10fac:	ea23 0302 	bic.w	r3, r3, r2
   10fb0:	602b      	str	r3, [r5, #0]
   10fb2:	6823      	ldr	r3, [r4, #0]
   10fb4:	6033      	str	r3, [r6, #0]
   10fb6:	68a4      	ldr	r4, [r4, #8]
   10fb8:	e7ee      	b.n	10f98 <handle_eint_list+0x8>
   10fba:	bd70      	pop	{r4, r5, r6, pc}

00010fbc <eint3_enable.isra.0>:
eint3_enable.isra.0():
   10fbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10fbe:	2401      	movs	r4, #1
   10fc0:	4084      	lsls	r4, r0
   10fc2:	460f      	mov	r7, r1
   10fc4:	4616      	mov	r6, r2
   10fc6:	461d      	mov	r5, r3
   10fc8:	d010      	beq.n	10fec <eint3_enable.isra.0+0x30>
   10fca:	b179      	cbz	r1, 10fec <eint3_enable.isra.0+0x30>
   10fcc:	200c      	movs	r0, #12
   10fce:	f00c f971 	bl	1d2b4 <malloc>
   10fd2:	b158      	cbz	r0, 10fec <eint3_enable.isra.0+0x30>
   10fd4:	6833      	ldr	r3, [r6, #0]
   10fd6:	682a      	ldr	r2, [r5, #0]
   10fd8:	6083      	str	r3, [r0, #8]
   10fda:	4b05      	ldr	r3, [pc, #20]	; (10ff0 <eint3_enable.isra.0+0x34>)
   10fdc:	e880 0090 	stmia.w	r0, {r4, r7}
   10fe0:	4314      	orrs	r4, r2
   10fe2:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   10fe6:	6030      	str	r0, [r6, #0]
   10fe8:	602c      	str	r4, [r5, #0]
   10fea:	601a      	str	r2, [r3, #0]
   10fec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   10fee:	bf00      	nop
   10ff0:	e000e100 	.word	0xe000e100

00010ff4 <EINT3_IRQHandler>:
EINT3_IRQHandler():
   10ff4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   10ff6:	4c18      	ldr	r4, [pc, #96]	; (11058 <EINT3_IRQHandler+0x64>)
   10ff8:	4918      	ldr	r1, [pc, #96]	; (1105c <EINT3_IRQHandler+0x68>)
   10ffa:	6863      	ldr	r3, [r4, #4]
   10ffc:	4668      	mov	r0, sp
   10ffe:	9300      	str	r3, [sp, #0]
   11000:	68a3      	ldr	r3, [r4, #8]
   11002:	9301      	str	r3, [sp, #4]
   11004:	6a63      	ldr	r3, [r4, #36]	; 0x24
   11006:	9302      	str	r3, [sp, #8]
   11008:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1100a:	9303      	str	r3, [sp, #12]
   1100c:	4b14      	ldr	r3, [pc, #80]	; (11060 <EINT3_IRQHandler+0x6c>)
   1100e:	681a      	ldr	r2, [r3, #0]
   11010:	f7ff ffbe 	bl	10f90 <handle_eint_list>
   11014:	4b13      	ldr	r3, [pc, #76]	; (11064 <EINT3_IRQHandler+0x70>)
   11016:	4911      	ldr	r1, [pc, #68]	; (1105c <EINT3_IRQHandler+0x68>)
   11018:	681a      	ldr	r2, [r3, #0]
   1101a:	a801      	add	r0, sp, #4
   1101c:	f7ff ffb8 	bl	10f90 <handle_eint_list>
   11020:	4b11      	ldr	r3, [pc, #68]	; (11068 <EINT3_IRQHandler+0x74>)
   11022:	4912      	ldr	r1, [pc, #72]	; (1106c <EINT3_IRQHandler+0x78>)
   11024:	681a      	ldr	r2, [r3, #0]
   11026:	a802      	add	r0, sp, #8
   11028:	f7ff ffb2 	bl	10f90 <handle_eint_list>
   1102c:	4b10      	ldr	r3, [pc, #64]	; (11070 <EINT3_IRQHandler+0x7c>)
   1102e:	490f      	ldr	r1, [pc, #60]	; (1106c <EINT3_IRQHandler+0x78>)
   11030:	681a      	ldr	r2, [r3, #0]
   11032:	a803      	add	r0, sp, #12
   11034:	f7ff ffac 	bl	10f90 <handle_eint_list>
   11038:	9b00      	ldr	r3, [sp, #0]
   1103a:	b90b      	cbnz	r3, 11040 <EINT3_IRQHandler+0x4c>
   1103c:	9b01      	ldr	r3, [sp, #4]
   1103e:	b113      	cbz	r3, 11046 <EINT3_IRQHandler+0x52>
   11040:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11044:	60e3      	str	r3, [r4, #12]
   11046:	9b02      	ldr	r3, [sp, #8]
   11048:	b90b      	cbnz	r3, 1104e <EINT3_IRQHandler+0x5a>
   1104a:	9b03      	ldr	r3, [sp, #12]
   1104c:	b113      	cbz	r3, 11054 <EINT3_IRQHandler+0x60>
   1104e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11052:	62e3      	str	r3, [r4, #44]	; 0x2c
   11054:	b004      	add	sp, #16
   11056:	bd10      	pop	{r4, pc}
   11058:	40028080 	.word	0x40028080
   1105c:	4002808c 	.word	0x4002808c
   11060:	2007c1e0 	.word	0x2007c1e0
   11064:	2007c1e4 	.word	0x2007c1e4
   11068:	2007c1d8 	.word	0x2007c1d8
   1106c:	400280ac 	.word	0x400280ac
   11070:	2007c1dc 	.word	0x2007c1dc

00011074 <eint3_enable_port0>:
eint3_enable_port0():
   11074:	b410      	push	{r4}
   11076:	4614      	mov	r4, r2
   11078:	2900      	cmp	r1, #0
   1107a:	4a06      	ldr	r2, [pc, #24]	; (11094 <eint3_enable_port0+0x20>)
   1107c:	4906      	ldr	r1, [pc, #24]	; (11098 <eint3_enable_port0+0x24>)
   1107e:	4b07      	ldr	r3, [pc, #28]	; (1109c <eint3_enable_port0+0x28>)
   11080:	bf18      	it	ne
   11082:	4613      	movne	r3, r2
   11084:	4a06      	ldr	r2, [pc, #24]	; (110a0 <eint3_enable_port0+0x2c>)
   11086:	bf18      	it	ne
   11088:	460a      	movne	r2, r1
   1108a:	4621      	mov	r1, r4
   1108c:	bc10      	pop	{r4}
   1108e:	f7ff bf95 	b.w	10fbc <eint3_enable.isra.0>
   11092:	bf00      	nop
   11094:	40028094 	.word	0x40028094
   11098:	2007c1e4 	.word	0x2007c1e4
   1109c:	40028090 	.word	0x40028090
   110a0:	2007c1e0 	.word	0x2007c1e0

000110a4 <adc0_start_conversion>:
adc0_start_conversion():
   110a4:	4a07      	ldr	r2, [pc, #28]	; (110c4 <adc0_start_conversion+0x20>)
   110a6:	2101      	movs	r1, #1
   110a8:	6813      	ldr	r3, [r2, #0]
   110aa:	fa01 f000 	lsl.w	r0, r1, r0
   110ae:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   110b2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   110b6:	6013      	str	r3, [r2, #0]
   110b8:	6813      	ldr	r3, [r2, #0]
   110ba:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
   110be:	4303      	orrs	r3, r0
   110c0:	6013      	str	r3, [r2, #0]
   110c2:	4770      	bx	lr
   110c4:	40034000 	.word	0x40034000

000110c8 <ADC_IRQHandler>:
ADC_IRQHandler():
   110c8:	b507      	push	{r0, r1, r2, lr}
   110ca:	2300      	movs	r3, #0
   110cc:	4a0b      	ldr	r2, [pc, #44]	; (110fc <ADC_IRQHandler+0x34>)
   110ce:	9301      	str	r3, [sp, #4]
   110d0:	6852      	ldr	r2, [r2, #4]
   110d2:	480b      	ldr	r0, [pc, #44]	; (11100 <ADC_IRQHandler+0x38>)
   110d4:	f3c2 120b 	ubfx	r2, r2, #4, #12
   110d8:	f8ad 2002 	strh.w	r2, [sp, #2]
   110dc:	f10d 0102 	add.w	r1, sp, #2
   110e0:	aa01      	add	r2, sp, #4
   110e2:	6800      	ldr	r0, [r0, #0]
   110e4:	f009 fd7e 	bl	1abe4 <xQueueGenericSendFromISR>
   110e8:	9b01      	ldr	r3, [sp, #4]
   110ea:	b11b      	cbz	r3, 110f4 <ADC_IRQHandler+0x2c>
   110ec:	4b05      	ldr	r3, [pc, #20]	; (11104 <ADC_IRQHandler+0x3c>)
   110ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   110f2:	601a      	str	r2, [r3, #0]
   110f4:	b003      	add	sp, #12
   110f6:	f85d fb04 	ldr.w	pc, [sp], #4
   110fa:	bf00      	nop
   110fc:	40034000 	.word	0x40034000
   11100:	2007c1e8 	.word	0x2007c1e8
   11104:	e000ed04 	.word	0xe000ed04

00011108 <adc0_init>:
adc0_init():
   11108:	b510      	push	{r4, lr}
   1110a:	f009 ff5b 	bl	1afc4 <sys_get_cpu_clock>
   1110e:	2101      	movs	r1, #1
   11110:	08c4      	lsrs	r4, r0, #3
   11112:	200c      	movs	r0, #12
   11114:	f00a f9e4 	bl	1b4e0 <lpc_pconp>
   11118:	2103      	movs	r1, #3
   1111a:	200c      	movs	r0, #12
   1111c:	f00a f9f8 	bl	1b510 <lpc_pclk>
   11120:	4a11      	ldr	r2, [pc, #68]	; (11168 <adc0_init+0x60>)
   11122:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   11126:	4911      	ldr	r1, [pc, #68]	; (1116c <adc0_init+0x64>)
   11128:	6013      	str	r3, [r2, #0]
   1112a:	2302      	movs	r3, #2
   1112c:	fbb4 f0f3 	udiv	r0, r4, r3
   11130:	4288      	cmp	r0, r1
   11132:	d804      	bhi.n	1113e <adc0_init+0x36>
   11134:	6811      	ldr	r1, [r2, #0]
   11136:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   1113a:	6013      	str	r3, [r2, #0]
   1113c:	e003      	b.n	11146 <adc0_init+0x3e>
   1113e:	3302      	adds	r3, #2
   11140:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   11144:	d1f2      	bne.n	1112c <adc0_init+0x24>
   11146:	2001      	movs	r0, #1
   11148:	f009 fd26 	bl	1ab98 <xQueueCreateMutex>
   1114c:	4b08      	ldr	r3, [pc, #32]	; (11170 <adc0_init+0x68>)
   1114e:	2200      	movs	r2, #0
   11150:	6018      	str	r0, [r3, #0]
   11152:	2102      	movs	r1, #2
   11154:	2001      	movs	r0, #1
   11156:	f009 fc78 	bl	1aa4a <xQueueGenericCreate>
   1115a:	4b06      	ldr	r3, [pc, #24]	; (11174 <adc0_init+0x6c>)
   1115c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   11160:	6018      	str	r0, [r3, #0]
   11162:	4b05      	ldr	r3, [pc, #20]	; (11178 <adc0_init+0x70>)
   11164:	601a      	str	r2, [r3, #0]
   11166:	bd10      	pop	{r4, pc}
   11168:	40034000 	.word	0x40034000
   1116c:	00c65d3f 	.word	0x00c65d3f
   11170:	2007c1ec 	.word	0x2007c1ec
   11174:	2007c1e8 	.word	0x2007c1e8
   11178:	e000e100 	.word	0xe000e100

0001117c <adc0_get_reading>:
adc0_get_reading():
   1117c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1117e:	2807      	cmp	r0, #7
   11180:	f04f 0400 	mov.w	r4, #0
   11184:	4605      	mov	r5, r0
   11186:	f8ad 4006 	strh.w	r4, [sp, #6]
   1118a:	d82a      	bhi.n	111e2 <adc0_get_reading+0x66>
   1118c:	f009 fa3e 	bl	1a60c <xTaskGetSchedulerState>
   11190:	2802      	cmp	r0, #2
   11192:	4e16      	ldr	r6, [pc, #88]	; (111ec <adc0_get_reading+0x70>)
   11194:	d119      	bne.n	111ca <adc0_get_reading+0x4e>
   11196:	4f16      	ldr	r7, [pc, #88]	; (111f0 <adc0_get_reading+0x74>)
   11198:	4623      	mov	r3, r4
   1119a:	4621      	mov	r1, r4
   1119c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   111a0:	6838      	ldr	r0, [r7, #0]
   111a2:	f009 fd5a 	bl	1ac5a <xQueueGenericReceive>
   111a6:	4628      	mov	r0, r5
   111a8:	f7ff ff7c 	bl	110a4 <adc0_start_conversion>
   111ac:	4623      	mov	r3, r4
   111ae:	f10d 0106 	add.w	r1, sp, #6
   111b2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   111b6:	6830      	ldr	r0, [r6, #0]
   111b8:	f009 fd4f 	bl	1ac5a <xQueueGenericReceive>
   111bc:	4623      	mov	r3, r4
   111be:	4622      	mov	r2, r4
   111c0:	4621      	mov	r1, r4
   111c2:	6838      	ldr	r0, [r7, #0]
   111c4:	f009 fc72 	bl	1aaac <xQueueGenericSend>
   111c8:	e00b      	b.n	111e2 <adc0_get_reading+0x66>
   111ca:	4628      	mov	r0, r5
   111cc:	f7ff ff6a 	bl	110a4 <adc0_start_conversion>
   111d0:	2300      	movs	r3, #0
   111d2:	461a      	mov	r2, r3
   111d4:	f10d 0106 	add.w	r1, sp, #6
   111d8:	6830      	ldr	r0, [r6, #0]
   111da:	f009 fd3e 	bl	1ac5a <xQueueGenericReceive>
   111de:	2800      	cmp	r0, #0
   111e0:	d0f6      	beq.n	111d0 <adc0_get_reading+0x54>
   111e2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   111e6:	b003      	add	sp, #12
   111e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   111ea:	bf00      	nop
   111ec:	2007c1e8 	.word	0x2007c1e8
   111f0:	2007c1ec 	.word	0x2007c1ec

000111f4 <Uart3::~Uart3()>:
_ZN5Uart3D1Ev():
   111f4:	b510      	push	{r4, lr}
   111f6:	4604      	mov	r4, r0
   111f8:	4b02      	ldr	r3, [pc, #8]	; (11204 <Uart3::~Uart3()+0x10>)
   111fa:	6003      	str	r3, [r0, #0]
   111fc:	f7ff f89a 	bl	10334 <CharDev::~CharDev()>
   11200:	4620      	mov	r0, r4
   11202:	bd10      	pop	{r4, pc}
   11204:	00023500 	.word	0x00023500

00011208 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   11208:	b510      	push	{r4, lr}
   1120a:	4604      	mov	r4, r0
   1120c:	f7ff fff2 	bl	111f4 <Uart3::~Uart3()>
   11210:	4620      	mov	r0, r4
   11212:	f000 f9df 	bl	115d4 <operator delete(void*)>
   11216:	4620      	mov	r0, r4
   11218:	bd10      	pop	{r4, pc}
   1121a:	ffff b5f7 	vsli.64	<illegal reg q13.5>, <illegal reg q11.5>, #63	; 0x3f

0001121c <Uart3::init(unsigned int, int, int)>:
_ZN5Uart34initEjii():
   1121c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1121e:	460d      	mov	r5, r1
   11220:	490d      	ldr	r1, [pc, #52]	; (11258 <Uart3::init(unsigned int, int, int)+0x3c>)
   11222:	4604      	mov	r4, r0
   11224:	6a48      	ldr	r0, [r1, #36]	; 0x24
   11226:	4616      	mov	r6, r2
   11228:	f020 6070 	bic.w	r0, r0, #251658240	; 0xf000000
   1122c:	6248      	str	r0, [r1, #36]	; 0x24
   1122e:	6a48      	ldr	r0, [r1, #36]	; 0x24
   11230:	461f      	mov	r7, r3
   11232:	f040 6070 	orr.w	r0, r0, #251658240	; 0xf000000
   11236:	6248      	str	r0, [r1, #36]	; 0x24
   11238:	2101      	movs	r1, #1
   1123a:	2019      	movs	r0, #25
   1123c:	f00a f968 	bl	1b510 <lpc_pclk>
   11240:	f009 fec0 	bl	1afc4 <sys_get_cpu_clock>
   11244:	9700      	str	r7, [sp, #0]
   11246:	4601      	mov	r1, r0
   11248:	4633      	mov	r3, r6
   1124a:	462a      	mov	r2, r5
   1124c:	4620      	mov	r0, r4
   1124e:	f7ff f993 	bl	10578 <UartDev::init(unsigned int, unsigned int, int, int)>
   11252:	b003      	add	sp, #12
   11254:	bdf0      	pop	{r4, r5, r6, r7, pc}
   11256:	bf00      	nop
   11258:	4002c000 	.word	0x4002c000

0001125c <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
   1125c:	b510      	push	{r4, lr}
   1125e:	4604      	mov	r4, r0
   11260:	4903      	ldr	r1, [pc, #12]	; (11270 <Uart3::Uart3()+0x14>)
   11262:	f7ff f975 	bl	10550 <UartDev::UartDev(unsigned int*)>
   11266:	4b03      	ldr	r3, [pc, #12]	; (11274 <Uart3::Uart3()+0x18>)
   11268:	4620      	mov	r0, r4
   1126a:	6023      	str	r3, [r4, #0]
   1126c:	bd10      	pop	{r4, pc}
   1126e:	bf00      	nop
   11270:	4009c000 	.word	0x4009c000
   11274:	00023658 	.word	0x00023658

00011278 <UART3_IRQHandler>:
UART3_IRQHandler():
   11278:	b538      	push	{r3, r4, r5, lr}
   1127a:	4c07      	ldr	r4, [pc, #28]	; (11298 <UART3_IRQHandler+0x20>)
   1127c:	6823      	ldr	r3, [r4, #0]
   1127e:	b933      	cbnz	r3, 1128e <UART3_IRQHandler+0x16>
   11280:	202c      	movs	r0, #44	; 0x2c
   11282:	f000 f9a5 	bl	115d0 <operator new(unsigned int)>
   11286:	4605      	mov	r5, r0
   11288:	f7ff ffe8 	bl	1125c <Uart3::Uart3()>
   1128c:	6025      	str	r5, [r4, #0]
   1128e:	6820      	ldr	r0, [r4, #0]
   11290:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   11294:	f7ff b900 	b.w	10498 <UartDev::handleInterrupt()>
   11298:	2007c1f0 	.word	0x2007c1f0

0001129c <NordicStream::flush()>:
_ZN12NordicStream5flushEv():
   1129c:	b570      	push	{r4, r5, r6, lr}
   1129e:	f890 5053 	ldrb.w	r5, [r0, #83]	; 0x53
   112a2:	b08a      	sub	sp, #40	; 0x28
   112a4:	4604      	mov	r4, r0
   112a6:	b905      	cbnz	r5, 112aa <NordicStream::flush()+0xe>
   112a8:	7c45      	ldrb	r5, [r0, #17]
   112aa:	4628      	mov	r0, r5
   112ac:	f001 fab0 	bl	12810 <mesh_get_max_timeout_before_packet_fails>
   112b0:	2200      	movs	r2, #0
   112b2:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
   112b6:	f884 2052 	strb.w	r2, [r4, #82]	; 0x52
   112ba:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
   112be:	4606      	mov	r6, r0
   112c0:	9200      	str	r2, [sp, #0]
   112c2:	2101      	movs	r1, #1
   112c4:	f104 023a 	add.w	r2, r4, #58	; 0x3a
   112c8:	4628      	mov	r0, r5
   112ca:	f001 f8d5 	bl	12478 <mesh_send>
   112ce:	4604      	mov	r4, r0
   112d0:	b170      	cbz	r0, 112f0 <NordicStream::flush()+0x54>
   112d2:	4631      	mov	r1, r6
   112d4:	a802      	add	r0, sp, #8
   112d6:	f000 fb1d 	bl	11914 <wireless_get_ack_pkt>
   112da:	b148      	cbz	r0, 112f0 <NordicStream::flush()+0x54>
   112dc:	f89d 300c 	ldrb.w	r3, [sp, #12]
   112e0:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   112e4:	2bc0      	cmp	r3, #192	; 0xc0
   112e6:	d103      	bne.n	112f0 <NordicStream::flush()+0x54>
   112e8:	f89d 3008 	ldrb.w	r3, [sp, #8]
   112ec:	42ab      	cmp	r3, r5
   112ee:	d000      	beq.n	112f2 <NordicStream::flush()+0x56>
   112f0:	2400      	movs	r4, #0
   112f2:	4620      	mov	r0, r4
   112f4:	b00a      	add	sp, #40	; 0x28
   112f6:	bd70      	pop	{r4, r5, r6, pc}

000112f8 <NordicStream::~NordicStream()>:
_ZN12NordicStreamD2Ev():
   112f8:	b510      	push	{r4, lr}
   112fa:	4604      	mov	r4, r0
   112fc:	4b02      	ldr	r3, [pc, #8]	; (11308 <NordicStream::~NordicStream()+0x10>)
   112fe:	6003      	str	r3, [r0, #0]
   11300:	f7ff f818 	bl	10334 <CharDev::~CharDev()>
   11304:	4620      	mov	r0, r4
   11306:	bd10      	pop	{r4, pc}
   11308:	000236b0 	.word	0x000236b0

0001130c <NordicStream::~NordicStream()>:
_ZN12NordicStreamD0Ev():
   1130c:	b510      	push	{r4, lr}
   1130e:	4604      	mov	r4, r0
   11310:	f7ff fff2 	bl	112f8 <NordicStream::~NordicStream()>
   11314:	4620      	mov	r0, r4
   11316:	f000 f95d 	bl	115d4 <operator delete(void*)>
   1131a:	4620      	mov	r0, r4
   1131c:	bd10      	pop	{r4, pc}

0001131e <NordicStream::getChar(char*, unsigned int)>:
_ZN12NordicStream7getCharEPcj():
   1131e:	b570      	push	{r4, r5, r6, lr}
   11320:	460e      	mov	r6, r1
   11322:	7e03      	ldrb	r3, [r0, #24]
   11324:	f890 1031 	ldrb.w	r1, [r0, #49]	; 0x31
   11328:	4604      	mov	r4, r0
   1132a:	4299      	cmp	r1, r3
   1132c:	bf34      	ite	cc
   1132e:	2501      	movcc	r5, #1
   11330:	2500      	movcs	r5, #0
   11332:	d30b      	bcc.n	1134c <NordicStream::getChar(char*, unsigned int)+0x2e>
   11334:	4611      	mov	r1, r2
   11336:	3011      	adds	r0, #17
   11338:	f000 fae4 	bl	11904 <wireless_get_rx_pkt>
   1133c:	b130      	cbz	r0, 1134c <NordicStream::getChar(char*, unsigned int)+0x2e>
   1133e:	7e25      	ldrb	r5, [r4, #24]
   11340:	2300      	movs	r3, #0
   11342:	1aed      	subs	r5, r5, r3
   11344:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
   11348:	bf18      	it	ne
   1134a:	2501      	movne	r5, #1
   1134c:	b13d      	cbz	r5, 1135e <NordicStream::getChar(char*, unsigned int)+0x40>
   1134e:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   11352:	1c5a      	adds	r2, r3, #1
   11354:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   11358:	441c      	add	r4, r3
   1135a:	7e63      	ldrb	r3, [r4, #25]
   1135c:	7033      	strb	r3, [r6, #0]
   1135e:	4628      	mov	r0, r5
   11360:	bd70      	pop	{r4, r5, r6, pc}

00011362 <NordicStream::putChar(char, unsigned int)>:
_ZN12NordicStream7putCharEcj():
   11362:	b510      	push	{r4, lr}
   11364:	f890 4052 	ldrb.w	r4, [r0, #82]	; 0x52
   11368:	1c62      	adds	r2, r4, #1
   1136a:	b2d2      	uxtb	r2, r2
   1136c:	4404      	add	r4, r0
   1136e:	2a17      	cmp	r2, #23
   11370:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
   11374:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
   11378:	d902      	bls.n	11380 <NordicStream::putChar(char, unsigned int)+0x1e>
   1137a:	6803      	ldr	r3, [r0, #0]
   1137c:	689b      	ldr	r3, [r3, #8]
   1137e:	4798      	blx	r3
   11380:	2001      	movs	r0, #1
   11382:	bd10      	pop	{r4, pc}

00011384 <NordicStream::NordicStream()>:
_ZN12NordicStreamC1Ev():
   11384:	b570      	push	{r4, r5, r6, lr}
   11386:	4604      	mov	r4, r0
   11388:	f7fe ffc4 	bl	10314 <CharDev::CharDev()>
   1138c:	4b0c      	ldr	r3, [pc, #48]	; (113c0 <NordicStream::NordicStream()+0x3c>)
   1138e:	2500      	movs	r5, #0
   11390:	6023      	str	r3, [r4, #0]
   11392:	2621      	movs	r6, #33	; 0x21
   11394:	2303      	movs	r3, #3
   11396:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
   1139a:	4632      	mov	r2, r6
   1139c:	4629      	mov	r1, r5
   1139e:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
   113a2:	f104 0011 	add.w	r0, r4, #17
   113a6:	f00b ffd8 	bl	1d35a <memset>
   113aa:	4632      	mov	r2, r6
   113ac:	4629      	mov	r1, r5
   113ae:	f104 0032 	add.w	r0, r4, #50	; 0x32
   113b2:	f00b ffd2 	bl	1d35a <memset>
   113b6:	2007      	movs	r0, #7
   113b8:	f000 ff2c 	bl	12214 <mesh_set_retry_count>
   113bc:	4620      	mov	r0, r4
   113be:	bd70      	pop	{r4, r5, r6, pc}
   113c0:	000236b0 	.word	0x000236b0

000113c4 <spi1_lock>:
spi1_lock():
   113c4:	b510      	push	{r4, lr}
   113c6:	4c0a      	ldr	r4, [pc, #40]	; (113f0 <spi1_lock+0x2c>)
   113c8:	6823      	ldr	r3, [r4, #0]
   113ca:	b91b      	cbnz	r3, 113d4 <spi1_lock+0x10>
   113cc:	2001      	movs	r0, #1
   113ce:	f009 fbe3 	bl	1ab98 <xQueueCreateMutex>
   113d2:	6020      	str	r0, [r4, #0]
   113d4:	f009 f91a 	bl	1a60c <xTaskGetSchedulerState>
   113d8:	2802      	cmp	r0, #2
   113da:	d108      	bne.n	113ee <spi1_lock+0x2a>
   113dc:	2300      	movs	r3, #0
   113de:	6820      	ldr	r0, [r4, #0]
   113e0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   113e4:	4619      	mov	r1, r3
   113e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   113ea:	f009 bc36 	b.w	1ac5a <xQueueGenericReceive>
   113ee:	bd10      	pop	{r4, pc}
   113f0:	2007c1f4 	.word	0x2007c1f4

000113f4 <spi1_unlock>:
spi1_unlock():
   113f4:	b510      	push	{r4, lr}
   113f6:	f009 f909 	bl	1a60c <xTaskGetSchedulerState>
   113fa:	2802      	cmp	r0, #2
   113fc:	d108      	bne.n	11410 <spi1_unlock+0x1c>
   113fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   11402:	4804      	ldr	r0, [pc, #16]	; (11414 <spi1_unlock+0x20>)
   11404:	2300      	movs	r3, #0
   11406:	461a      	mov	r2, r3
   11408:	4619      	mov	r1, r3
   1140a:	6800      	ldr	r0, [r0, #0]
   1140c:	f009 bb4e 	b.w	1aaac <xQueueGenericSend>
   11410:	bd10      	pop	{r4, pc}
   11412:	bf00      	nop
   11414:	2007c1f4 	.word	0x2007c1f4

00011418 <_gettimeofday>:
_gettimeofday():
   11418:	b530      	push	{r4, r5, lr}
   1141a:	4604      	mov	r4, r0
   1141c:	b08d      	sub	sp, #52	; 0x34
   1141e:	b3a8      	cbz	r0, 1148c <_gettimeofday+0x74>
   11420:	4668      	mov	r0, sp
   11422:	f7ff fb5f 	bl	10ae4 <rtc_gettime>
   11426:	f89d 3000 	ldrb.w	r3, [sp]
   1142a:	2500      	movs	r5, #0
   1142c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   11430:	9303      	str	r3, [sp, #12]
   11432:	f89d 3001 	ldrb.w	r3, [sp, #1]
   11436:	a803      	add	r0, sp, #12
   11438:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1143c:	9304      	str	r3, [sp, #16]
   1143e:	f89d 3002 	ldrb.w	r3, [sp, #2]
   11442:	950b      	str	r5, [sp, #44]	; 0x2c
   11444:	f003 031f 	and.w	r3, r3, #31
   11448:	9305      	str	r3, [sp, #20]
   1144a:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1144e:	f003 031f 	and.w	r3, r3, #31
   11452:	9306      	str	r3, [sp, #24]
   11454:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11458:	f003 030f 	and.w	r3, r3, #15
   1145c:	3b01      	subs	r3, #1
   1145e:	9307      	str	r3, [sp, #28]
   11460:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   11464:	f3c3 030b 	ubfx	r3, r3, #0, #12
   11468:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   1146c:	9308      	str	r3, [sp, #32]
   1146e:	f89d 3003 	ldrb.w	r3, [sp, #3]
   11472:	f003 0307 	and.w	r3, r3, #7
   11476:	9309      	str	r3, [sp, #36]	; 0x24
   11478:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   1147c:	f3c3 030b 	ubfx	r3, r3, #0, #12
   11480:	3b01      	subs	r3, #1
   11482:	930a      	str	r3, [sp, #40]	; 0x28
   11484:	f00c f84e 	bl	1d524 <mktime>
   11488:	e884 0021 	stmia.w	r4, {r0, r5}
   1148c:	2000      	movs	r0, #0
   1148e:	b00d      	add	sp, #52	; 0x34
   11490:	bd30      	pop	{r4, r5, pc}
   11492:	ffff 4b01 	vtbl.8	d20, {d15-d18}, d1

00011494 <sys_set_outchar_func>:
sys_set_outchar_func():
   11494:	4b01      	ldr	r3, [pc, #4]	; (1149c <sys_set_outchar_func+0x8>)
   11496:	6018      	str	r0, [r3, #0]
   11498:	4770      	bx	lr
   1149a:	bf00      	nop
   1149c:	2007c1fc 	.word	0x2007c1fc

000114a0 <sys_set_inchar_func>:
sys_set_inchar_func():
   114a0:	4b01      	ldr	r3, [pc, #4]	; (114a8 <sys_set_inchar_func+0x8>)
   114a2:	6018      	str	r0, [r3, #0]
   114a4:	4770      	bx	lr
   114a6:	bf00      	nop
   114a8:	2007c1f8 	.word	0x2007c1f8

000114ac <_kill>:
_kill():
   114ac:	b508      	push	{r3, lr}
   114ae:	4802      	ldr	r0, [pc, #8]	; (114b8 <_kill+0xc>)
   114b0:	f00d f952 	bl	1e758 <puts>
   114b4:	e7fe      	b.n	114b4 <_kill+0x8>
   114b6:	bf00      	nop
   114b8:	000236e4 	.word	0x000236e4

000114bc <_exit>:
_exit():
   114bc:	b508      	push	{r3, lr}
   114be:	4802      	ldr	r0, [pc, #8]	; (114c8 <_exit+0xc>)
   114c0:	f00d f94a 	bl	1e758 <puts>
   114c4:	e7fe      	b.n	114c4 <_exit+0x8>
   114c6:	bf00      	nop
   114c8:	000236fe 	.word	0x000236fe

000114cc <_getpid>:
_getpid():
   114cc:	2000      	movs	r0, #0
   114ce:	4770      	bx	lr

000114d0 <_init>:
_init():
   114d0:	2001      	movs	r0, #1
   114d2:	4770      	bx	lr

000114d4 <_write>:
_write():
   114d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   114d6:	4b08      	ldr	r3, [pc, #32]	; (114f8 <_write+0x24>)
   114d8:	4616      	mov	r6, r2
   114da:	681a      	ldr	r2, [r3, #0]
   114dc:	460f      	mov	r7, r1
   114de:	461c      	mov	r4, r3
   114e0:	b142      	cbz	r2, 114f4 <_write+0x20>
   114e2:	460d      	mov	r5, r1
   114e4:	1beb      	subs	r3, r5, r7
   114e6:	429e      	cmp	r6, r3
   114e8:	dd04      	ble.n	114f4 <_write+0x20>
   114ea:	6823      	ldr	r3, [r4, #0]
   114ec:	f815 0b01 	ldrb.w	r0, [r5], #1
   114f0:	4798      	blx	r3
   114f2:	e7f7      	b.n	114e4 <_write+0x10>
   114f4:	4630      	mov	r0, r6
   114f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   114f8:	2007c1fc 	.word	0x2007c1fc

000114fc <_read>:
_read():
   114fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   114fe:	4b09      	ldr	r3, [pc, #36]	; (11524 <_read+0x28>)
   11500:	460f      	mov	r7, r1
   11502:	6818      	ldr	r0, [r3, #0]
   11504:	4616      	mov	r6, r2
   11506:	461c      	mov	r4, r3
   11508:	b158      	cbz	r0, 11522 <_read+0x26>
   1150a:	460d      	mov	r5, r1
   1150c:	1beb      	subs	r3, r5, r7
   1150e:	429e      	cmp	r6, r3
   11510:	dd05      	ble.n	1151e <_read+0x22>
   11512:	6823      	ldr	r3, [r4, #0]
   11514:	2000      	movs	r0, #0
   11516:	4798      	blx	r3
   11518:	f805 0b01 	strb.w	r0, [r5], #1
   1151c:	e7f6      	b.n	1150c <_read+0x10>
   1151e:	ea26 70e6 	bic.w	r0, r6, r6, asr #31
   11522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   11524:	2007c1f8 	.word	0x2007c1f8

00011528 <syscalls_init>:
syscalls_init():
   11528:	4770      	bx	lr

0001152a <_fstat>:
_fstat():
   1152a:	2000      	movs	r0, #0
   1152c:	4770      	bx	lr
   1152e:	ffff 4b07 	vtbl.8	d20, {d15-d18}, d7

00011530 <_isatty>:
_isatty():
   11530:	4b07      	ldr	r3, [pc, #28]	; (11550 <_isatty+0x20>)
   11532:	681b      	ldr	r3, [r3, #0]
   11534:	689a      	ldr	r2, [r3, #8]
   11536:	4282      	cmp	r2, r0
   11538:	d007      	beq.n	1154a <_isatty+0x1a>
   1153a:	685a      	ldr	r2, [r3, #4]
   1153c:	4282      	cmp	r2, r0
   1153e:	d004      	beq.n	1154a <_isatty+0x1a>
   11540:	68db      	ldr	r3, [r3, #12]
   11542:	1a1b      	subs	r3, r3, r0
   11544:	4258      	negs	r0, r3
   11546:	4158      	adcs	r0, r3
   11548:	4770      	bx	lr
   1154a:	2001      	movs	r0, #1
   1154c:	4770      	bx	lr
   1154e:	bf00      	nop
   11550:	2007c140 	.word	0x2007c140

00011554 <_lseek>:
_lseek():
   11554:	2000      	movs	r0, #0
   11556:	4770      	bx	lr

00011558 <_close>:
_close():
   11558:	2000      	movs	r0, #0
   1155a:	4770      	bx	lr

0001155c <_sbrk>:
_sbrk():
   1155c:	4b14      	ldr	r3, [pc, #80]	; (115b0 <_sbrk+0x54>)
   1155e:	b510      	push	{r4, lr}
   11560:	681a      	ldr	r2, [r3, #0]
   11562:	4601      	mov	r1, r0
   11564:	b912      	cbnz	r2, 1156c <_sbrk+0x10>
   11566:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1156a:	601a      	str	r2, [r3, #0]
   1156c:	4c11      	ldr	r4, [pc, #68]	; (115b4 <_sbrk+0x58>)
   1156e:	6818      	ldr	r0, [r3, #0]
   11570:	6824      	ldr	r4, [r4, #0]
   11572:	1842      	adds	r2, r0, r1
   11574:	4294      	cmp	r4, r2
   11576:	601a      	str	r2, [r3, #0]
   11578:	d207      	bcs.n	1158a <_sbrk+0x2e>
   1157a:	4c0f      	ldr	r4, [pc, #60]	; (115b8 <_sbrk+0x5c>)
   1157c:	42a2      	cmp	r2, r4
   1157e:	d804      	bhi.n	1158a <_sbrk+0x2e>
   11580:	4a0e      	ldr	r2, [pc, #56]	; (115bc <_sbrk+0x60>)
   11582:	480b      	ldr	r0, [pc, #44]	; (115b0 <_sbrk+0x54>)
   11584:	188c      	adds	r4, r1, r2
   11586:	6004      	str	r4, [r0, #0]
   11588:	4610      	mov	r0, r2
   1158a:	4a0d      	ldr	r2, [pc, #52]	; (115c0 <_sbrk+0x64>)
   1158c:	681b      	ldr	r3, [r3, #0]
   1158e:	6812      	ldr	r2, [r2, #0]
   11590:	4293      	cmp	r3, r2
   11592:	bf22      	ittt	cs
   11594:	4b06      	ldrcs	r3, [pc, #24]	; (115b0 <_sbrk+0x54>)
   11596:	2000      	movcs	r0, #0
   11598:	601a      	strcs	r2, [r3, #0]
   1159a:	b139      	cbz	r1, 115ac <_sbrk+0x50>
   1159c:	4a09      	ldr	r2, [pc, #36]	; (115c4 <_sbrk+0x68>)
   1159e:	6813      	ldr	r3, [r2, #0]
   115a0:	3301      	adds	r3, #1
   115a2:	6013      	str	r3, [r2, #0]
   115a4:	4b08      	ldr	r3, [pc, #32]	; (115c8 <_sbrk+0x6c>)
   115a6:	6018      	str	r0, [r3, #0]
   115a8:	4b08      	ldr	r3, [pc, #32]	; (115cc <_sbrk+0x70>)
   115aa:	6019      	str	r1, [r3, #0]
   115ac:	bd10      	pop	{r4, pc}
   115ae:	bf00      	nop
   115b0:	2007c204 	.word	0x2007c204
   115b4:	2007c20c 	.word	0x2007c20c
   115b8:	2007bfff 	.word	0x2007bfff
   115bc:	2007c794 	.word	0x2007c794
   115c0:	2007c210 	.word	0x2007c210
   115c4:	2007c214 	.word	0x2007c214
   115c8:	2007c200 	.word	0x2007c200
   115cc:	2007c208 	.word	0x2007c208

000115d0 <operator new(unsigned int)>:
_Znwj():
   115d0:	f00b be70 	b.w	1d2b4 <malloc>

000115d4 <operator delete(void*)>:
_ZdlPv():
   115d4:	f00b be76 	b.w	1d2c4 <free>

000115d8 <operator delete[](void*)>:
_ZdaPv():
   115d8:	f00b be74 	b.w	1d2c4 <free>

000115dc <sys_get_mem_info>:
sys_get_mem_info():
   115dc:	b530      	push	{r4, r5, lr}
   115de:	4604      	mov	r4, r0
   115e0:	b08b      	sub	sp, #44	; 0x2c
   115e2:	4668      	mov	r0, sp
   115e4:	f00c f910 	bl	1d808 <mallinfo>
   115e8:	4b22      	ldr	r3, [pc, #136]	; (11674 <sys_get_mem_info+0x98>)
   115ea:	9a07      	ldr	r2, [sp, #28]
   115ec:	6023      	str	r3, [r4, #0]
   115ee:	9b08      	ldr	r3, [sp, #32]
   115f0:	4d21      	ldr	r5, [pc, #132]	; (11678 <sys_get_mem_info+0x9c>)
   115f2:	60a3      	str	r3, [r4, #8]
   115f4:	6062      	str	r2, [r4, #4]
   115f6:	4921      	ldr	r1, [pc, #132]	; (1167c <sys_get_mem_info+0xa0>)
   115f8:	4b21      	ldr	r3, [pc, #132]	; (11680 <sys_get_mem_info+0xa4>)
   115fa:	b952      	cbnz	r2, 11612 <sys_get_mem_info+0x36>
   115fc:	680a      	ldr	r2, [r1, #0]
   115fe:	6818      	ldr	r0, [r3, #0]
   11600:	4282      	cmp	r2, r0
   11602:	bf8a      	itet	hi
   11604:	f102 4260 	addhi.w	r2, r2, #3758096384	; 0xe0000000
   11608:	f102 4270 	addls.w	r2, r2, #4026531840	; 0xf0000000
   1160c:	f5a2 22e8 	subhi.w	r2, r2, #475136	; 0x74000
   11610:	6062      	str	r2, [r4, #4]
   11612:	6862      	ldr	r2, [r4, #4]
   11614:	681b      	ldr	r3, [r3, #0]
   11616:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   1161a:	bf82      	ittt	hi
   1161c:	f102 4270 	addhi.w	r2, r2, #4026531840	; 0xf0000000
   11620:	f5a2 22e8 	subhi.w	r2, r2, #475136	; 0x74000
   11624:	6062      	strhi	r2, [r4, #4]
   11626:	2200      	movs	r2, #0
   11628:	60e2      	str	r2, [r4, #12]
   1162a:	680a      	ldr	r2, [r1, #0]
   1162c:	4293      	cmp	r3, r2
   1162e:	d306      	bcc.n	1163e <sys_get_mem_info+0x62>
   11630:	1a99      	subs	r1, r3, r2
   11632:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   11636:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   1163a:	440b      	add	r3, r1
   1163c:	e00b      	b.n	11656 <sys_get_mem_info+0x7a>
   1163e:	4b11      	ldr	r3, [pc, #68]	; (11684 <sys_get_mem_info+0xa8>)
   11640:	681b      	ldr	r3, [r3, #0]
   11642:	4293      	cmp	r3, r2
   11644:	d908      	bls.n	11658 <sys_get_mem_info+0x7c>
   11646:	1a99      	subs	r1, r3, r2
   11648:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   1164c:	f503 23f8 	add.w	r3, r3, #507904	; 0x7c000
   11650:	440b      	add	r3, r1
   11652:	2b00      	cmp	r3, #0
   11654:	dd00      	ble.n	11658 <sys_get_mem_info+0x7c>
   11656:	60e3      	str	r3, [r4, #12]
   11658:	4620      	mov	r0, r4
   1165a:	4b0b      	ldr	r3, [pc, #44]	; (11688 <sys_get_mem_info+0xac>)
   1165c:	61e2      	str	r2, [r4, #28]
   1165e:	681b      	ldr	r3, [r3, #0]
   11660:	61a3      	str	r3, [r4, #24]
   11662:	4b0a      	ldr	r3, [pc, #40]	; (1168c <sys_get_mem_info+0xb0>)
   11664:	681b      	ldr	r3, [r3, #0]
   11666:	6163      	str	r3, [r4, #20]
   11668:	4b09      	ldr	r3, [pc, #36]	; (11690 <sys_get_mem_info+0xb4>)
   1166a:	681b      	ldr	r3, [r3, #0]
   1166c:	6123      	str	r3, [r4, #16]
   1166e:	b00b      	add	sp, #44	; 0x2c
   11670:	bd30      	pop	{r4, r5, pc}
   11672:	bf00      	nop
   11674:	00000794 	.word	0x00000794
   11678:	2007c794 	.word	0x2007c794
   1167c:	2007c204 	.word	0x2007c204
   11680:	2007c20c 	.word	0x2007c20c
   11684:	2007c210 	.word	0x2007c210
   11688:	2007c200 	.word	0x2007c200
   1168c:	2007c208 	.word	0x2007c208
   11690:	2007c214 	.word	0x2007c214

00011694 <_GLOBAL__sub_I__sbrk>:
_GLOBAL__sub_I__sbrk():
   11694:	4a03      	ldr	r2, [pc, #12]	; (116a4 <_GLOBAL__sub_I__sbrk+0x10>)
   11696:	4b04      	ldr	r3, [pc, #16]	; (116a8 <_GLOBAL__sub_I__sbrk+0x14>)
   11698:	601a      	str	r2, [r3, #0]
   1169a:	4a04      	ldr	r2, [pc, #16]	; (116ac <_GLOBAL__sub_I__sbrk+0x18>)
   1169c:	4b04      	ldr	r3, [pc, #16]	; (116b0 <_GLOBAL__sub_I__sbrk+0x1c>)
   1169e:	601a      	str	r2, [r3, #0]
   116a0:	4770      	bx	lr
   116a2:	bf00      	nop
   116a4:	10008000 	.word	0x10008000
   116a8:	2007c20c 	.word	0x2007c20c
   116ac:	20084000 	.word	0x20084000
   116b0:	2007c210 	.word	0x2007c210

000116b4 <__malloc_lock>:
__malloc_lock():
   116b4:	f008 ba34 	b.w	19b20 <vPortEnterCritical>

000116b8 <__malloc_unlock>:
__malloc_unlock():
   116b8:	f008 ba44 	b.w	19b44 <vPortExitCritical>

000116bc <nrf_irq_callback>:
nrf_irq_callback():
   116bc:	b507      	push	{r0, r1, r2, lr}
   116be:	4809      	ldr	r0, [pc, #36]	; (116e4 <nrf_irq_callback+0x28>)
   116c0:	2300      	movs	r3, #0
   116c2:	aa02      	add	r2, sp, #8
   116c4:	f842 3d04 	str.w	r3, [r2, #-4]!
   116c8:	4619      	mov	r1, r3
   116ca:	6800      	ldr	r0, [r0, #0]
   116cc:	f009 fa8a 	bl	1abe4 <xQueueGenericSendFromISR>
   116d0:	9b01      	ldr	r3, [sp, #4]
   116d2:	b11b      	cbz	r3, 116dc <nrf_irq_callback+0x20>
   116d4:	4b04      	ldr	r3, [pc, #16]	; (116e8 <nrf_irq_callback+0x2c>)
   116d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   116da:	601a      	str	r2, [r3, #0]
   116dc:	b003      	add	sp, #12
   116de:	f85d fb04 	ldr.w	pc, [sp], #4
   116e2:	bf00      	nop
   116e4:	2007c220 	.word	0x2007c220
   116e8:	e000ed04 	.word	0xe000ed04

000116ec <nrf_driver_init>:
nrf_driver_init():
   116ec:	b570      	push	{r4, r5, r6, lr}
   116ee:	4e17      	ldr	r6, [pc, #92]	; (1174c <nrf_driver_init+0x60>)
   116f0:	6832      	ldr	r2, [r6, #0]
   116f2:	b922      	cbnz	r2, 116fe <nrf_driver_init+0x12>
   116f4:	2120      	movs	r1, #32
   116f6:	2003      	movs	r0, #3
   116f8:	f009 f9a7 	bl	1aa4a <xQueueGenericCreate>
   116fc:	6030      	str	r0, [r6, #0]
   116fe:	4d14      	ldr	r5, [pc, #80]	; (11750 <nrf_driver_init+0x64>)
   11700:	682a      	ldr	r2, [r5, #0]
   11702:	b922      	cbnz	r2, 1170e <nrf_driver_init+0x22>
   11704:	2120      	movs	r1, #32
   11706:	2001      	movs	r0, #1
   11708:	f009 f99f 	bl	1aa4a <xQueueGenericCreate>
   1170c:	6028      	str	r0, [r5, #0]
   1170e:	4c11      	ldr	r4, [pc, #68]	; (11754 <nrf_driver_init+0x68>)
   11710:	6821      	ldr	r1, [r4, #0]
   11712:	b921      	cbnz	r1, 1171e <nrf_driver_init+0x32>
   11714:	2203      	movs	r2, #3
   11716:	2001      	movs	r0, #1
   11718:	f009 f997 	bl	1aa4a <xQueueGenericCreate>
   1171c:	6020      	str	r0, [r4, #0]
   1171e:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   11722:	f640 11c3 	movw	r1, #2499	; 0x9c3
   11726:	2020      	movs	r0, #32
   11728:	f000 fb0e 	bl	11d48 <nordic_init>
   1172c:	f000 f9e6 	bl	11afc <nordic_standby1_to_rx>
   11730:	2016      	movs	r0, #22
   11732:	4a09      	ldr	r2, [pc, #36]	; (11758 <nrf_driver_init+0x6c>)
   11734:	2101      	movs	r1, #1
   11736:	f7ff fc9d 	bl	11074 <eint3_enable_port0>
   1173a:	6830      	ldr	r0, [r6, #0]
   1173c:	b128      	cbz	r0, 1174a <nrf_driver_init+0x5e>
   1173e:	6828      	ldr	r0, [r5, #0]
   11740:	b118      	cbz	r0, 1174a <nrf_driver_init+0x5e>
   11742:	6820      	ldr	r0, [r4, #0]
   11744:	3000      	adds	r0, #0
   11746:	bf18      	it	ne
   11748:	2001      	movne	r0, #1
   1174a:	bd70      	pop	{r4, r5, r6, pc}
   1174c:	2007c21c 	.word	0x2007c21c
   11750:	2007c218 	.word	0x2007c218
   11754:	2007c220 	.word	0x2007c220
   11758:	000116bd 	.word	0x000116bd

0001175c <nrf_driver_app_recv>:
nrf_driver_app_recv():
   1175c:	b570      	push	{r4, r5, r6, lr}
   1175e:	7903      	ldrb	r3, [r0, #4]
   11760:	4601      	mov	r1, r0
   11762:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   11766:	2bc0      	cmp	r3, #192	; 0xc0
   11768:	bf0c      	ite	eq
   1176a:	4b0e      	ldreq	r3, [pc, #56]	; (117a4 <nrf_driver_app_recv+0x48>)
   1176c:	4b0e      	ldrne	r3, [pc, #56]	; (117a8 <nrf_driver_app_recv+0x4c>)
   1176e:	b088      	sub	sp, #32
   11770:	681d      	ldr	r5, [r3, #0]
   11772:	2300      	movs	r3, #0
   11774:	4606      	mov	r6, r0
   11776:	461a      	mov	r2, r3
   11778:	4628      	mov	r0, r5
   1177a:	f009 f997 	bl	1aaac <xQueueGenericSend>
   1177e:	4604      	mov	r4, r0
   11780:	b960      	cbnz	r0, 1179c <nrf_driver_app_recv+0x40>
   11782:	4603      	mov	r3, r0
   11784:	4602      	mov	r2, r0
   11786:	4669      	mov	r1, sp
   11788:	4628      	mov	r0, r5
   1178a:	f009 fa66 	bl	1ac5a <xQueueGenericReceive>
   1178e:	4623      	mov	r3, r4
   11790:	4622      	mov	r2, r4
   11792:	4631      	mov	r1, r6
   11794:	4628      	mov	r0, r5
   11796:	f009 f989 	bl	1aaac <xQueueGenericSend>
   1179a:	4604      	mov	r4, r0
   1179c:	4620      	mov	r0, r4
   1179e:	b008      	add	sp, #32
   117a0:	bd70      	pop	{r4, r5, r6, pc}
   117a2:	bf00      	nop
   117a4:	2007c218 	.word	0x2007c218
   117a8:	2007c21c 	.word	0x2007c21c

000117ac <nrf_driver_send>:
nrf_driver_send():
   117ac:	b538      	push	{r3, r4, r5, lr}
   117ae:	4604      	mov	r4, r0
   117b0:	460d      	mov	r5, r1
   117b2:	f000 fd29 	bl	12208 <mesh_get_node_address>
   117b6:	7823      	ldrb	r3, [r4, #0]
   117b8:	4283      	cmp	r3, r0
   117ba:	d00a      	beq.n	117d2 <nrf_driver_send+0x26>
   117bc:	78e3      	ldrb	r3, [r4, #3]
   117be:	b943      	cbnz	r3, 117d2 <nrf_driver_send+0x26>
   117c0:	f00c fffa 	bl	1e7b8 <rand>
   117c4:	23bd      	movs	r3, #189	; 0xbd
   117c6:	f000 0003 	and.w	r0, r0, #3
   117ca:	fb00 3003 	mla	r0, r0, r3, r3
   117ce:	f007 f827 	bl	18820 <delay_us>
   117d2:	f000 f98b 	bl	11aec <nordic_rx_to_Stanby1>
   117d6:	f000 f97d 	bl	11ad4 <nordic_standby1_to_tx_mode1>
   117da:	b2a9      	uxth	r1, r5
   117dc:	4620      	mov	r0, r4
   117de:	f000 f9a9 	bl	11b34 <nordic_mode1_send_single_packet>
   117e2:	f000 f99d 	bl	11b20 <nordic_clear_packet_sent_flag>
   117e6:	f000 f989 	bl	11afc <nordic_standby1_to_rx>
   117ea:	f008 ff0f 	bl	1a60c <xTaskGetSchedulerState>
   117ee:	2802      	cmp	r0, #2
   117f0:	d106      	bne.n	11800 <nrf_driver_send+0x54>
   117f2:	4804      	ldr	r0, [pc, #16]	; (11804 <nrf_driver_send+0x58>)
   117f4:	2300      	movs	r3, #0
   117f6:	461a      	mov	r2, r3
   117f8:	4619      	mov	r1, r3
   117fa:	6800      	ldr	r0, [r0, #0]
   117fc:	f009 f9f2 	bl	1abe4 <xQueueGenericSendFromISR>
   11800:	2001      	movs	r0, #1
   11802:	bd38      	pop	{r3, r4, r5, pc}
   11804:	2007c220 	.word	0x2007c220

00011808 <nrf_driver_receive>:
nrf_driver_receive():
   11808:	b538      	push	{r3, r4, r5, lr}
   1180a:	4604      	mov	r4, r0
   1180c:	460d      	mov	r5, r1
   1180e:	f000 f9b7 	bl	11b80 <nordic_is_packet_available>
   11812:	b148      	cbz	r0, 11828 <nrf_driver_receive+0x20>
   11814:	b2a9      	uxth	r1, r5
   11816:	4620      	mov	r0, r4
   11818:	f000 f9bf 	bl	11b9a <nordic_read_rx_fifo>
   1181c:	f000 f9b0 	bl	11b80 <nordic_is_packet_available>
   11820:	b908      	cbnz	r0, 11826 <nrf_driver_receive+0x1e>
   11822:	f000 f9b6 	bl	11b92 <nordic_clear_packet_available_flag>
   11826:	2001      	movs	r0, #1
   11828:	bd38      	pop	{r3, r4, r5, pc}

0001182a <wireless_get_queued_pkt>:
wireless_get_queued_pkt():
   1182a:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   1182e:	4605      	mov	r5, r0
   11830:	460e      	mov	r6, r1
   11832:	4614      	mov	r4, r2
   11834:	f008 feea 	bl	1a60c <xTaskGetSchedulerState>
   11838:	2802      	cmp	r0, #2
   1183a:	d107      	bne.n	1184c <wireless_get_queued_pkt+0x22>
   1183c:	4622      	mov	r2, r4
   1183e:	2300      	movs	r3, #0
   11840:	4631      	mov	r1, r6
   11842:	4628      	mov	r0, r5
   11844:	f009 fa09 	bl	1ac5a <xQueueGenericReceive>
   11848:	b2c4      	uxtb	r4, r0
   1184a:	e01d      	b.n	11888 <wireless_get_queued_pkt+0x5e>
   1184c:	f009 fd62 	bl	1b314 <sys_get_uptime_us>
   11850:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11854:	2300      	movs	r3, #0
   11856:	f00b f987 	bl	1cb68 <__aeabi_uldivmod>
   1185a:	eb10 0804 	adds.w	r8, r0, r4
   1185e:	f141 0900 	adc.w	r9, r1, #0
   11862:	2300      	movs	r3, #0
   11864:	461a      	mov	r2, r3
   11866:	4631      	mov	r1, r6
   11868:	4628      	mov	r0, r5
   1186a:	f009 f9f6 	bl	1ac5a <xQueueGenericReceive>
   1186e:	b2c4      	uxtb	r4, r0
   11870:	b954      	cbnz	r4, 11888 <wireless_get_queued_pkt+0x5e>
   11872:	f009 fd4f 	bl	1b314 <sys_get_uptime_us>
   11876:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1187a:	2300      	movs	r3, #0
   1187c:	f00b f974 	bl	1cb68 <__aeabi_uldivmod>
   11880:	4589      	cmp	r9, r1
   11882:	bf08      	it	eq
   11884:	4580      	cmpeq	r8, r0
   11886:	d2ec      	bcs.n	11862 <wireless_get_queued_pkt+0x38>
   11888:	4620      	mov	r0, r4
   1188a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0001188e <nrf_driver_get_timer>:
nrf_driver_get_timer():
   1188e:	2904      	cmp	r1, #4
   11890:	b538      	push	{r3, r4, r5, lr}
   11892:	4605      	mov	r5, r0
   11894:	d103      	bne.n	1189e <nrf_driver_get_timer+0x10>
   11896:	1c04      	adds	r4, r0, #0
   11898:	bf18      	it	ne
   1189a:	2401      	movne	r4, #1
   1189c:	e000      	b.n	118a0 <nrf_driver_get_timer+0x12>
   1189e:	2400      	movs	r4, #0
   118a0:	f009 fd38 	bl	1b314 <sys_get_uptime_us>
   118a4:	b12c      	cbz	r4, 118b2 <nrf_driver_get_timer+0x24>
   118a6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   118aa:	2300      	movs	r3, #0
   118ac:	f00b f95c 	bl	1cb68 <__aeabi_uldivmod>
   118b0:	6028      	str	r0, [r5, #0]
   118b2:	4620      	mov	r0, r4
   118b4:	bd38      	pop	{r3, r4, r5, pc}
   118b6:	ffff b500 	vabal.u<illegal width 64>	<illegal reg q13.5>, d15, d0

000118b8 <wireless_init>:
wireless_init():
   118b8:	b500      	push	{lr}
   118ba:	4b0c      	ldr	r3, [pc, #48]	; (118ec <wireless_init+0x34>)
   118bc:	b08d      	sub	sp, #52	; 0x34
   118be:	9309      	str	r3, [sp, #36]	; 0x24
   118c0:	4b0b      	ldr	r3, [pc, #44]	; (118f0 <wireless_init+0x38>)
   118c2:	4a0c      	ldr	r2, [pc, #48]	; (118f4 <wireless_init+0x3c>)
   118c4:	930b      	str	r3, [sp, #44]	; 0x2c
   118c6:	4b0c      	ldr	r3, [pc, #48]	; (118f8 <wireless_init+0x40>)
   118c8:	930a      	str	r3, [sp, #40]	; 0x28
   118ca:	ab0c      	add	r3, sp, #48	; 0x30
   118cc:	f843 2d10 	str.w	r2, [r3, #-16]!
   118d0:	2200      	movs	r2, #0
   118d2:	9204      	str	r2, [sp, #16]
   118d4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   118d6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   118da:	4b08      	ldr	r3, [pc, #32]	; (118fc <wireless_init+0x44>)
   118dc:	4a08      	ldr	r2, [pc, #32]	; (11900 <wireless_init+0x48>)
   118de:	2101      	movs	r1, #1
   118e0:	206a      	movs	r0, #106	; 0x6a
   118e2:	f000 fd47 	bl	12374 <mesh_init>
   118e6:	b00d      	add	sp, #52	; 0x34
   118e8:	f85d fb04 	ldr.w	pc, [sp], #4
   118ec:	000116ed 	.word	0x000116ed
   118f0:	00011809 	.word	0x00011809
   118f4:	0001188f 	.word	0x0001188f
   118f8:	000117ad 	.word	0x000117ad
   118fc:	0001175d 	.word	0x0001175d
   11900:	00023718 	.word	0x00023718

00011904 <wireless_get_rx_pkt>:
wireless_get_rx_pkt():
   11904:	4b02      	ldr	r3, [pc, #8]	; (11910 <wireless_get_rx_pkt+0xc>)
   11906:	460a      	mov	r2, r1
   11908:	4601      	mov	r1, r0
   1190a:	6818      	ldr	r0, [r3, #0]
   1190c:	f7ff bf8d 	b.w	1182a <wireless_get_queued_pkt>
   11910:	2007c21c 	.word	0x2007c21c

00011914 <wireless_get_ack_pkt>:
wireless_get_ack_pkt():
   11914:	4b02      	ldr	r3, [pc, #8]	; (11920 <wireless_get_ack_pkt+0xc>)
   11916:	460a      	mov	r2, r1
   11918:	4601      	mov	r1, r0
   1191a:	6818      	ldr	r0, [r3, #0]
   1191c:	f7ff bf85 	b.w	1182a <wireless_get_queued_pkt>
   11920:	2007c218 	.word	0x2007c218

00011924 <wireless_service>:
wireless_service():
   11924:	b508      	push	{r3, lr}
   11926:	f008 fe71 	bl	1a60c <xTaskGetSchedulerState>
   1192a:	4b0f      	ldr	r3, [pc, #60]	; (11968 <wireless_service+0x44>)
   1192c:	2802      	cmp	r0, #2
   1192e:	695b      	ldr	r3, [r3, #20]
   11930:	d113      	bne.n	1195a <wireless_service+0x36>
   11932:	025a      	lsls	r2, r3, #9
   11934:	d50d      	bpl.n	11952 <wireless_service+0x2e>
   11936:	f000 ff51 	bl	127dc <mesh_get_pnd_pkt_count>
   1193a:	2800      	cmp	r0, #0
   1193c:	480b      	ldr	r0, [pc, #44]	; (1196c <wireless_service+0x48>)
   1193e:	f04f 0300 	mov.w	r3, #0
   11942:	bf14      	ite	ne
   11944:	2201      	movne	r2, #1
   11946:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   1194a:	4619      	mov	r1, r3
   1194c:	6800      	ldr	r0, [r0, #0]
   1194e:	f009 f984 	bl	1ac5a <xQueueGenericReceive>
   11952:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   11956:	f000 bddf 	b.w	12518 <mesh_service>
   1195a:	025b      	lsls	r3, r3, #9
   1195c:	d5f9      	bpl.n	11952 <wireless_service+0x2e>
   1195e:	f000 ff3d 	bl	127dc <mesh_get_pnd_pkt_count>
   11962:	2800      	cmp	r0, #0
   11964:	d1f5      	bne.n	11952 <wireless_service+0x2e>
   11966:	bd08      	pop	{r3, pc}
   11968:	2009c000 	.word	0x2009c000
   1196c:	2007c220 	.word	0x2007c220

00011970 <nordic_transfer>:
nordic_transfer():
   11970:	b570      	push	{r4, r5, r6, lr}
   11972:	4c3e      	ldr	r4, [pc, #248]	; (11a6c <nordic_transfer+0xfc>)
   11974:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   11978:	61e5      	str	r5, [r4, #28]
   1197a:	4c3d      	ldr	r4, [pc, #244]	; (11a70 <nordic_transfer+0x100>)
   1197c:	60a0      	str	r0, [r4, #8]
   1197e:	4620      	mov	r0, r4
   11980:	68c5      	ldr	r5, [r0, #12]
   11982:	4c3b      	ldr	r4, [pc, #236]	; (11a70 <nordic_transfer+0x100>)
   11984:	06ed      	lsls	r5, r5, #27
   11986:	d4fb      	bmi.n	11980 <nordic_transfer+0x10>
   11988:	68a0      	ldr	r0, [r4, #8]
   1198a:	460d      	mov	r5, r1
   1198c:	b2c0      	uxtb	r0, r0
   1198e:	b90b      	cbnz	r3, 11994 <nordic_transfer+0x24>
   11990:	4623      	mov	r3, r4
   11992:	e05f      	b.n	11a54 <nordic_transfer+0xe4>
   11994:	4623      	mov	r3, r4
   11996:	2a00      	cmp	r2, #0
   11998:	d063      	beq.n	11a62 <nordic_transfer+0xf2>
   1199a:	2a07      	cmp	r2, #7
   1199c:	780e      	ldrb	r6, [r1, #0]
   1199e:	dd2d      	ble.n	119fc <nordic_transfer+0x8c>
   119a0:	609e      	str	r6, [r3, #8]
   119a2:	784e      	ldrb	r6, [r1, #1]
   119a4:	3a08      	subs	r2, #8
   119a6:	609e      	str	r6, [r3, #8]
   119a8:	788e      	ldrb	r6, [r1, #2]
   119aa:	609e      	str	r6, [r3, #8]
   119ac:	78ce      	ldrb	r6, [r1, #3]
   119ae:	609e      	str	r6, [r3, #8]
   119b0:	790e      	ldrb	r6, [r1, #4]
   119b2:	609e      	str	r6, [r3, #8]
   119b4:	794e      	ldrb	r6, [r1, #5]
   119b6:	609e      	str	r6, [r3, #8]
   119b8:	798e      	ldrb	r6, [r1, #6]
   119ba:	609e      	str	r6, [r3, #8]
   119bc:	f101 0608 	add.w	r6, r1, #8
   119c0:	79c9      	ldrb	r1, [r1, #7]
   119c2:	6099      	str	r1, [r3, #8]
   119c4:	6999      	ldr	r1, [r3, #24]
   119c6:	0749      	lsls	r1, r1, #29
   119c8:	d5fc      	bpl.n	119c4 <nordic_transfer+0x54>
   119ca:	68a1      	ldr	r1, [r4, #8]
   119cc:	7029      	strb	r1, [r5, #0]
   119ce:	68a1      	ldr	r1, [r4, #8]
   119d0:	7069      	strb	r1, [r5, #1]
   119d2:	68a1      	ldr	r1, [r4, #8]
   119d4:	70a9      	strb	r1, [r5, #2]
   119d6:	68a1      	ldr	r1, [r4, #8]
   119d8:	70e9      	strb	r1, [r5, #3]
   119da:	68d9      	ldr	r1, [r3, #12]
   119dc:	06c9      	lsls	r1, r1, #27
   119de:	d4fc      	bmi.n	119da <nordic_transfer+0x6a>
   119e0:	68a1      	ldr	r1, [r4, #8]
   119e2:	3508      	adds	r5, #8
   119e4:	f805 1c04 	strb.w	r1, [r5, #-4]
   119e8:	68a1      	ldr	r1, [r4, #8]
   119ea:	f805 1c03 	strb.w	r1, [r5, #-3]
   119ee:	68a1      	ldr	r1, [r4, #8]
   119f0:	f805 1c02 	strb.w	r1, [r5, #-2]
   119f4:	68a1      	ldr	r1, [r4, #8]
   119f6:	f805 1c01 	strb.w	r1, [r5, #-1]
   119fa:	e01a      	b.n	11a32 <nordic_transfer+0xc2>
   119fc:	2a03      	cmp	r2, #3
   119fe:	dd1a      	ble.n	11a36 <nordic_transfer+0xc6>
   11a00:	609e      	str	r6, [r3, #8]
   11a02:	784e      	ldrb	r6, [r1, #1]
   11a04:	3a04      	subs	r2, #4
   11a06:	609e      	str	r6, [r3, #8]
   11a08:	788e      	ldrb	r6, [r1, #2]
   11a0a:	609e      	str	r6, [r3, #8]
   11a0c:	1d0e      	adds	r6, r1, #4
   11a0e:	78c9      	ldrb	r1, [r1, #3]
   11a10:	6099      	str	r1, [r3, #8]
   11a12:	68d9      	ldr	r1, [r3, #12]
   11a14:	06c9      	lsls	r1, r1, #27
   11a16:	d4fc      	bmi.n	11a12 <nordic_transfer+0xa2>
   11a18:	68a1      	ldr	r1, [r4, #8]
   11a1a:	3504      	adds	r5, #4
   11a1c:	f805 1c04 	strb.w	r1, [r5, #-4]
   11a20:	68a1      	ldr	r1, [r4, #8]
   11a22:	f805 1c03 	strb.w	r1, [r5, #-3]
   11a26:	68a1      	ldr	r1, [r4, #8]
   11a28:	f805 1c02 	strb.w	r1, [r5, #-2]
   11a2c:	68a1      	ldr	r1, [r4, #8]
   11a2e:	f805 1c01 	strb.w	r1, [r5, #-1]
   11a32:	4631      	mov	r1, r6
   11a34:	e7af      	b.n	11996 <nordic_transfer+0x26>
   11a36:	3101      	adds	r1, #1
   11a38:	609e      	str	r6, [r3, #8]
   11a3a:	3a01      	subs	r2, #1
   11a3c:	68de      	ldr	r6, [r3, #12]
   11a3e:	06f6      	lsls	r6, r6, #27
   11a40:	d4fc      	bmi.n	11a3c <nordic_transfer+0xcc>
   11a42:	68a6      	ldr	r6, [r4, #8]
   11a44:	3501      	adds	r5, #1
   11a46:	f805 6c01 	strb.w	r6, [r5, #-1]
   11a4a:	e7a4      	b.n	11996 <nordic_transfer+0x26>
   11a4c:	68e6      	ldr	r6, [r4, #12]
   11a4e:	06f6      	lsls	r6, r6, #27
   11a50:	d4fc      	bmi.n	11a4c <nordic_transfer+0xdc>
   11a52:	68a6      	ldr	r6, [r4, #8]
   11a54:	1a6e      	subs	r6, r5, r1
   11a56:	42b2      	cmp	r2, r6
   11a58:	dd03      	ble.n	11a62 <nordic_transfer+0xf2>
   11a5a:	f815 6b01 	ldrb.w	r6, [r5], #1
   11a5e:	609e      	str	r6, [r3, #8]
   11a60:	e7f4      	b.n	11a4c <nordic_transfer+0xdc>
   11a62:	4b02      	ldr	r3, [pc, #8]	; (11a6c <nordic_transfer+0xfc>)
   11a64:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   11a68:	619a      	str	r2, [r3, #24]
   11a6a:	bd70      	pop	{r4, r5, r6, pc}
   11a6c:	2009c000 	.word	0x2009c000
   11a70:	40088000 	.word	0x40088000

00011a74 <nordic_readRegister>:
nordic_readRegister():
   11a74:	b507      	push	{r0, r1, r2, lr}
   11a76:	2300      	movs	r3, #0
   11a78:	a902      	add	r1, sp, #8
   11a7a:	f801 3d01 	strb.w	r3, [r1, #-1]!
   11a7e:	2301      	movs	r3, #1
   11a80:	461a      	mov	r2, r3
   11a82:	f000 001f 	and.w	r0, r0, #31
   11a86:	f7ff ff73 	bl	11970 <nordic_transfer>
   11a8a:	f89d 0007 	ldrb.w	r0, [sp, #7]
   11a8e:	b003      	add	sp, #12
   11a90:	f85d fb04 	ldr.w	pc, [sp], #4

00011a94 <nordic_writeRegister>:
nordic_writeRegister():
   11a94:	b513      	push	{r0, r1, r4, lr}
   11a96:	ac02      	add	r4, sp, #8
   11a98:	f804 1d01 	strb.w	r1, [r4, #-1]!
   11a9c:	f000 001f 	and.w	r0, r0, #31
   11aa0:	2300      	movs	r3, #0
   11aa2:	2201      	movs	r2, #1
   11aa4:	4621      	mov	r1, r4
   11aa6:	f040 0020 	orr.w	r0, r0, #32
   11aaa:	f7ff ff61 	bl	11970 <nordic_transfer>
   11aae:	b002      	add	sp, #8
   11ab0:	bd10      	pop	{r4, pc}

00011ab2 <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
   11ab2:	b508      	push	{r3, lr}
   11ab4:	2017      	movs	r0, #23
   11ab6:	f7ff ffdd 	bl	11a74 <nordic_readRegister>
   11aba:	f3c0 1000 	ubfx	r0, r0, #4, #1
   11abe:	bd08      	pop	{r3, pc}

00011ac0 <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
   11ac0:	2170      	movs	r1, #112	; 0x70
   11ac2:	2007      	movs	r0, #7
   11ac4:	f7ff bfe6 	b.w	11a94 <nordic_writeRegister>

00011ac8 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
   11ac8:	460a      	mov	r2, r1
   11aca:	2300      	movs	r3, #0
   11acc:	4601      	mov	r1, r0
   11ace:	20a0      	movs	r0, #160	; 0xa0
   11ad0:	f7ff bf4e 	b.w	11970 <nordic_transfer>

00011ad4 <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
   11ad4:	b508      	push	{r3, lr}
   11ad6:	2000      	movs	r0, #0
   11ad8:	f7ff ffcc 	bl	11a74 <nordic_readRegister>
   11adc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   11ae0:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   11ae4:	2000      	movs	r0, #0
   11ae6:	f7ff bfd5 	b.w	11a94 <nordic_writeRegister>
   11aea:	ffff 4b02 	vtbl.8	d20, {d15-d18}, d2

00011aec <nordic_rx_to_Stanby1>:
nordic_rx_to_Stanby1():
   11aec:	4b02      	ldr	r3, [pc, #8]	; (11af8 <nordic_rx_to_Stanby1+0xc>)
   11aee:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   11af2:	61da      	str	r2, [r3, #28]
   11af4:	4770      	bx	lr
   11af6:	bf00      	nop
   11af8:	2009c020 	.word	0x2009c020

00011afc <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
   11afc:	b508      	push	{r3, lr}
   11afe:	2000      	movs	r0, #0
   11b00:	f7ff ffb8 	bl	11a74 <nordic_readRegister>
   11b04:	f040 0101 	orr.w	r1, r0, #1
   11b08:	b2c9      	uxtb	r1, r1
   11b0a:	2000      	movs	r0, #0
   11b0c:	f7ff ffc2 	bl	11a94 <nordic_writeRegister>
   11b10:	4b02      	ldr	r3, [pc, #8]	; (11b1c <nordic_standby1_to_rx+0x20>)
   11b12:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   11b16:	619a      	str	r2, [r3, #24]
   11b18:	bd08      	pop	{r3, pc}
   11b1a:	bf00      	nop
   11b1c:	2009c020 	.word	0x2009c020

00011b20 <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
   11b20:	2120      	movs	r1, #32
   11b22:	2007      	movs	r0, #7
   11b24:	f7ff bfb6 	b.w	11a94 <nordic_writeRegister>

00011b28 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
   11b28:	2300      	movs	r3, #0
   11b2a:	461a      	mov	r2, r3
   11b2c:	4619      	mov	r1, r3
   11b2e:	20e1      	movs	r0, #225	; 0xe1
   11b30:	f7ff bf1e 	b.w	11970 <nordic_transfer>

00011b34 <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
   11b34:	b537      	push	{r0, r1, r2, r4, r5, lr}
   11b36:	4604      	mov	r4, r0
   11b38:	460d      	mov	r5, r1
   11b3a:	f7ff fff5 	bl	11b28 <nordic_flush_tx_fifo>
   11b3e:	4620      	mov	r0, r4
   11b40:	4629      	mov	r1, r5
   11b42:	f7ff ffc1 	bl	11ac8 <nordic_queue_tx_fifo>
   11b46:	4b0d      	ldr	r3, [pc, #52]	; (11b7c <nordic_mode1_send_single_packet+0x48>)
   11b48:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   11b4c:	461c      	mov	r4, r3
   11b4e:	619a      	str	r2, [r3, #24]
   11b50:	2200      	movs	r2, #0
   11b52:	f8ad 2006 	strh.w	r2, [sp, #6]
   11b56:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   11b5a:	3301      	adds	r3, #1
   11b5c:	b29b      	uxth	r3, r3
   11b5e:	f8ad 3006 	strh.w	r3, [sp, #6]
   11b62:	b933      	cbnz	r3, 11b72 <nordic_mode1_send_single_packet+0x3e>
   11b64:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   11b68:	61e3      	str	r3, [r4, #28]
   11b6a:	f7ff ffdd 	bl	11b28 <nordic_flush_tx_fifo>
   11b6e:	b003      	add	sp, #12
   11b70:	bd30      	pop	{r4, r5, pc}
   11b72:	f7ff ff9e 	bl	11ab2 <nordic_is_tx_fifo_empty>
   11b76:	2800      	cmp	r0, #0
   11b78:	d0ed      	beq.n	11b56 <nordic_mode1_send_single_packet+0x22>
   11b7a:	e7f3      	b.n	11b64 <nordic_mode1_send_single_packet+0x30>
   11b7c:	2009c020 	.word	0x2009c020

00011b80 <nordic_is_packet_available>:
nordic_is_packet_available():
   11b80:	b508      	push	{r3, lr}
   11b82:	2017      	movs	r0, #23
   11b84:	f7ff ff76 	bl	11a74 <nordic_readRegister>
   11b88:	f000 0001 	and.w	r0, r0, #1
   11b8c:	f080 0001 	eor.w	r0, r0, #1
   11b90:	bd08      	pop	{r3, pc}

00011b92 <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
   11b92:	2140      	movs	r1, #64	; 0x40
   11b94:	2007      	movs	r0, #7
   11b96:	f7ff bf7d 	b.w	11a94 <nordic_writeRegister>

00011b9a <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
   11b9a:	b508      	push	{r3, lr}
   11b9c:	460a      	mov	r2, r1
   11b9e:	2301      	movs	r3, #1
   11ba0:	4601      	mov	r1, r0
   11ba2:	2061      	movs	r0, #97	; 0x61
   11ba4:	f7ff fee4 	bl	11970 <nordic_transfer>
   11ba8:	f3c0 0042 	ubfx	r0, r0, #1, #3
   11bac:	bd08      	pop	{r3, pc}

00011bae <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
   11bae:	2300      	movs	r3, #0
   11bb0:	461a      	mov	r2, r3
   11bb2:	4619      	mov	r1, r3
   11bb4:	20e2      	movs	r0, #226	; 0xe2
   11bb6:	f7ff bedb 	b.w	11970 <nordic_transfer>

00011bba <nordic_set_intr_signals>:
nordic_set_intr_signals():
   11bba:	b570      	push	{r4, r5, r6, lr}
   11bbc:	4606      	mov	r6, r0
   11bbe:	2000      	movs	r0, #0
   11bc0:	460d      	mov	r5, r1
   11bc2:	4614      	mov	r4, r2
   11bc4:	f7ff ff56 	bl	11a74 <nordic_readRegister>
   11bc8:	b116      	cbz	r6, 11bd0 <nordic_set_intr_signals+0x16>
   11bca:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
   11bce:	e002      	b.n	11bd6 <nordic_set_intr_signals+0x1c>
   11bd0:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   11bd4:	b2c0      	uxtb	r0, r0
   11bd6:	b115      	cbz	r5, 11bde <nordic_set_intr_signals+0x24>
   11bd8:	f000 01df 	and.w	r1, r0, #223	; 0xdf
   11bdc:	e001      	b.n	11be2 <nordic_set_intr_signals+0x28>
   11bde:	f040 0120 	orr.w	r1, r0, #32
   11be2:	b114      	cbz	r4, 11bea <nordic_set_intr_signals+0x30>
   11be4:	f001 01ef 	and.w	r1, r1, #239	; 0xef
   11be8:	e001      	b.n	11bee <nordic_set_intr_signals+0x34>
   11bea:	f041 0110 	orr.w	r1, r1, #16
   11bee:	2000      	movs	r0, #0
   11bf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   11bf4:	f7ff bf4e 	b.w	11a94 <nordic_writeRegister>

00011bf8 <nordic_set_crc>:
nordic_set_crc():
   11bf8:	b510      	push	{r4, lr}
   11bfa:	4604      	mov	r4, r0
   11bfc:	2000      	movs	r0, #0
   11bfe:	f7ff ff39 	bl	11a74 <nordic_readRegister>
   11c02:	b914      	cbnz	r4, 11c0a <nordic_set_crc+0x12>
   11c04:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
   11c08:	e00d      	b.n	11c26 <nordic_set_crc+0x2e>
   11c0a:	2c01      	cmp	r4, #1
   11c0c:	d104      	bne.n	11c18 <nordic_set_crc+0x20>
   11c0e:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
   11c12:	f041 0108 	orr.w	r1, r1, #8
   11c16:	e006      	b.n	11c26 <nordic_set_crc+0x2e>
   11c18:	2c02      	cmp	r4, #2
   11c1a:	bf14      	ite	ne
   11c1c:	f040 0108 	orrne.w	r1, r0, #8
   11c20:	f040 010c 	orreq.w	r1, r0, #12
   11c24:	b2c9      	uxtb	r1, r1
   11c26:	2000      	movs	r0, #0
   11c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   11c2c:	f7ff bf32 	b.w	11a94 <nordic_writeRegister>

00011c30 <nordic_power_up>:
nordic_power_up():
   11c30:	b508      	push	{r3, lr}
   11c32:	2000      	movs	r0, #0
   11c34:	f7ff ff1e 	bl	11a74 <nordic_readRegister>
   11c38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   11c3c:	f040 0102 	orr.w	r1, r0, #2
   11c40:	b2c9      	uxtb	r1, r1
   11c42:	2000      	movs	r0, #0
   11c44:	f7ff bf26 	b.w	11a94 <nordic_writeRegister>

00011c48 <nordic_power_down>:
nordic_power_down():
   11c48:	b508      	push	{r3, lr}
   11c4a:	2000      	movs	r0, #0
   11c4c:	f7ff ff12 	bl	11a74 <nordic_readRegister>
   11c50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   11c54:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   11c58:	2000      	movs	r0, #0
   11c5a:	f7ff bf1b 	b.w	11a94 <nordic_writeRegister>

00011c5e <nordic_set_channel>:
nordic_set_channel():
   11c5e:	f640 13dd 	movw	r3, #2525	; 0x9dd
   11c62:	4298      	cmp	r0, r3
   11c64:	d806      	bhi.n	11c74 <nordic_set_channel+0x16>
   11c66:	f640 1362 	movw	r3, #2402	; 0x962
   11c6a:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   11c6e:	bf38      	it	cc
   11c70:	4618      	movcc	r0, r3
   11c72:	e000      	b.n	11c76 <nordic_set_channel+0x18>
   11c74:	4618      	mov	r0, r3
   11c76:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
   11c7a:	b2c9      	uxtb	r1, r1
   11c7c:	2005      	movs	r0, #5
   11c7e:	f7ff bf09 	b.w	11a94 <nordic_writeRegister>

00011c82 <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
   11c82:	b510      	push	{r4, lr}
   11c84:	4604      	mov	r4, r0
   11c86:	2006      	movs	r0, #6
   11c88:	f7ff fef4 	bl	11a74 <nordic_readRegister>
   11c8c:	2cfa      	cmp	r4, #250	; 0xfa
   11c8e:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
   11c92:	d102      	bne.n	11c9a <nordic_set_air_data_rate+0x18>
   11c94:	f041 0120 	orr.w	r1, r1, #32
   11c98:	e004      	b.n	11ca4 <nordic_set_air_data_rate+0x22>
   11c9a:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   11c9e:	bf08      	it	eq
   11ca0:	f041 0108 	orreq.w	r1, r1, #8
   11ca4:	2006      	movs	r0, #6
   11ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   11caa:	f7ff bef3 	b.w	11a94 <nordic_writeRegister>

00011cae <nordic_set_power_level>:
nordic_set_power_level():
   11cae:	b510      	push	{r4, lr}
   11cb0:	4604      	mov	r4, r0
   11cb2:	2006      	movs	r0, #6
   11cb4:	f7ff fede 	bl	11a74 <nordic_readRegister>
   11cb8:	2c03      	cmp	r4, #3
   11cba:	bf28      	it	cs
   11cbc:	2403      	movcs	r4, #3
   11cbe:	f020 0006 	bic.w	r0, r0, #6
   11cc2:	ea40 0144 	orr.w	r1, r0, r4, lsl #1
   11cc6:	b2c9      	uxtb	r1, r1
   11cc8:	2006      	movs	r0, #6
   11cca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   11cce:	f7ff bee1 	b.w	11a94 <nordic_writeRegister>

00011cd2 <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
   11cd2:	28f9      	cmp	r0, #249	; 0xf9
   11cd4:	f04f 03fa 	mov.w	r3, #250	; 0xfa
   11cd8:	d905      	bls.n	11ce6 <nordic_set_auto_transmit_options+0x14>
   11cda:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   11cde:	bf88      	it	hi
   11ce0:	f44f 607a 	movhi.w	r0, #4000	; 0xfa0
   11ce4:	e000      	b.n	11ce8 <nordic_set_auto_transmit_options+0x16>
   11ce6:	4618      	mov	r0, r3
   11ce8:	fbb0 f0f3 	udiv	r0, r0, r3
   11cec:	290f      	cmp	r1, #15
   11cee:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
   11cf2:	b2c0      	uxtb	r0, r0
   11cf4:	bf28      	it	cs
   11cf6:	210f      	movcs	r1, #15
   11cf8:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
   11cfc:	b2c9      	uxtb	r1, r1
   11cfe:	2004      	movs	r0, #4
   11d00:	f7ff bec8 	b.w	11a94 <nordic_writeRegister>

00011d04 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
   11d04:	3011      	adds	r0, #17
   11d06:	b2c0      	uxtb	r0, r0
   11d08:	2816      	cmp	r0, #22
   11d0a:	d804      	bhi.n	11d16 <nordic_set_payload_for_pipe+0x12>
   11d0c:	2920      	cmp	r1, #32
   11d0e:	bf28      	it	cs
   11d10:	2120      	movcs	r1, #32
   11d12:	f7ff bebf 	b.w	11a94 <nordic_writeRegister>
   11d16:	4770      	bx	lr

00011d18 <nordic_set_addr_width>:
nordic_set_addr_width():
   11d18:	2803      	cmp	r0, #3
   11d1a:	d004      	beq.n	11d26 <nordic_set_addr_width+0xe>
   11d1c:	2804      	cmp	r0, #4
   11d1e:	bf14      	ite	ne
   11d20:	2103      	movne	r1, #3
   11d22:	2102      	moveq	r1, #2
   11d24:	e000      	b.n	11d28 <nordic_set_addr_width+0x10>
   11d26:	2101      	movs	r1, #1
   11d28:	2003      	movs	r0, #3
   11d2a:	f7ff beb3 	b.w	11a94 <nordic_writeRegister>

00011d2e <nordic_set_tx_address>:
nordic_set_tx_address():
   11d2e:	460a      	mov	r2, r1
   11d30:	2300      	movs	r3, #0
   11d32:	4601      	mov	r1, r0
   11d34:	2030      	movs	r0, #48	; 0x30
   11d36:	f7ff be1b 	b.w	11970 <nordic_transfer>

00011d3a <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
   11d3a:	460a      	mov	r2, r1
   11d3c:	2300      	movs	r3, #0
   11d3e:	4601      	mov	r1, r0
   11d40:	202a      	movs	r0, #42	; 0x2a
   11d42:	f7ff be15 	b.w	11970 <nordic_transfer>
   11d46:	ffff b573 	vsli.32	<illegal reg q13.5>, <illegal reg q9.5>, #31

00011d48 <nordic_init>:
nordic_init():
   11d48:	b573      	push	{r0, r1, r4, r5, r6, lr}
   11d4a:	460e      	mov	r6, r1
   11d4c:	4615      	mov	r5, r2
   11d4e:	4604      	mov	r4, r0
   11d50:	f7ff ff2d 	bl	11bae <nordic_flush_rx_fifo>
   11d54:	f7ff fee8 	bl	11b28 <nordic_flush_tx_fifo>
   11d58:	4b2b      	ldr	r3, [pc, #172]	; (11e08 <nordic_init+0xc0>)
   11d5a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   11d5e:	61da      	str	r2, [r3, #28]
   11d60:	f7ff ff72 	bl	11c48 <nordic_power_down>
   11d64:	2200      	movs	r2, #0
   11d66:	4611      	mov	r1, r2
   11d68:	2001      	movs	r0, #1
   11d6a:	f7ff ff26 	bl	11bba <nordic_set_intr_signals>
   11d6e:	f7ff fea7 	bl	11ac0 <nordic_clear_all_intr_flags>
   11d72:	2002      	movs	r0, #2
   11d74:	f7ff ff40 	bl	11bf8 <nordic_set_crc>
   11d78:	4630      	mov	r0, r6
   11d7a:	f7ff ff70 	bl	11c5e <nordic_set_channel>
   11d7e:	4628      	mov	r0, r5
   11d80:	f7ff ff7f 	bl	11c82 <nordic_set_air_data_rate>
   11d84:	2003      	movs	r0, #3
   11d86:	f7ff ff92 	bl	11cae <nordic_set_power_level>
   11d8a:	2103      	movs	r1, #3
   11d8c:	2002      	movs	r0, #2
   11d8e:	f7ff fe81 	bl	11a94 <nordic_writeRegister>
   11d92:	2100      	movs	r1, #0
   11d94:	2001      	movs	r0, #1
   11d96:	f7ff fe7d 	bl	11a94 <nordic_writeRegister>
   11d9a:	2103      	movs	r1, #3
   11d9c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   11da0:	f7ff ff97 	bl	11cd2 <nordic_set_auto_transmit_options>
   11da4:	4621      	mov	r1, r4
   11da6:	2000      	movs	r0, #0
   11da8:	f7ff ffac 	bl	11d04 <nordic_set_payload_for_pipe>
   11dac:	2100      	movs	r1, #0
   11dae:	2012      	movs	r0, #18
   11db0:	f7ff fe70 	bl	11a94 <nordic_writeRegister>
   11db4:	2100      	movs	r1, #0
   11db6:	2013      	movs	r0, #19
   11db8:	f7ff fe6c 	bl	11a94 <nordic_writeRegister>
   11dbc:	2100      	movs	r1, #0
   11dbe:	2014      	movs	r0, #20
   11dc0:	f7ff fe68 	bl	11a94 <nordic_writeRegister>
   11dc4:	2100      	movs	r1, #0
   11dc6:	2015      	movs	r0, #21
   11dc8:	f7ff fe64 	bl	11a94 <nordic_writeRegister>
   11dcc:	2100      	movs	r1, #0
   11dce:	2016      	movs	r0, #22
   11dd0:	f7ff fe60 	bl	11a94 <nordic_writeRegister>
   11dd4:	4b0d      	ldr	r3, [pc, #52]	; (11e0c <nordic_init+0xc4>)
   11dd6:	6818      	ldr	r0, [r3, #0]
   11dd8:	791b      	ldrb	r3, [r3, #4]
   11dda:	9000      	str	r0, [sp, #0]
   11ddc:	2005      	movs	r0, #5
   11dde:	f88d 3004 	strb.w	r3, [sp, #4]
   11de2:	f7ff ff99 	bl	11d18 <nordic_set_addr_width>
   11de6:	4668      	mov	r0, sp
   11de8:	2105      	movs	r1, #5
   11dea:	f7ff ffa0 	bl	11d2e <nordic_set_tx_address>
   11dee:	2105      	movs	r1, #5
   11df0:	4668      	mov	r0, sp
   11df2:	f7ff ffa2 	bl	11d3a <nordic_set_rx_pipe0_addr>
   11df6:	f7ff ff1b 	bl	11c30 <nordic_power_up>
   11dfa:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   11dfe:	f006 fd0f 	bl	18820 <delay_us>
   11e02:	b002      	add	sp, #8
   11e04:	bd70      	pop	{r4, r5, r6, pc}
   11e06:	bf00      	nop
   11e08:	2009c020 	.word	0x2009c020
   11e0c:	0002371d 	.word	0x0002371d

00011e10 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
   11e10:	b510      	push	{r4, lr}
   11e12:	f64f 74ff 	movw	r4, #65535	; 0xffff
   11e16:	2324      	movs	r3, #36	; 0x24
   11e18:	fb03 0101 	mla	r1, r3, r1, r0
   11e1c:	4288      	cmp	r0, r1
   11e1e:	d009      	beq.n	11e34 <mesh_incr_soft_timers_for_arr+0x24>
   11e20:	7843      	ldrb	r3, [r0, #1]
   11e22:	b12b      	cbz	r3, 11e30 <mesh_incr_soft_timers_for_arr+0x20>
   11e24:	8c03      	ldrh	r3, [r0, #32]
   11e26:	4413      	add	r3, r2
   11e28:	42a3      	cmp	r3, r4
   11e2a:	bf28      	it	cs
   11e2c:	4623      	movcs	r3, r4
   11e2e:	8403      	strh	r3, [r0, #32]
   11e30:	3024      	adds	r0, #36	; 0x24
   11e32:	e7f3      	b.n	11e1c <mesh_incr_soft_timers_for_arr+0xc>
   11e34:	bd10      	pop	{r4, pc}
   11e36:	ffff b537 	vsli.32	d27, d23, #31

00011e38 <mesh_update_soft_timers>:
mesh_update_soft_timers():
   11e38:	b537      	push	{r0, r1, r2, r4, r5, lr}
   11e3a:	2300      	movs	r3, #0
   11e3c:	a802      	add	r0, sp, #8
   11e3e:	f840 3d04 	str.w	r3, [r0, #-4]!
   11e42:	4b0c      	ldr	r3, [pc, #48]	; (11e74 <mesh_update_soft_timers+0x3c>)
   11e44:	2104      	movs	r1, #4
   11e46:	685b      	ldr	r3, [r3, #4]
   11e48:	4798      	blx	r3
   11e4a:	4b0b      	ldr	r3, [pc, #44]	; (11e78 <mesh_update_soft_timers+0x40>)
   11e4c:	9a01      	ldr	r2, [sp, #4]
   11e4e:	681c      	ldr	r4, [r3, #0]
   11e50:	4605      	mov	r5, r0
   11e52:	1b14      	subs	r4, r2, r4
   11e54:	601a      	str	r2, [r3, #0]
   11e56:	2104      	movs	r1, #4
   11e58:	4622      	mov	r2, r4
   11e5a:	4808      	ldr	r0, [pc, #32]	; (11e7c <mesh_update_soft_timers+0x44>)
   11e5c:	f7ff ffd8 	bl	11e10 <mesh_incr_soft_timers_for_arr>
   11e60:	4622      	mov	r2, r4
   11e62:	2102      	movs	r1, #2
   11e64:	4806      	ldr	r0, [pc, #24]	; (11e80 <mesh_update_soft_timers+0x48>)
   11e66:	f7ff ffd3 	bl	11e10 <mesh_incr_soft_timers_for_arr>
   11e6a:	1c28      	adds	r0, r5, #0
   11e6c:	bf18      	it	ne
   11e6e:	2001      	movne	r0, #1
   11e70:	b003      	add	sp, #12
   11e72:	bd30      	pop	{r4, r5, pc}
   11e74:	2007c228 	.word	0x2007c228
   11e78:	2007c2f4 	.word	0x2007c2f4
   11e7c:	2007c23c 	.word	0x2007c23c
   11e80:	2007c315 	.word	0x2007c315

00011e84 <mesh_send_packet>:
mesh_send_packet():
   11e84:	b508      	push	{r3, lr}
   11e86:	4b0b      	ldr	r3, [pc, #44]	; (11eb4 <mesh_send_packet+0x30>)
   11e88:	7819      	ldrb	r1, [r3, #0]
   11e8a:	7803      	ldrb	r3, [r0, #0]
   11e8c:	428b      	cmp	r3, r1
   11e8e:	4b0a      	ldr	r3, [pc, #40]	; (11eb8 <mesh_send_packet+0x34>)
   11e90:	bf0b      	itete	eq
   11e92:	881a      	ldrheq	r2, [r3, #0]
   11e94:	889a      	ldrhne	r2, [r3, #4]
   11e96:	3201      	addeq	r2, #1
   11e98:	3201      	addne	r2, #1
   11e9a:	bf14      	ite	ne
   11e9c:	809a      	strhne	r2, [r3, #4]
   11e9e:	801a      	strheq	r2, [r3, #0]
   11ea0:	4b06      	ldr	r3, [pc, #24]	; (11ebc <mesh_send_packet+0x38>)
   11ea2:	7081      	strb	r1, [r0, #2]
   11ea4:	68db      	ldr	r3, [r3, #12]
   11ea6:	2120      	movs	r1, #32
   11ea8:	4798      	blx	r3
   11eaa:	3000      	adds	r0, #0
   11eac:	bf18      	it	ne
   11eae:	2001      	movne	r0, #1
   11eb0:	bd08      	pop	{r3, pc}
   11eb2:	bf00      	nop
   11eb4:	2007c045 	.word	0x2007c045
   11eb8:	2007c2e4 	.word	0x2007c2e4
   11ebc:	2007c228 	.word	0x2007c228

00011ec0 <mesh_send_retry_packet>:
mesh_send_retry_packet():
   11ec0:	4b0a      	ldr	r3, [pc, #40]	; (11eec <mesh_send_retry_packet+0x2c>)
   11ec2:	7802      	ldrb	r2, [r0, #0]
   11ec4:	781b      	ldrb	r3, [r3, #0]
   11ec6:	429a      	cmp	r2, r3
   11ec8:	4b09      	ldr	r3, [pc, #36]	; (11ef0 <mesh_send_retry_packet+0x30>)
   11eca:	bf0b      	itete	eq
   11ecc:	88da      	ldrheq	r2, [r3, #6]
   11ece:	891a      	ldrhne	r2, [r3, #8]
   11ed0:	3201      	addeq	r2, #1
   11ed2:	3201      	addne	r2, #1
   11ed4:	bf0c      	ite	eq
   11ed6:	80da      	strheq	r2, [r3, #6]
   11ed8:	811a      	strhne	r2, [r3, #8]
   11eda:	7903      	ldrb	r3, [r0, #4]
   11edc:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   11ee0:	3207      	adds	r2, #7
   11ee2:	f362 03c5 	bfi	r3, r2, #3, #3
   11ee6:	7103      	strb	r3, [r0, #4]
   11ee8:	f7ff bfcc 	b.w	11e84 <mesh_send_packet>
   11eec:	2007c045 	.word	0x2007c045
   11ef0:	2007c2e4 	.word	0x2007c2e4

00011ef4 <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
   11ef4:	b510      	push	{r4, lr}
   11ef6:	4907      	ldr	r1, [pc, #28]	; (11f14 <mesh_find_rte_tbl_entry+0x20>)
   11ef8:	2300      	movs	r3, #0
   11efa:	f811 4023 	ldrb.w	r4, [r1, r3, lsl #2]
   11efe:	009a      	lsls	r2, r3, #2
   11f00:	4284      	cmp	r4, r0
   11f02:	d102      	bne.n	11f0a <mesh_find_rte_tbl_entry+0x16>
   11f04:	4803      	ldr	r0, [pc, #12]	; (11f14 <mesh_find_rte_tbl_entry+0x20>)
   11f06:	4410      	add	r0, r2
   11f08:	bd10      	pop	{r4, pc}
   11f0a:	3301      	adds	r3, #1
   11f0c:	2b04      	cmp	r3, #4
   11f0e:	d1f4      	bne.n	11efa <mesh_find_rte_tbl_entry+0x6>
   11f10:	2000      	movs	r0, #0
   11f12:	bd10      	pop	{r4, pc}
   11f14:	2007c2f8 	.word	0x2007c2f8

00011f18 <mesh_update_rte_scores>:
mesh_update_rte_scores():
   11f18:	b170      	cbz	r0, 11f38 <mesh_update_rte_scores+0x20>
   11f1a:	78c3      	ldrb	r3, [r0, #3]
   11f1c:	3301      	adds	r3, #1
   11f1e:	b2db      	uxtb	r3, r3
   11f20:	2bff      	cmp	r3, #255	; 0xff
   11f22:	70c3      	strb	r3, [r0, #3]
   11f24:	d108      	bne.n	11f38 <mesh_update_rte_scores+0x20>
   11f26:	4805      	ldr	r0, [pc, #20]	; (11f3c <mesh_update_rte_scores+0x24>)
   11f28:	2300      	movs	r3, #0
   11f2a:	18c1      	adds	r1, r0, r3
   11f2c:	78ca      	ldrb	r2, [r1, #3]
   11f2e:	3304      	adds	r3, #4
   11f30:	0852      	lsrs	r2, r2, #1
   11f32:	2b10      	cmp	r3, #16
   11f34:	70ca      	strb	r2, [r1, #3]
   11f36:	d1f8      	bne.n	11f2a <mesh_update_rte_scores+0x12>
   11f38:	4770      	bx	lr
   11f3a:	bf00      	nop
   11f3c:	2007c2f8 	.word	0x2007c2f8

00011f40 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
   11f40:	2224      	movs	r2, #36	; 0x24
   11f42:	fb02 0101 	mla	r1, r2, r1, r0
   11f46:	4603      	mov	r3, r0
   11f48:	4602      	mov	r2, r0
   11f4a:	b530      	push	{r4, r5, lr}
   11f4c:	4291      	cmp	r1, r2
   11f4e:	d006      	beq.n	11f5e <mesh_get_pnd_pkt_slot+0x1e>
   11f50:	4614      	mov	r4, r2
   11f52:	3224      	adds	r2, #36	; 0x24
   11f54:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   11f58:	2d00      	cmp	r5, #0
   11f5a:	d1f7      	bne.n	11f4c <mesh_get_pnd_pkt_slot+0xc>
   11f5c:	e00f      	b.n	11f7e <mesh_get_pnd_pkt_slot+0x3e>
   11f5e:	4604      	mov	r4, r0
   11f60:	2500      	movs	r5, #0
   11f62:	4299      	cmp	r1, r3
   11f64:	d00b      	beq.n	11f7e <mesh_get_pnd_pkt_slot+0x3e>
   11f66:	791a      	ldrb	r2, [r3, #4]
   11f68:	f3c2 00c2 	ubfx	r0, r2, #3, #3
   11f6c:	8c1a      	ldrh	r2, [r3, #32]
   11f6e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   11f72:	42aa      	cmp	r2, r5
   11f74:	bf84      	itt	hi
   11f76:	461c      	movhi	r4, r3
   11f78:	4615      	movhi	r5, r2
   11f7a:	3324      	adds	r3, #36	; 0x24
   11f7c:	e7f1      	b.n	11f62 <mesh_get_pnd_pkt_slot+0x22>
   11f7e:	4620      	mov	r0, r4
   11f80:	bd30      	pop	{r4, r5, pc}
   11f82:	ffff b538 	vsli.32	d27, d24, #31

00011f84 <mesh_pending_packets_add>:
mesh_pending_packets_add():
   11f84:	b538      	push	{r3, r4, r5, lr}
   11f86:	4605      	mov	r5, r0
   11f88:	00c9      	lsls	r1, r1, #3
   11f8a:	f101 0408 	add.w	r4, r1, #8
   11f8e:	f7ff ff53 	bl	11e38 <mesh_update_soft_timers>
   11f92:	4b1c      	ldr	r3, [pc, #112]	; (12004 <mesh_pending_packets_add+0x80>)
   11f94:	782a      	ldrb	r2, [r5, #0]
   11f96:	781b      	ldrb	r3, [r3, #0]
   11f98:	429a      	cmp	r2, r3
   11f9a:	d104      	bne.n	11fa6 <mesh_pending_packets_add+0x22>
   11f9c:	2102      	movs	r1, #2
   11f9e:	481a      	ldr	r0, [pc, #104]	; (12008 <mesh_pending_packets_add+0x84>)
   11fa0:	f7ff ffce 	bl	11f40 <mesh_get_pnd_pkt_slot>
   11fa4:	e00c      	b.n	11fc0 <mesh_pending_packets_add+0x3c>
   11fa6:	2104      	movs	r1, #4
   11fa8:	4818      	ldr	r0, [pc, #96]	; (1200c <mesh_pending_packets_add+0x88>)
   11faa:	f7ff ffc9 	bl	11f40 <mesh_get_pnd_pkt_slot>
   11fae:	78eb      	ldrb	r3, [r5, #3]
   11fb0:	b933      	cbnz	r3, 11fc0 <mesh_pending_packets_add+0x3c>
   11fb2:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
   11fb6:	2404      	movs	r4, #4
   11fb8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   11fbc:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   11fc0:	2300      	movs	r3, #0
   11fc2:	f880 3020 	strb.w	r3, [r0, #32]
   11fc6:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
   11fca:	4602      	mov	r2, r0
   11fcc:	462b      	mov	r3, r5
   11fce:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   11fd2:	f880 4022 	strb.w	r4, [r0, #34]	; 0x22
   11fd6:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   11fda:	f3c4 2406 	ubfx	r4, r4, #8, #7
   11fde:	430c      	orrs	r4, r1
   11fe0:	f880 4023 	strb.w	r4, [r0, #35]	; 0x23
   11fe4:	f105 0120 	add.w	r1, r5, #32
   11fe8:	f853 4b04 	ldr.w	r4, [r3], #4
   11fec:	428b      	cmp	r3, r1
   11fee:	f842 4b04 	str.w	r4, [r2], #4
   11ff2:	d1f9      	bne.n	11fe8 <mesh_pending_packets_add+0x64>
   11ff4:	4a06      	ldr	r2, [pc, #24]	; (12010 <mesh_pending_packets_add+0x8c>)
   11ff6:	7903      	ldrb	r3, [r0, #4]
   11ff8:	7812      	ldrb	r2, [r2, #0]
   11ffa:	f362 03c5 	bfi	r3, r2, #3, #3
   11ffe:	7103      	strb	r3, [r0, #4]
   12000:	bd38      	pop	{r3, r4, r5, pc}
   12002:	bf00      	nop
   12004:	2007c045 	.word	0x2007c045
   12008:	2007c315 	.word	0x2007c315
   1200c:	2007c23c 	.word	0x2007c23c
   12010:	2007c044 	.word	0x2007c044

00012014 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
   12014:	b508      	push	{r3, lr}
   12016:	f7ff ff6d 	bl	11ef4 <mesh_find_rte_tbl_entry>
   1201a:	4603      	mov	r3, r0
   1201c:	b9d8      	cbnz	r0, 12056 <mesh_get_rte_to_modify+0x42>
   1201e:	f7ff ff69 	bl	11ef4 <mesh_find_rte_tbl_entry>
   12022:	4603      	mov	r3, r0
   12024:	b9b8      	cbnz	r0, 12056 <mesh_get_rte_to_modify+0x42>
   12026:	4a0d      	ldr	r2, [pc, #52]	; (1205c <mesh_get_rte_to_modify+0x48>)
   12028:	78d3      	ldrb	r3, [r2, #3]
   1202a:	79d1      	ldrb	r1, [r2, #7]
   1202c:	7ad0      	ldrb	r0, [r2, #11]
   1202e:	428b      	cmp	r3, r1
   12030:	bf96      	itet	ls
   12032:	4619      	movls	r1, r3
   12034:	1d13      	addhi	r3, r2, #4
   12036:	4613      	movls	r3, r2
   12038:	4281      	cmp	r1, r0
   1203a:	bf94      	ite	ls
   1203c:	4608      	movls	r0, r1
   1203e:	4b08      	ldrhi	r3, [pc, #32]	; (12060 <mesh_get_rte_to_modify+0x4c>)
   12040:	7bd1      	ldrb	r1, [r2, #15]
   12042:	4a08      	ldr	r2, [pc, #32]	; (12064 <mesh_get_rte_to_modify+0x50>)
   12044:	4281      	cmp	r1, r0
   12046:	bf38      	it	cc
   12048:	4613      	movcc	r3, r2
   1204a:	4907      	ldr	r1, [pc, #28]	; (12068 <mesh_get_rte_to_modify+0x54>)
   1204c:	2200      	movs	r2, #0
   1204e:	601a      	str	r2, [r3, #0]
   12050:	7aca      	ldrb	r2, [r1, #11]
   12052:	3201      	adds	r2, #1
   12054:	72ca      	strb	r2, [r1, #11]
   12056:	4618      	mov	r0, r3
   12058:	bd08      	pop	{r3, pc}
   1205a:	bf00      	nop
   1205c:	2007c2f8 	.word	0x2007c2f8
   12060:	2007c300 	.word	0x2007c300
   12064:	2007c304 	.word	0x2007c304
   12068:	2007c2e4 	.word	0x2007c2e4

0001206c <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
   1206c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12070:	4605      	mov	r5, r0
   12072:	460c      	mov	r4, r1
   12074:	f04f 0924 	mov.w	r9, #36	; 0x24
   12078:	fb09 1902 	mla	r9, r9, r2, r1
   1207c:	f8df a168 	ldr.w	sl, [pc, #360]	; 121e8 <mesh_handle_pnd_pkts_for_arr+0x17c>
   12080:	f8df b168 	ldr.w	fp, [pc, #360]	; 121ec <mesh_handle_pnd_pkts_for_arr+0x180>
   12084:	1c4e      	adds	r6, r1, #1
   12086:	f04f 0800 	mov.w	r8, #0
   1208a:	454c      	cmp	r4, r9
   1208c:	f000 809a 	beq.w	121c4 <mesh_handle_pnd_pkts_for_arr+0x158>
   12090:	f894 3023 	ldrb.w	r3, [r4, #35]	; 0x23
   12094:	061a      	lsls	r2, r3, #24
   12096:	d524      	bpl.n	120e2 <mesh_handle_pnd_pkts_for_arr+0x76>
   12098:	b1b5      	cbz	r5, 120c8 <mesh_handle_pnd_pkts_for_arr+0x5c>
   1209a:	782a      	ldrb	r2, [r5, #0]
   1209c:	7861      	ldrb	r1, [r4, #1]
   1209e:	428a      	cmp	r2, r1
   120a0:	d105      	bne.n	120ae <mesh_handle_pnd_pkts_for_arr+0x42>
   120a2:	786f      	ldrb	r7, [r5, #1]
   120a4:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   120a8:	4287      	cmp	r7, r0
   120aa:	f000 808d 	beq.w	121c8 <mesh_handle_pnd_pkts_for_arr+0x15c>
   120ae:	78e8      	ldrb	r0, [r5, #3]
   120b0:	b150      	cbz	r0, 120c8 <mesh_handle_pnd_pkts_for_arr+0x5c>
   120b2:	7868      	ldrb	r0, [r5, #1]
   120b4:	4288      	cmp	r0, r1
   120b6:	d107      	bne.n	120c8 <mesh_handle_pnd_pkts_for_arr+0x5c>
   120b8:	f816 1c01 	ldrb.w	r1, [r6, #-1]
   120bc:	4291      	cmp	r1, r2
   120be:	d103      	bne.n	120c8 <mesh_handle_pnd_pkts_for_arr+0x5c>
   120c0:	79a9      	ldrb	r1, [r5, #6]
   120c2:	79a2      	ldrb	r2, [r4, #6]
   120c4:	4291      	cmp	r1, r2
   120c6:	d07f      	beq.n	121c8 <mesh_handle_pnd_pkts_for_arr+0x15c>
   120c8:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   120cc:	8c21      	ldrh	r1, [r4, #32]
   120ce:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   120d2:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
   120d6:	4299      	cmp	r1, r3
   120d8:	db71      	blt.n	121be <mesh_handle_pnd_pkts_for_arr+0x152>
   120da:	4620      	mov	r0, r4
   120dc:	f7ff fed2 	bl	11e84 <mesh_send_packet>
   120e0:	e072      	b.n	121c8 <mesh_handle_pnd_pkts_for_arr+0x15c>
   120e2:	7862      	ldrb	r2, [r4, #1]
   120e4:	2a00      	cmp	r2, #0
   120e6:	d06a      	beq.n	121be <mesh_handle_pnd_pkts_for_arr+0x152>
   120e8:	b36d      	cbz	r5, 12146 <mesh_handle_pnd_pkts_for_arr+0xda>
   120ea:	7929      	ldrb	r1, [r5, #4]
   120ec:	f001 01c0 	and.w	r1, r1, #192	; 0xc0
   120f0:	29c0      	cmp	r1, #192	; 0xc0
   120f2:	d117      	bne.n	12124 <mesh_handle_pnd_pkts_for_arr+0xb8>
   120f4:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   120f8:	7869      	ldrb	r1, [r5, #1]
   120fa:	4288      	cmp	r0, r1
   120fc:	d102      	bne.n	12104 <mesh_handle_pnd_pkts_for_arr+0x98>
   120fe:	7828      	ldrb	r0, [r5, #0]
   12100:	4290      	cmp	r0, r2
   12102:	d061      	beq.n	121c8 <mesh_handle_pnd_pkts_for_arr+0x15c>
   12104:	78e7      	ldrb	r7, [r4, #3]
   12106:	78a8      	ldrb	r0, [r5, #2]
   12108:	4287      	cmp	r7, r0
   1210a:	d10c      	bne.n	12126 <mesh_handle_pnd_pkts_for_arr+0xba>
   1210c:	4291      	cmp	r1, r2
   1210e:	d10a      	bne.n	12126 <mesh_handle_pnd_pkts_for_arr+0xba>
   12110:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   12114:	7829      	ldrb	r1, [r5, #0]
   12116:	4288      	cmp	r0, r1
   12118:	d105      	bne.n	12126 <mesh_handle_pnd_pkts_for_arr+0xba>
   1211a:	79a0      	ldrb	r0, [r4, #6]
   1211c:	79a9      	ldrb	r1, [r5, #6]
   1211e:	4288      	cmp	r0, r1
   12120:	d101      	bne.n	12126 <mesh_handle_pnd_pkts_for_arr+0xba>
   12122:	e051      	b.n	121c8 <mesh_handle_pnd_pkts_for_arr+0x15c>
   12124:	b179      	cbz	r1, 12146 <mesh_handle_pnd_pkts_for_arr+0xda>
   12126:	78a8      	ldrb	r0, [r5, #2]
   12128:	78e1      	ldrb	r1, [r4, #3]
   1212a:	4288      	cmp	r0, r1
   1212c:	d10b      	bne.n	12146 <mesh_handle_pnd_pkts_for_arr+0xda>
   1212e:	7869      	ldrb	r1, [r5, #1]
   12130:	4291      	cmp	r1, r2
   12132:	d108      	bne.n	12146 <mesh_handle_pnd_pkts_for_arr+0xda>
   12134:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   12138:	7829      	ldrb	r1, [r5, #0]
   1213a:	4288      	cmp	r0, r1
   1213c:	d103      	bne.n	12146 <mesh_handle_pnd_pkts_for_arr+0xda>
   1213e:	79a0      	ldrb	r0, [r4, #6]
   12140:	79a9      	ldrb	r1, [r5, #6]
   12142:	4288      	cmp	r0, r1
   12144:	d046      	beq.n	121d4 <mesh_handle_pnd_pkts_for_arr+0x168>
   12146:	f894 1022 	ldrb.w	r1, [r4, #34]	; 0x22
   1214a:	8c20      	ldrh	r0, [r4, #32]
   1214c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   12150:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   12154:	4298      	cmp	r0, r3
   12156:	db32      	blt.n	121be <mesh_handle_pnd_pkts_for_arr+0x152>
   12158:	7923      	ldrb	r3, [r4, #4]
   1215a:	f884 8020 	strb.w	r8, [r4, #32]
   1215e:	f3c3 01c2 	ubfx	r1, r3, #3, #3
   12162:	b2cf      	uxtb	r7, r1
   12164:	f884 8021 	strb.w	r8, [r4, #33]	; 0x21
   12168:	b11f      	cbz	r7, 12172 <mesh_handle_pnd_pkts_for_arr+0x106>
   1216a:	4620      	mov	r0, r4
   1216c:	f7ff fea8 	bl	11ec0 <mesh_send_retry_packet>
   12170:	e025      	b.n	121be <mesh_handle_pnd_pkts_for_arr+0x152>
   12172:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   12176:	2bc0      	cmp	r3, #192	; 0xc0
   12178:	d019      	beq.n	121ae <mesh_handle_pnd_pkts_for_arr+0x142>
   1217a:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   1217e:	f89a 3000 	ldrb.w	r3, [sl]
   12182:	4298      	cmp	r0, r3
   12184:	d113      	bne.n	121ae <mesh_handle_pnd_pkts_for_arr+0x142>
   12186:	78e3      	ldrb	r3, [r4, #3]
   12188:	429a      	cmp	r2, r3
   1218a:	d010      	beq.n	121ae <mesh_handle_pnd_pkts_for_arr+0x142>
   1218c:	b17b      	cbz	r3, 121ae <mesh_handle_pnd_pkts_for_arr+0x142>
   1218e:	7963      	ldrb	r3, [r4, #5]
   12190:	2203      	movs	r2, #3
   12192:	f362 1307 	bfi	r3, r2, #4, #4
   12196:	7163      	strb	r3, [r4, #5]
   12198:	70e1      	strb	r1, [r4, #3]
   1219a:	4620      	mov	r0, r4
   1219c:	f7ff fe90 	bl	11ec0 <mesh_send_retry_packet>
   121a0:	7923      	ldrb	r3, [r4, #4]
   121a2:	f89b 2000 	ldrb.w	r2, [fp]
   121a6:	f362 03c5 	bfi	r3, r2, #3, #3
   121aa:	7123      	strb	r3, [r4, #4]
   121ac:	e000      	b.n	121b0 <mesh_handle_pnd_pkts_for_arr+0x144>
   121ae:	2701      	movs	r7, #1
   121b0:	7860      	ldrb	r0, [r4, #1]
   121b2:	f7ff fe9f 	bl	11ef4 <mesh_find_rte_tbl_entry>
   121b6:	b108      	cbz	r0, 121bc <mesh_handle_pnd_pkts_for_arr+0x150>
   121b8:	f8c0 8000 	str.w	r8, [r0]
   121bc:	b927      	cbnz	r7, 121c8 <mesh_handle_pnd_pkts_for_arr+0x15c>
   121be:	3424      	adds	r4, #36	; 0x24
   121c0:	3624      	adds	r6, #36	; 0x24
   121c2:	e762      	b.n	1208a <mesh_handle_pnd_pkts_for_arr+0x1e>
   121c4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121c8:	2224      	movs	r2, #36	; 0x24
   121ca:	2100      	movs	r1, #0
   121cc:	4620      	mov	r0, r4
   121ce:	f00b f8c4 	bl	1d35a <memset>
   121d2:	e7f4      	b.n	121be <mesh_handle_pnd_pkts_for_arr+0x152>
   121d4:	7923      	ldrb	r3, [r4, #4]
   121d6:	f884 8020 	strb.w	r8, [r4, #32]
   121da:	f36f 03c5 	bfc	r3, #3, #3
   121de:	f884 8021 	strb.w	r8, [r4, #33]	; 0x21
   121e2:	7123      	strb	r3, [r4, #4]
   121e4:	e7eb      	b.n	121be <mesh_handle_pnd_pkts_for_arr+0x152>
   121e6:	bf00      	nop
   121e8:	2007c045 	.word	0x2007c045
   121ec:	2007c044 	.word	0x2007c044

000121f0 <mesh_set_node_address>:
mesh_set_node_address():
   121f0:	1e43      	subs	r3, r0, #1
   121f2:	b2db      	uxtb	r3, r3
   121f4:	2bfd      	cmp	r3, #253	; 0xfd
   121f6:	bf9d      	ittte	ls
   121f8:	4b02      	ldrls	r3, [pc, #8]	; (12204 <mesh_set_node_address+0x14>)
   121fa:	7018      	strbls	r0, [r3, #0]
   121fc:	2001      	movls	r0, #1
   121fe:	2000      	movhi	r0, #0
   12200:	4770      	bx	lr
   12202:	bf00      	nop
   12204:	2007c045 	.word	0x2007c045

00012208 <mesh_get_node_address>:
mesh_get_node_address():
   12208:	4b01      	ldr	r3, [pc, #4]	; (12210 <mesh_get_node_address+0x8>)
   1220a:	7818      	ldrb	r0, [r3, #0]
   1220c:	4770      	bx	lr
   1220e:	bf00      	nop
   12210:	2007c045 	.word	0x2007c045

00012214 <mesh_set_retry_count>:
mesh_set_retry_count():
   12214:	2807      	cmp	r0, #7
   12216:	bf9c      	itt	ls
   12218:	4b01      	ldrls	r3, [pc, #4]	; (12220 <mesh_set_retry_count+0xc>)
   1221a:	7018      	strbls	r0, [r3, #0]
   1221c:	4770      	bx	lr
   1221e:	bf00      	nop
   12220:	2007c044 	.word	0x2007c044

00012224 <mesh_form_pkt>:
mesh_form_pkt():
   12224:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12228:	4604      	mov	r4, r0
   1222a:	4691      	mov	r9, r2
   1222c:	461e      	mov	r6, r3
   1222e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
   12232:	460f      	mov	r7, r1
   12234:	2900      	cmp	r1, #0
   12236:	d066      	beq.n	12306 <mesh_form_pkt+0xe2>
   12238:	4b36      	ldr	r3, [pc, #216]	; (12314 <mesh_form_pkt+0xf0>)
   1223a:	f893 8000 	ldrb.w	r8, [r3]
   1223e:	4541      	cmp	r1, r8
   12240:	d063      	beq.n	1230a <mesh_form_pkt+0xe6>
   12242:	2e0f      	cmp	r6, #15
   12244:	d861      	bhi.n	1230a <mesh_form_pkt+0xe6>
   12246:	2800      	cmp	r0, #0
   12248:	d061      	beq.n	1230e <mesh_form_pkt+0xea>
   1224a:	2220      	movs	r2, #32
   1224c:	2100      	movs	r1, #0
   1224e:	f00b f884 	bl	1d35a <memset>
   12252:	2fff      	cmp	r7, #255	; 0xff
   12254:	7923      	ldrb	r3, [r4, #4]
   12256:	bf14      	ite	ne
   12258:	f009 0203 	andne.w	r2, r9, #3
   1225c:	2200      	moveq	r2, #0
   1225e:	f362 1387 	bfi	r3, r2, #6, #2
   12262:	2203      	movs	r2, #3
   12264:	f362 0302 	bfi	r3, r2, #0, #3
   12268:	4a2b      	ldr	r2, [pc, #172]	; (12318 <mesh_form_pkt+0xf4>)
   1226a:	7067      	strb	r7, [r4, #1]
   1226c:	7812      	ldrb	r2, [r2, #0]
   1226e:	f884 8000 	strb.w	r8, [r4]
   12272:	f362 03c5 	bfi	r3, r2, #3, #3
   12276:	4a29      	ldr	r2, [pc, #164]	; (1231c <mesh_form_pkt+0xf8>)
   12278:	7123      	strb	r3, [r4, #4]
   1227a:	7813      	ldrb	r3, [r2, #0]
   1227c:	f884 8002 	strb.w	r8, [r4, #2]
   12280:	3301      	adds	r3, #1
   12282:	b2db      	uxtb	r3, r3
   12284:	7013      	strb	r3, [r2, #0]
   12286:	71a3      	strb	r3, [r4, #6]
   12288:	ab0b      	add	r3, sp, #44	; 0x2c
   1228a:	9301      	str	r3, [sp, #4]
   1228c:	b915      	cbnz	r5, 12294 <mesh_form_pkt+0x70>
   1228e:	f04f 0801 	mov.w	r8, #1
   12292:	e01b      	b.n	122cc <mesh_form_pkt+0xa8>
   12294:	f104 0908 	add.w	r9, r4, #8
   12298:	9a01      	ldr	r2, [sp, #4]
   1229a:	79e0      	ldrb	r0, [r4, #7]
   1229c:	4613      	mov	r3, r2
   1229e:	6852      	ldr	r2, [r2, #4]
   122a0:	f853 1b08 	ldr.w	r1, [r3], #8
   122a4:	eb00 0802 	add.w	r8, r0, r2
   122a8:	fa5f f888 	uxtb.w	r8, r8
   122ac:	3d01      	subs	r5, #1
   122ae:	f1b8 0f18 	cmp.w	r8, #24
   122b2:	9301      	str	r3, [sp, #4]
   122b4:	b2ed      	uxtb	r5, r5
   122b6:	d807      	bhi.n	122c8 <mesh_form_pkt+0xa4>
   122b8:	4448      	add	r0, r9
   122ba:	f00b f828 	bl	1d30e <memcpy>
   122be:	f884 8007 	strb.w	r8, [r4, #7]
   122c2:	2d00      	cmp	r5, #0
   122c4:	d1e8      	bne.n	12298 <mesh_form_pkt+0x74>
   122c6:	e7e2      	b.n	1228e <mesh_form_pkt+0x6a>
   122c8:	f04f 0800 	mov.w	r8, #0
   122cc:	f8df 9050 	ldr.w	r9, [pc, #80]	; 12320 <mesh_form_pkt+0xfc>
   122d0:	2301      	movs	r3, #1
   122d2:	4638      	mov	r0, r7
   122d4:	f889 3000 	strb.w	r3, [r9]
   122d8:	f7ff fe0c 	bl	11ef4 <mesh_find_rte_tbl_entry>
   122dc:	4605      	mov	r5, r0
   122de:	f7ff fe1b 	bl	11f18 <mesh_update_rte_scores>
   122e2:	2300      	movs	r3, #0
   122e4:	f889 3000 	strb.w	r3, [r9]
   122e8:	7963      	ldrb	r3, [r4, #5]
   122ea:	b925      	cbnz	r5, 122f6 <mesh_form_pkt+0xd2>
   122ec:	f366 1307 	bfi	r3, r6, #4, #4
   122f0:	7163      	strb	r3, [r4, #5]
   122f2:	70e5      	strb	r5, [r4, #3]
   122f4:	e005      	b.n	12302 <mesh_form_pkt+0xde>
   122f6:	78aa      	ldrb	r2, [r5, #2]
   122f8:	f362 1307 	bfi	r3, r2, #4, #4
   122fc:	7163      	strb	r3, [r4, #5]
   122fe:	786b      	ldrb	r3, [r5, #1]
   12300:	70e3      	strb	r3, [r4, #3]
   12302:	4640      	mov	r0, r8
   12304:	e003      	b.n	1230e <mesh_form_pkt+0xea>
   12306:	4608      	mov	r0, r1
   12308:	e001      	b.n	1230e <mesh_form_pkt+0xea>
   1230a:	2000      	movs	r0, #0
   1230c:	e7ff      	b.n	1230e <mesh_form_pkt+0xea>
   1230e:	b003      	add	sp, #12
   12310:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   12314:	2007c045 	.word	0x2007c045
   12318:	2007c044 	.word	0x2007c044
   1231c:	2007c224 	.word	0x2007c224
   12320:	2007c2f0 	.word	0x2007c2f0

00012324 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
   12324:	4b12      	ldr	r3, [pc, #72]	; (12370 <mesh_send_formed_pkt+0x4c>)
   12326:	2201      	movs	r2, #1
   12328:	b570      	push	{r4, r5, r6, lr}
   1232a:	701a      	strb	r2, [r3, #0]
   1232c:	4604      	mov	r4, r0
   1232e:	461e      	mov	r6, r3
   12330:	b908      	cbnz	r0, 12336 <mesh_send_formed_pkt+0x12>
   12332:	2500      	movs	r5, #0
   12334:	e018      	b.n	12368 <mesh_send_formed_pkt+0x44>
   12336:	f7ff fda5 	bl	11e84 <mesh_send_packet>
   1233a:	4605      	mov	r5, r0
   1233c:	2800      	cmp	r0, #0
   1233e:	d0f8      	beq.n	12332 <mesh_send_formed_pkt+0xe>
   12340:	7923      	ldrb	r3, [r4, #4]
   12342:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   12346:	2b40      	cmp	r3, #64	; 0x40
   12348:	d006      	beq.n	12358 <mesh_send_formed_pkt+0x34>
   1234a:	2bc0      	cmp	r3, #192	; 0xc0
   1234c:	d10a      	bne.n	12364 <mesh_send_formed_pkt+0x40>
   1234e:	78e3      	ldrb	r3, [r4, #3]
   12350:	b153      	cbz	r3, 12368 <mesh_send_formed_pkt+0x44>
   12352:	7862      	ldrb	r2, [r4, #1]
   12354:	429a      	cmp	r2, r3
   12356:	d007      	beq.n	12368 <mesh_send_formed_pkt+0x44>
   12358:	7961      	ldrb	r1, [r4, #5]
   1235a:	4620      	mov	r0, r4
   1235c:	0909      	lsrs	r1, r1, #4
   1235e:	f7ff fe11 	bl	11f84 <mesh_pending_packets_add>
   12362:	e001      	b.n	12368 <mesh_send_formed_pkt+0x44>
   12364:	2b80      	cmp	r3, #128	; 0x80
   12366:	d0f7      	beq.n	12358 <mesh_send_formed_pkt+0x34>
   12368:	2300      	movs	r3, #0
   1236a:	7033      	strb	r3, [r6, #0]
   1236c:	4628      	mov	r0, r5
   1236e:	bd70      	pop	{r4, r5, r6, pc}
   12370:	2007c2f0 	.word	0x2007c2f0

00012374 <mesh_init>:
mesh_init():
   12374:	b082      	sub	sp, #8
   12376:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1237a:	4691      	mov	r9, r2
   1237c:	1e42      	subs	r2, r0, #1
   1237e:	b2d2      	uxtb	r2, r2
   12380:	b08d      	sub	sp, #52	; 0x34
   12382:	2afd      	cmp	r2, #253	; 0xfd
   12384:	4605      	mov	r5, r0
   12386:	460e      	mov	r6, r1
   12388:	9315      	str	r3, [sp, #84]	; 0x54
   1238a:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
   1238e:	d901      	bls.n	12394 <mesh_init+0x20>
   12390:	2000      	movs	r0, #0
   12392:	e057      	b.n	12444 <mesh_init+0xd0>
   12394:	2b00      	cmp	r3, #0
   12396:	d0fb      	beq.n	12390 <mesh_init+0x1c>
   12398:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   1239a:	2f00      	cmp	r7, #0
   1239c:	d0f8      	beq.n	12390 <mesh_init+0x1c>
   1239e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   123a0:	2b00      	cmp	r3, #0
   123a2:	d0f5      	beq.n	12390 <mesh_init+0x1c>
   123a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
   123a6:	2b00      	cmp	r3, #0
   123a8:	d0f2      	beq.n	12390 <mesh_init+0x1c>
   123aa:	9b16      	ldr	r3, [sp, #88]	; 0x58
   123ac:	2b00      	cmp	r3, #0
   123ae:	d0ef      	beq.n	12390 <mesh_init+0x1c>
   123b0:	2248      	movs	r2, #72	; 0x48
   123b2:	2100      	movs	r1, #0
   123b4:	4826      	ldr	r0, [pc, #152]	; (12450 <mesh_init+0xdc>)
   123b6:	f00a ffd0 	bl	1d35a <memset>
   123ba:	2290      	movs	r2, #144	; 0x90
   123bc:	2100      	movs	r1, #0
   123be:	4825      	ldr	r0, [pc, #148]	; (12454 <mesh_init+0xe0>)
   123c0:	f00a ffcb 	bl	1d35a <memset>
   123c4:	2210      	movs	r2, #16
   123c6:	2100      	movs	r1, #0
   123c8:	4823      	ldr	r0, [pc, #140]	; (12458 <mesh_init+0xe4>)
   123ca:	f00a ffc6 	bl	1d35a <memset>
   123ce:	4b23      	ldr	r3, [pc, #140]	; (1245c <mesh_init+0xe8>)
   123d0:	2400      	movs	r4, #0
   123d2:	601c      	str	r4, [r3, #0]
   123d4:	605c      	str	r4, [r3, #4]
   123d6:	609c      	str	r4, [r3, #8]
   123d8:	4b21      	ldr	r3, [pc, #132]	; (12460 <mesh_init+0xec>)
   123da:	601c      	str	r4, [r3, #0]
   123dc:	605c      	str	r4, [r3, #4]
   123de:	609c      	str	r4, [r3, #8]
   123e0:	4b20      	ldr	r3, [pc, #128]	; (12464 <mesh_init+0xf0>)
   123e2:	701d      	strb	r5, [r3, #0]
   123e4:	4b20      	ldr	r3, [pc, #128]	; (12468 <mesh_init+0xf4>)
   123e6:	4d21      	ldr	r5, [pc, #132]	; (1246c <mesh_init+0xf8>)
   123e8:	701e      	strb	r6, [r3, #0]
   123ea:	ae15      	add	r6, sp, #84	; 0x54
   123ec:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   123ee:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   123f0:	6833      	ldr	r3, [r6, #0]
   123f2:	2218      	movs	r2, #24
   123f4:	4621      	mov	r1, r4
   123f6:	481e      	ldr	r0, [pc, #120]	; (12470 <mesh_init+0xfc>)
   123f8:	602b      	str	r3, [r5, #0]
   123fa:	f00a ffae 	bl	1d35a <memset>
   123fe:	4649      	mov	r1, r9
   12400:	2217      	movs	r2, #23
   12402:	481b      	ldr	r0, [pc, #108]	; (12470 <mesh_init+0xfc>)
   12404:	f00c fce9 	bl	1edda <strncpy>
   12408:	4621      	mov	r1, r4
   1240a:	4620      	mov	r0, r4
   1240c:	47b8      	blx	r7
   1240e:	2800      	cmp	r0, #0
   12410:	d0be      	beq.n	12390 <mesh_init+0x1c>
   12412:	f1b8 0f00 	cmp.w	r8, #0
   12416:	d102      	bne.n	1241e <mesh_init+0xaa>
   12418:	f7ff fd0e 	bl	11e38 <mesh_update_soft_timers>
   1241c:	e012      	b.n	12444 <mesh_init+0xd0>
   1241e:	2306      	movs	r3, #6
   12420:	9302      	str	r3, [sp, #8]
   12422:	4b14      	ldr	r3, [pc, #80]	; (12474 <mesh_init+0x100>)
   12424:	4622      	mov	r2, r4
   12426:	9301      	str	r3, [sp, #4]
   12428:	2301      	movs	r3, #1
   1242a:	9300      	str	r3, [sp, #0]
   1242c:	21ff      	movs	r1, #255	; 0xff
   1242e:	a804      	add	r0, sp, #16
   12430:	f7ff fef8 	bl	12224 <mesh_form_pkt>
   12434:	2800      	cmp	r0, #0
   12436:	d0ab      	beq.n	12390 <mesh_init+0x1c>
   12438:	a804      	add	r0, sp, #16
   1243a:	f7ff ff73 	bl	12324 <mesh_send_formed_pkt>
   1243e:	2800      	cmp	r0, #0
   12440:	d0a6      	beq.n	12390 <mesh_init+0x1c>
   12442:	e7e9      	b.n	12418 <mesh_init+0xa4>
   12444:	b00d      	add	sp, #52	; 0x34
   12446:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1244a:	b002      	add	sp, #8
   1244c:	4770      	bx	lr
   1244e:	bf00      	nop
   12450:	2007c315 	.word	0x2007c315
   12454:	2007c23c 	.word	0x2007c23c
   12458:	2007c2f8 	.word	0x2007c2f8
   1245c:	2007c308 	.word	0x2007c308
   12460:	2007c2e4 	.word	0x2007c2e4
   12464:	2007c045 	.word	0x2007c045
   12468:	2007c2f1 	.word	0x2007c2f1
   1246c:	2007c228 	.word	0x2007c228
   12470:	2007c2cc 	.word	0x2007c2cc
   12474:	00023722 	.word	0x00023722

00012478 <mesh_send>:
mesh_send():
   12478:	b530      	push	{r4, r5, lr}
   1247a:	2b18      	cmp	r3, #24
   1247c:	b08d      	sub	sp, #52	; 0x34
   1247e:	d816      	bhi.n	124ae <mesh_send+0x36>
   12480:	fab2 f482 	clz	r4, r2
   12484:	1c1d      	adds	r5, r3, #0
   12486:	bf18      	it	ne
   12488:	2501      	movne	r5, #1
   1248a:	0964      	lsrs	r4, r4, #5
   1248c:	42ac      	cmp	r4, r5
   1248e:	d00e      	beq.n	124ae <mesh_send+0x36>
   12490:	9302      	str	r3, [sp, #8]
   12492:	9201      	str	r2, [sp, #4]
   12494:	9500      	str	r5, [sp, #0]
   12496:	460a      	mov	r2, r1
   12498:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   1249c:	4601      	mov	r1, r0
   1249e:	a804      	add	r0, sp, #16
   124a0:	f7ff fec0 	bl	12224 <mesh_form_pkt>
   124a4:	b118      	cbz	r0, 124ae <mesh_send+0x36>
   124a6:	a804      	add	r0, sp, #16
   124a8:	f7ff ff3c 	bl	12324 <mesh_send_formed_pkt>
   124ac:	e000      	b.n	124b0 <mesh_send+0x38>
   124ae:	2000      	movs	r0, #0
   124b0:	b00d      	add	sp, #52	; 0x34
   124b2:	bd30      	pop	{r4, r5, pc}

000124b4 <mesh_send_ack>:
mesh_send_ack():
   124b4:	b513      	push	{r0, r1, r4, lr}
   124b6:	7953      	ldrb	r3, [r2, #5]
   124b8:	7814      	ldrb	r4, [r2, #0]
   124ba:	091b      	lsrs	r3, r3, #4
   124bc:	9300      	str	r3, [sp, #0]
   124be:	4602      	mov	r2, r0
   124c0:	460b      	mov	r3, r1
   124c2:	4620      	mov	r0, r4
   124c4:	2103      	movs	r1, #3
   124c6:	f7ff ffd7 	bl	12478 <mesh_send>
   124ca:	b002      	add	sp, #8
   124cc:	bd10      	pop	{r4, pc}
   124ce:	ffff 2300 	vsubw.u<illegal width 64>	q9, <illegal reg q7.5>, d0

000124d0 <mesh_get_routing_entry>:
mesh_get_routing_entry():
   124d0:	2300      	movs	r3, #0
   124d2:	461a      	mov	r2, r3
   124d4:	b530      	push	{r4, r5, lr}
   124d6:	4c08      	ldr	r4, [pc, #32]	; (124f8 <mesh_get_routing_entry+0x28>)
   124d8:	f814 5023 	ldrb.w	r5, [r4, r3, lsl #2]
   124dc:	0099      	lsls	r1, r3, #2
   124de:	b135      	cbz	r5, 124ee <mesh_get_routing_entry+0x1e>
   124e0:	4290      	cmp	r0, r2
   124e2:	d102      	bne.n	124ea <mesh_get_routing_entry+0x1a>
   124e4:	4804      	ldr	r0, [pc, #16]	; (124f8 <mesh_get_routing_entry+0x28>)
   124e6:	4408      	add	r0, r1
   124e8:	bd30      	pop	{r4, r5, pc}
   124ea:	3201      	adds	r2, #1
   124ec:	b2d2      	uxtb	r2, r2
   124ee:	3301      	adds	r3, #1
   124f0:	2b04      	cmp	r3, #4
   124f2:	d1f1      	bne.n	124d8 <mesh_get_routing_entry+0x8>
   124f4:	2000      	movs	r0, #0
   124f6:	bd30      	pop	{r4, r5, pc}
   124f8:	2007c2f8 	.word	0x2007c2f8

000124fc <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
   124fc:	2300      	movs	r3, #0
   124fe:	4618      	mov	r0, r3
   12500:	4a04      	ldr	r2, [pc, #16]	; (12514 <mesh_get_num_routing_entries+0x18>)
   12502:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   12506:	b109      	cbz	r1, 1250c <mesh_get_num_routing_entries+0x10>
   12508:	3001      	adds	r0, #1
   1250a:	b2c0      	uxtb	r0, r0
   1250c:	3301      	adds	r3, #1
   1250e:	2b04      	cmp	r3, #4
   12510:	d1f7      	bne.n	12502 <mesh_get_num_routing_entries+0x6>
   12512:	4770      	bx	lr
   12514:	2007c2f8 	.word	0x2007c2f8

00012518 <mesh_service>:
mesh_service():
   12518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1251c:	b088      	sub	sp, #32
   1251e:	2220      	movs	r2, #32
   12520:	2100      	movs	r1, #0
   12522:	4668      	mov	r0, sp
   12524:	f00a ff19 	bl	1d35a <memset>
   12528:	4ba1      	ldr	r3, [pc, #644]	; (127b0 <mesh_service+0x298>)
   1252a:	781b      	ldrb	r3, [r3, #0]
   1252c:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   12530:	2b00      	cmp	r3, #0
   12532:	f040 8139 	bne.w	127a8 <mesh_service+0x290>
   12536:	4f9f      	ldr	r7, [pc, #636]	; (127b4 <mesh_service+0x29c>)
   12538:	2120      	movs	r1, #32
   1253a:	693b      	ldr	r3, [r7, #16]
   1253c:	4668      	mov	r0, sp
   1253e:	4798      	blx	r3
   12540:	2800      	cmp	r0, #0
   12542:	f000 8084 	beq.w	1264e <mesh_service+0x136>
   12546:	4d9c      	ldr	r5, [pc, #624]	; (127b8 <mesh_service+0x2a0>)
   12548:	886b      	ldrh	r3, [r5, #2]
   1254a:	3301      	adds	r3, #1
   1254c:	806b      	strh	r3, [r5, #2]
   1254e:	f7ff ffd5 	bl	124fc <mesh_get_num_routing_entries>
   12552:	f89d 2004 	ldrb.w	r2, [sp, #4]
   12556:	72a8      	strb	r0, [r5, #10]
   12558:	f002 0307 	and.w	r3, r2, #7
   1255c:	2b03      	cmp	r3, #3
   1255e:	d004      	beq.n	1256a <mesh_service+0x52>
   12560:	4a96      	ldr	r2, [pc, #600]	; (127bc <mesh_service+0x2a4>)
   12562:	7813      	ldrb	r3, [r2, #0]
   12564:	f043 0301 	orr.w	r3, r3, #1
   12568:	e009      	b.n	1257e <mesh_service+0x66>
   1256a:	4b95      	ldr	r3, [pc, #596]	; (127c0 <mesh_service+0x2a8>)
   1256c:	781d      	ldrb	r5, [r3, #0]
   1256e:	f89d 3002 	ldrb.w	r3, [sp, #2]
   12572:	42ab      	cmp	r3, r5
   12574:	d105      	bne.n	12582 <mesh_service+0x6a>
   12576:	4a91      	ldr	r2, [pc, #580]	; (127bc <mesh_service+0x2a4>)
   12578:	7813      	ldrb	r3, [r2, #0]
   1257a:	f043 0302 	orr.w	r3, r3, #2
   1257e:	7013      	strb	r3, [r2, #0]
   12580:	e0e4      	b.n	1274c <mesh_service+0x234>
   12582:	f3c2 02c2 	ubfx	r2, r2, #3, #3
   12586:	f89d e000 	ldrb.w	lr, [sp]
   1258a:	f89d 0006 	ldrb.w	r0, [sp, #6]
   1258e:	498d      	ldr	r1, [pc, #564]	; (127c4 <mesh_service+0x2ac>)
   12590:	b2d6      	uxtb	r6, r2
   12592:	eb04 0344 	add.w	r3, r4, r4, lsl #1
   12596:	f813 c001 	ldrb.w	ip, [r3, r1]
   1259a:	45f4      	cmp	ip, lr
   1259c:	d10b      	bne.n	125b6 <mesh_service+0x9e>
   1259e:	440b      	add	r3, r1
   125a0:	f893 c001 	ldrb.w	ip, [r3, #1]
   125a4:	4584      	cmp	ip, r0
   125a6:	d106      	bne.n	125b6 <mesh_service+0x9e>
   125a8:	7899      	ldrb	r1, [r3, #2]
   125aa:	2401      	movs	r4, #1
   125ac:	1b8e      	subs	r6, r1, r6
   125ae:	bf18      	it	ne
   125b0:	2601      	movne	r6, #1
   125b2:	709a      	strb	r2, [r3, #2]
   125b4:	e018      	b.n	125e8 <mesh_service+0xd0>
   125b6:	3401      	adds	r4, #1
   125b8:	2c04      	cmp	r4, #4
   125ba:	d1ea      	bne.n	12592 <mesh_service+0x7a>
   125bc:	4982      	ldr	r1, [pc, #520]	; (127c8 <mesh_service+0x2b0>)
   125be:	680b      	ldr	r3, [r1, #0]
   125c0:	709a      	strb	r2, [r3, #2]
   125c2:	4a80      	ldr	r2, [pc, #512]	; (127c4 <mesh_service+0x2ac>)
   125c4:	7058      	strb	r0, [r3, #1]
   125c6:	f102 0009 	add.w	r0, r2, #9
   125ca:	4283      	cmp	r3, r0
   125cc:	f883 e000 	strb.w	lr, [r3]
   125d0:	f040 80c9 	bne.w	12766 <mesh_service+0x24e>
   125d4:	600a      	str	r2, [r1, #0]
   125d6:	f89d 0000 	ldrb.w	r0, [sp]
   125da:	f89d 3002 	ldrb.w	r3, [sp, #2]
   125de:	4283      	cmp	r3, r0
   125e0:	f040 80c4 	bne.w	1276c <mesh_service+0x254>
   125e4:	2400      	movs	r4, #0
   125e6:	4626      	mov	r6, r4
   125e8:	f89d 0002 	ldrb.w	r0, [sp, #2]
   125ec:	f7ff fd12 	bl	12014 <mesh_get_rte_to_modify>
   125f0:	f89d 2002 	ldrb.w	r2, [sp, #2]
   125f4:	7002      	strb	r2, [r0, #0]
   125f6:	f89d 2002 	ldrb.w	r2, [sp, #2]
   125fa:	7042      	strb	r2, [r0, #1]
   125fc:	2200      	movs	r2, #0
   125fe:	7082      	strb	r2, [r0, #2]
   12600:	f7ff fc8a 	bl	11f18 <mesh_update_rte_scores>
   12604:	b104      	cbz	r4, 12608 <mesh_service+0xf0>
   12606:	b316      	cbz	r6, 1264e <mesh_service+0x136>
   12608:	f89d 3000 	ldrb.w	r3, [sp]
   1260c:	42ab      	cmp	r3, r5
   1260e:	f000 809c 	beq.w	1274a <mesh_service+0x232>
   12612:	f89d 6001 	ldrb.w	r6, [sp, #1]
   12616:	2eff      	cmp	r6, #255	; 0xff
   12618:	d11b      	bne.n	12652 <mesh_service+0x13a>
   1261a:	683b      	ldr	r3, [r7, #0]
   1261c:	2120      	movs	r1, #32
   1261e:	4668      	mov	r0, sp
   12620:	4798      	blx	r3
   12622:	b920      	cbnz	r0, 1262e <mesh_service+0x116>
   12624:	4a65      	ldr	r2, [pc, #404]	; (127bc <mesh_service+0x2a4>)
   12626:	7813      	ldrb	r3, [r2, #0]
   12628:	f043 0304 	orr.w	r3, r3, #4
   1262c:	7013      	strb	r3, [r2, #0]
   1262e:	f89d 3005 	ldrb.w	r3, [sp, #5]
   12632:	f003 020f 	and.w	r2, r3, #15
   12636:	1c51      	adds	r1, r2, #1
   12638:	f361 0303 	bfi	r3, r1, #0, #4
   1263c:	f88d 3005 	strb.w	r3, [sp, #5]
   12640:	f3c3 1303 	ubfx	r3, r3, #4, #4
   12644:	429a      	cmp	r2, r3
   12646:	da02      	bge.n	1264e <mesh_service+0x136>
   12648:	4668      	mov	r0, sp
   1264a:	f7ff fc1b 	bl	11e84 <mesh_send_packet>
   1264e:	2400      	movs	r4, #0
   12650:	e07c      	b.n	1274c <mesh_service+0x234>
   12652:	42b5      	cmp	r5, r6
   12654:	d12b      	bne.n	126ae <mesh_service+0x196>
   12656:	b964      	cbnz	r4, 12672 <mesh_service+0x15a>
   12658:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1265c:	b14b      	cbz	r3, 12672 <mesh_service+0x15a>
   1265e:	683b      	ldr	r3, [r7, #0]
   12660:	2120      	movs	r1, #32
   12662:	4668      	mov	r0, sp
   12664:	4798      	blx	r3
   12666:	b920      	cbnz	r0, 12672 <mesh_service+0x15a>
   12668:	4a54      	ldr	r2, [pc, #336]	; (127bc <mesh_service+0x2a4>)
   1266a:	7813      	ldrb	r3, [r2, #0]
   1266c:	f043 0304 	orr.w	r3, r3, #4
   12670:	7013      	strb	r3, [r2, #0]
   12672:	f89d 3004 	ldrb.w	r3, [sp, #4]
   12676:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1267a:	2b40      	cmp	r3, #64	; 0x40
   1267c:	d112      	bne.n	126a4 <mesh_service+0x18c>
   1267e:	f89d 3007 	ldrb.w	r3, [sp, #7]
   12682:	466a      	mov	r2, sp
   12684:	b913      	cbnz	r3, 1268c <mesh_service+0x174>
   12686:	2118      	movs	r1, #24
   12688:	4850      	ldr	r0, [pc, #320]	; (127cc <mesh_service+0x2b4>)
   1268a:	e008      	b.n	1269e <mesh_service+0x186>
   1268c:	210c      	movs	r1, #12
   1268e:	484a      	ldr	r0, [pc, #296]	; (127b8 <mesh_service+0x2a0>)
   12690:	f7ff ff10 	bl	124b4 <mesh_send_ack>
   12694:	2800      	cmp	r0, #0
   12696:	d158      	bne.n	1274a <mesh_service+0x232>
   12698:	2100      	movs	r1, #0
   1269a:	466a      	mov	r2, sp
   1269c:	4608      	mov	r0, r1
   1269e:	f7ff ff09 	bl	124b4 <mesh_send_ack>
   126a2:	e052      	b.n	1274a <mesh_service+0x232>
   126a4:	f89d 3003 	ldrb.w	r3, [sp, #3]
   126a8:	2b00      	cmp	r3, #0
   126aa:	d14e      	bne.n	1274a <mesh_service+0x232>
   126ac:	e7f4      	b.n	12698 <mesh_service+0x180>
   126ae:	4b48      	ldr	r3, [pc, #288]	; (127d0 <mesh_service+0x2b8>)
   126b0:	781b      	ldrb	r3, [r3, #0]
   126b2:	2b00      	cmp	r3, #0
   126b4:	d0cb      	beq.n	1264e <mesh_service+0x136>
   126b6:	f89d 4005 	ldrb.w	r4, [sp, #5]
   126ba:	f004 070f 	and.w	r7, r4, #15
   126be:	ea4f 1814 	mov.w	r8, r4, lsr #4
   126c2:	4547      	cmp	r7, r8
   126c4:	dac3      	bge.n	1264e <mesh_service+0x136>
   126c6:	3701      	adds	r7, #1
   126c8:	f367 0403 	bfi	r4, r7, #0, #4
   126cc:	4630      	mov	r0, r6
   126ce:	f7ff fc11 	bl	11ef4 <mesh_find_rte_tbl_entry>
   126d2:	f88d 4005 	strb.w	r4, [sp, #5]
   126d6:	f89d 4003 	ldrb.w	r4, [sp, #3]
   126da:	42a5      	cmp	r5, r4
   126dc:	d121      	bne.n	12722 <mesh_service+0x20a>
   126de:	f89d 1004 	ldrb.w	r1, [sp, #4]
   126e2:	f001 01c0 	and.w	r1, r1, #192	; 0xc0
   126e6:	2940      	cmp	r1, #64	; 0x40
   126e8:	d006      	beq.n	126f8 <mesh_service+0x1e0>
   126ea:	f1a1 0380 	sub.w	r3, r1, #128	; 0x80
   126ee:	425a      	negs	r2, r3
   126f0:	415a      	adcs	r2, r3
   126f2:	4614      	mov	r4, r2
   126f4:	b910      	cbnz	r0, 126fc <mesh_service+0x1e4>
   126f6:	e00c      	b.n	12712 <mesh_service+0x1fa>
   126f8:	2201      	movs	r2, #1
   126fa:	b160      	cbz	r0, 12716 <mesh_service+0x1fe>
   126fc:	29c0      	cmp	r1, #192	; 0xc0
   126fe:	7843      	ldrb	r3, [r0, #1]
   12700:	d105      	bne.n	1270e <mesh_service+0x1f6>
   12702:	429e      	cmp	r6, r3
   12704:	d003      	beq.n	1270e <mesh_service+0x1f6>
   12706:	3300      	adds	r3, #0
   12708:	bf18      	it	ne
   1270a:	2301      	movne	r3, #1
   1270c:	e004      	b.n	12718 <mesh_service+0x200>
   1270e:	2300      	movs	r3, #0
   12710:	e002      	b.n	12718 <mesh_service+0x200>
   12712:	29c0      	cmp	r1, #192	; 0xc0
   12714:	d10e      	bne.n	12734 <mesh_service+0x21c>
   12716:	4603      	mov	r3, r0
   12718:	4313      	orrs	r3, r2
   1271a:	f003 0401 	and.w	r4, r3, #1
   1271e:	b920      	cbnz	r0, 1272a <mesh_service+0x212>
   12720:	e008      	b.n	12734 <mesh_service+0x21c>
   12722:	b994      	cbnz	r4, 1274a <mesh_service+0x232>
   12724:	b908      	cbnz	r0, 1272a <mesh_service+0x212>
   12726:	4641      	mov	r1, r8
   12728:	e00c      	b.n	12744 <mesh_service+0x22c>
   1272a:	7843      	ldrb	r3, [r0, #1]
   1272c:	f88d 3003 	strb.w	r3, [sp, #3]
   12730:	7885      	ldrb	r5, [r0, #2]
   12732:	e002      	b.n	1273a <mesh_service+0x222>
   12734:	2500      	movs	r5, #0
   12736:	f88d 5003 	strb.w	r5, [sp, #3]
   1273a:	4668      	mov	r0, sp
   1273c:	f7ff fba2 	bl	11e84 <mesh_send_packet>
   12740:	b11c      	cbz	r4, 1274a <mesh_service+0x232>
   12742:	4629      	mov	r1, r5
   12744:	4668      	mov	r0, sp
   12746:	f7ff fc1d 	bl	11f84 <mesh_pending_packets_add>
   1274a:	466c      	mov	r4, sp
   1274c:	f7ff fb74 	bl	11e38 <mesh_update_soft_timers>
   12750:	4620      	mov	r0, r4
   12752:	2204      	movs	r2, #4
   12754:	491f      	ldr	r1, [pc, #124]	; (127d4 <mesh_service+0x2bc>)
   12756:	f7ff fc89 	bl	1206c <mesh_handle_pnd_pkts_for_arr>
   1275a:	2202      	movs	r2, #2
   1275c:	491e      	ldr	r1, [pc, #120]	; (127d8 <mesh_service+0x2c0>)
   1275e:	4620      	mov	r0, r4
   12760:	f7ff fc84 	bl	1206c <mesh_handle_pnd_pkts_for_arr>
   12764:	e020      	b.n	127a8 <mesh_service+0x290>
   12766:	3303      	adds	r3, #3
   12768:	600b      	str	r3, [r1, #0]
   1276a:	e734      	b.n	125d6 <mesh_service+0xbe>
   1276c:	4285      	cmp	r5, r0
   1276e:	f43f af39 	beq.w	125e4 <mesh_service+0xcc>
   12772:	f7ff fc4f 	bl	12014 <mesh_get_rte_to_modify>
   12776:	4604      	mov	r4, r0
   12778:	f7ff fbce 	bl	11f18 <mesh_update_rte_scores>
   1277c:	7823      	ldrb	r3, [r4, #0]
   1277e:	b13b      	cbz	r3, 12790 <mesh_service+0x278>
   12780:	f89d 3005 	ldrb.w	r3, [sp, #5]
   12784:	78a2      	ldrb	r2, [r4, #2]
   12786:	f003 030f 	and.w	r3, r3, #15
   1278a:	4293      	cmp	r3, r2
   1278c:	f73f af2a 	bgt.w	125e4 <mesh_service+0xcc>
   12790:	f89d 3000 	ldrb.w	r3, [sp]
   12794:	7023      	strb	r3, [r4, #0]
   12796:	f89d 3002 	ldrb.w	r3, [sp, #2]
   1279a:	7063      	strb	r3, [r4, #1]
   1279c:	f89d 3005 	ldrb.w	r3, [sp, #5]
   127a0:	f3c3 0303 	ubfx	r3, r3, #0, #4
   127a4:	70a3      	strb	r3, [r4, #2]
   127a6:	e71d      	b.n	125e4 <mesh_service+0xcc>
   127a8:	b008      	add	sp, #32
   127aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   127ae:	bf00      	nop
   127b0:	2007c2f0 	.word	0x2007c2f0
   127b4:	2007c228 	.word	0x2007c228
   127b8:	2007c2e4 	.word	0x2007c2e4
   127bc:	2007c314 	.word	0x2007c314
   127c0:	2007c045 	.word	0x2007c045
   127c4:	2007c308 	.word	0x2007c308
   127c8:	2007c040 	.word	0x2007c040
   127cc:	2007c2cc 	.word	0x2007c2cc
   127d0:	2007c2f1 	.word	0x2007c2f1
   127d4:	2007c23c 	.word	0x2007c23c
   127d8:	2007c315 	.word	0x2007c315

000127dc <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
   127dc:	2300      	movs	r3, #0
   127de:	4618      	mov	r0, r3
   127e0:	4a09      	ldr	r2, [pc, #36]	; (12808 <mesh_get_pnd_pkt_count+0x2c>)
   127e2:	18d1      	adds	r1, r2, r3
   127e4:	7849      	ldrb	r1, [r1, #1]
   127e6:	b109      	cbz	r1, 127ec <mesh_get_pnd_pkt_count+0x10>
   127e8:	3001      	adds	r0, #1
   127ea:	b2c0      	uxtb	r0, r0
   127ec:	3324      	adds	r3, #36	; 0x24
   127ee:	2b90      	cmp	r3, #144	; 0x90
   127f0:	d1f7      	bne.n	127e2 <mesh_get_pnd_pkt_count+0x6>
   127f2:	4b06      	ldr	r3, [pc, #24]	; (1280c <mesh_get_pnd_pkt_count+0x30>)
   127f4:	785a      	ldrb	r2, [r3, #1]
   127f6:	b10a      	cbz	r2, 127fc <mesh_get_pnd_pkt_count+0x20>
   127f8:	3001      	adds	r0, #1
   127fa:	b2c0      	uxtb	r0, r0
   127fc:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   12800:	b10b      	cbz	r3, 12806 <mesh_get_pnd_pkt_count+0x2a>
   12802:	3001      	adds	r0, #1
   12804:	b2c0      	uxtb	r0, r0
   12806:	4770      	bx	lr
   12808:	2007c23c 	.word	0x2007c23c
   1280c:	2007c315 	.word	0x2007c315

00012810 <mesh_get_max_timeout_before_packet_fails>:
mesh_get_max_timeout_before_packet_fails():
   12810:	b508      	push	{r3, lr}
   12812:	f7ff fb6f 	bl	11ef4 <mesh_find_rte_tbl_entry>
   12816:	4b06      	ldr	r3, [pc, #24]	; (12830 <mesh_get_max_timeout_before_packet_fails+0x20>)
   12818:	b128      	cbz	r0, 12826 <mesh_get_max_timeout_before_packet_fails+0x16>
   1281a:	7882      	ldrb	r2, [r0, #2]
   1281c:	7818      	ldrb	r0, [r3, #0]
   1281e:	fb02 0000 	mla	r0, r2, r0, r0
   12822:	00c0      	lsls	r0, r0, #3
   12824:	bd08      	pop	{r3, pc}
   12826:	7818      	ldrb	r0, [r3, #0]
   12828:	2318      	movs	r3, #24
   1282a:	4358      	muls	r0, r3
   1282c:	bd08      	pop	{r3, pc}
   1282e:	bf00      	nop
   12830:	2007c044 	.word	0x2007c044

00012834 <mesh_get_stats>:
mesh_get_stats():
   12834:	4903      	ldr	r1, [pc, #12]	; (12844 <mesh_get_stats+0x10>)
   12836:	680b      	ldr	r3, [r1, #0]
   12838:	6003      	str	r3, [r0, #0]
   1283a:	684b      	ldr	r3, [r1, #4]
   1283c:	6043      	str	r3, [r0, #4]
   1283e:	688b      	ldr	r3, [r1, #8]
   12840:	6083      	str	r3, [r0, #8]
   12842:	4770      	bx	lr
   12844:	2007c2e4 	.word	0x2007c2e4

00012848 <get_fattime>:
get_fattime():
   12848:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1284a:	a801      	add	r0, sp, #4
   1284c:	f7fe f94a 	bl	10ae4 <rtc_gettime>
   12850:	f89d 3008 	ldrb.w	r3, [sp, #8]
   12854:	f89d 2009 	ldrb.w	r2, [sp, #9]
   12858:	f003 031f 	and.w	r3, r3, #31
   1285c:	f002 020f 	and.w	r2, r2, #15
   12860:	041b      	lsls	r3, r3, #16
   12862:	ea43 5142 	orr.w	r1, r3, r2, lsl #21
   12866:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1286a:	f89d 0004 	ldrb.w	r0, [sp, #4]
   1286e:	f003 031f 	and.w	r3, r3, #31
   12872:	ea41 22c3 	orr.w	r2, r1, r3, lsl #11
   12876:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1287a:	f3c0 0044 	ubfx	r0, r0, #1, #5
   1287e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   12882:	ea42 1343 	orr.w	r3, r2, r3, lsl #5
   12886:	f8bd 200a 	ldrh.w	r2, [sp, #10]
   1288a:	4318      	orrs	r0, r3
   1288c:	0652      	lsls	r2, r2, #25
   1288e:	f102 4208 	add.w	r2, r2, #2281701376	; 0x88000000
   12892:	4310      	orrs	r0, r2
   12894:	b005      	add	sp, #20
   12896:	f85d fb04 	ldr.w	pc, [sp], #4

0001289a <mem_cpy>:
mem_cpy():
   1289a:	b530      	push	{r4, r5, lr}
   1289c:	4604      	mov	r4, r0
   1289e:	1f0d      	subs	r5, r1, #4
   128a0:	1b13      	subs	r3, r2, r4
   128a2:	4403      	add	r3, r0
   128a4:	2b03      	cmp	r3, #3
   128a6:	d904      	bls.n	128b2 <mem_cpy+0x18>
   128a8:	f855 3f04 	ldr.w	r3, [r5, #4]!
   128ac:	f844 3b04 	str.w	r3, [r4], #4
   128b0:	e7f6      	b.n	128a0 <mem_cpy+0x6>
   128b2:	0894      	lsrs	r4, r2, #2
   128b4:	00a3      	lsls	r3, r4, #2
   128b6:	4419      	add	r1, r3
   128b8:	eba2 0284 	sub.w	r2, r2, r4, lsl #2
   128bc:	3b01      	subs	r3, #1
   128be:	4418      	add	r0, r3
   128c0:	440a      	add	r2, r1
   128c2:	4291      	cmp	r1, r2
   128c4:	d004      	beq.n	128d0 <mem_cpy+0x36>
   128c6:	f811 3b01 	ldrb.w	r3, [r1], #1
   128ca:	f800 3f01 	strb.w	r3, [r0, #1]!
   128ce:	e7f8      	b.n	128c2 <mem_cpy+0x28>
   128d0:	bd30      	pop	{r4, r5, pc}

000128d2 <mem_set>:
mem_set():
   128d2:	4402      	add	r2, r0
   128d4:	4290      	cmp	r0, r2
   128d6:	d002      	beq.n	128de <mem_set+0xc>
   128d8:	f800 1b01 	strb.w	r1, [r0], #1
   128dc:	e7fa      	b.n	128d4 <mem_set+0x2>
   128de:	4770      	bx	lr

000128e0 <sum_sfn>:
sum_sfn():
   128e0:	f100 010b 	add.w	r1, r0, #11
   128e4:	2300      	movs	r3, #0
   128e6:	01da      	lsls	r2, r3, #7
   128e8:	ea42 0353 	orr.w	r3, r2, r3, lsr #1
   128ec:	f810 2b01 	ldrb.w	r2, [r0], #1
   128f0:	4413      	add	r3, r2
   128f2:	4288      	cmp	r0, r1
   128f4:	f003 03ff 	and.w	r3, r3, #255	; 0xff
   128f8:	d1f5      	bne.n	128e6 <sum_sfn+0x6>
   128fa:	4618      	mov	r0, r3
   128fc:	4770      	bx	lr

000128fe <get_ldnumber>:
get_ldnumber():
   128fe:	6803      	ldr	r3, [r0, #0]
   12900:	b510      	push	{r4, lr}
   12902:	4604      	mov	r4, r0
   12904:	b1b3      	cbz	r3, 12934 <get_ldnumber+0x36>
   12906:	4619      	mov	r1, r3
   12908:	460a      	mov	r2, r1
   1290a:	f811 0b01 	ldrb.w	r0, [r1], #1
   1290e:	281f      	cmp	r0, #31
   12910:	d902      	bls.n	12918 <get_ldnumber+0x1a>
   12912:	283a      	cmp	r0, #58	; 0x3a
   12914:	d1f8      	bne.n	12908 <get_ldnumber+0xa>
   12916:	e001      	b.n	1291c <get_ldnumber+0x1e>
   12918:	2000      	movs	r0, #0
   1291a:	bd10      	pop	{r4, pc}
   1291c:	1c59      	adds	r1, r3, #1
   1291e:	428a      	cmp	r2, r1
   12920:	d108      	bne.n	12934 <get_ldnumber+0x36>
   12922:	781b      	ldrb	r3, [r3, #0]
   12924:	3b30      	subs	r3, #48	; 0x30
   12926:	b2d9      	uxtb	r1, r3
   12928:	2901      	cmp	r1, #1
   1292a:	d803      	bhi.n	12934 <get_ldnumber+0x36>
   1292c:	3201      	adds	r2, #1
   1292e:	4618      	mov	r0, r3
   12930:	6022      	str	r2, [r4, #0]
   12932:	bd10      	pop	{r4, pc}
   12934:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   12938:	bd10      	pop	{r4, pc}

0001293a <get_fileinfo>:
get_fileinfo():
   1293a:	6903      	ldr	r3, [r0, #16]
   1293c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   12940:	f101 0209 	add.w	r2, r1, #9
   12944:	460d      	mov	r5, r1
   12946:	b363      	cbz	r3, 129a2 <get_fileinfo+0x68>
   12948:	6941      	ldr	r1, [r0, #20]
   1294a:	2400      	movs	r4, #0
   1294c:	1e4e      	subs	r6, r1, #1
   1294e:	272e      	movs	r7, #46	; 0x2e
   12950:	f816 3f01 	ldrb.w	r3, [r6, #1]!
   12954:	3401      	adds	r4, #1
   12956:	2b20      	cmp	r3, #32
   12958:	d019      	beq.n	1298e <get_fileinfo+0x54>
   1295a:	2b05      	cmp	r3, #5
   1295c:	d048      	beq.n	129f0 <get_fileinfo+0xb6>
   1295e:	2c09      	cmp	r4, #9
   12960:	d101      	bne.n	12966 <get_fileinfo+0x2c>
   12962:	7017      	strb	r7, [r2, #0]
   12964:	3201      	adds	r2, #1
   12966:	f1a3 0e41 	sub.w	lr, r3, #65	; 0x41
   1296a:	f1be 0f19 	cmp.w	lr, #25
   1296e:	d80c      	bhi.n	1298a <get_fileinfo+0x50>
   12970:	2c08      	cmp	r4, #8
   12972:	f891 e00c 	ldrb.w	lr, [r1, #12]
   12976:	bf8c      	ite	hi
   12978:	f04f 0c10 	movhi.w	ip, #16
   1297c:	f04f 0c08 	movls.w	ip, #8
   12980:	ea1c 0f0e 	tst.w	ip, lr
   12984:	bf1c      	itt	ne
   12986:	3320      	addne	r3, #32
   12988:	b2db      	uxtbne	r3, r3
   1298a:	7013      	strb	r3, [r2, #0]
   1298c:	3201      	adds	r2, #1
   1298e:	2c0b      	cmp	r4, #11
   12990:	d1de      	bne.n	12950 <get_fileinfo+0x16>
   12992:	7acb      	ldrb	r3, [r1, #11]
   12994:	722b      	strb	r3, [r5, #8]
   12996:	69cb      	ldr	r3, [r1, #28]
   12998:	602b      	str	r3, [r5, #0]
   1299a:	8b0b      	ldrh	r3, [r1, #24]
   1299c:	80ab      	strh	r3, [r5, #4]
   1299e:	8acb      	ldrh	r3, [r1, #22]
   129a0:	80eb      	strh	r3, [r5, #6]
   129a2:	2400      	movs	r4, #0
   129a4:	7014      	strb	r4, [r2, #0]
   129a6:	69ae      	ldr	r6, [r5, #24]
   129a8:	b33e      	cbz	r6, 129fa <get_fileinfo+0xc0>
   129aa:	6903      	ldr	r3, [r0, #16]
   129ac:	b90b      	cbnz	r3, 129b2 <get_fileinfo+0x78>
   129ae:	2400      	movs	r4, #0
   129b0:	e01a      	b.n	129e8 <get_fileinfo+0xae>
   129b2:	69eb      	ldr	r3, [r5, #28]
   129b4:	2b00      	cmp	r3, #0
   129b6:	d0fa      	beq.n	129ae <get_fileinfo+0x74>
   129b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
   129bc:	8c02      	ldrh	r2, [r0, #32]
   129be:	429a      	cmp	r2, r3
   129c0:	d0f5      	beq.n	129ae <get_fileinfo+0x74>
   129c2:	f8d0 801c 	ldr.w	r8, [r0, #28]
   129c6:	1e77      	subs	r7, r6, #1
   129c8:	f838 0014 	ldrh.w	r0, [r8, r4, lsl #1]
   129cc:	b160      	cbz	r0, 129e8 <get_fileinfo+0xae>
   129ce:	2100      	movs	r1, #0
   129d0:	f001 ffe6 	bl	149a0 <ff_convert>
   129d4:	2800      	cmp	r0, #0
   129d6:	d0ea      	beq.n	129ae <get_fileinfo+0x74>
   129d8:	69eb      	ldr	r3, [r5, #28]
   129da:	3b01      	subs	r3, #1
   129dc:	429c      	cmp	r4, r3
   129de:	d2e6      	bcs.n	129ae <get_fileinfo+0x74>
   129e0:	3401      	adds	r4, #1
   129e2:	f807 0f01 	strb.w	r0, [r7, #1]!
   129e6:	e7ef      	b.n	129c8 <get_fileinfo+0x8e>
   129e8:	2300      	movs	r3, #0
   129ea:	5533      	strb	r3, [r6, r4]
   129ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   129f0:	2c09      	cmp	r4, #9
   129f2:	f04f 03e5 	mov.w	r3, #229	; 0xe5
   129f6:	d1c8      	bne.n	1298a <get_fileinfo+0x50>
   129f8:	e7b3      	b.n	12962 <get_fileinfo+0x28>
   129fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000129fe <sync_window.part.1>:
sync_window.part.1():
   129fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12a00:	6b05      	ldr	r5, [r0, #48]	; 0x30
   12a02:	f100 0734 	add.w	r7, r0, #52	; 0x34
   12a06:	4604      	mov	r4, r0
   12a08:	2301      	movs	r3, #1
   12a0a:	462a      	mov	r2, r5
   12a0c:	4639      	mov	r1, r7
   12a0e:	7840      	ldrb	r0, [r0, #1]
   12a10:	f002 fe53 	bl	156ba <disk_write>
   12a14:	b9a0      	cbnz	r0, 12a40 <sync_window.part.1+0x42>
   12a16:	6a63      	ldr	r3, [r4, #36]	; 0x24
   12a18:	69e2      	ldr	r2, [r4, #28]
   12a1a:	1aeb      	subs	r3, r5, r3
   12a1c:	4293      	cmp	r3, r2
   12a1e:	7120      	strb	r0, [r4, #4]
   12a20:	d301      	bcc.n	12a26 <sync_window.part.1+0x28>
   12a22:	2000      	movs	r0, #0
   12a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12a26:	78e6      	ldrb	r6, [r4, #3]
   12a28:	2e01      	cmp	r6, #1
   12a2a:	d9fa      	bls.n	12a22 <sync_window.part.1+0x24>
   12a2c:	69e3      	ldr	r3, [r4, #28]
   12a2e:	4639      	mov	r1, r7
   12a30:	441d      	add	r5, r3
   12a32:	462a      	mov	r2, r5
   12a34:	2301      	movs	r3, #1
   12a36:	7860      	ldrb	r0, [r4, #1]
   12a38:	f002 fe3f 	bl	156ba <disk_write>
   12a3c:	3e01      	subs	r6, #1
   12a3e:	e7f3      	b.n	12a28 <sync_window.part.1+0x2a>
   12a40:	2001      	movs	r0, #1
   12a42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00012a44 <sync_window>:
sync_window():
   12a44:	7903      	ldrb	r3, [r0, #4]
   12a46:	b10b      	cbz	r3, 12a4c <sync_window+0x8>
   12a48:	f7ff bfd9 	b.w	129fe <sync_window.part.1>
   12a4c:	4618      	mov	r0, r3
   12a4e:	4770      	bx	lr

00012a50 <sync_fs>:
sync_fs():
   12a50:	b570      	push	{r4, r5, r6, lr}
   12a52:	4604      	mov	r4, r0
   12a54:	f7ff fff6 	bl	12a44 <sync_window>
   12a58:	4605      	mov	r5, r0
   12a5a:	bb80      	cbnz	r0, 12abe <sync_fs+0x6e>
   12a5c:	7823      	ldrb	r3, [r4, #0]
   12a5e:	2b03      	cmp	r3, #3
   12a60:	d125      	bne.n	12aae <sync_fs+0x5e>
   12a62:	7963      	ldrb	r3, [r4, #5]
   12a64:	2b01      	cmp	r3, #1
   12a66:	d122      	bne.n	12aae <sync_fs+0x5e>
   12a68:	f104 0634 	add.w	r6, r4, #52	; 0x34
   12a6c:	4601      	mov	r1, r0
   12a6e:	f44f 7200 	mov.w	r2, #512	; 0x200
   12a72:	4630      	mov	r0, r6
   12a74:	f7ff ff2d 	bl	128d2 <mem_set>
   12a78:	f64a 2255 	movw	r2, #43605	; 0xaa55
   12a7c:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
   12a80:	4a0f      	ldr	r2, [pc, #60]	; (12ac0 <sync_fs+0x70>)
   12a82:	4631      	mov	r1, r6
   12a84:	6362      	str	r2, [r4, #52]	; 0x34
   12a86:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   12a8a:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   12a8e:	3220      	adds	r2, #32
   12a90:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
   12a94:	6962      	ldr	r2, [r4, #20]
   12a96:	7860      	ldrb	r0, [r4, #1]
   12a98:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   12a9c:	6922      	ldr	r2, [r4, #16]
   12a9e:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
   12aa2:	6a22      	ldr	r2, [r4, #32]
   12aa4:	3201      	adds	r2, #1
   12aa6:	6322      	str	r2, [r4, #48]	; 0x30
   12aa8:	f002 fe07 	bl	156ba <disk_write>
   12aac:	7165      	strb	r5, [r4, #5]
   12aae:	2200      	movs	r2, #0
   12ab0:	4611      	mov	r1, r2
   12ab2:	7860      	ldrb	r0, [r4, #1]
   12ab4:	f002 fe1d 	bl	156f2 <disk_ioctl>
   12ab8:	3000      	adds	r0, #0
   12aba:	bf18      	it	ne
   12abc:	2001      	movne	r0, #1
   12abe:	bd70      	pop	{r4, r5, r6, pc}
   12ac0:	41615252 	.word	0x41615252

00012ac4 <move_window>:
move_window():
   12ac4:	6b03      	ldr	r3, [r0, #48]	; 0x30
   12ac6:	b570      	push	{r4, r5, r6, lr}
   12ac8:	428b      	cmp	r3, r1
   12aca:	4605      	mov	r5, r0
   12acc:	460e      	mov	r6, r1
   12ace:	d010      	beq.n	12af2 <move_window+0x2e>
   12ad0:	f7ff ffb8 	bl	12a44 <sync_window>
   12ad4:	4604      	mov	r4, r0
   12ad6:	b108      	cbz	r0, 12adc <move_window+0x18>
   12ad8:	2401      	movs	r4, #1
   12ada:	e00b      	b.n	12af4 <move_window+0x30>
   12adc:	2301      	movs	r3, #1
   12ade:	4632      	mov	r2, r6
   12ae0:	f105 0134 	add.w	r1, r5, #52	; 0x34
   12ae4:	7868      	ldrb	r0, [r5, #1]
   12ae6:	f002 fdcc 	bl	15682 <disk_read>
   12aea:	2800      	cmp	r0, #0
   12aec:	d1f4      	bne.n	12ad8 <move_window+0x14>
   12aee:	632e      	str	r6, [r5, #48]	; 0x30
   12af0:	e000      	b.n	12af4 <move_window+0x30>
   12af2:	2400      	movs	r4, #0
   12af4:	4620      	mov	r0, r4
   12af6:	bd70      	pop	{r4, r5, r6, pc}

00012af8 <check_fs>:
check_fs():
   12af8:	2300      	movs	r3, #0
   12afa:	b510      	push	{r4, lr}
   12afc:	7103      	strb	r3, [r0, #4]
   12afe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   12b02:	6303      	str	r3, [r0, #48]	; 0x30
   12b04:	4604      	mov	r4, r0
   12b06:	f7ff ffdd 	bl	12ac4 <move_window>
   12b0a:	b9a0      	cbnz	r0, 12b36 <check_fs+0x3e>
   12b0c:	f64a 2355 	movw	r3, #43605	; 0xaa55
   12b10:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   12b14:	429a      	cmp	r2, r3
   12b16:	d110      	bne.n	12b3a <check_fs+0x42>
   12b18:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   12b1c:	4a08      	ldr	r2, [pc, #32]	; (12b40 <check_fs+0x48>)
   12b1e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   12b22:	4293      	cmp	r3, r2
   12b24:	d00a      	beq.n	12b3c <check_fs+0x44>
   12b26:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   12b2a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   12b2e:	1a80      	subs	r0, r0, r2
   12b30:	bf18      	it	ne
   12b32:	2001      	movne	r0, #1
   12b34:	bd10      	pop	{r4, pc}
   12b36:	2003      	movs	r0, #3
   12b38:	bd10      	pop	{r4, pc}
   12b3a:	2002      	movs	r0, #2
   12b3c:	bd10      	pop	{r4, pc}
   12b3e:	bf00      	nop
   12b40:	00544146 	.word	0x00544146

00012b44 <find_volume>:
find_volume():
   12b44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   12b48:	2300      	movs	r3, #0
   12b4a:	6003      	str	r3, [r0, #0]
   12b4c:	4607      	mov	r7, r0
   12b4e:	4608      	mov	r0, r1
   12b50:	4615      	mov	r5, r2
   12b52:	f7ff fed4 	bl	128fe <get_ldnumber>
   12b56:	1e06      	subs	r6, r0, #0
   12b58:	f2c0 80fa 	blt.w	12d50 <find_volume+0x20c>
   12b5c:	4b85      	ldr	r3, [pc, #532]	; (12d74 <find_volume+0x230>)
   12b5e:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
   12b62:	2c00      	cmp	r4, #0
   12b64:	f000 80f6 	beq.w	12d54 <find_volume+0x210>
   12b68:	68e0      	ldr	r0, [r4, #12]
   12b6a:	f001 fef7 	bl	1495c <ff_req_grant>
   12b6e:	2800      	cmp	r0, #0
   12b70:	f000 80f2 	beq.w	12d58 <find_volume+0x214>
   12b74:	603c      	str	r4, [r7, #0]
   12b76:	7823      	ldrb	r3, [r4, #0]
   12b78:	b183      	cbz	r3, 12b9c <find_volume+0x58>
   12b7a:	7860      	ldrb	r0, [r4, #1]
   12b7c:	f002 fd79 	bl	15672 <disk_status>
   12b80:	07c1      	lsls	r1, r0, #31
   12b82:	d40b      	bmi.n	12b9c <find_volume+0x58>
   12b84:	2d00      	cmp	r5, #0
   12b86:	f000 80e9 	beq.w	12d5c <find_volume+0x218>
   12b8a:	f000 0304 	and.w	r3, r0, #4
   12b8e:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   12b92:	2b00      	cmp	r3, #0
   12b94:	f000 80eb 	beq.w	12d6e <find_volume+0x22a>
   12b98:	200a      	movs	r0, #10
   12b9a:	e0e8      	b.n	12d6e <find_volume+0x22a>
   12b9c:	2300      	movs	r3, #0
   12b9e:	b2f0      	uxtb	r0, r6
   12ba0:	7023      	strb	r3, [r4, #0]
   12ba2:	7060      	strb	r0, [r4, #1]
   12ba4:	f002 fd52 	bl	1564c <disk_initialize>
   12ba8:	07c2      	lsls	r2, r0, #31
   12baa:	f100 80d9 	bmi.w	12d60 <find_volume+0x21c>
   12bae:	b10d      	cbz	r5, 12bb4 <find_volume+0x70>
   12bb0:	0743      	lsls	r3, r0, #29
   12bb2:	d4f1      	bmi.n	12b98 <find_volume+0x54>
   12bb4:	2100      	movs	r1, #0
   12bb6:	4620      	mov	r0, r4
   12bb8:	f7ff ff9e 	bl	12af8 <check_fs>
   12bbc:	2801      	cmp	r0, #1
   12bbe:	d11c      	bne.n	12bfa <find_volume+0xb6>
   12bc0:	4621      	mov	r1, r4
   12bc2:	2200      	movs	r2, #0
   12bc4:	f891 31f6 	ldrb.w	r3, [r1, #502]	; 0x1f6
   12bc8:	b10b      	cbz	r3, 12bce <find_volume+0x8a>
   12bca:	f8d1 31fa 	ldr.w	r3, [r1, #506]	; 0x1fa
   12bce:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
   12bd2:	3201      	adds	r2, #1
   12bd4:	2a04      	cmp	r2, #4
   12bd6:	f101 0110 	add.w	r1, r1, #16
   12bda:	d1f3      	bne.n	12bc4 <find_volume+0x80>
   12bdc:	2600      	movs	r6, #0
   12bde:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
   12be2:	b12d      	cbz	r5, 12bf0 <find_volume+0xac>
   12be4:	4629      	mov	r1, r5
   12be6:	4620      	mov	r0, r4
   12be8:	f7ff ff86 	bl	12af8 <check_fs>
   12bec:	b908      	cbnz	r0, 12bf2 <find_volume+0xae>
   12bee:	e00b      	b.n	12c08 <find_volume+0xc4>
   12bf0:	2002      	movs	r0, #2
   12bf2:	3601      	adds	r6, #1
   12bf4:	2e04      	cmp	r6, #4
   12bf6:	d1f2      	bne.n	12bde <find_volume+0x9a>
   12bf8:	e000      	b.n	12bfc <find_volume+0xb8>
   12bfa:	2500      	movs	r5, #0
   12bfc:	2803      	cmp	r0, #3
   12bfe:	f000 80b1 	beq.w	12d64 <find_volume+0x220>
   12c02:	b108      	cbz	r0, 12c08 <find_volume+0xc4>
   12c04:	200d      	movs	r0, #13
   12c06:	e0b2      	b.n	12d6e <find_volume+0x22a>
   12c08:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   12c0c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   12c10:	d1f8      	bne.n	12c04 <find_volume+0xc0>
   12c12:	f8b4 604a 	ldrh.w	r6, [r4, #74]	; 0x4a
   12c16:	b906      	cbnz	r6, 12c1a <find_volume+0xd6>
   12c18:	6da6      	ldr	r6, [r4, #88]	; 0x58
   12c1a:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
   12c1e:	61e6      	str	r6, [r4, #28]
   12c20:	f10e 33ff 	add.w	r3, lr, #4294967295	; 0xffffffff
   12c24:	2b01      	cmp	r3, #1
   12c26:	f884 e003 	strb.w	lr, [r4, #3]
   12c2a:	d8eb      	bhi.n	12c04 <find_volume+0xc0>
   12c2c:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
   12c30:	70a3      	strb	r3, [r4, #2]
   12c32:	2b00      	cmp	r3, #0
   12c34:	d0e6      	beq.n	12c04 <find_volume+0xc0>
   12c36:	1e5a      	subs	r2, r3, #1
   12c38:	421a      	tst	r2, r3
   12c3a:	d1e3      	bne.n	12c04 <find_volume+0xc0>
   12c3c:	f8b4 c045 	ldrh.w	ip, [r4, #69]	; 0x45
   12c40:	f01c 0f0f 	tst.w	ip, #15
   12c44:	f8a4 c008 	strh.w	ip, [r4, #8]
   12c48:	d1dc      	bne.n	12c04 <find_volume+0xc0>
   12c4a:	f8b4 2047 	ldrh.w	r2, [r4, #71]	; 0x47
   12c4e:	b902      	cbnz	r2, 12c52 <find_volume+0x10e>
   12c50:	6d62      	ldr	r2, [r4, #84]	; 0x54
   12c52:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
   12c56:	2900      	cmp	r1, #0
   12c58:	d0d4      	beq.n	12c04 <find_volume+0xc0>
   12c5a:	fb06 fe0e 	mul.w	lr, r6, lr
   12c5e:	eb01 171c 	add.w	r7, r1, ip, lsr #4
   12c62:	4477      	add	r7, lr
   12c64:	42ba      	cmp	r2, r7
   12c66:	d3cd      	bcc.n	12c04 <find_volume+0xc0>
   12c68:	1bd2      	subs	r2, r2, r7
   12c6a:	fbb2 f3f3 	udiv	r3, r2, r3
   12c6e:	2b00      	cmp	r3, #0
   12c70:	d0c8      	beq.n	12c04 <find_volume+0xc0>
   12c72:	f640 72f5 	movw	r2, #4085	; 0xff5
   12c76:	4293      	cmp	r3, r2
   12c78:	f103 0002 	add.w	r0, r3, #2
   12c7c:	eb05 0201 	add.w	r2, r5, r1
   12c80:	442f      	add	r7, r5
   12c82:	d910      	bls.n	12ca6 <find_volume+0x162>
   12c84:	f64f 71f5 	movw	r1, #65525	; 0xfff5
   12c88:	428b      	cmp	r3, r1
   12c8a:	d96d      	bls.n	12d68 <find_volume+0x224>
   12c8c:	61a0      	str	r0, [r4, #24]
   12c8e:	6225      	str	r5, [r4, #32]
   12c90:	6262      	str	r2, [r4, #36]	; 0x24
   12c92:	62e7      	str	r7, [r4, #44]	; 0x2c
   12c94:	f1bc 0f00 	cmp.w	ip, #0
   12c98:	d1b4      	bne.n	12c04 <find_volume+0xc0>
   12c9a:	6e23      	ldr	r3, [r4, #96]	; 0x60
   12c9c:	f04f 0803 	mov.w	r8, #3
   12ca0:	62a3      	str	r3, [r4, #40]	; 0x28
   12ca2:	0083      	lsls	r3, r0, #2
   12ca4:	e018      	b.n	12cd8 <find_volume+0x194>
   12ca6:	f04f 0801 	mov.w	r8, #1
   12caa:	61a0      	str	r0, [r4, #24]
   12cac:	6225      	str	r5, [r4, #32]
   12cae:	6262      	str	r2, [r4, #36]	; 0x24
   12cb0:	62e7      	str	r7, [r4, #44]	; 0x2c
   12cb2:	f1bc 0f00 	cmp.w	ip, #0
   12cb6:	d0a5      	beq.n	12c04 <find_volume+0xc0>
   12cb8:	f1b8 0f02 	cmp.w	r8, #2
   12cbc:	ea4f 0340 	mov.w	r3, r0, lsl #1
   12cc0:	bf18      	it	ne
   12cc2:	181b      	addne	r3, r3, r0
   12cc4:	4472      	add	r2, lr
   12cc6:	bf18      	it	ne
   12cc8:	f000 0001 	andne.w	r0, r0, #1
   12ccc:	62a2      	str	r2, [r4, #40]	; 0x28
   12cce:	bf1c      	itt	ne
   12cd0:	eb00 0353 	addne.w	r3, r0, r3, lsr #1
   12cd4:	f04f 0801 	movne.w	r8, #1
   12cd8:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   12cdc:	ebb6 2f53 	cmp.w	r6, r3, lsr #9
   12ce0:	d390      	bcc.n	12c04 <find_volume+0xc0>
   12ce2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   12ce6:	6163      	str	r3, [r4, #20]
   12ce8:	6123      	str	r3, [r4, #16]
   12cea:	f1b8 0f03 	cmp.w	r8, #3
   12cee:	f04f 0380 	mov.w	r3, #128	; 0x80
   12cf2:	7163      	strb	r3, [r4, #5]
   12cf4:	d122      	bne.n	12d3c <find_volume+0x1f8>
   12cf6:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   12cfa:	2b01      	cmp	r3, #1
   12cfc:	d11e      	bne.n	12d3c <find_volume+0x1f8>
   12cfe:	1c69      	adds	r1, r5, #1
   12d00:	4620      	mov	r0, r4
   12d02:	f7ff fedf 	bl	12ac4 <move_window>
   12d06:	b9c8      	cbnz	r0, 12d3c <find_volume+0x1f8>
   12d08:	f64a 2355 	movw	r3, #43605	; 0xaa55
   12d0c:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   12d10:	7160      	strb	r0, [r4, #5]
   12d12:	429a      	cmp	r2, r3
   12d14:	d112      	bne.n	12d3c <find_volume+0x1f8>
   12d16:	6b62      	ldr	r2, [r4, #52]	; 0x34
   12d18:	4b17      	ldr	r3, [pc, #92]	; (12d78 <find_volume+0x234>)
   12d1a:	429a      	cmp	r2, r3
   12d1c:	d10e      	bne.n	12d3c <find_volume+0x1f8>
   12d1e:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   12d22:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
   12d26:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   12d2a:	3320      	adds	r3, #32
   12d2c:	429a      	cmp	r2, r3
   12d2e:	bf01      	itttt	eq
   12d30:	f8d4 321c 	ldreq.w	r3, [r4, #540]	; 0x21c
   12d34:	6163      	streq	r3, [r4, #20]
   12d36:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   12d3a:	6123      	streq	r3, [r4, #16]
   12d3c:	4a0f      	ldr	r2, [pc, #60]	; (12d7c <find_volume+0x238>)
   12d3e:	f884 8000 	strb.w	r8, [r4]
   12d42:	8813      	ldrh	r3, [r2, #0]
   12d44:	2000      	movs	r0, #0
   12d46:	3301      	adds	r3, #1
   12d48:	b29b      	uxth	r3, r3
   12d4a:	8013      	strh	r3, [r2, #0]
   12d4c:	80e3      	strh	r3, [r4, #6]
   12d4e:	e00e      	b.n	12d6e <find_volume+0x22a>
   12d50:	200b      	movs	r0, #11
   12d52:	e00c      	b.n	12d6e <find_volume+0x22a>
   12d54:	200c      	movs	r0, #12
   12d56:	e00a      	b.n	12d6e <find_volume+0x22a>
   12d58:	200f      	movs	r0, #15
   12d5a:	e008      	b.n	12d6e <find_volume+0x22a>
   12d5c:	4628      	mov	r0, r5
   12d5e:	e006      	b.n	12d6e <find_volume+0x22a>
   12d60:	2003      	movs	r0, #3
   12d62:	e004      	b.n	12d6e <find_volume+0x22a>
   12d64:	2001      	movs	r0, #1
   12d66:	e002      	b.n	12d6e <find_volume+0x22a>
   12d68:	f04f 0802 	mov.w	r8, #2
   12d6c:	e79d      	b.n	12caa <find_volume+0x166>
   12d6e:	b004      	add	sp, #16
   12d70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12d74:	2007c360 	.word	0x2007c360
   12d78:	41615252 	.word	0x41615252
   12d7c:	2007c35e 	.word	0x2007c35e

00012d80 <validate>:
validate():
   12d80:	b510      	push	{r4, lr}
   12d82:	4604      	mov	r4, r0
   12d84:	b1a8      	cbz	r0, 12db2 <validate+0x32>
   12d86:	6803      	ldr	r3, [r0, #0]
   12d88:	b19b      	cbz	r3, 12db2 <validate+0x32>
   12d8a:	781a      	ldrb	r2, [r3, #0]
   12d8c:	b18a      	cbz	r2, 12db2 <validate+0x32>
   12d8e:	88d9      	ldrh	r1, [r3, #6]
   12d90:	8882      	ldrh	r2, [r0, #4]
   12d92:	4291      	cmp	r1, r2
   12d94:	d10d      	bne.n	12db2 <validate+0x32>
   12d96:	68d8      	ldr	r0, [r3, #12]
   12d98:	f001 fde0 	bl	1495c <ff_req_grant>
   12d9c:	b158      	cbz	r0, 12db6 <validate+0x36>
   12d9e:	6823      	ldr	r3, [r4, #0]
   12da0:	7858      	ldrb	r0, [r3, #1]
   12da2:	f002 fc66 	bl	15672 <disk_status>
   12da6:	f010 0f01 	tst.w	r0, #1
   12daa:	bf14      	ite	ne
   12dac:	2003      	movne	r0, #3
   12dae:	2000      	moveq	r0, #0
   12db0:	bd10      	pop	{r4, pc}
   12db2:	2009      	movs	r0, #9
   12db4:	bd10      	pop	{r4, pc}
   12db6:	200f      	movs	r0, #15
   12db8:	bd10      	pop	{r4, pc}

00012dba <unlock_fs>:
unlock_fs():
   12dba:	b150      	cbz	r0, 12dd2 <unlock_fs+0x18>
   12dbc:	290f      	cmp	r1, #15
   12dbe:	d805      	bhi.n	12dcc <unlock_fs+0x12>
   12dc0:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   12dc4:	fa23 f101 	lsr.w	r1, r3, r1
   12dc8:	07cb      	lsls	r3, r1, #31
   12dca:	d402      	bmi.n	12dd2 <unlock_fs+0x18>
   12dcc:	68c0      	ldr	r0, [r0, #12]
   12dce:	f001 bdd8 	b.w	14982 <ff_rel_grant>
   12dd2:	4770      	bx	lr

00012dd4 <clust2sect>:
clust2sect():
   12dd4:	6983      	ldr	r3, [r0, #24]
   12dd6:	3902      	subs	r1, #2
   12dd8:	3b02      	subs	r3, #2
   12dda:	4299      	cmp	r1, r3
   12ddc:	bf3d      	ittte	cc
   12dde:	7883      	ldrbcc	r3, [r0, #2]
   12de0:	6ac0      	ldrcc	r0, [r0, #44]	; 0x2c
   12de2:	fb01 0003 	mlacc	r0, r1, r3, r0
   12de6:	2000      	movcs	r0, #0
   12de8:	4770      	bx	lr

00012dea <get_fat>:
get_fat():
   12dea:	2901      	cmp	r1, #1
   12dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12dee:	4607      	mov	r7, r0
   12df0:	460c      	mov	r4, r1
   12df2:	d94b      	bls.n	12e8c <get_fat+0xa2>
   12df4:	6983      	ldr	r3, [r0, #24]
   12df6:	4299      	cmp	r1, r3
   12df8:	d248      	bcs.n	12e8c <get_fat+0xa2>
   12dfa:	7803      	ldrb	r3, [r0, #0]
   12dfc:	2b02      	cmp	r3, #2
   12dfe:	d029      	beq.n	12e54 <get_fat+0x6a>
   12e00:	2b03      	cmp	r3, #3
   12e02:	d034      	beq.n	12e6e <get_fat+0x84>
   12e04:	2b01      	cmp	r3, #1
   12e06:	d141      	bne.n	12e8c <get_fat+0xa2>
   12e08:	eb01 0651 	add.w	r6, r1, r1, lsr #1
   12e0c:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12e0e:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   12e12:	f7ff fe57 	bl	12ac4 <move_window>
   12e16:	b110      	cbz	r0, 12e1e <get_fat+0x34>
   12e18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   12e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12e1e:	6a79      	ldr	r1, [r7, #36]	; 0x24
   12e20:	f3c6 0308 	ubfx	r3, r6, #0, #9
   12e24:	3601      	adds	r6, #1
   12e26:	443b      	add	r3, r7
   12e28:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   12e2c:	4638      	mov	r0, r7
   12e2e:	f893 5034 	ldrb.w	r5, [r3, #52]	; 0x34
   12e32:	f7ff fe47 	bl	12ac4 <move_window>
   12e36:	2800      	cmp	r0, #0
   12e38:	d1ee      	bne.n	12e18 <get_fat+0x2e>
   12e3a:	f3c6 0608 	ubfx	r6, r6, #0, #9
   12e3e:	443e      	add	r6, r7
   12e40:	f896 0034 	ldrb.w	r0, [r6, #52]	; 0x34
   12e44:	07e3      	lsls	r3, r4, #31
   12e46:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
   12e4a:	bf4c      	ite	mi
   12e4c:	0900      	lsrmi	r0, r0, #4
   12e4e:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   12e52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12e54:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12e56:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   12e5a:	f7ff fe33 	bl	12ac4 <move_window>
   12e5e:	2800      	cmp	r0, #0
   12e60:	d1da      	bne.n	12e18 <get_fat+0x2e>
   12e62:	0063      	lsls	r3, r4, #1
   12e64:	f403 73ff 	and.w	r3, r3, #510	; 0x1fe
   12e68:	18fe      	adds	r6, r7, r3
   12e6a:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
   12e6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12e6e:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12e70:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   12e74:	f7ff fe26 	bl	12ac4 <move_window>
   12e78:	2800      	cmp	r0, #0
   12e7a:	d1cd      	bne.n	12e18 <get_fat+0x2e>
   12e7c:	00a4      	lsls	r4, r4, #2
   12e7e:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   12e82:	443c      	add	r4, r7
   12e84:	6b60      	ldr	r0, [r4, #52]	; 0x34
   12e86:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   12e8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12e8c:	2001      	movs	r0, #1
   12e8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00012e90 <dir_sdi>:
dir_sdi():
   12e90:	b570      	push	{r4, r5, r6, lr}
   12e92:	4604      	mov	r4, r0
   12e94:	6882      	ldr	r2, [r0, #8]
   12e96:	460d      	mov	r5, r1
   12e98:	2a01      	cmp	r2, #1
   12e9a:	80e1      	strh	r1, [r4, #6]
   12e9c:	d101      	bne.n	12ea2 <dir_sdi+0x12>
   12e9e:	2002      	movs	r0, #2
   12ea0:	bd70      	pop	{r4, r5, r6, pc}
   12ea2:	6803      	ldr	r3, [r0, #0]
   12ea4:	6999      	ldr	r1, [r3, #24]
   12ea6:	428a      	cmp	r2, r1
   12ea8:	d2f9      	bcs.n	12e9e <dir_sdi+0xe>
   12eaa:	b952      	cbnz	r2, 12ec2 <dir_sdi+0x32>
   12eac:	7819      	ldrb	r1, [r3, #0]
   12eae:	2903      	cmp	r1, #3
   12eb0:	d101      	bne.n	12eb6 <dir_sdi+0x26>
   12eb2:	6a99      	ldr	r1, [r3, #40]	; 0x28
   12eb4:	b921      	cbnz	r1, 12ec0 <dir_sdi+0x30>
   12eb6:	8919      	ldrh	r1, [r3, #8]
   12eb8:	428d      	cmp	r5, r1
   12eba:	d2f0      	bcs.n	12e9e <dir_sdi+0xe>
   12ebc:	6a98      	ldr	r0, [r3, #40]	; 0x28
   12ebe:	e015      	b.n	12eec <dir_sdi+0x5c>
   12ec0:	460a      	mov	r2, r1
   12ec2:	789e      	ldrb	r6, [r3, #2]
   12ec4:	0136      	lsls	r6, r6, #4
   12ec6:	42b5      	cmp	r5, r6
   12ec8:	4611      	mov	r1, r2
   12eca:	6820      	ldr	r0, [r4, #0]
   12ecc:	d30c      	bcc.n	12ee8 <dir_sdi+0x58>
   12ece:	f7ff ff8c 	bl	12dea <get_fat>
   12ed2:	1c43      	adds	r3, r0, #1
   12ed4:	4602      	mov	r2, r0
   12ed6:	d018      	beq.n	12f0a <dir_sdi+0x7a>
   12ed8:	2801      	cmp	r0, #1
   12eda:	d9e0      	bls.n	12e9e <dir_sdi+0xe>
   12edc:	6823      	ldr	r3, [r4, #0]
   12ede:	699b      	ldr	r3, [r3, #24]
   12ee0:	4298      	cmp	r0, r3
   12ee2:	d2dc      	bcs.n	12e9e <dir_sdi+0xe>
   12ee4:	1bad      	subs	r5, r5, r6
   12ee6:	e7ee      	b.n	12ec6 <dir_sdi+0x36>
   12ee8:	f7ff ff74 	bl	12dd4 <clust2sect>
   12eec:	60e2      	str	r2, [r4, #12]
   12eee:	2800      	cmp	r0, #0
   12ef0:	d0d5      	beq.n	12e9e <dir_sdi+0xe>
   12ef2:	6823      	ldr	r3, [r4, #0]
   12ef4:	eb00 1015 	add.w	r0, r0, r5, lsr #4
   12ef8:	3334      	adds	r3, #52	; 0x34
   12efa:	f005 050f 	and.w	r5, r5, #15
   12efe:	eb03 1545 	add.w	r5, r3, r5, lsl #5
   12f02:	6120      	str	r0, [r4, #16]
   12f04:	6165      	str	r5, [r4, #20]
   12f06:	2000      	movs	r0, #0
   12f08:	bd70      	pop	{r4, r5, r6, pc}
   12f0a:	2001      	movs	r0, #1
   12f0c:	bd70      	pop	{r4, r5, r6, pc}

00012f0e <put_fat>:
put_fat():
   12f0e:	2901      	cmp	r1, #1
   12f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12f12:	4605      	mov	r5, r0
   12f14:	460c      	mov	r4, r1
   12f16:	4616      	mov	r6, r2
   12f18:	d95f      	bls.n	12fda <put_fat+0xcc>
   12f1a:	6983      	ldr	r3, [r0, #24]
   12f1c:	4299      	cmp	r1, r3
   12f1e:	d25c      	bcs.n	12fda <put_fat+0xcc>
   12f20:	7803      	ldrb	r3, [r0, #0]
   12f22:	2b02      	cmp	r3, #2
   12f24:	d038      	beq.n	12f98 <put_fat+0x8a>
   12f26:	2b03      	cmp	r3, #3
   12f28:	d042      	beq.n	12fb0 <put_fat+0xa2>
   12f2a:	2b01      	cmp	r3, #1
   12f2c:	d151      	bne.n	12fd2 <put_fat+0xc4>
   12f2e:	eb01 0751 	add.w	r7, r1, r1, lsr #1
   12f32:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12f34:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   12f38:	f7ff fdc4 	bl	12ac4 <move_window>
   12f3c:	2800      	cmp	r0, #0
   12f3e:	d149      	bne.n	12fd4 <put_fat+0xc6>
   12f40:	f3c7 0208 	ubfx	r2, r7, #0, #9
   12f44:	f014 0401 	ands.w	r4, r4, #1
   12f48:	442a      	add	r2, r5
   12f4a:	bf17      	itett	ne
   12f4c:	f892 3034 	ldrbne.w	r3, [r2, #52]	; 0x34
   12f50:	b2f3      	uxtbeq	r3, r6
   12f52:	f003 030f 	andne.w	r3, r3, #15
   12f56:	ea43 1306 	orrne.w	r3, r3, r6, lsl #4
   12f5a:	bf18      	it	ne
   12f5c:	b2db      	uxtbne	r3, r3
   12f5e:	f882 3034 	strb.w	r3, [r2, #52]	; 0x34
   12f62:	6a69      	ldr	r1, [r5, #36]	; 0x24
   12f64:	3701      	adds	r7, #1
   12f66:	2301      	movs	r3, #1
   12f68:	712b      	strb	r3, [r5, #4]
   12f6a:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   12f6e:	4628      	mov	r0, r5
   12f70:	f7ff fda8 	bl	12ac4 <move_window>
   12f74:	bb70      	cbnz	r0, 12fd4 <put_fat+0xc6>
   12f76:	f3c7 0708 	ubfx	r7, r7, #0, #9
   12f7a:	442f      	add	r7, r5
   12f7c:	b114      	cbz	r4, 12f84 <put_fat+0x76>
   12f7e:	f3c6 1607 	ubfx	r6, r6, #4, #8
   12f82:	e006      	b.n	12f92 <put_fat+0x84>
   12f84:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   12f88:	f3c6 2603 	ubfx	r6, r6, #8, #4
   12f8c:	f023 030f 	bic.w	r3, r3, #15
   12f90:	431e      	orrs	r6, r3
   12f92:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
   12f96:	e01d      	b.n	12fd4 <put_fat+0xc6>
   12f98:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12f9a:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   12f9e:	f7ff fd91 	bl	12ac4 <move_window>
   12fa2:	b9b8      	cbnz	r0, 12fd4 <put_fat+0xc6>
   12fa4:	0064      	lsls	r4, r4, #1
   12fa6:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
   12faa:	442c      	add	r4, r5
   12fac:	86a6      	strh	r6, [r4, #52]	; 0x34
   12fae:	e011      	b.n	12fd4 <put_fat+0xc6>
   12fb0:	6a41      	ldr	r1, [r0, #36]	; 0x24
   12fb2:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   12fb6:	f7ff fd85 	bl	12ac4 <move_window>
   12fba:	b958      	cbnz	r0, 12fd4 <put_fat+0xc6>
   12fbc:	00a4      	lsls	r4, r4, #2
   12fbe:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   12fc2:	3430      	adds	r4, #48	; 0x30
   12fc4:	442c      	add	r4, r5
   12fc6:	6863      	ldr	r3, [r4, #4]
   12fc8:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   12fcc:	431e      	orrs	r6, r3
   12fce:	6066      	str	r6, [r4, #4]
   12fd0:	e000      	b.n	12fd4 <put_fat+0xc6>
   12fd2:	2002      	movs	r0, #2
   12fd4:	2301      	movs	r3, #1
   12fd6:	712b      	strb	r3, [r5, #4]
   12fd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12fda:	2002      	movs	r0, #2
   12fdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00012fde <create_chain>:
create_chain():
   12fde:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12fe0:	4605      	mov	r5, r0
   12fe2:	460f      	mov	r7, r1
   12fe4:	b931      	cbnz	r1, 12ff4 <create_chain+0x16>
   12fe6:	6906      	ldr	r6, [r0, #16]
   12fe8:	b196      	cbz	r6, 13010 <create_chain+0x32>
   12fea:	6983      	ldr	r3, [r0, #24]
   12fec:	429e      	cmp	r6, r3
   12fee:	bf28      	it	cs
   12ff0:	2601      	movcs	r6, #1
   12ff2:	e00e      	b.n	13012 <create_chain+0x34>
   12ff4:	f7ff fef9 	bl	12dea <get_fat>
   12ff8:	2801      	cmp	r0, #1
   12ffa:	d93f      	bls.n	1307c <create_chain+0x9e>
   12ffc:	1c44      	adds	r4, r0, #1
   12ffe:	d102      	bne.n	13006 <create_chain+0x28>
   13000:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   13004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13006:	69ab      	ldr	r3, [r5, #24]
   13008:	4298      	cmp	r0, r3
   1300a:	d338      	bcc.n	1307e <create_chain+0xa0>
   1300c:	463e      	mov	r6, r7
   1300e:	e000      	b.n	13012 <create_chain+0x34>
   13010:	2601      	movs	r6, #1
   13012:	4634      	mov	r4, r6
   13014:	69ab      	ldr	r3, [r5, #24]
   13016:	3401      	adds	r4, #1
   13018:	429c      	cmp	r4, r3
   1301a:	d304      	bcc.n	13026 <create_chain+0x48>
   1301c:	2e01      	cmp	r6, #1
   1301e:	d801      	bhi.n	13024 <create_chain+0x46>
   13020:	2000      	movs	r0, #0
   13022:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13024:	2402      	movs	r4, #2
   13026:	4621      	mov	r1, r4
   13028:	4628      	mov	r0, r5
   1302a:	f7ff fede 	bl	12dea <get_fat>
   1302e:	b130      	cbz	r0, 1303e <create_chain+0x60>
   13030:	1c41      	adds	r1, r0, #1
   13032:	d0e5      	beq.n	13000 <create_chain+0x22>
   13034:	2801      	cmp	r0, #1
   13036:	d021      	beq.n	1307c <create_chain+0x9e>
   13038:	42b4      	cmp	r4, r6
   1303a:	d1eb      	bne.n	13014 <create_chain+0x36>
   1303c:	e7f0      	b.n	13020 <create_chain+0x42>
   1303e:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   13042:	4621      	mov	r1, r4
   13044:	4628      	mov	r0, r5
   13046:	f7ff ff62 	bl	12f0e <put_fat>
   1304a:	b9a8      	cbnz	r0, 13078 <create_chain+0x9a>
   1304c:	b957      	cbnz	r7, 13064 <create_chain+0x86>
   1304e:	696b      	ldr	r3, [r5, #20]
   13050:	612c      	str	r4, [r5, #16]
   13052:	1c5a      	adds	r2, r3, #1
   13054:	d00e      	beq.n	13074 <create_chain+0x96>
   13056:	3b01      	subs	r3, #1
   13058:	616b      	str	r3, [r5, #20]
   1305a:	796b      	ldrb	r3, [r5, #5]
   1305c:	f043 0301 	orr.w	r3, r3, #1
   13060:	716b      	strb	r3, [r5, #5]
   13062:	e007      	b.n	13074 <create_chain+0x96>
   13064:	4622      	mov	r2, r4
   13066:	4639      	mov	r1, r7
   13068:	4628      	mov	r0, r5
   1306a:	f7ff ff50 	bl	12f0e <put_fat>
   1306e:	2800      	cmp	r0, #0
   13070:	d0ed      	beq.n	1304e <create_chain+0x70>
   13072:	e001      	b.n	13078 <create_chain+0x9a>
   13074:	4620      	mov	r0, r4
   13076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13078:	2801      	cmp	r0, #1
   1307a:	d0c1      	beq.n	13000 <create_chain+0x22>
   1307c:	2001      	movs	r0, #1
   1307e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00013080 <dir_next>:
dir_next():
   13080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13084:	88c6      	ldrh	r6, [r0, #6]
   13086:	4604      	mov	r4, r0
   13088:	3601      	adds	r6, #1
   1308a:	b2b3      	uxth	r3, r6
   1308c:	460f      	mov	r7, r1
   1308e:	b913      	cbnz	r3, 13096 <dir_next+0x16>
   13090:	2004      	movs	r0, #4
   13092:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   13096:	6903      	ldr	r3, [r0, #16]
   13098:	2b00      	cmp	r3, #0
   1309a:	d0f9      	beq.n	13090 <dir_next+0x10>
   1309c:	f016 080f 	ands.w	r8, r6, #15
   130a0:	d159      	bne.n	13156 <dir_next+0xd6>
   130a2:	68c1      	ldr	r1, [r0, #12]
   130a4:	3301      	adds	r3, #1
   130a6:	6103      	str	r3, [r0, #16]
   130a8:	6800      	ldr	r0, [r0, #0]
   130aa:	b919      	cbnz	r1, 130b4 <dir_next+0x34>
   130ac:	8903      	ldrh	r3, [r0, #8]
   130ae:	429e      	cmp	r6, r3
   130b0:	d2ee      	bcs.n	13090 <dir_next+0x10>
   130b2:	e050      	b.n	13156 <dir_next+0xd6>
   130b4:	7883      	ldrb	r3, [r0, #2]
   130b6:	3b01      	subs	r3, #1
   130b8:	ea13 1316 	ands.w	r3, r3, r6, lsr #4
   130bc:	d14b      	bne.n	13156 <dir_next+0xd6>
   130be:	f7ff fe94 	bl	12dea <get_fat>
   130c2:	2801      	cmp	r0, #1
   130c4:	4605      	mov	r5, r0
   130c6:	d802      	bhi.n	130ce <dir_next+0x4e>
   130c8:	2002      	movs	r0, #2
   130ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   130ce:	1c42      	adds	r2, r0, #1
   130d0:	d102      	bne.n	130d8 <dir_next+0x58>
   130d2:	2001      	movs	r0, #1
   130d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   130d8:	6820      	ldr	r0, [r4, #0]
   130da:	6983      	ldr	r3, [r0, #24]
   130dc:	429d      	cmp	r5, r3
   130de:	d334      	bcc.n	1314a <dir_next+0xca>
   130e0:	2f00      	cmp	r7, #0
   130e2:	d0d5      	beq.n	13090 <dir_next+0x10>
   130e4:	68e1      	ldr	r1, [r4, #12]
   130e6:	f7ff ff7a 	bl	12fde <create_chain>
   130ea:	4605      	mov	r5, r0
   130ec:	2800      	cmp	r0, #0
   130ee:	d03b      	beq.n	13168 <dir_next+0xe8>
   130f0:	2801      	cmp	r0, #1
   130f2:	d0e9      	beq.n	130c8 <dir_next+0x48>
   130f4:	1c43      	adds	r3, r0, #1
   130f6:	d0ec      	beq.n	130d2 <dir_next+0x52>
   130f8:	6820      	ldr	r0, [r4, #0]
   130fa:	f7ff fca3 	bl	12a44 <sync_window>
   130fe:	4607      	mov	r7, r0
   13100:	2800      	cmp	r0, #0
   13102:	d1e6      	bne.n	130d2 <dir_next+0x52>
   13104:	6820      	ldr	r0, [r4, #0]
   13106:	f44f 7200 	mov.w	r2, #512	; 0x200
   1310a:	4639      	mov	r1, r7
   1310c:	3034      	adds	r0, #52	; 0x34
   1310e:	f7ff fbe0 	bl	128d2 <mem_set>
   13112:	6822      	ldr	r2, [r4, #0]
   13114:	4629      	mov	r1, r5
   13116:	4610      	mov	r0, r2
   13118:	f7ff fe5c 	bl	12dd4 <clust2sect>
   1311c:	f04f 0901 	mov.w	r9, #1
   13120:	6310      	str	r0, [r2, #48]	; 0x30
   13122:	6823      	ldr	r3, [r4, #0]
   13124:	789a      	ldrb	r2, [r3, #2]
   13126:	4297      	cmp	r7, r2
   13128:	d20c      	bcs.n	13144 <dir_next+0xc4>
   1312a:	f883 9004 	strb.w	r9, [r3, #4]
   1312e:	6820      	ldr	r0, [r4, #0]
   13130:	f7ff fc88 	bl	12a44 <sync_window>
   13134:	2800      	cmp	r0, #0
   13136:	d1cc      	bne.n	130d2 <dir_next+0x52>
   13138:	6822      	ldr	r2, [r4, #0]
   1313a:	3701      	adds	r7, #1
   1313c:	6b13      	ldr	r3, [r2, #48]	; 0x30
   1313e:	3301      	adds	r3, #1
   13140:	6313      	str	r3, [r2, #48]	; 0x30
   13142:	e7ee      	b.n	13122 <dir_next+0xa2>
   13144:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   13146:	1bd7      	subs	r7, r2, r7
   13148:	631f      	str	r7, [r3, #48]	; 0x30
   1314a:	60e5      	str	r5, [r4, #12]
   1314c:	4629      	mov	r1, r5
   1314e:	6820      	ldr	r0, [r4, #0]
   13150:	f7ff fe40 	bl	12dd4 <clust2sect>
   13154:	6120      	str	r0, [r4, #16]
   13156:	6823      	ldr	r3, [r4, #0]
   13158:	80e6      	strh	r6, [r4, #6]
   1315a:	3334      	adds	r3, #52	; 0x34
   1315c:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   13160:	6163      	str	r3, [r4, #20]
   13162:	2000      	movs	r0, #0
   13164:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   13168:	2007      	movs	r0, #7
   1316a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1316e:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

00013170 <dir_find.part.9>:
dir_find.part.9():
   13170:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13174:	f64f 79ff 	movw	r9, #65535	; 0xffff
   13178:	f04f 08ff 	mov.w	r8, #255	; 0xff
   1317c:	4606      	mov	r6, r0
   1317e:	4644      	mov	r4, r8
   13180:	f8a0 9020 	strh.w	r9, [r0, #32]
   13184:	6931      	ldr	r1, [r6, #16]
   13186:	6830      	ldr	r0, [r6, #0]
   13188:	f7ff fc9c 	bl	12ac4 <move_window>
   1318c:	2800      	cmp	r0, #0
   1318e:	d17b      	bne.n	13288 <dir_find.part.9+0x118>
   13190:	6975      	ldr	r5, [r6, #20]
   13192:	782b      	ldrb	r3, [r5, #0]
   13194:	2b00      	cmp	r3, #0
   13196:	d06e      	beq.n	13276 <dir_find.part.9+0x106>
   13198:	2be5      	cmp	r3, #229	; 0xe5
   1319a:	d060      	beq.n	1325e <dir_find.part.9+0xee>
   1319c:	7ae9      	ldrb	r1, [r5, #11]
   1319e:	070f      	lsls	r7, r1, #28
   131a0:	f001 023f 	and.w	r2, r1, #63	; 0x3f
   131a4:	d502      	bpl.n	131ac <dir_find.part.9+0x3c>
   131a6:	2a0f      	cmp	r2, #15
   131a8:	d159      	bne.n	1325e <dir_find.part.9+0xee>
   131aa:	e001      	b.n	131b0 <dir_find.part.9+0x40>
   131ac:	2a0f      	cmp	r2, #15
   131ae:	d142      	bne.n	13236 <dir_find.part.9+0xc6>
   131b0:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   131b4:	f1bb 0f00 	cmp.w	fp, #0
   131b8:	d056      	beq.n	13268 <dir_find.part.9+0xf8>
   131ba:	0658      	lsls	r0, r3, #25
   131bc:	d505      	bpl.n	131ca <dir_find.part.9+0x5a>
   131be:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
   131c2:	88f3      	ldrh	r3, [r6, #6]
   131c4:	7b6a      	ldrb	r2, [r5, #13]
   131c6:	8433      	strh	r3, [r6, #32]
   131c8:	e002      	b.n	131d0 <dir_find.part.9+0x60>
   131ca:	42a3      	cmp	r3, r4
   131cc:	d14b      	bne.n	13266 <dir_find.part.9+0xf6>
   131ce:	4642      	mov	r2, r8
   131d0:	f895 800d 	ldrb.w	r8, [r5, #13]
   131d4:	4590      	cmp	r8, r2
   131d6:	d145      	bne.n	13264 <dir_find.part.9+0xf4>
   131d8:	782f      	ldrb	r7, [r5, #0]
   131da:	2001      	movs	r0, #1
   131dc:	f027 0740 	bic.w	r7, r7, #64	; 0x40
   131e0:	1e7b      	subs	r3, r7, #1
   131e2:	270d      	movs	r7, #13
   131e4:	435f      	muls	r7, r3
   131e6:	f04f 0a00 	mov.w	sl, #0
   131ea:	4b29      	ldr	r3, [pc, #164]	; (13290 <dir_find.part.9+0x120>)
   131ec:	f81a 2003 	ldrb.w	r2, [sl, r3]
   131f0:	5aaa      	ldrh	r2, [r5, r2]
   131f2:	b188      	cbz	r0, 13218 <dir_find.part.9+0xa8>
   131f4:	4610      	mov	r0, r2
   131f6:	f001 fbf1 	bl	149dc <ff_wtoupper>
   131fa:	2f7f      	cmp	r7, #127	; 0x7f
   131fc:	9001      	str	r0, [sp, #4]
   131fe:	d832      	bhi.n	13266 <dir_find.part.9+0xf6>
   13200:	1c7a      	adds	r2, r7, #1
   13202:	f83b 0017 	ldrh.w	r0, [fp, r7, lsl #1]
   13206:	9200      	str	r2, [sp, #0]
   13208:	f001 fbe8 	bl	149dc <ff_wtoupper>
   1320c:	9901      	ldr	r1, [sp, #4]
   1320e:	4281      	cmp	r1, r0
   13210:	d129      	bne.n	13266 <dir_find.part.9+0xf6>
   13212:	9a00      	ldr	r2, [sp, #0]
   13214:	4617      	mov	r7, r2
   13216:	e001      	b.n	1321c <dir_find.part.9+0xac>
   13218:	454a      	cmp	r2, r9
   1321a:	d124      	bne.n	13266 <dir_find.part.9+0xf6>
   1321c:	f10a 0a01 	add.w	sl, sl, #1
   13220:	f1ba 0f0d 	cmp.w	sl, #13
   13224:	d1e1      	bne.n	131ea <dir_find.part.9+0x7a>
   13226:	782b      	ldrb	r3, [r5, #0]
   13228:	0659      	lsls	r1, r3, #25
   1322a:	d52a      	bpl.n	13282 <dir_find.part.9+0x112>
   1322c:	b348      	cbz	r0, 13282 <dir_find.part.9+0x112>
   1322e:	f83b 3017 	ldrh.w	r3, [fp, r7, lsl #1]
   13232:	b333      	cbz	r3, 13282 <dir_find.part.9+0x112>
   13234:	e017      	b.n	13266 <dir_find.part.9+0xf6>
   13236:	b924      	cbnz	r4, 13242 <dir_find.part.9+0xd2>
   13238:	4628      	mov	r0, r5
   1323a:	f7ff fb51 	bl	128e0 <sum_sfn>
   1323e:	4540      	cmp	r0, r8
   13240:	d01b      	beq.n	1327a <dir_find.part.9+0x10a>
   13242:	69b3      	ldr	r3, [r6, #24]
   13244:	7ada      	ldrb	r2, [r3, #11]
   13246:	07d2      	lsls	r2, r2, #31
   13248:	d409      	bmi.n	1325e <dir_find.part.9+0xee>
   1324a:	f105 000b 	add.w	r0, r5, #11
   1324e:	4285      	cmp	r5, r0
   13250:	d015      	beq.n	1327e <dir_find.part.9+0x10e>
   13252:	f815 1b01 	ldrb.w	r1, [r5], #1
   13256:	f813 2b01 	ldrb.w	r2, [r3], #1
   1325a:	4291      	cmp	r1, r2
   1325c:	d0f7      	beq.n	1324e <dir_find.part.9+0xde>
   1325e:	f8a6 9020 	strh.w	r9, [r6, #32]
   13262:	e000      	b.n	13266 <dir_find.part.9+0xf6>
   13264:	4690      	mov	r8, r2
   13266:	24ff      	movs	r4, #255	; 0xff
   13268:	2100      	movs	r1, #0
   1326a:	4630      	mov	r0, r6
   1326c:	f7ff ff08 	bl	13080 <dir_next>
   13270:	2800      	cmp	r0, #0
   13272:	d087      	beq.n	13184 <dir_find.part.9+0x14>
   13274:	e008      	b.n	13288 <dir_find.part.9+0x118>
   13276:	2004      	movs	r0, #4
   13278:	e006      	b.n	13288 <dir_find.part.9+0x118>
   1327a:	4620      	mov	r0, r4
   1327c:	e004      	b.n	13288 <dir_find.part.9+0x118>
   1327e:	2000      	movs	r0, #0
   13280:	e002      	b.n	13288 <dir_find.part.9+0x118>
   13282:	3c01      	subs	r4, #1
   13284:	b2e4      	uxtb	r4, r4
   13286:	e7ef      	b.n	13268 <dir_find.part.9+0xf8>
   13288:	b003      	add	sp, #12
   1328a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1328e:	bf00      	nop
   13290:	00023804 	.word	0x00023804

00013294 <follow_path>:
follow_path():
   13294:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13298:	780b      	ldrb	r3, [r1, #0]
   1329a:	4607      	mov	r7, r0
   1329c:	2b2f      	cmp	r3, #47	; 0x2f
   1329e:	4688      	mov	r8, r1
   132a0:	d001      	beq.n	132a6 <follow_path+0x12>
   132a2:	2b5c      	cmp	r3, #92	; 0x5c
   132a4:	d101      	bne.n	132aa <follow_path+0x16>
   132a6:	f108 0801 	add.w	r8, r8, #1
   132aa:	2400      	movs	r4, #0
   132ac:	60bc      	str	r4, [r7, #8]
   132ae:	f898 3000 	ldrb.w	r3, [r8]
   132b2:	2b1f      	cmp	r3, #31
   132b4:	d862      	bhi.n	1337c <follow_path+0xe8>
   132b6:	4621      	mov	r1, r4
   132b8:	4638      	mov	r0, r7
   132ba:	f7ff fde9 	bl	12e90 <dir_sdi>
   132be:	617c      	str	r4, [r7, #20]
   132c0:	e113      	b.n	134ea <follow_path+0x256>
   132c2:	3101      	adds	r1, #1
   132c4:	f83b 2011 	ldrh.w	r2, [fp, r1, lsl #1]
   132c8:	2a20      	cmp	r2, #32
   132ca:	d0fa      	beq.n	132c2 <follow_path+0x2e>
   132cc:	2a2e      	cmp	r2, #46	; 0x2e
   132ce:	d0f8      	beq.n	132c2 <follow_path+0x2e>
   132d0:	b109      	cbz	r1, 132d6 <follow_path+0x42>
   132d2:	f044 0403 	orr.w	r4, r4, #3
   132d6:	464a      	mov	r2, r9
   132d8:	f832 0d02 	ldrh.w	r0, [r2, #-2]!
   132dc:	282e      	cmp	r0, #46	; 0x2e
   132de:	d001      	beq.n	132e4 <follow_path+0x50>
   132e0:	3e01      	subs	r6, #1
   132e2:	d1f9      	bne.n	132d8 <follow_path+0x44>
   132e4:	f04f 0a00 	mov.w	sl, #0
   132e8:	4655      	mov	r5, sl
   132ea:	f04f 0908 	mov.w	r9, #8
   132ee:	f83b 0011 	ldrh.w	r0, [fp, r1, lsl #1]
   132f2:	1c4a      	adds	r2, r1, #1
   132f4:	2800      	cmp	r0, #0
   132f6:	f040 808f 	bne.w	13418 <follow_path+0x184>
   132fa:	69bb      	ldr	r3, [r7, #24]
   132fc:	781a      	ldrb	r2, [r3, #0]
   132fe:	2ae5      	cmp	r2, #229	; 0xe5
   13300:	bf04      	itt	eq
   13302:	2205      	moveq	r2, #5
   13304:	701a      	strbeq	r2, [r3, #0]
   13306:	f1b9 0f08 	cmp.w	r9, #8
   1330a:	bf04      	itt	eq
   1330c:	00ad      	lsleq	r5, r5, #2
   1330e:	b2ed      	uxtbeq	r5, r5
   13310:	f005 030c 	and.w	r3, r5, #12
   13314:	2b0c      	cmp	r3, #12
   13316:	f000 80cc 	beq.w	134b2 <follow_path+0x21e>
   1331a:	f005 0203 	and.w	r2, r5, #3
   1331e:	2a03      	cmp	r2, #3
   13320:	f000 80c7 	beq.w	134b2 <follow_path+0x21e>
   13324:	07a1      	lsls	r1, r4, #30
   13326:	d409      	bmi.n	1333c <follow_path+0xa8>
   13328:	f005 0503 	and.w	r5, r5, #3
   1332c:	2d01      	cmp	r5, #1
   1332e:	bf08      	it	eq
   13330:	f044 0410 	orreq.w	r4, r4, #16
   13334:	2b04      	cmp	r3, #4
   13336:	bf08      	it	eq
   13338:	f044 0408 	orreq.w	r4, r4, #8
   1333c:	69bb      	ldr	r3, [r7, #24]
   1333e:	2100      	movs	r1, #0
   13340:	72dc      	strb	r4, [r3, #11]
   13342:	4638      	mov	r0, r7
   13344:	f7ff fda4 	bl	12e90 <dir_sdi>
   13348:	b910      	cbnz	r0, 13350 <follow_path+0xbc>
   1334a:	4638      	mov	r0, r7
   1334c:	f7ff ff10 	bl	13170 <dir_find.part.9>
   13350:	69bb      	ldr	r3, [r7, #24]
   13352:	7adb      	ldrb	r3, [r3, #11]
   13354:	2800      	cmp	r0, #0
   13356:	f040 80af 	bne.w	134b8 <follow_path+0x224>
   1335a:	075a      	lsls	r2, r3, #29
   1335c:	f100 80c5 	bmi.w	134ea <follow_path+0x256>
   13360:	697a      	ldr	r2, [r7, #20]
   13362:	7ad3      	ldrb	r3, [r2, #11]
   13364:	06db      	lsls	r3, r3, #27
   13366:	f140 80ae 	bpl.w	134c6 <follow_path+0x232>
   1336a:	6839      	ldr	r1, [r7, #0]
   1336c:	8b53      	ldrh	r3, [r2, #26]
   1336e:	7809      	ldrb	r1, [r1, #0]
   13370:	2903      	cmp	r1, #3
   13372:	bf04      	itt	eq
   13374:	8a92      	ldrheq	r2, [r2, #20]
   13376:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
   1337a:	60bb      	str	r3, [r7, #8]
   1337c:	f898 3000 	ldrb.w	r3, [r8]
   13380:	4644      	mov	r4, r8
   13382:	2b2f      	cmp	r3, #47	; 0x2f
   13384:	f108 0801 	add.w	r8, r8, #1
   13388:	d0f8      	beq.n	1337c <follow_path+0xe8>
   1338a:	2b5c      	cmp	r3, #92	; 0x5c
   1338c:	d0f6      	beq.n	1337c <follow_path+0xe8>
   1338e:	f8d7 b01c 	ldr.w	fp, [r7, #28]
   13392:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
   13396:	f1ab 0502 	sub.w	r5, fp, #2
   1339a:	2600      	movs	r6, #0
   1339c:	f819 0f01 	ldrb.w	r0, [r9, #1]!
   133a0:	f106 0801 	add.w	r8, r6, #1
   133a4:	281f      	cmp	r0, #31
   133a6:	d91a      	bls.n	133de <follow_path+0x14a>
   133a8:	282f      	cmp	r0, #47	; 0x2f
   133aa:	d018      	beq.n	133de <follow_path+0x14a>
   133ac:	285c      	cmp	r0, #92	; 0x5c
   133ae:	d016      	beq.n	133de <follow_path+0x14a>
   133b0:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   133b4:	f000 8093 	beq.w	134de <follow_path+0x24a>
   133b8:	2101      	movs	r1, #1
   133ba:	f001 faf1 	bl	149a0 <ff_convert>
   133be:	2800      	cmp	r0, #0
   133c0:	f000 808d 	beq.w	134de <follow_path+0x24a>
   133c4:	287f      	cmp	r0, #127	; 0x7f
   133c6:	d806      	bhi.n	133d6 <follow_path+0x142>
   133c8:	4949      	ldr	r1, [pc, #292]	; (134f0 <follow_path+0x25c>)
   133ca:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   133ce:	b112      	cbz	r2, 133d6 <follow_path+0x142>
   133d0:	4290      	cmp	r0, r2
   133d2:	d1fa      	bne.n	133ca <follow_path+0x136>
   133d4:	e083      	b.n	134de <follow_path+0x24a>
   133d6:	f825 0f02 	strh.w	r0, [r5, #2]!
   133da:	4646      	mov	r6, r8
   133dc:	e7de      	b.n	1339c <follow_path+0x108>
   133de:	2820      	cmp	r0, #32
   133e0:	44a0      	add	r8, r4
   133e2:	eb0b 0246 	add.w	r2, fp, r6, lsl #1
   133e6:	bf34      	ite	cc
   133e8:	2404      	movcc	r4, #4
   133ea:	2400      	movcs	r4, #0
   133ec:	2e00      	cmp	r6, #0
   133ee:	d076      	beq.n	134de <follow_path+0x24a>
   133f0:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
   133f4:	2920      	cmp	r1, #32
   133f6:	d001      	beq.n	133fc <follow_path+0x168>
   133f8:	292e      	cmp	r1, #46	; 0x2e
   133fa:	d101      	bne.n	13400 <follow_path+0x16c>
   133fc:	3e01      	subs	r6, #1
   133fe:	e7f5      	b.n	133ec <follow_path+0x158>
   13400:	2500      	movs	r5, #0
   13402:	2120      	movs	r1, #32
   13404:	f82b 5016 	strh.w	r5, [fp, r6, lsl #1]
   13408:	220b      	movs	r2, #11
   1340a:	69b8      	ldr	r0, [r7, #24]
   1340c:	f7ff fa61 	bl	128d2 <mem_set>
   13410:	eb0b 0946 	add.w	r9, fp, r6, lsl #1
   13414:	4629      	mov	r1, r5
   13416:	e755      	b.n	132c4 <follow_path+0x30>
   13418:	2820      	cmp	r0, #32
   1341a:	d003      	beq.n	13424 <follow_path+0x190>
   1341c:	282e      	cmp	r0, #46	; 0x2e
   1341e:	d105      	bne.n	1342c <follow_path+0x198>
   13420:	42b2      	cmp	r2, r6
   13422:	d008      	beq.n	13436 <follow_path+0x1a2>
   13424:	f044 0403 	orr.w	r4, r4, #3
   13428:	4611      	mov	r1, r2
   1342a:	e760      	b.n	132ee <follow_path+0x5a>
   1342c:	45ca      	cmp	sl, r9
   1342e:	d204      	bcs.n	1343a <follow_path+0x1a6>
   13430:	42b2      	cmp	r2, r6
   13432:	d118      	bne.n	13466 <follow_path+0x1d2>
   13434:	e055      	b.n	134e2 <follow_path+0x24e>
   13436:	45ca      	cmp	sl, r9
   13438:	d353      	bcc.n	134e2 <follow_path+0x24e>
   1343a:	f1b9 0f0b 	cmp.w	r9, #11
   1343e:	d104      	bne.n	1344a <follow_path+0x1b6>
   13440:	f044 0403 	orr.w	r4, r4, #3
   13444:	f04f 090b 	mov.w	r9, #11
   13448:	e757      	b.n	132fa <follow_path+0x66>
   1344a:	42b2      	cmp	r2, r6
   1344c:	d003      	beq.n	13456 <follow_path+0x1c2>
   1344e:	f044 0403 	orr.w	r4, r4, #3
   13452:	f63f af52 	bhi.w	132fa <follow_path+0x66>
   13456:	00ad      	lsls	r5, r5, #2
   13458:	b2ed      	uxtb	r5, r5
   1345a:	4632      	mov	r2, r6
   1345c:	f04f 090b 	mov.w	r9, #11
   13460:	f04f 0a08 	mov.w	sl, #8
   13464:	e7e0      	b.n	13428 <follow_path+0x194>
   13466:	287f      	cmp	r0, #127	; 0x7f
   13468:	d90c      	bls.n	13484 <follow_path+0x1f0>
   1346a:	2100      	movs	r1, #0
   1346c:	9201      	str	r2, [sp, #4]
   1346e:	f001 fa97 	bl	149a0 <ff_convert>
   13472:	9a01      	ldr	r2, [sp, #4]
   13474:	b118      	cbz	r0, 1347e <follow_path+0x1ea>
   13476:	4b1f      	ldr	r3, [pc, #124]	; (134f4 <follow_path+0x260>)
   13478:	4418      	add	r0, r3
   1347a:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   1347e:	f044 0402 	orr.w	r4, r4, #2
   13482:	b128      	cbz	r0, 13490 <follow_path+0x1fc>
   13484:	4b1c      	ldr	r3, [pc, #112]	; (134f8 <follow_path+0x264>)
   13486:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   1348a:	b129      	cbz	r1, 13498 <follow_path+0x204>
   1348c:	4288      	cmp	r0, r1
   1348e:	d1fa      	bne.n	13486 <follow_path+0x1f2>
   13490:	f044 0403 	orr.w	r4, r4, #3
   13494:	205f      	movs	r0, #95	; 0x5f
   13496:	e006      	b.n	134a6 <follow_path+0x212>
   13498:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   1349c:	b289      	uxth	r1, r1
   1349e:	2919      	cmp	r1, #25
   134a0:	d813      	bhi.n	134ca <follow_path+0x236>
   134a2:	f045 0502 	orr.w	r5, r5, #2
   134a6:	69b9      	ldr	r1, [r7, #24]
   134a8:	f801 000a 	strb.w	r0, [r1, sl]
   134ac:	f10a 0a01 	add.w	sl, sl, #1
   134b0:	e7ba      	b.n	13428 <follow_path+0x194>
   134b2:	f044 0402 	orr.w	r4, r4, #2
   134b6:	e735      	b.n	13324 <follow_path+0x90>
   134b8:	2804      	cmp	r0, #4
   134ba:	d116      	bne.n	134ea <follow_path+0x256>
   134bc:	f013 0f04 	tst.w	r3, #4
   134c0:	bf08      	it	eq
   134c2:	2005      	moveq	r0, #5
   134c4:	e011      	b.n	134ea <follow_path+0x256>
   134c6:	2005      	movs	r0, #5
   134c8:	e00f      	b.n	134ea <follow_path+0x256>
   134ca:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   134ce:	b289      	uxth	r1, r1
   134d0:	2919      	cmp	r1, #25
   134d2:	bf9e      	ittt	ls
   134d4:	3820      	subls	r0, #32
   134d6:	f045 0501 	orrls.w	r5, r5, #1
   134da:	b280      	uxthls	r0, r0
   134dc:	e7e3      	b.n	134a6 <follow_path+0x212>
   134de:	2006      	movs	r0, #6
   134e0:	e003      	b.n	134ea <follow_path+0x256>
   134e2:	f1b9 0f0b 	cmp.w	r9, #11
   134e6:	d1b6      	bne.n	13456 <follow_path+0x1c2>
   134e8:	e7aa      	b.n	13440 <follow_path+0x1ac>
   134ea:	b003      	add	sp, #12
   134ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134f0:	0002373f 	.word	0x0002373f
   134f4:	00023784 	.word	0x00023784
   134f8:	00023748 	.word	0x00023748

000134fc <dir_register>:
dir_register():
   134fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13500:	6984      	ldr	r4, [r0, #24]
   13502:	b086      	sub	sp, #24
   13504:	220c      	movs	r2, #12
   13506:	69c6      	ldr	r6, [r0, #28]
   13508:	4605      	mov	r5, r0
   1350a:	4621      	mov	r1, r4
   1350c:	eb0d 0002 	add.w	r0, sp, r2
   13510:	f7ff f9c3 	bl	1289a <mem_cpy>
   13514:	f89d 3017 	ldrb.w	r3, [sp, #23]
   13518:	07db      	lsls	r3, r3, #31
   1351a:	d562      	bpl.n	135e2 <dir_register+0xe6>
   1351c:	2300      	movs	r3, #0
   1351e:	72e3      	strb	r3, [r4, #11]
   13520:	2701      	movs	r7, #1
   13522:	61eb      	str	r3, [r5, #28]
   13524:	220b      	movs	r2, #11
   13526:	a903      	add	r1, sp, #12
   13528:	4620      	mov	r0, r4
   1352a:	f7ff f9b6 	bl	1289a <mem_cpy>
   1352e:	2f05      	cmp	r7, #5
   13530:	d801      	bhi.n	13536 <dir_register+0x3a>
   13532:	463b      	mov	r3, r7
   13534:	e015      	b.n	13562 <dir_register+0x66>
   13536:	463b      	mov	r3, r7
   13538:	1eb0      	subs	r0, r6, #2
   1353a:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   1353e:	b182      	cbz	r2, 13562 <dir_register+0x66>
   13540:	2110      	movs	r1, #16
   13542:	f002 0e01 	and.w	lr, r2, #1
   13546:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
   1354a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   1354e:	bf1c      	itt	ne
   13550:	f483 3388 	eorne.w	r3, r3, #69632	; 0x11000
   13554:	f083 0321 	eorne.w	r3, r3, #33	; 0x21
   13558:	3901      	subs	r1, #1
   1355a:	ea4f 0252 	mov.w	r2, r2, lsr #1
   1355e:	d1f0      	bne.n	13542 <dir_register+0x46>
   13560:	e7eb      	b.n	1353a <dir_register+0x3e>
   13562:	2207      	movs	r2, #7
   13564:	f003 000f 	and.w	r0, r3, #15
   13568:	f100 0130 	add.w	r1, r0, #48	; 0x30
   1356c:	2939      	cmp	r1, #57	; 0x39
   1356e:	bf88      	it	hi
   13570:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
   13574:	3a01      	subs	r2, #1
   13576:	a801      	add	r0, sp, #4
   13578:	4410      	add	r0, r2
   1357a:	091b      	lsrs	r3, r3, #4
   1357c:	7041      	strb	r1, [r0, #1]
   1357e:	d1f1      	bne.n	13564 <dir_register+0x68>
   13580:	a906      	add	r1, sp, #24
   13582:	207e      	movs	r0, #126	; 0x7e
   13584:	4411      	add	r1, r2
   13586:	f801 0c14 	strb.w	r0, [r1, #-20]
   1358a:	429a      	cmp	r2, r3
   1358c:	d004      	beq.n	13598 <dir_register+0x9c>
   1358e:	5ce1      	ldrb	r1, [r4, r3]
   13590:	2920      	cmp	r1, #32
   13592:	d001      	beq.n	13598 <dir_register+0x9c>
   13594:	3301      	adds	r3, #1
   13596:	e7f8      	b.n	1358a <dir_register+0x8e>
   13598:	4423      	add	r3, r4
   1359a:	2a07      	cmp	r2, #7
   1359c:	bf9d      	ittte	ls
   1359e:	a906      	addls	r1, sp, #24
   135a0:	1889      	addls	r1, r1, r2
   135a2:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   135a6:	2120      	movhi	r1, #32
   135a8:	f803 1b01 	strb.w	r1, [r3], #1
   135ac:	eba3 0104 	sub.w	r1, r3, r4
   135b0:	bf98      	it	ls
   135b2:	3201      	addls	r2, #1
   135b4:	2907      	cmp	r1, #7
   135b6:	d9f0      	bls.n	1359a <dir_register+0x9e>
   135b8:	2100      	movs	r1, #0
   135ba:	4628      	mov	r0, r5
   135bc:	f7ff fc68 	bl	12e90 <dir_sdi>
   135c0:	b940      	cbnz	r0, 135d4 <dir_register+0xd8>
   135c2:	4628      	mov	r0, r5
   135c4:	f7ff fdd4 	bl	13170 <dir_find.part.9>
   135c8:	b920      	cbnz	r0, 135d4 <dir_register+0xd8>
   135ca:	3701      	adds	r7, #1
   135cc:	2f64      	cmp	r7, #100	; 0x64
   135ce:	d1a9      	bne.n	13524 <dir_register+0x28>
   135d0:	2007      	movs	r0, #7
   135d2:	e09f      	b.n	13714 <dir_register+0x218>
   135d4:	2804      	cmp	r0, #4
   135d6:	f040 809d 	bne.w	13714 <dir_register+0x218>
   135da:	f89d 3017 	ldrb.w	r3, [sp, #23]
   135de:	72e3      	strb	r3, [r4, #11]
   135e0:	61ee      	str	r6, [r5, #28]
   135e2:	f89d 3017 	ldrb.w	r3, [sp, #23]
   135e6:	079b      	lsls	r3, r3, #30
   135e8:	d50a      	bpl.n	13600 <dir_register+0x104>
   135ea:	2400      	movs	r4, #0
   135ec:	f836 3014 	ldrh.w	r3, [r6, r4, lsl #1]
   135f0:	b10b      	cbz	r3, 135f6 <dir_register+0xfa>
   135f2:	3401      	adds	r4, #1
   135f4:	e7fa      	b.n	135ec <dir_register+0xf0>
   135f6:	3419      	adds	r4, #25
   135f8:	230d      	movs	r3, #13
   135fa:	fbb4 f4f3 	udiv	r4, r4, r3
   135fe:	e000      	b.n	13602 <dir_register+0x106>
   13600:	2401      	movs	r4, #1
   13602:	2100      	movs	r1, #0
   13604:	4628      	mov	r0, r5
   13606:	f7ff fc43 	bl	12e90 <dir_sdi>
   1360a:	2800      	cmp	r0, #0
   1360c:	d17f      	bne.n	1370e <dir_register+0x212>
   1360e:	4606      	mov	r6, r0
   13610:	6929      	ldr	r1, [r5, #16]
   13612:	6828      	ldr	r0, [r5, #0]
   13614:	f7ff fa56 	bl	12ac4 <move_window>
   13618:	2800      	cmp	r0, #0
   1361a:	d178      	bne.n	1370e <dir_register+0x212>
   1361c:	696b      	ldr	r3, [r5, #20]
   1361e:	781b      	ldrb	r3, [r3, #0]
   13620:	2be5      	cmp	r3, #229	; 0xe5
   13622:	d000      	beq.n	13626 <dir_register+0x12a>
   13624:	b92b      	cbnz	r3, 13632 <dir_register+0x136>
   13626:	3601      	adds	r6, #1
   13628:	42b4      	cmp	r4, r6
   1362a:	d103      	bne.n	13634 <dir_register+0x138>
   1362c:	3c01      	subs	r4, #1
   1362e:	d053      	beq.n	136d8 <dir_register+0x1dc>
   13630:	e007      	b.n	13642 <dir_register+0x146>
   13632:	4606      	mov	r6, r0
   13634:	2101      	movs	r1, #1
   13636:	4628      	mov	r0, r5
   13638:	f7ff fd22 	bl	13080 <dir_next>
   1363c:	2800      	cmp	r0, #0
   1363e:	d0e7      	beq.n	13610 <dir_register+0x114>
   13640:	e065      	b.n	1370e <dir_register+0x212>
   13642:	88e9      	ldrh	r1, [r5, #6]
   13644:	4628      	mov	r0, r5
   13646:	1b09      	subs	r1, r1, r4
   13648:	f7ff fc22 	bl	12e90 <dir_sdi>
   1364c:	2800      	cmp	r0, #0
   1364e:	d161      	bne.n	13714 <dir_register+0x218>
   13650:	69a8      	ldr	r0, [r5, #24]
   13652:	f7ff f945 	bl	128e0 <sum_sfn>
   13656:	4606      	mov	r6, r0
   13658:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 1371c <dir_register+0x220>
   1365c:	270f      	movs	r7, #15
   1365e:	6929      	ldr	r1, [r5, #16]
   13660:	6828      	ldr	r0, [r5, #0]
   13662:	f7ff fa2f 	bl	12ac4 <move_window>
   13666:	4603      	mov	r3, r0
   13668:	2800      	cmp	r0, #0
   1366a:	d153      	bne.n	13714 <dir_register+0x218>
   1366c:	696a      	ldr	r2, [r5, #20]
   1366e:	fa5f fe84 	uxtb.w	lr, r4
   13672:	f8d5 c01c 	ldr.w	ip, [r5, #28]
   13676:	f10e 31ff 	add.w	r1, lr, #4294967295	; 0xffffffff
   1367a:	7310      	strb	r0, [r2, #12]
   1367c:	8350      	strh	r0, [r2, #26]
   1367e:	200d      	movs	r0, #13
   13680:	4341      	muls	r1, r0
   13682:	f64f 79ff 	movw	r9, #65535	; 0xffff
   13686:	4618      	mov	r0, r3
   13688:	7356      	strb	r6, [r2, #13]
   1368a:	72d7      	strb	r7, [r2, #11]
   1368c:	4548      	cmp	r0, r9
   1368e:	bf18      	it	ne
   13690:	f83c 0011 	ldrhne.w	r0, [ip, r1, lsl #1]
   13694:	f813 a008 	ldrb.w	sl, [r3, r8]
   13698:	f103 0301 	add.w	r3, r3, #1
   1369c:	bf18      	it	ne
   1369e:	3101      	addne	r1, #1
   136a0:	f822 000a 	strh.w	r0, [r2, sl]
   136a4:	2800      	cmp	r0, #0
   136a6:	bf08      	it	eq
   136a8:	4648      	moveq	r0, r9
   136aa:	2b0d      	cmp	r3, #13
   136ac:	d1ee      	bne.n	1368c <dir_register+0x190>
   136ae:	f64f 73ff 	movw	r3, #65535	; 0xffff
   136b2:	4298      	cmp	r0, r3
   136b4:	d002      	beq.n	136bc <dir_register+0x1c0>
   136b6:	f83c 3011 	ldrh.w	r3, [ip, r1, lsl #1]
   136ba:	b90b      	cbnz	r3, 136c0 <dir_register+0x1c4>
   136bc:	f04e 0e40 	orr.w	lr, lr, #64	; 0x40
   136c0:	f882 e000 	strb.w	lr, [r2]
   136c4:	682b      	ldr	r3, [r5, #0]
   136c6:	2201      	movs	r2, #1
   136c8:	711a      	strb	r2, [r3, #4]
   136ca:	2100      	movs	r1, #0
   136cc:	4628      	mov	r0, r5
   136ce:	f7ff fcd7 	bl	13080 <dir_next>
   136d2:	b9f8      	cbnz	r0, 13714 <dir_register+0x218>
   136d4:	3c01      	subs	r4, #1
   136d6:	d1c2      	bne.n	1365e <dir_register+0x162>
   136d8:	6929      	ldr	r1, [r5, #16]
   136da:	6828      	ldr	r0, [r5, #0]
   136dc:	f7ff f9f2 	bl	12ac4 <move_window>
   136e0:	4604      	mov	r4, r0
   136e2:	b990      	cbnz	r0, 1370a <dir_register+0x20e>
   136e4:	2220      	movs	r2, #32
   136e6:	4621      	mov	r1, r4
   136e8:	6968      	ldr	r0, [r5, #20]
   136ea:	f7ff f8f2 	bl	128d2 <mem_set>
   136ee:	220b      	movs	r2, #11
   136f0:	69a9      	ldr	r1, [r5, #24]
   136f2:	6968      	ldr	r0, [r5, #20]
   136f4:	f7ff f8d1 	bl	1289a <mem_cpy>
   136f8:	69ab      	ldr	r3, [r5, #24]
   136fa:	696a      	ldr	r2, [r5, #20]
   136fc:	7adb      	ldrb	r3, [r3, #11]
   136fe:	f003 0318 	and.w	r3, r3, #24
   13702:	7313      	strb	r3, [r2, #12]
   13704:	682b      	ldr	r3, [r5, #0]
   13706:	2201      	movs	r2, #1
   13708:	711a      	strb	r2, [r3, #4]
   1370a:	4620      	mov	r0, r4
   1370c:	e002      	b.n	13714 <dir_register+0x218>
   1370e:	2804      	cmp	r0, #4
   13710:	bf08      	it	eq
   13712:	2007      	moveq	r0, #7
   13714:	b006      	add	sp, #24
   13716:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1371a:	bf00      	nop
   1371c:	00023804 	.word	0x00023804

00013720 <dir_remove>:
dir_remove():
   13720:	f64f 73ff 	movw	r3, #65535	; 0xffff
   13724:	b570      	push	{r4, r5, r6, lr}
   13726:	8c01      	ldrh	r1, [r0, #32]
   13728:	88c5      	ldrh	r5, [r0, #6]
   1372a:	4604      	mov	r4, r0
   1372c:	4299      	cmp	r1, r3
   1372e:	bf08      	it	eq
   13730:	4629      	moveq	r1, r5
   13732:	f7ff fbad 	bl	12e90 <dir_sdi>
   13736:	4603      	mov	r3, r0
   13738:	b9e8      	cbnz	r0, 13776 <dir_remove+0x56>
   1373a:	26e5      	movs	r6, #229	; 0xe5
   1373c:	6921      	ldr	r1, [r4, #16]
   1373e:	6820      	ldr	r0, [r4, #0]
   13740:	f7ff f9c0 	bl	12ac4 <move_window>
   13744:	4603      	mov	r3, r0
   13746:	b998      	cbnz	r0, 13770 <dir_remove+0x50>
   13748:	4601      	mov	r1, r0
   1374a:	2220      	movs	r2, #32
   1374c:	6960      	ldr	r0, [r4, #20]
   1374e:	f7ff f8c0 	bl	128d2 <mem_set>
   13752:	6962      	ldr	r2, [r4, #20]
   13754:	2101      	movs	r1, #1
   13756:	7016      	strb	r6, [r2, #0]
   13758:	6822      	ldr	r2, [r4, #0]
   1375a:	7111      	strb	r1, [r2, #4]
   1375c:	88e2      	ldrh	r2, [r4, #6]
   1375e:	4295      	cmp	r5, r2
   13760:	d909      	bls.n	13776 <dir_remove+0x56>
   13762:	4619      	mov	r1, r3
   13764:	4620      	mov	r0, r4
   13766:	f7ff fc8b 	bl	13080 <dir_next>
   1376a:	4603      	mov	r3, r0
   1376c:	2800      	cmp	r0, #0
   1376e:	d0e5      	beq.n	1373c <dir_remove+0x1c>
   13770:	2b04      	cmp	r3, #4
   13772:	bf08      	it	eq
   13774:	2302      	moveq	r3, #2
   13776:	4618      	mov	r0, r3
   13778:	bd70      	pop	{r4, r5, r6, pc}
   1377a:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

0001377c <dir_read.constprop.11>:
dir_read.constprop.11():
   1377c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13780:	26ff      	movs	r6, #255	; 0xff
   13782:	4634      	mov	r4, r6
   13784:	4f36      	ldr	r7, [pc, #216]	; (13860 <dir_read.constprop.11+0xe4>)
   13786:	4605      	mov	r5, r0
   13788:	2004      	movs	r0, #4
   1378a:	6929      	ldr	r1, [r5, #16]
   1378c:	2900      	cmp	r1, #0
   1378e:	d05a      	beq.n	13846 <dir_read.constprop.11+0xca>
   13790:	6828      	ldr	r0, [r5, #0]
   13792:	f7ff f997 	bl	12ac4 <move_window>
   13796:	2800      	cmp	r0, #0
   13798:	d156      	bne.n	13848 <dir_read.constprop.11+0xcc>
   1379a:	6968      	ldr	r0, [r5, #20]
   1379c:	7803      	ldrb	r3, [r0, #0]
   1379e:	2b00      	cmp	r3, #0
   137a0:	d059      	beq.n	13856 <dir_read.constprop.11+0xda>
   137a2:	2be5      	cmp	r3, #229	; 0xe5
   137a4:	d047      	beq.n	13836 <dir_read.constprop.11+0xba>
   137a6:	2b2e      	cmp	r3, #46	; 0x2e
   137a8:	d045      	beq.n	13836 <dir_read.constprop.11+0xba>
   137aa:	7ac2      	ldrb	r2, [r0, #11]
   137ac:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   137b0:	2a08      	cmp	r2, #8
   137b2:	d040      	beq.n	13836 <dir_read.constprop.11+0xba>
   137b4:	2a0f      	cmp	r2, #15
   137b6:	d134      	bne.n	13822 <dir_read.constprop.11+0xa6>
   137b8:	0659      	lsls	r1, r3, #25
   137ba:	d505      	bpl.n	137c8 <dir_read.constprop.11+0x4c>
   137bc:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
   137c0:	88eb      	ldrh	r3, [r5, #6]
   137c2:	7b42      	ldrb	r2, [r0, #13]
   137c4:	842b      	strh	r3, [r5, #32]
   137c6:	e002      	b.n	137ce <dir_read.constprop.11+0x52>
   137c8:	42a3      	cmp	r3, r4
   137ca:	d134      	bne.n	13836 <dir_read.constprop.11+0xba>
   137cc:	4632      	mov	r2, r6
   137ce:	7b46      	ldrb	r6, [r0, #13]
   137d0:	4296      	cmp	r6, r2
   137d2:	d12f      	bne.n	13834 <dir_read.constprop.11+0xb8>
   137d4:	f64f 78ff 	movw	r8, #65535	; 0xffff
   137d8:	7803      	ldrb	r3, [r0, #0]
   137da:	f8d5 e01c 	ldr.w	lr, [r5, #28]
   137de:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   137e2:	1e5a      	subs	r2, r3, #1
   137e4:	230d      	movs	r3, #13
   137e6:	4353      	muls	r3, r2
   137e8:	f04f 0c01 	mov.w	ip, #1
   137ec:	2200      	movs	r2, #0
   137ee:	5dd1      	ldrb	r1, [r2, r7]
   137f0:	5a41      	ldrh	r1, [r0, r1]
   137f2:	f1bc 0f00 	cmp.w	ip, #0
   137f6:	d006      	beq.n	13806 <dir_read.constprop.11+0x8a>
   137f8:	2b7f      	cmp	r3, #127	; 0x7f
   137fa:	d81c      	bhi.n	13836 <dir_read.constprop.11+0xba>
   137fc:	f82e 1013 	strh.w	r1, [lr, r3, lsl #1]
   13800:	468c      	mov	ip, r1
   13802:	3301      	adds	r3, #1
   13804:	e001      	b.n	1380a <dir_read.constprop.11+0x8e>
   13806:	4541      	cmp	r1, r8
   13808:	d115      	bne.n	13836 <dir_read.constprop.11+0xba>
   1380a:	3201      	adds	r2, #1
   1380c:	2a0d      	cmp	r2, #13
   1380e:	d1ee      	bne.n	137ee <dir_read.constprop.11+0x72>
   13810:	7802      	ldrb	r2, [r0, #0]
   13812:	0652      	lsls	r2, r2, #25
   13814:	d51c      	bpl.n	13850 <dir_read.constprop.11+0xd4>
   13816:	2b7f      	cmp	r3, #127	; 0x7f
   13818:	d80d      	bhi.n	13836 <dir_read.constprop.11+0xba>
   1381a:	2200      	movs	r2, #0
   1381c:	f82e 2013 	strh.w	r2, [lr, r3, lsl #1]
   13820:	e016      	b.n	13850 <dir_read.constprop.11+0xd4>
   13822:	b91c      	cbnz	r4, 1382c <dir_read.constprop.11+0xb0>
   13824:	f7ff f85c 	bl	128e0 <sum_sfn>
   13828:	42b0      	cmp	r0, r6
   1382a:	d016      	beq.n	1385a <dir_read.constprop.11+0xde>
   1382c:	f64f 73ff 	movw	r3, #65535	; 0xffff
   13830:	842b      	strh	r3, [r5, #32]
   13832:	e012      	b.n	1385a <dir_read.constprop.11+0xde>
   13834:	4616      	mov	r6, r2
   13836:	24ff      	movs	r4, #255	; 0xff
   13838:	2100      	movs	r1, #0
   1383a:	4628      	mov	r0, r5
   1383c:	f7ff fc20 	bl	13080 <dir_next>
   13840:	2800      	cmp	r0, #0
   13842:	d0a2      	beq.n	1378a <dir_read.constprop.11+0xe>
   13844:	e000      	b.n	13848 <dir_read.constprop.11+0xcc>
   13846:	b140      	cbz	r0, 1385a <dir_read.constprop.11+0xde>
   13848:	2300      	movs	r3, #0
   1384a:	612b      	str	r3, [r5, #16]
   1384c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13850:	3c01      	subs	r4, #1
   13852:	b2e4      	uxtb	r4, r4
   13854:	e7f0      	b.n	13838 <dir_read.constprop.11+0xbc>
   13856:	2004      	movs	r0, #4
   13858:	e7f6      	b.n	13848 <dir_read.constprop.11+0xcc>
   1385a:	2000      	movs	r0, #0
   1385c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13860:	00023804 	.word	0x00023804

00013864 <remove_chain>:
remove_chain():
   13864:	2901      	cmp	r1, #1
   13866:	b570      	push	{r4, r5, r6, lr}
   13868:	4604      	mov	r4, r0
   1386a:	460d      	mov	r5, r1
   1386c:	d801      	bhi.n	13872 <remove_chain+0xe>
   1386e:	2002      	movs	r0, #2
   13870:	bd70      	pop	{r4, r5, r6, pc}
   13872:	6983      	ldr	r3, [r0, #24]
   13874:	4299      	cmp	r1, r3
   13876:	d2fa      	bcs.n	1386e <remove_chain+0xa>
   13878:	69a3      	ldr	r3, [r4, #24]
   1387a:	429d      	cmp	r5, r3
   1387c:	d205      	bcs.n	1388a <remove_chain+0x26>
   1387e:	4629      	mov	r1, r5
   13880:	4620      	mov	r0, r4
   13882:	f7ff fab2 	bl	12dea <get_fat>
   13886:	4606      	mov	r6, r0
   13888:	b908      	cbnz	r0, 1388e <remove_chain+0x2a>
   1388a:	2000      	movs	r0, #0
   1388c:	bd70      	pop	{r4, r5, r6, pc}
   1388e:	2801      	cmp	r0, #1
   13890:	d0ed      	beq.n	1386e <remove_chain+0xa>
   13892:	1c41      	adds	r1, r0, #1
   13894:	d010      	beq.n	138b8 <remove_chain+0x54>
   13896:	2200      	movs	r2, #0
   13898:	4629      	mov	r1, r5
   1389a:	4620      	mov	r0, r4
   1389c:	f7ff fb37 	bl	12f0e <put_fat>
   138a0:	b958      	cbnz	r0, 138ba <remove_chain+0x56>
   138a2:	6963      	ldr	r3, [r4, #20]
   138a4:	1c5a      	adds	r2, r3, #1
   138a6:	d005      	beq.n	138b4 <remove_chain+0x50>
   138a8:	3301      	adds	r3, #1
   138aa:	6163      	str	r3, [r4, #20]
   138ac:	7963      	ldrb	r3, [r4, #5]
   138ae:	f043 0301 	orr.w	r3, r3, #1
   138b2:	7163      	strb	r3, [r4, #5]
   138b4:	4635      	mov	r5, r6
   138b6:	e7df      	b.n	13878 <remove_chain+0x14>
   138b8:	2001      	movs	r0, #1
   138ba:	bd70      	pop	{r4, r5, r6, pc}

000138bc <f_mount>:
f_mount():
   138bc:	b5f0      	push	{r4, r5, r6, r7, lr}
   138be:	b085      	sub	sp, #20
   138c0:	9001      	str	r0, [sp, #4]
   138c2:	a804      	add	r0, sp, #16
   138c4:	f840 1d04 	str.w	r1, [r0, #-4]!
   138c8:	9100      	str	r1, [sp, #0]
   138ca:	4616      	mov	r6, r2
   138cc:	f7ff f817 	bl	128fe <get_ldnumber>
   138d0:	1e04      	subs	r4, r0, #0
   138d2:	db2a      	blt.n	1392a <f_mount+0x6e>
   138d4:	4b17      	ldr	r3, [pc, #92]	; (13934 <f_mount+0x78>)
   138d6:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
   138da:	461f      	mov	r7, r3
   138dc:	b13d      	cbz	r5, 138ee <f_mount+0x32>
   138de:	68e8      	ldr	r0, [r5, #12]
   138e0:	f001 f83a 	bl	14958 <ff_del_syncobj>
   138e4:	b908      	cbnz	r0, 138ea <f_mount+0x2e>
   138e6:	2002      	movs	r0, #2
   138e8:	e022      	b.n	13930 <f_mount+0x74>
   138ea:	2300      	movs	r3, #0
   138ec:	702b      	strb	r3, [r5, #0]
   138ee:	9901      	ldr	r1, [sp, #4]
   138f0:	b921      	cbnz	r1, 138fc <f_mount+0x40>
   138f2:	9801      	ldr	r0, [sp, #4]
   138f4:	f847 0024 	str.w	r0, [r7, r4, lsl #2]
   138f8:	b948      	cbnz	r0, 1390e <f_mount+0x52>
   138fa:	e019      	b.n	13930 <f_mount+0x74>
   138fc:	2300      	movs	r3, #0
   138fe:	f801 3b0c 	strb.w	r3, [r1], #12
   13902:	b2e0      	uxtb	r0, r4
   13904:	f001 f81e 	bl	14944 <ff_cre_syncobj>
   13908:	2800      	cmp	r0, #0
   1390a:	d0ec      	beq.n	138e6 <f_mount+0x2a>
   1390c:	e7f1      	b.n	138f2 <f_mount+0x36>
   1390e:	2e01      	cmp	r6, #1
   13910:	d10d      	bne.n	1392e <f_mount+0x72>
   13912:	2200      	movs	r2, #0
   13914:	4669      	mov	r1, sp
   13916:	a801      	add	r0, sp, #4
   13918:	f7ff f914 	bl	12b44 <find_volume>
   1391c:	4604      	mov	r4, r0
   1391e:	4601      	mov	r1, r0
   13920:	9801      	ldr	r0, [sp, #4]
   13922:	f7ff fa4a 	bl	12dba <unlock_fs>
   13926:	4620      	mov	r0, r4
   13928:	e002      	b.n	13930 <f_mount+0x74>
   1392a:	200b      	movs	r0, #11
   1392c:	e000      	b.n	13930 <f_mount+0x74>
   1392e:	2000      	movs	r0, #0
   13930:	b005      	add	sp, #20
   13932:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13934:	2007c360 	.word	0x2007c360

00013938 <f_open>:
f_open():
   13938:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1393c:	b0d1      	sub	sp, #324	; 0x144
   1393e:	9101      	str	r1, [sp, #4]
   13940:	4690      	mov	r8, r2
   13942:	4605      	mov	r5, r0
   13944:	2800      	cmp	r0, #0
   13946:	f000 8085 	beq.w	13a54 <f_open+0x11c>
   1394a:	2300      	movs	r3, #0
   1394c:	6003      	str	r3, [r0, #0]
   1394e:	f002 021e 	and.w	r2, r2, #30
   13952:	a901      	add	r1, sp, #4
   13954:	a806      	add	r0, sp, #24
   13956:	f7ff f8f5 	bl	12b44 <find_volume>
   1395a:	4606      	mov	r6, r0
   1395c:	2800      	cmp	r0, #0
   1395e:	d173      	bne.n	13a48 <f_open+0x110>
   13960:	ab03      	add	r3, sp, #12
   13962:	930c      	str	r3, [sp, #48]	; 0x30
   13964:	9901      	ldr	r1, [sp, #4]
   13966:	ab0f      	add	r3, sp, #60	; 0x3c
   13968:	a806      	add	r0, sp, #24
   1396a:	930d      	str	r3, [sp, #52]	; 0x34
   1396c:	f7ff fc92 	bl	13294 <follow_path>
   13970:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   13972:	b910      	cbnz	r0, 1397a <f_open+0x42>
   13974:	2c00      	cmp	r4, #0
   13976:	bf08      	it	eq
   13978:	2006      	moveq	r0, #6
   1397a:	f018 0f1c 	tst.w	r8, #28
   1397e:	f008 071f 	and.w	r7, r8, #31
   13982:	d03c      	beq.n	139fe <f_open+0xc6>
   13984:	b150      	cbz	r0, 1399c <f_open+0x64>
   13986:	2804      	cmp	r0, #4
   13988:	d102      	bne.n	13990 <f_open+0x58>
   1398a:	a806      	add	r0, sp, #24
   1398c:	f7ff fdb6 	bl	134fc <dir_register>
   13990:	f047 0708 	orr.w	r7, r7, #8
   13994:	2800      	cmp	r0, #0
   13996:	d164      	bne.n	13a62 <f_open+0x12a>
   13998:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   1399a:	e006      	b.n	139aa <f_open+0x72>
   1399c:	7ae3      	ldrb	r3, [r4, #11]
   1399e:	f013 0f11 	tst.w	r3, #17
   139a2:	d15d      	bne.n	13a60 <f_open+0x128>
   139a4:	f018 0f04 	tst.w	r8, #4
   139a8:	d156      	bne.n	13a58 <f_open+0x120>
   139aa:	0738      	lsls	r0, r7, #28
   139ac:	d535      	bpl.n	13a1a <f_open+0xe2>
   139ae:	f7fe ff4b 	bl	12848 <get_fattime>
   139b2:	2300      	movs	r3, #0
   139b4:	f8c4 000e 	str.w	r0, [r4, #14]
   139b8:	9806      	ldr	r0, [sp, #24]
   139ba:	72e3      	strb	r3, [r4, #11]
   139bc:	61e3      	str	r3, [r4, #28]
   139be:	7802      	ldrb	r2, [r0, #0]
   139c0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
   139c4:	2a03      	cmp	r2, #3
   139c6:	bf08      	it	eq
   139c8:	8aa2      	ldrheq	r2, [r4, #20]
   139ca:	8363      	strh	r3, [r4, #26]
   139cc:	82a3      	strh	r3, [r4, #20]
   139ce:	bf08      	it	eq
   139d0:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
   139d4:	2301      	movs	r3, #1
   139d6:	7103      	strb	r3, [r0, #4]
   139d8:	f1b8 0f00 	cmp.w	r8, #0
   139dc:	d01b      	beq.n	13a16 <f_open+0xde>
   139de:	4641      	mov	r1, r8
   139e0:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
   139e4:	f7ff ff3e 	bl	13864 <remove_chain>
   139e8:	2800      	cmp	r0, #0
   139ea:	d13a      	bne.n	13a62 <f_open+0x12a>
   139ec:	9806      	ldr	r0, [sp, #24]
   139ee:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   139f2:	6103      	str	r3, [r0, #16]
   139f4:	4649      	mov	r1, r9
   139f6:	f7ff f865 	bl	12ac4 <move_window>
   139fa:	b150      	cbz	r0, 13a12 <f_open+0xda>
   139fc:	e031      	b.n	13a62 <f_open+0x12a>
   139fe:	2800      	cmp	r0, #0
   13a00:	d12f      	bne.n	13a62 <f_open+0x12a>
   13a02:	7ae3      	ldrb	r3, [r4, #11]
   13a04:	06d9      	lsls	r1, r3, #27
   13a06:	d429      	bmi.n	13a5c <f_open+0x124>
   13a08:	f018 0f02 	tst.w	r8, #2
   13a0c:	d001      	beq.n	13a12 <f_open+0xda>
   13a0e:	07da      	lsls	r2, r3, #31
   13a10:	d426      	bmi.n	13a60 <f_open+0x128>
   13a12:	073b      	lsls	r3, r7, #28
   13a14:	d501      	bpl.n	13a1a <f_open+0xe2>
   13a16:	f047 0720 	orr.w	r7, r7, #32
   13a1a:	9b06      	ldr	r3, [sp, #24]
   13a1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   13a1e:	71af      	strb	r7, [r5, #6]
   13a20:	61ea      	str	r2, [r5, #28]
   13a22:	2200      	movs	r2, #0
   13a24:	71ea      	strb	r2, [r5, #7]
   13a26:	622c      	str	r4, [r5, #32]
   13a28:	7819      	ldrb	r1, [r3, #0]
   13a2a:	8b62      	ldrh	r2, [r4, #26]
   13a2c:	2903      	cmp	r1, #3
   13a2e:	bf04      	itt	eq
   13a30:	8aa1      	ldrheq	r1, [r4, #20]
   13a32:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
   13a36:	612a      	str	r2, [r5, #16]
   13a38:	69e2      	ldr	r2, [r4, #28]
   13a3a:	602b      	str	r3, [r5, #0]
   13a3c:	88db      	ldrh	r3, [r3, #6]
   13a3e:	60ea      	str	r2, [r5, #12]
   13a40:	2200      	movs	r2, #0
   13a42:	60aa      	str	r2, [r5, #8]
   13a44:	61aa      	str	r2, [r5, #24]
   13a46:	80ab      	strh	r3, [r5, #4]
   13a48:	9806      	ldr	r0, [sp, #24]
   13a4a:	4631      	mov	r1, r6
   13a4c:	f7ff f9b5 	bl	12dba <unlock_fs>
   13a50:	4630      	mov	r0, r6
   13a52:	e008      	b.n	13a66 <f_open+0x12e>
   13a54:	2009      	movs	r0, #9
   13a56:	e006      	b.n	13a66 <f_open+0x12e>
   13a58:	2008      	movs	r0, #8
   13a5a:	e002      	b.n	13a62 <f_open+0x12a>
   13a5c:	2004      	movs	r0, #4
   13a5e:	e000      	b.n	13a62 <f_open+0x12a>
   13a60:	2007      	movs	r0, #7
   13a62:	4606      	mov	r6, r0
   13a64:	e7f0      	b.n	13a48 <f_open+0x110>
   13a66:	b051      	add	sp, #324	; 0x144
   13a68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00013a6c <f_read>:
f_read():
   13a6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a70:	469a      	mov	sl, r3
   13a72:	2300      	movs	r3, #0
   13a74:	f8ca 3000 	str.w	r3, [sl]
   13a78:	4605      	mov	r5, r0
   13a7a:	4688      	mov	r8, r1
   13a7c:	4614      	mov	r4, r2
   13a7e:	f7ff f97f 	bl	12d80 <validate>
   13a82:	4606      	mov	r6, r0
   13a84:	b128      	cbz	r0, 13a92 <f_read+0x26>
   13a86:	4601      	mov	r1, r0
   13a88:	6828      	ldr	r0, [r5, #0]
   13a8a:	f7ff f996 	bl	12dba <unlock_fs>
   13a8e:	4630      	mov	r0, r6
   13a90:	e0a1      	b.n	13bd6 <f_read+0x16a>
   13a92:	79e9      	ldrb	r1, [r5, #7]
   13a94:	b121      	cbz	r1, 13aa0 <f_read+0x34>
   13a96:	6828      	ldr	r0, [r5, #0]
   13a98:	f7ff f98f 	bl	12dba <unlock_fs>
   13a9c:	79e8      	ldrb	r0, [r5, #7]
   13a9e:	e09a      	b.n	13bd6 <f_read+0x16a>
   13aa0:	79ab      	ldrb	r3, [r5, #6]
   13aa2:	07d8      	lsls	r0, r3, #31
   13aa4:	d405      	bmi.n	13ab2 <f_read+0x46>
   13aa6:	6828      	ldr	r0, [r5, #0]
   13aa8:	2107      	movs	r1, #7
   13aaa:	f7ff f986 	bl	12dba <unlock_fs>
   13aae:	2007      	movs	r0, #7
   13ab0:	e091      	b.n	13bd6 <f_read+0x16a>
   13ab2:	68eb      	ldr	r3, [r5, #12]
   13ab4:	68a8      	ldr	r0, [r5, #8]
   13ab6:	f105 0b24 	add.w	fp, r5, #36	; 0x24
   13aba:	1a18      	subs	r0, r3, r0
   13abc:	4284      	cmp	r4, r0
   13abe:	bf28      	it	cs
   13ac0:	4604      	movcs	r4, r0
   13ac2:	2c00      	cmp	r4, #0
   13ac4:	f000 8082 	beq.w	13bcc <f_read+0x160>
   13ac8:	68aa      	ldr	r2, [r5, #8]
   13aca:	f3c2 0308 	ubfx	r3, r2, #0, #9
   13ace:	2b00      	cmp	r3, #0
   13ad0:	d163      	bne.n	13b9a <f_read+0x12e>
   13ad2:	6828      	ldr	r0, [r5, #0]
   13ad4:	7883      	ldrb	r3, [r0, #2]
   13ad6:	3b01      	subs	r3, #1
   13ad8:	ea03 2352 	and.w	r3, r3, r2, lsr #9
   13adc:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   13ae0:	d10e      	bne.n	13b00 <f_read+0x94>
   13ae2:	b90a      	cbnz	r2, 13ae8 <f_read+0x7c>
   13ae4:	6928      	ldr	r0, [r5, #16]
   13ae6:	e004      	b.n	13af2 <f_read+0x86>
   13ae8:	6969      	ldr	r1, [r5, #20]
   13aea:	9301      	str	r3, [sp, #4]
   13aec:	f7ff f97d 	bl	12dea <get_fat>
   13af0:	9b01      	ldr	r3, [sp, #4]
   13af2:	2801      	cmp	r0, #1
   13af4:	d801      	bhi.n	13afa <f_read+0x8e>
   13af6:	2402      	movs	r4, #2
   13af8:	e04c      	b.n	13b94 <f_read+0x128>
   13afa:	1c41      	adds	r1, r0, #1
   13afc:	d049      	beq.n	13b92 <f_read+0x126>
   13afe:	6168      	str	r0, [r5, #20]
   13b00:	f8d5 9000 	ldr.w	r9, [r5]
   13b04:	6969      	ldr	r1, [r5, #20]
   13b06:	4648      	mov	r0, r9
   13b08:	9301      	str	r3, [sp, #4]
   13b0a:	f7ff f963 	bl	12dd4 <clust2sect>
   13b0e:	9b01      	ldr	r3, [sp, #4]
   13b10:	b920      	cbnz	r0, 13b1c <f_read+0xb0>
   13b12:	2402      	movs	r4, #2
   13b14:	71ec      	strb	r4, [r5, #7]
   13b16:	4621      	mov	r1, r4
   13b18:	4648      	mov	r0, r9
   13b1a:	e059      	b.n	13bd0 <f_read+0x164>
   13b1c:	0a66      	lsrs	r6, r4, #9
   13b1e:	eb00 0703 	add.w	r7, r0, r3
   13b22:	d01d      	beq.n	13b60 <f_read+0xf4>
   13b24:	f899 2002 	ldrb.w	r2, [r9, #2]
   13b28:	1999      	adds	r1, r3, r6
   13b2a:	4291      	cmp	r1, r2
   13b2c:	bf88      	it	hi
   13b2e:	1ad6      	subhi	r6, r2, r3
   13b30:	b2f3      	uxtb	r3, r6
   13b32:	463a      	mov	r2, r7
   13b34:	4641      	mov	r1, r8
   13b36:	f899 0001 	ldrb.w	r0, [r9, #1]
   13b3a:	f001 fda2 	bl	15682 <disk_read>
   13b3e:	bb40      	cbnz	r0, 13b92 <f_read+0x126>
   13b40:	79ab      	ldrb	r3, [r5, #6]
   13b42:	065a      	lsls	r2, r3, #25
   13b44:	d50a      	bpl.n	13b5c <f_read+0xf0>
   13b46:	69a8      	ldr	r0, [r5, #24]
   13b48:	1bc0      	subs	r0, r0, r7
   13b4a:	4286      	cmp	r6, r0
   13b4c:	d906      	bls.n	13b5c <f_read+0xf0>
   13b4e:	f44f 7200 	mov.w	r2, #512	; 0x200
   13b52:	4659      	mov	r1, fp
   13b54:	eb08 2040 	add.w	r0, r8, r0, lsl #9
   13b58:	f7fe fe9f 	bl	1289a <mem_cpy>
   13b5c:	0276      	lsls	r6, r6, #9
   13b5e:	e02a      	b.n	13bb6 <f_read+0x14a>
   13b60:	69aa      	ldr	r2, [r5, #24]
   13b62:	4297      	cmp	r7, r2
   13b64:	d018      	beq.n	13b98 <f_read+0x12c>
   13b66:	79ab      	ldrb	r3, [r5, #6]
   13b68:	065b      	lsls	r3, r3, #25
   13b6a:	d50a      	bpl.n	13b82 <f_read+0x116>
   13b6c:	2301      	movs	r3, #1
   13b6e:	4659      	mov	r1, fp
   13b70:	f899 0001 	ldrb.w	r0, [r9, #1]
   13b74:	f001 fda1 	bl	156ba <disk_write>
   13b78:	b958      	cbnz	r0, 13b92 <f_read+0x126>
   13b7a:	79ab      	ldrb	r3, [r5, #6]
   13b7c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13b80:	71ab      	strb	r3, [r5, #6]
   13b82:	6828      	ldr	r0, [r5, #0]
   13b84:	2301      	movs	r3, #1
   13b86:	463a      	mov	r2, r7
   13b88:	4659      	mov	r1, fp
   13b8a:	7840      	ldrb	r0, [r0, #1]
   13b8c:	f001 fd79 	bl	15682 <disk_read>
   13b90:	b110      	cbz	r0, 13b98 <f_read+0x12c>
   13b92:	2401      	movs	r4, #1
   13b94:	71ec      	strb	r4, [r5, #7]
   13b96:	e019      	b.n	13bcc <f_read+0x160>
   13b98:	61af      	str	r7, [r5, #24]
   13b9a:	68a9      	ldr	r1, [r5, #8]
   13b9c:	4640      	mov	r0, r8
   13b9e:	f3c1 0108 	ubfx	r1, r1, #0, #9
   13ba2:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   13ba6:	42a6      	cmp	r6, r4
   13ba8:	bf28      	it	cs
   13baa:	4626      	movcs	r6, r4
   13bac:	4429      	add	r1, r5
   13bae:	4632      	mov	r2, r6
   13bb0:	3124      	adds	r1, #36	; 0x24
   13bb2:	f7fe fe72 	bl	1289a <mem_cpy>
   13bb6:	68ab      	ldr	r3, [r5, #8]
   13bb8:	44b0      	add	r8, r6
   13bba:	4433      	add	r3, r6
   13bbc:	60ab      	str	r3, [r5, #8]
   13bbe:	f8da 3000 	ldr.w	r3, [sl]
   13bc2:	1ba4      	subs	r4, r4, r6
   13bc4:	4433      	add	r3, r6
   13bc6:	f8ca 3000 	str.w	r3, [sl]
   13bca:	e77a      	b.n	13ac2 <f_read+0x56>
   13bcc:	4621      	mov	r1, r4
   13bce:	6828      	ldr	r0, [r5, #0]
   13bd0:	f7ff f8f3 	bl	12dba <unlock_fs>
   13bd4:	4620      	mov	r0, r4
   13bd6:	b003      	add	sp, #12
   13bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013bdc <f_write>:
f_write():
   13bdc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13be0:	469b      	mov	fp, r3
   13be2:	2300      	movs	r3, #0
   13be4:	f8cb 3000 	str.w	r3, [fp]
   13be8:	4604      	mov	r4, r0
   13bea:	4689      	mov	r9, r1
   13bec:	4690      	mov	r8, r2
   13bee:	f7ff f8c7 	bl	12d80 <validate>
   13bf2:	4605      	mov	r5, r0
   13bf4:	2800      	cmp	r0, #0
   13bf6:	d167      	bne.n	13cc8 <f_write+0xec>
   13bf8:	79e1      	ldrb	r1, [r4, #7]
   13bfa:	b121      	cbz	r1, 13c06 <f_write+0x2a>
   13bfc:	6820      	ldr	r0, [r4, #0]
   13bfe:	f7ff f8dc 	bl	12dba <unlock_fs>
   13c02:	79e0      	ldrb	r0, [r4, #7]
   13c04:	e0b8      	b.n	13d78 <f_write+0x19c>
   13c06:	79a3      	ldrb	r3, [r4, #6]
   13c08:	0799      	lsls	r1, r3, #30
   13c0a:	d405      	bmi.n	13c18 <f_write+0x3c>
   13c0c:	6820      	ldr	r0, [r4, #0]
   13c0e:	2107      	movs	r1, #7
   13c10:	f7ff f8d3 	bl	12dba <unlock_fs>
   13c14:	2007      	movs	r0, #7
   13c16:	e0af      	b.n	13d78 <f_write+0x19c>
   13c18:	68a3      	ldr	r3, [r4, #8]
   13c1a:	eb13 0f08 	cmn.w	r3, r8
   13c1e:	d249      	bcs.n	13cb4 <f_write+0xd8>
   13c20:	f104 0324 	add.w	r3, r4, #36	; 0x24
   13c24:	9301      	str	r3, [sp, #4]
   13c26:	e02e      	b.n	13c86 <f_write+0xaa>
   13c28:	ea5f 2558 	movs.w	r5, r8, lsr #9
   13c2c:	eb00 0706 	add.w	r7, r0, r6
   13c30:	d074      	beq.n	13d1c <f_write+0x140>
   13c32:	f89a 3002 	ldrb.w	r3, [sl, #2]
   13c36:	1972      	adds	r2, r6, r5
   13c38:	429a      	cmp	r2, r3
   13c3a:	bf88      	it	hi
   13c3c:	1b9d      	subhi	r5, r3, r6
   13c3e:	b2eb      	uxtb	r3, r5
   13c40:	463a      	mov	r2, r7
   13c42:	4649      	mov	r1, r9
   13c44:	f89a 0001 	ldrb.w	r0, [sl, #1]
   13c48:	f001 fd37 	bl	156ba <disk_write>
   13c4c:	2800      	cmp	r0, #0
   13c4e:	d174      	bne.n	13d3a <f_write+0x15e>
   13c50:	69a1      	ldr	r1, [r4, #24]
   13c52:	1bc9      	subs	r1, r1, r7
   13c54:	428d      	cmp	r5, r1
   13c56:	d90a      	bls.n	13c6e <f_write+0x92>
   13c58:	f44f 7200 	mov.w	r2, #512	; 0x200
   13c5c:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   13c60:	9801      	ldr	r0, [sp, #4]
   13c62:	f7fe fe1a 	bl	1289a <mem_cpy>
   13c66:	79a3      	ldrb	r3, [r4, #6]
   13c68:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13c6c:	71a3      	strb	r3, [r4, #6]
   13c6e:	026d      	lsls	r5, r5, #9
   13c70:	68a3      	ldr	r3, [r4, #8]
   13c72:	44a9      	add	r9, r5
   13c74:	442b      	add	r3, r5
   13c76:	60a3      	str	r3, [r4, #8]
   13c78:	f8db 3000 	ldr.w	r3, [fp]
   13c7c:	ebc5 0808 	rsb	r8, r5, r8
   13c80:	442b      	add	r3, r5
   13c82:	f8cb 3000 	str.w	r3, [fp]
   13c86:	f1b8 0f00 	cmp.w	r8, #0
   13c8a:	d013      	beq.n	13cb4 <f_write+0xd8>
   13c8c:	68a3      	ldr	r3, [r4, #8]
   13c8e:	f3c3 0208 	ubfx	r2, r3, #0, #9
   13c92:	2a00      	cmp	r2, #0
   13c94:	d154      	bne.n	13d40 <f_write+0x164>
   13c96:	6820      	ldr	r0, [r4, #0]
   13c98:	7886      	ldrb	r6, [r0, #2]
   13c9a:	3e01      	subs	r6, #1
   13c9c:	ea06 2653 	and.w	r6, r6, r3, lsr #9
   13ca0:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
   13ca4:	d11e      	bne.n	13ce4 <f_write+0x108>
   13ca6:	b9ab      	cbnz	r3, 13cd4 <f_write+0xf8>
   13ca8:	6921      	ldr	r1, [r4, #16]
   13caa:	b949      	cbnz	r1, 13cc0 <f_write+0xe4>
   13cac:	f7ff f997 	bl	12fde <create_chain>
   13cb0:	4601      	mov	r1, r0
   13cb2:	b928      	cbnz	r0, 13cc0 <f_write+0xe4>
   13cb4:	68a3      	ldr	r3, [r4, #8]
   13cb6:	68e2      	ldr	r2, [r4, #12]
   13cb8:	4293      	cmp	r3, r2
   13cba:	d954      	bls.n	13d66 <f_write+0x18a>
   13cbc:	60e3      	str	r3, [r4, #12]
   13cbe:	e052      	b.n	13d66 <f_write+0x18a>
   13cc0:	2901      	cmp	r1, #1
   13cc2:	d109      	bne.n	13cd8 <f_write+0xfc>
   13cc4:	2502      	movs	r5, #2
   13cc6:	71e5      	strb	r5, [r4, #7]
   13cc8:	4629      	mov	r1, r5
   13cca:	6820      	ldr	r0, [r4, #0]
   13ccc:	f7ff f875 	bl	12dba <unlock_fs>
   13cd0:	4628      	mov	r0, r5
   13cd2:	e051      	b.n	13d78 <f_write+0x19c>
   13cd4:	6961      	ldr	r1, [r4, #20]
   13cd6:	e7e9      	b.n	13cac <f_write+0xd0>
   13cd8:	1c4a      	adds	r2, r1, #1
   13cda:	d02e      	beq.n	13d3a <f_write+0x15e>
   13cdc:	6923      	ldr	r3, [r4, #16]
   13cde:	6161      	str	r1, [r4, #20]
   13ce0:	b903      	cbnz	r3, 13ce4 <f_write+0x108>
   13ce2:	6121      	str	r1, [r4, #16]
   13ce4:	79a3      	ldrb	r3, [r4, #6]
   13ce6:	065b      	lsls	r3, r3, #25
   13ce8:	d50b      	bpl.n	13d02 <f_write+0x126>
   13cea:	6820      	ldr	r0, [r4, #0]
   13cec:	2301      	movs	r3, #1
   13cee:	69a2      	ldr	r2, [r4, #24]
   13cf0:	9901      	ldr	r1, [sp, #4]
   13cf2:	7840      	ldrb	r0, [r0, #1]
   13cf4:	f001 fce1 	bl	156ba <disk_write>
   13cf8:	b9f8      	cbnz	r0, 13d3a <f_write+0x15e>
   13cfa:	79a3      	ldrb	r3, [r4, #6]
   13cfc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13d00:	71a3      	strb	r3, [r4, #6]
   13d02:	f8d4 a000 	ldr.w	sl, [r4]
   13d06:	6961      	ldr	r1, [r4, #20]
   13d08:	4650      	mov	r0, sl
   13d0a:	f7ff f863 	bl	12dd4 <clust2sect>
   13d0e:	2800      	cmp	r0, #0
   13d10:	d18a      	bne.n	13c28 <f_write+0x4c>
   13d12:	2502      	movs	r5, #2
   13d14:	71e5      	strb	r5, [r4, #7]
   13d16:	4629      	mov	r1, r5
   13d18:	4650      	mov	r0, sl
   13d1a:	e7d7      	b.n	13ccc <f_write+0xf0>
   13d1c:	69a3      	ldr	r3, [r4, #24]
   13d1e:	429f      	cmp	r7, r3
   13d20:	d00d      	beq.n	13d3e <f_write+0x162>
   13d22:	68a2      	ldr	r2, [r4, #8]
   13d24:	68e3      	ldr	r3, [r4, #12]
   13d26:	429a      	cmp	r2, r3
   13d28:	d209      	bcs.n	13d3e <f_write+0x162>
   13d2a:	2301      	movs	r3, #1
   13d2c:	463a      	mov	r2, r7
   13d2e:	9901      	ldr	r1, [sp, #4]
   13d30:	f89a 0001 	ldrb.w	r0, [sl, #1]
   13d34:	f001 fca5 	bl	15682 <disk_read>
   13d38:	b108      	cbz	r0, 13d3e <f_write+0x162>
   13d3a:	2501      	movs	r5, #1
   13d3c:	e7c3      	b.n	13cc6 <f_write+0xea>
   13d3e:	61a7      	str	r7, [r4, #24]
   13d40:	68a0      	ldr	r0, [r4, #8]
   13d42:	4649      	mov	r1, r9
   13d44:	f3c0 0008 	ubfx	r0, r0, #0, #9
   13d48:	f5c0 7500 	rsb	r5, r0, #512	; 0x200
   13d4c:	4545      	cmp	r5, r8
   13d4e:	bf28      	it	cs
   13d50:	4645      	movcs	r5, r8
   13d52:	4420      	add	r0, r4
   13d54:	462a      	mov	r2, r5
   13d56:	3024      	adds	r0, #36	; 0x24
   13d58:	f7fe fd9f 	bl	1289a <mem_cpy>
   13d5c:	79a3      	ldrb	r3, [r4, #6]
   13d5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   13d62:	71a3      	strb	r3, [r4, #6]
   13d64:	e784      	b.n	13c70 <f_write+0x94>
   13d66:	79a3      	ldrb	r3, [r4, #6]
   13d68:	6820      	ldr	r0, [r4, #0]
   13d6a:	f043 0320 	orr.w	r3, r3, #32
   13d6e:	71a3      	strb	r3, [r4, #6]
   13d70:	2100      	movs	r1, #0
   13d72:	f7ff f822 	bl	12dba <unlock_fs>
   13d76:	2000      	movs	r0, #0
   13d78:	b003      	add	sp, #12
   13d7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013d7e <f_sync>:
f_sync():
   13d7e:	b570      	push	{r4, r5, r6, lr}
   13d80:	4604      	mov	r4, r0
   13d82:	f7fe fffd 	bl	12d80 <validate>
   13d86:	4605      	mov	r5, r0
   13d88:	2800      	cmp	r0, #0
   13d8a:	d138      	bne.n	13dfe <f_sync+0x80>
   13d8c:	79a3      	ldrb	r3, [r4, #6]
   13d8e:	069a      	lsls	r2, r3, #26
   13d90:	d535      	bpl.n	13dfe <f_sync+0x80>
   13d92:	065b      	lsls	r3, r3, #25
   13d94:	d512      	bpl.n	13dbc <f_sync+0x3e>
   13d96:	6820      	ldr	r0, [r4, #0]
   13d98:	2301      	movs	r3, #1
   13d9a:	69a2      	ldr	r2, [r4, #24]
   13d9c:	f104 0124 	add.w	r1, r4, #36	; 0x24
   13da0:	7840      	ldrb	r0, [r0, #1]
   13da2:	f001 fc8a 	bl	156ba <disk_write>
   13da6:	b128      	cbz	r0, 13db4 <f_sync+0x36>
   13da8:	6820      	ldr	r0, [r4, #0]
   13daa:	2101      	movs	r1, #1
   13dac:	f7ff f805 	bl	12dba <unlock_fs>
   13db0:	2001      	movs	r0, #1
   13db2:	bd70      	pop	{r4, r5, r6, pc}
   13db4:	79a3      	ldrb	r3, [r4, #6]
   13db6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13dba:	71a3      	strb	r3, [r4, #6]
   13dbc:	69e1      	ldr	r1, [r4, #28]
   13dbe:	6820      	ldr	r0, [r4, #0]
   13dc0:	f7fe fe80 	bl	12ac4 <move_window>
   13dc4:	4605      	mov	r5, r0
   13dc6:	b9d0      	cbnz	r0, 13dfe <f_sync+0x80>
   13dc8:	6a26      	ldr	r6, [r4, #32]
   13dca:	7af3      	ldrb	r3, [r6, #11]
   13dcc:	f043 0320 	orr.w	r3, r3, #32
   13dd0:	72f3      	strb	r3, [r6, #11]
   13dd2:	68e3      	ldr	r3, [r4, #12]
   13dd4:	61f3      	str	r3, [r6, #28]
   13dd6:	6923      	ldr	r3, [r4, #16]
   13dd8:	8373      	strh	r3, [r6, #26]
   13dda:	0c1b      	lsrs	r3, r3, #16
   13ddc:	82b3      	strh	r3, [r6, #20]
   13dde:	f7fe fd33 	bl	12848 <get_fattime>
   13de2:	8275      	strh	r5, [r6, #18]
   13de4:	f8c6 0016 	str.w	r0, [r6, #22]
   13de8:	79a3      	ldrb	r3, [r4, #6]
   13dea:	2201      	movs	r2, #1
   13dec:	f023 0320 	bic.w	r3, r3, #32
   13df0:	71a3      	strb	r3, [r4, #6]
   13df2:	6823      	ldr	r3, [r4, #0]
   13df4:	711a      	strb	r2, [r3, #4]
   13df6:	6820      	ldr	r0, [r4, #0]
   13df8:	f7fe fe2a 	bl	12a50 <sync_fs>
   13dfc:	4605      	mov	r5, r0
   13dfe:	6820      	ldr	r0, [r4, #0]
   13e00:	4629      	mov	r1, r5
   13e02:	f7fe ffda 	bl	12dba <unlock_fs>
   13e06:	4628      	mov	r0, r5
   13e08:	bd70      	pop	{r4, r5, r6, pc}

00013e0a <f_close>:
f_close():
   13e0a:	b538      	push	{r3, r4, r5, lr}
   13e0c:	4605      	mov	r5, r0
   13e0e:	f7ff ffb6 	bl	13d7e <f_sync>
   13e12:	4604      	mov	r4, r0
   13e14:	b948      	cbnz	r0, 13e2a <f_close+0x20>
   13e16:	4628      	mov	r0, r5
   13e18:	f7fe ffb2 	bl	12d80 <validate>
   13e1c:	4604      	mov	r4, r0
   13e1e:	b920      	cbnz	r0, 13e2a <f_close+0x20>
   13e20:	6828      	ldr	r0, [r5, #0]
   13e22:	4621      	mov	r1, r4
   13e24:	602c      	str	r4, [r5, #0]
   13e26:	f7fe ffc8 	bl	12dba <unlock_fs>
   13e2a:	4620      	mov	r0, r4
   13e2c:	bd38      	pop	{r3, r4, r5, pc}

00013e2e <f_lseek>:
f_lseek():
   13e2e:	b570      	push	{r4, r5, r6, lr}
   13e30:	4604      	mov	r4, r0
   13e32:	460e      	mov	r6, r1
   13e34:	f7fe ffa4 	bl	12d80 <validate>
   13e38:	4605      	mov	r5, r0
   13e3a:	bb70      	cbnz	r0, 13e9a <f_lseek+0x6c>
   13e3c:	79e1      	ldrb	r1, [r4, #7]
   13e3e:	b121      	cbz	r1, 13e4a <f_lseek+0x1c>
   13e40:	6820      	ldr	r0, [r4, #0]
   13e42:	f7fe ffba 	bl	12dba <unlock_fs>
   13e46:	79e0      	ldrb	r0, [r4, #7]
   13e48:	bd70      	pop	{r4, r5, r6, pc}
   13e4a:	68e3      	ldr	r3, [r4, #12]
   13e4c:	42b3      	cmp	r3, r6
   13e4e:	d204      	bcs.n	13e5a <f_lseek+0x2c>
   13e50:	79a2      	ldrb	r2, [r4, #6]
   13e52:	f012 0f02 	tst.w	r2, #2
   13e56:	bf08      	it	eq
   13e58:	461e      	moveq	r6, r3
   13e5a:	2200      	movs	r2, #0
   13e5c:	68a3      	ldr	r3, [r4, #8]
   13e5e:	60a2      	str	r2, [r4, #8]
   13e60:	2e00      	cmp	r6, #0
   13e62:	d07a      	beq.n	13f5a <f_lseek+0x12c>
   13e64:	6820      	ldr	r0, [r4, #0]
   13e66:	7885      	ldrb	r5, [r0, #2]
   13e68:	026d      	lsls	r5, r5, #9
   13e6a:	b16b      	cbz	r3, 13e88 <f_lseek+0x5a>
   13e6c:	3b01      	subs	r3, #1
   13e6e:	1e72      	subs	r2, r6, #1
   13e70:	fbb2 f2f5 	udiv	r2, r2, r5
   13e74:	fbb3 f1f5 	udiv	r1, r3, r5
   13e78:	428a      	cmp	r2, r1
   13e7a:	d305      	bcc.n	13e88 <f_lseek+0x5a>
   13e7c:	426a      	negs	r2, r5
   13e7e:	4013      	ands	r3, r2
   13e80:	60a3      	str	r3, [r4, #8]
   13e82:	1af6      	subs	r6, r6, r3
   13e84:	6961      	ldr	r1, [r4, #20]
   13e86:	e012      	b.n	13eae <f_lseek+0x80>
   13e88:	6921      	ldr	r1, [r4, #16]
   13e8a:	b979      	cbnz	r1, 13eac <f_lseek+0x7e>
   13e8c:	f7ff f8a7 	bl	12fde <create_chain>
   13e90:	2801      	cmp	r0, #1
   13e92:	4601      	mov	r1, r0
   13e94:	d107      	bne.n	13ea6 <f_lseek+0x78>
   13e96:	2502      	movs	r5, #2
   13e98:	71e5      	strb	r5, [r4, #7]
   13e9a:	4629      	mov	r1, r5
   13e9c:	6820      	ldr	r0, [r4, #0]
   13e9e:	f7fe ff8c 	bl	12dba <unlock_fs>
   13ea2:	4628      	mov	r0, r5
   13ea4:	bd70      	pop	{r4, r5, r6, pc}
   13ea6:	3001      	adds	r0, #1
   13ea8:	d054      	beq.n	13f54 <f_lseek+0x126>
   13eaa:	6121      	str	r1, [r4, #16]
   13eac:	6161      	str	r1, [r4, #20]
   13eae:	b9b1      	cbnz	r1, 13ede <f_lseek+0xb0>
   13eb0:	2600      	movs	r6, #0
   13eb2:	e02f      	b.n	13f14 <f_lseek+0xe6>
   13eb4:	79a3      	ldrb	r3, [r4, #6]
   13eb6:	6820      	ldr	r0, [r4, #0]
   13eb8:	079a      	lsls	r2, r3, #30
   13eba:	d513      	bpl.n	13ee4 <f_lseek+0xb6>
   13ebc:	f7ff f88f 	bl	12fde <create_chain>
   13ec0:	4601      	mov	r1, r0
   13ec2:	b198      	cbz	r0, 13eec <f_lseek+0xbe>
   13ec4:	1c4b      	adds	r3, r1, #1
   13ec6:	d045      	beq.n	13f54 <f_lseek+0x126>
   13ec8:	2901      	cmp	r1, #1
   13eca:	d9e4      	bls.n	13e96 <f_lseek+0x68>
   13ecc:	6823      	ldr	r3, [r4, #0]
   13ece:	699b      	ldr	r3, [r3, #24]
   13ed0:	4299      	cmp	r1, r3
   13ed2:	d2e0      	bcs.n	13e96 <f_lseek+0x68>
   13ed4:	68a3      	ldr	r3, [r4, #8]
   13ed6:	6161      	str	r1, [r4, #20]
   13ed8:	442b      	add	r3, r5
   13eda:	60a3      	str	r3, [r4, #8]
   13edc:	1b76      	subs	r6, r6, r5
   13ede:	42ae      	cmp	r6, r5
   13ee0:	d8e8      	bhi.n	13eb4 <f_lseek+0x86>
   13ee2:	e004      	b.n	13eee <f_lseek+0xc0>
   13ee4:	f7fe ff81 	bl	12dea <get_fat>
   13ee8:	4601      	mov	r1, r0
   13eea:	e7eb      	b.n	13ec4 <f_lseek+0x96>
   13eec:	462e      	mov	r6, r5
   13eee:	68a3      	ldr	r3, [r4, #8]
   13ef0:	4433      	add	r3, r6
   13ef2:	60a3      	str	r3, [r4, #8]
   13ef4:	f3c6 0308 	ubfx	r3, r6, #0, #9
   13ef8:	2b00      	cmp	r3, #0
   13efa:	d0d9      	beq.n	13eb0 <f_lseek+0x82>
   13efc:	6822      	ldr	r2, [r4, #0]
   13efe:	4610      	mov	r0, r2
   13f00:	f7fe ff68 	bl	12dd4 <clust2sect>
   13f04:	b920      	cbnz	r0, 13f10 <f_lseek+0xe2>
   13f06:	2502      	movs	r5, #2
   13f08:	71e5      	strb	r5, [r4, #7]
   13f0a:	4629      	mov	r1, r5
   13f0c:	4610      	mov	r0, r2
   13f0e:	e7c6      	b.n	13e9e <f_lseek+0x70>
   13f10:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   13f14:	68a3      	ldr	r3, [r4, #8]
   13f16:	f3c3 0308 	ubfx	r3, r3, #0, #9
   13f1a:	b1f3      	cbz	r3, 13f5a <f_lseek+0x12c>
   13f1c:	69a2      	ldr	r2, [r4, #24]
   13f1e:	4296      	cmp	r6, r2
   13f20:	d01b      	beq.n	13f5a <f_lseek+0x12c>
   13f22:	79a3      	ldrb	r3, [r4, #6]
   13f24:	f104 0524 	add.w	r5, r4, #36	; 0x24
   13f28:	f013 0f40 	tst.w	r3, #64	; 0x40
   13f2c:	d00a      	beq.n	13f44 <f_lseek+0x116>
   13f2e:	6820      	ldr	r0, [r4, #0]
   13f30:	2301      	movs	r3, #1
   13f32:	4629      	mov	r1, r5
   13f34:	7840      	ldrb	r0, [r0, #1]
   13f36:	f001 fbc0 	bl	156ba <disk_write>
   13f3a:	b958      	cbnz	r0, 13f54 <f_lseek+0x126>
   13f3c:	79a3      	ldrb	r3, [r4, #6]
   13f3e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13f42:	71a3      	strb	r3, [r4, #6]
   13f44:	6820      	ldr	r0, [r4, #0]
   13f46:	2301      	movs	r3, #1
   13f48:	4632      	mov	r2, r6
   13f4a:	4629      	mov	r1, r5
   13f4c:	7840      	ldrb	r0, [r0, #1]
   13f4e:	f001 fb98 	bl	15682 <disk_read>
   13f52:	b108      	cbz	r0, 13f58 <f_lseek+0x12a>
   13f54:	2501      	movs	r5, #1
   13f56:	e79f      	b.n	13e98 <f_lseek+0x6a>
   13f58:	61a6      	str	r6, [r4, #24]
   13f5a:	68a3      	ldr	r3, [r4, #8]
   13f5c:	68e2      	ldr	r2, [r4, #12]
   13f5e:	6820      	ldr	r0, [r4, #0]
   13f60:	4293      	cmp	r3, r2
   13f62:	bf84      	itt	hi
   13f64:	60e3      	strhi	r3, [r4, #12]
   13f66:	79a3      	ldrbhi	r3, [r4, #6]
   13f68:	f04f 0100 	mov.w	r1, #0
   13f6c:	bf84      	itt	hi
   13f6e:	f043 0320 	orrhi.w	r3, r3, #32
   13f72:	71a3      	strbhi	r3, [r4, #6]
   13f74:	f7fe ff21 	bl	12dba <unlock_fs>
   13f78:	2000      	movs	r0, #0
   13f7a:	bd70      	pop	{r4, r5, r6, pc}

00013f7c <f_opendir>:
f_opendir():
   13f7c:	b530      	push	{r4, r5, lr}
   13f7e:	b0c9      	sub	sp, #292	; 0x124
   13f80:	9101      	str	r1, [sp, #4]
   13f82:	4605      	mov	r5, r0
   13f84:	2800      	cmp	r0, #0
   13f86:	d033      	beq.n	13ff0 <f_opendir+0x74>
   13f88:	2200      	movs	r2, #0
   13f8a:	a901      	add	r1, sp, #4
   13f8c:	a803      	add	r0, sp, #12
   13f8e:	f7fe fdd9 	bl	12b44 <find_volume>
   13f92:	4604      	mov	r4, r0
   13f94:	bb20      	cbnz	r0, 13fe0 <f_opendir+0x64>
   13f96:	9b03      	ldr	r3, [sp, #12]
   13f98:	9901      	ldr	r1, [sp, #4]
   13f9a:	602b      	str	r3, [r5, #0]
   13f9c:	ab04      	add	r3, sp, #16
   13f9e:	61ab      	str	r3, [r5, #24]
   13fa0:	ab07      	add	r3, sp, #28
   13fa2:	61eb      	str	r3, [r5, #28]
   13fa4:	4628      	mov	r0, r5
   13fa6:	f7ff f975 	bl	13294 <follow_path>
   13faa:	4604      	mov	r4, r0
   13fac:	bb28      	cbnz	r0, 13ffa <f_opendir+0x7e>
   13fae:	696b      	ldr	r3, [r5, #20]
   13fb0:	b15b      	cbz	r3, 13fca <f_opendir+0x4e>
   13fb2:	7ada      	ldrb	r2, [r3, #11]
   13fb4:	06d2      	lsls	r2, r2, #27
   13fb6:	d512      	bpl.n	13fde <f_opendir+0x62>
   13fb8:	9903      	ldr	r1, [sp, #12]
   13fba:	8b5a      	ldrh	r2, [r3, #26]
   13fbc:	7809      	ldrb	r1, [r1, #0]
   13fbe:	2903      	cmp	r1, #3
   13fc0:	bf04      	itt	eq
   13fc2:	8a9b      	ldrheq	r3, [r3, #20]
   13fc4:	ea42 4203 	orreq.w	r2, r2, r3, lsl #16
   13fc8:	60aa      	str	r2, [r5, #8]
   13fca:	9b03      	ldr	r3, [sp, #12]
   13fcc:	2100      	movs	r1, #0
   13fce:	88db      	ldrh	r3, [r3, #6]
   13fd0:	4628      	mov	r0, r5
   13fd2:	80ab      	strh	r3, [r5, #4]
   13fd4:	f7fe ff5c 	bl	12e90 <dir_sdi>
   13fd8:	2804      	cmp	r0, #4
   13fda:	4604      	mov	r4, r0
   13fdc:	d10a      	bne.n	13ff4 <f_opendir+0x78>
   13fde:	2405      	movs	r4, #5
   13fe0:	2300      	movs	r3, #0
   13fe2:	602b      	str	r3, [r5, #0]
   13fe4:	9803      	ldr	r0, [sp, #12]
   13fe6:	4621      	mov	r1, r4
   13fe8:	f7fe fee7 	bl	12dba <unlock_fs>
   13fec:	4620      	mov	r0, r4
   13fee:	e007      	b.n	14000 <f_opendir+0x84>
   13ff0:	2009      	movs	r0, #9
   13ff2:	e005      	b.n	14000 <f_opendir+0x84>
   13ff4:	2c00      	cmp	r4, #0
   13ff6:	d0f5      	beq.n	13fe4 <f_opendir+0x68>
   13ff8:	e7f2      	b.n	13fe0 <f_opendir+0x64>
   13ffa:	2804      	cmp	r0, #4
   13ffc:	d0ef      	beq.n	13fde <f_opendir+0x62>
   13ffe:	e7ef      	b.n	13fe0 <f_opendir+0x64>
   14000:	b049      	add	sp, #292	; 0x124
   14002:	bd30      	pop	{r4, r5, pc}

00014004 <f_readdir>:
f_readdir():
   14004:	b570      	push	{r4, r5, r6, lr}
   14006:	b0c4      	sub	sp, #272	; 0x110
   14008:	4604      	mov	r4, r0
   1400a:	460e      	mov	r6, r1
   1400c:	f7fe feb8 	bl	12d80 <validate>
   14010:	4605      	mov	r5, r0
   14012:	b9f8      	cbnz	r0, 14054 <f_readdir+0x50>
   14014:	b926      	cbnz	r6, 14020 <f_readdir+0x1c>
   14016:	4601      	mov	r1, r0
   14018:	4620      	mov	r0, r4
   1401a:	f7fe ff39 	bl	12e90 <dir_sdi>
   1401e:	e018      	b.n	14052 <f_readdir+0x4e>
   14020:	ab03      	add	r3, sp, #12
   14022:	f8c4 d018 	str.w	sp, [r4, #24]
   14026:	61e3      	str	r3, [r4, #28]
   14028:	4620      	mov	r0, r4
   1402a:	f7ff fba7 	bl	1377c <dir_read.constprop.11>
   1402e:	2804      	cmp	r0, #4
   14030:	d101      	bne.n	14036 <f_readdir+0x32>
   14032:	6125      	str	r5, [r4, #16]
   14034:	e000      	b.n	14038 <f_readdir+0x34>
   14036:	b960      	cbnz	r0, 14052 <f_readdir+0x4e>
   14038:	4631      	mov	r1, r6
   1403a:	4620      	mov	r0, r4
   1403c:	f7fe fc7d 	bl	1293a <get_fileinfo>
   14040:	2100      	movs	r1, #0
   14042:	4620      	mov	r0, r4
   14044:	f7ff f81c 	bl	13080 <dir_next>
   14048:	2804      	cmp	r0, #4
   1404a:	d102      	bne.n	14052 <f_readdir+0x4e>
   1404c:	2300      	movs	r3, #0
   1404e:	6123      	str	r3, [r4, #16]
   14050:	e000      	b.n	14054 <f_readdir+0x50>
   14052:	4605      	mov	r5, r0
   14054:	6820      	ldr	r0, [r4, #0]
   14056:	4629      	mov	r1, r5
   14058:	f7fe feaf 	bl	12dba <unlock_fs>
   1405c:	4628      	mov	r0, r5
   1405e:	b044      	add	sp, #272	; 0x110
   14060:	bd70      	pop	{r4, r5, r6, pc}

00014062 <f_getfree>:
f_getfree():
   14062:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   14066:	4614      	mov	r4, r2
   14068:	ab02      	add	r3, sp, #8
   1406a:	f843 0d04 	str.w	r0, [r3, #-4]!
   1406e:	4688      	mov	r8, r1
   14070:	4620      	mov	r0, r4
   14072:	2200      	movs	r2, #0
   14074:	4619      	mov	r1, r3
   14076:	f7fe fd65 	bl	12b44 <find_volume>
   1407a:	6824      	ldr	r4, [r4, #0]
   1407c:	4605      	mov	r5, r0
   1407e:	2800      	cmp	r0, #0
   14080:	d14c      	bne.n	1411c <f_getfree+0xba>
   14082:	69a7      	ldr	r7, [r4, #24]
   14084:	6963      	ldr	r3, [r4, #20]
   14086:	1eba      	subs	r2, r7, #2
   14088:	4293      	cmp	r3, r2
   1408a:	d802      	bhi.n	14092 <f_getfree+0x30>
   1408c:	f8c8 3000 	str.w	r3, [r8]
   14090:	e044      	b.n	1411c <f_getfree+0xba>
   14092:	f894 9000 	ldrb.w	r9, [r4]
   14096:	f1b9 0f01 	cmp.w	r9, #1
   1409a:	d110      	bne.n	140be <f_getfree+0x5c>
   1409c:	4606      	mov	r6, r0
   1409e:	2702      	movs	r7, #2
   140a0:	4639      	mov	r1, r7
   140a2:	4620      	mov	r0, r4
   140a4:	f7fe fea1 	bl	12dea <get_fat>
   140a8:	1c43      	adds	r3, r0, #1
   140aa:	d02b      	beq.n	14104 <f_getfree+0xa2>
   140ac:	2801      	cmp	r0, #1
   140ae:	d02b      	beq.n	14108 <f_getfree+0xa6>
   140b0:	b900      	cbnz	r0, 140b4 <f_getfree+0x52>
   140b2:	3601      	adds	r6, #1
   140b4:	69a3      	ldr	r3, [r4, #24]
   140b6:	3701      	adds	r7, #1
   140b8:	429f      	cmp	r7, r3
   140ba:	d3f1      	bcc.n	140a0 <f_getfree+0x3e>
   140bc:	e027      	b.n	1410e <f_getfree+0xac>
   140be:	4603      	mov	r3, r0
   140c0:	4602      	mov	r2, r0
   140c2:	4606      	mov	r6, r0
   140c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
   140c6:	b952      	cbnz	r2, 140de <f_getfree+0x7c>
   140c8:	4620      	mov	r0, r4
   140ca:	f101 0a01 	add.w	sl, r1, #1
   140ce:	f7fe fcf9 	bl	12ac4 <move_window>
   140d2:	b9d8      	cbnz	r0, 1410c <f_getfree+0xaa>
   140d4:	4651      	mov	r1, sl
   140d6:	f104 0334 	add.w	r3, r4, #52	; 0x34
   140da:	f44f 7200 	mov.w	r2, #512	; 0x200
   140de:	f1b9 0f02 	cmp.w	r9, #2
   140e2:	d105      	bne.n	140f0 <f_getfree+0x8e>
   140e4:	8818      	ldrh	r0, [r3, #0]
   140e6:	b900      	cbnz	r0, 140ea <f_getfree+0x88>
   140e8:	3601      	adds	r6, #1
   140ea:	3302      	adds	r3, #2
   140ec:	3a02      	subs	r2, #2
   140ee:	e006      	b.n	140fe <f_getfree+0x9c>
   140f0:	6818      	ldr	r0, [r3, #0]
   140f2:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   140f6:	b900      	cbnz	r0, 140fa <f_getfree+0x98>
   140f8:	3601      	adds	r6, #1
   140fa:	3304      	adds	r3, #4
   140fc:	3a04      	subs	r2, #4
   140fe:	3f01      	subs	r7, #1
   14100:	d1e1      	bne.n	140c6 <f_getfree+0x64>
   14102:	e004      	b.n	1410e <f_getfree+0xac>
   14104:	2501      	movs	r5, #1
   14106:	e002      	b.n	1410e <f_getfree+0xac>
   14108:	2502      	movs	r5, #2
   1410a:	e000      	b.n	1410e <f_getfree+0xac>
   1410c:	4605      	mov	r5, r0
   1410e:	7963      	ldrb	r3, [r4, #5]
   14110:	6166      	str	r6, [r4, #20]
   14112:	f043 0301 	orr.w	r3, r3, #1
   14116:	7163      	strb	r3, [r4, #5]
   14118:	f8c8 6000 	str.w	r6, [r8]
   1411c:	4620      	mov	r0, r4
   1411e:	4629      	mov	r1, r5
   14120:	f7fe fe4b 	bl	12dba <unlock_fs>
   14124:	4628      	mov	r0, r5
   14126:	b002      	add	sp, #8
   14128:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001412c <f_unlink>:
f_unlink():
   1412c:	b530      	push	{r4, r5, lr}
   1412e:	b0d9      	sub	sp, #356	; 0x164
   14130:	9001      	str	r0, [sp, #4]
   14132:	2201      	movs	r2, #1
   14134:	a901      	add	r1, sp, #4
   14136:	a805      	add	r0, sp, #20
   14138:	f7fe fd04 	bl	12b44 <find_volume>
   1413c:	4604      	mov	r4, r0
   1413e:	2800      	cmp	r0, #0
   14140:	d14a      	bne.n	141d8 <f_unlink+0xac>
   14142:	ab02      	add	r3, sp, #8
   14144:	930b      	str	r3, [sp, #44]	; 0x2c
   14146:	9901      	ldr	r1, [sp, #4]
   14148:	ab17      	add	r3, sp, #92	; 0x5c
   1414a:	a805      	add	r0, sp, #20
   1414c:	930c      	str	r3, [sp, #48]	; 0x30
   1414e:	f7ff f8a1 	bl	13294 <follow_path>
   14152:	4604      	mov	r4, r0
   14154:	2800      	cmp	r0, #0
   14156:	d13f      	bne.n	141d8 <f_unlink+0xac>
   14158:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1415a:	b133      	cbz	r3, 1416a <f_unlink+0x3e>
   1415c:	7ada      	ldrb	r2, [r3, #11]
   1415e:	f012 0f01 	tst.w	r2, #1
   14162:	bf0c      	ite	eq
   14164:	2400      	moveq	r4, #0
   14166:	2407      	movne	r4, #7
   14168:	e000      	b.n	1416c <f_unlink+0x40>
   1416a:	2406      	movs	r4, #6
   1416c:	9a05      	ldr	r2, [sp, #20]
   1416e:	8b5d      	ldrh	r5, [r3, #26]
   14170:	7812      	ldrb	r2, [r2, #0]
   14172:	2a03      	cmp	r2, #3
   14174:	bf04      	itt	eq
   14176:	8a9a      	ldrheq	r2, [r3, #20]
   14178:	ea45 4502 	orreq.w	r5, r5, r2, lsl #16
   1417c:	bb64      	cbnz	r4, 141d8 <f_unlink+0xac>
   1417e:	7adb      	ldrb	r3, [r3, #11]
   14180:	06db      	lsls	r3, r3, #27
   14182:	d514      	bpl.n	141ae <f_unlink+0x82>
   14184:	2d01      	cmp	r5, #1
   14186:	d924      	bls.n	141d2 <f_unlink+0xa6>
   14188:	2224      	movs	r2, #36	; 0x24
   1418a:	a905      	add	r1, sp, #20
   1418c:	a80e      	add	r0, sp, #56	; 0x38
   1418e:	f7fe fb84 	bl	1289a <mem_cpy>
   14192:	2102      	movs	r1, #2
   14194:	a80e      	add	r0, sp, #56	; 0x38
   14196:	9510      	str	r5, [sp, #64]	; 0x40
   14198:	f7fe fe7a 	bl	12e90 <dir_sdi>
   1419c:	4604      	mov	r4, r0
   1419e:	b9d8      	cbnz	r0, 141d8 <f_unlink+0xac>
   141a0:	a80e      	add	r0, sp, #56	; 0x38
   141a2:	f7ff faeb 	bl	1377c <dir_read.constprop.11>
   141a6:	4604      	mov	r4, r0
   141a8:	b1a8      	cbz	r0, 141d6 <f_unlink+0xaa>
   141aa:	2804      	cmp	r0, #4
   141ac:	d114      	bne.n	141d8 <f_unlink+0xac>
   141ae:	a805      	add	r0, sp, #20
   141b0:	f7ff fab6 	bl	13720 <dir_remove>
   141b4:	4604      	mov	r4, r0
   141b6:	b978      	cbnz	r0, 141d8 <f_unlink+0xac>
   141b8:	b925      	cbnz	r5, 141c4 <f_unlink+0x98>
   141ba:	9805      	ldr	r0, [sp, #20]
   141bc:	f7fe fc48 	bl	12a50 <sync_fs>
   141c0:	4604      	mov	r4, r0
   141c2:	e009      	b.n	141d8 <f_unlink+0xac>
   141c4:	4629      	mov	r1, r5
   141c6:	9805      	ldr	r0, [sp, #20]
   141c8:	f7ff fb4c 	bl	13864 <remove_chain>
   141cc:	4604      	mov	r4, r0
   141ce:	b918      	cbnz	r0, 141d8 <f_unlink+0xac>
   141d0:	e7f3      	b.n	141ba <f_unlink+0x8e>
   141d2:	2402      	movs	r4, #2
   141d4:	e000      	b.n	141d8 <f_unlink+0xac>
   141d6:	2407      	movs	r4, #7
   141d8:	9805      	ldr	r0, [sp, #20]
   141da:	4621      	mov	r1, r4
   141dc:	f7fe fded 	bl	12dba <unlock_fs>
   141e0:	4620      	mov	r0, r4
   141e2:	b059      	add	sp, #356	; 0x164
   141e4:	bd30      	pop	{r4, r5, pc}

000141e6 <f_mkdir>:
f_mkdir():
   141e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141ea:	b0d1      	sub	sp, #324	; 0x144
   141ec:	9001      	str	r0, [sp, #4]
   141ee:	f7fe fb2b 	bl	12848 <get_fattime>
   141f2:	2201      	movs	r2, #1
   141f4:	4680      	mov	r8, r0
   141f6:	a901      	add	r1, sp, #4
   141f8:	a806      	add	r0, sp, #24
   141fa:	f7fe fca3 	bl	12b44 <find_volume>
   141fe:	4604      	mov	r4, r0
   14200:	4605      	mov	r5, r0
   14202:	2800      	cmp	r0, #0
   14204:	f040 8090 	bne.w	14328 <f_mkdir+0x142>
   14208:	ab03      	add	r3, sp, #12
   1420a:	930c      	str	r3, [sp, #48]	; 0x30
   1420c:	9901      	ldr	r1, [sp, #4]
   1420e:	ab0f      	add	r3, sp, #60	; 0x3c
   14210:	a806      	add	r0, sp, #24
   14212:	930d      	str	r3, [sp, #52]	; 0x34
   14214:	f7ff f83e 	bl	13294 <follow_path>
   14218:	4604      	mov	r4, r0
   1421a:	b180      	cbz	r0, 1423e <f_mkdir+0x58>
   1421c:	2804      	cmp	r0, #4
   1421e:	f040 8083 	bne.w	14328 <f_mkdir+0x142>
   14222:	4629      	mov	r1, r5
   14224:	9806      	ldr	r0, [sp, #24]
   14226:	f7fe feda 	bl	12fde <create_chain>
   1422a:	4605      	mov	r5, r0
   1422c:	b148      	cbz	r0, 14242 <f_mkdir+0x5c>
   1422e:	2801      	cmp	r0, #1
   14230:	d109      	bne.n	14246 <f_mkdir+0x60>
   14232:	2402      	movs	r4, #2
   14234:	4629      	mov	r1, r5
   14236:	9806      	ldr	r0, [sp, #24]
   14238:	f7ff fb14 	bl	13864 <remove_chain>
   1423c:	e074      	b.n	14328 <f_mkdir+0x142>
   1423e:	2408      	movs	r4, #8
   14240:	e072      	b.n	14328 <f_mkdir+0x142>
   14242:	2407      	movs	r4, #7
   14244:	e7f6      	b.n	14234 <f_mkdir+0x4e>
   14246:	1c43      	adds	r3, r0, #1
   14248:	d057      	beq.n	142fa <f_mkdir+0x114>
   1424a:	9806      	ldr	r0, [sp, #24]
   1424c:	f7fe fbfa 	bl	12a44 <sync_window>
   14250:	4604      	mov	r4, r0
   14252:	2800      	cmp	r0, #0
   14254:	d1ee      	bne.n	14234 <f_mkdir+0x4e>
   14256:	9e06      	ldr	r6, [sp, #24]
   14258:	4629      	mov	r1, r5
   1425a:	4630      	mov	r0, r6
   1425c:	f7fe fdba 	bl	12dd4 <clust2sect>
   14260:	f106 0734 	add.w	r7, r6, #52	; 0x34
   14264:	4621      	mov	r1, r4
   14266:	9000      	str	r0, [sp, #0]
   14268:	f44f 7200 	mov.w	r2, #512	; 0x200
   1426c:	4638      	mov	r0, r7
   1426e:	f7fe fb30 	bl	128d2 <mem_set>
   14272:	220b      	movs	r2, #11
   14274:	2120      	movs	r1, #32
   14276:	4638      	mov	r0, r7
   14278:	f7fe fb2b 	bl	128d2 <mem_set>
   1427c:	2210      	movs	r2, #16
   1427e:	242e      	movs	r4, #46	; 0x2e
   14280:	fa25 fa02 	lsr.w	sl, r5, r2
   14284:	fa1f f985 	uxth.w	r9, r5
   14288:	f886 203f 	strb.w	r2, [r6, #63]	; 0x3f
   1428c:	4639      	mov	r1, r7
   1428e:	2220      	movs	r2, #32
   14290:	f106 0054 	add.w	r0, r6, #84	; 0x54
   14294:	f886 4034 	strb.w	r4, [r6, #52]	; 0x34
   14298:	f8c6 804a 	str.w	r8, [r6, #74]	; 0x4a
   1429c:	f8a6 904e 	strh.w	r9, [r6, #78]	; 0x4e
   142a0:	f8a6 a048 	strh.w	sl, [r6, #72]	; 0x48
   142a4:	f7fe faf9 	bl	1289a <mem_cpy>
   142a8:	9906      	ldr	r1, [sp, #24]
   142aa:	f886 4055 	strb.w	r4, [r6, #85]	; 0x55
   142ae:	7808      	ldrb	r0, [r1, #0]
   142b0:	9a08      	ldr	r2, [sp, #32]
   142b2:	2803      	cmp	r0, #3
   142b4:	9b00      	ldr	r3, [sp, #0]
   142b6:	d103      	bne.n	142c0 <f_mkdir+0xda>
   142b8:	6a88      	ldr	r0, [r1, #40]	; 0x28
   142ba:	4282      	cmp	r2, r0
   142bc:	bf08      	it	eq
   142be:	2200      	moveq	r2, #0
   142c0:	f8a6 206e 	strh.w	r2, [r6, #110]	; 0x6e
   142c4:	0c12      	lsrs	r2, r2, #16
   142c6:	f8a6 2068 	strh.w	r2, [r6, #104]	; 0x68
   142ca:	788e      	ldrb	r6, [r1, #2]
   142cc:	b1be      	cbz	r6, 142fe <f_mkdir+0x118>
   142ce:	9806      	ldr	r0, [sp, #24]
   142d0:	f103 0b01 	add.w	fp, r3, #1
   142d4:	6303      	str	r3, [r0, #48]	; 0x30
   142d6:	f04f 0301 	mov.w	r3, #1
   142da:	7103      	strb	r3, [r0, #4]
   142dc:	f7fe fb8f 	bl	129fe <sync_window.part.1>
   142e0:	4604      	mov	r4, r0
   142e2:	2800      	cmp	r0, #0
   142e4:	d1a6      	bne.n	14234 <f_mkdir+0x4e>
   142e6:	4601      	mov	r1, r0
   142e8:	f44f 7200 	mov.w	r2, #512	; 0x200
   142ec:	4638      	mov	r0, r7
   142ee:	3e01      	subs	r6, #1
   142f0:	f7fe faef 	bl	128d2 <mem_set>
   142f4:	b2f6      	uxtb	r6, r6
   142f6:	465b      	mov	r3, fp
   142f8:	e7e8      	b.n	142cc <f_mkdir+0xe6>
   142fa:	2401      	movs	r4, #1
   142fc:	e79a      	b.n	14234 <f_mkdir+0x4e>
   142fe:	a806      	add	r0, sp, #24
   14300:	f7ff f8fc 	bl	134fc <dir_register>
   14304:	4604      	mov	r4, r0
   14306:	2800      	cmp	r0, #0
   14308:	d194      	bne.n	14234 <f_mkdir+0x4e>
   1430a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1430c:	2210      	movs	r2, #16
   1430e:	9806      	ldr	r0, [sp, #24]
   14310:	72da      	strb	r2, [r3, #11]
   14312:	f8c3 8016 	str.w	r8, [r3, #22]
   14316:	f8a3 901a 	strh.w	r9, [r3, #26]
   1431a:	f8a3 a014 	strh.w	sl, [r3, #20]
   1431e:	2301      	movs	r3, #1
   14320:	7103      	strb	r3, [r0, #4]
   14322:	f7fe fb95 	bl	12a50 <sync_fs>
   14326:	4604      	mov	r4, r0
   14328:	9806      	ldr	r0, [sp, #24]
   1432a:	4621      	mov	r1, r4
   1432c:	f7fe fd45 	bl	12dba <unlock_fs>
   14330:	4620      	mov	r0, r4
   14332:	b051      	add	sp, #324	; 0x144
   14334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014338 <f_rename>:
f_rename():
   14338:	b510      	push	{r4, lr}
   1433a:	b0de      	sub	sp, #376	; 0x178
   1433c:	9001      	str	r0, [sp, #4]
   1433e:	9100      	str	r1, [sp, #0]
   14340:	2201      	movs	r2, #1
   14342:	a901      	add	r1, sp, #4
   14344:	a80b      	add	r0, sp, #44	; 0x2c
   14346:	f7fe fbfd 	bl	12b44 <find_volume>
   1434a:	4604      	mov	r4, r0
   1434c:	2800      	cmp	r0, #0
   1434e:	d17c      	bne.n	1444a <f_rename+0x112>
   14350:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   14352:	9901      	ldr	r1, [sp, #4]
   14354:	9314      	str	r3, [sp, #80]	; 0x50
   14356:	ab02      	add	r3, sp, #8
   14358:	9311      	str	r3, [sp, #68]	; 0x44
   1435a:	a80b      	add	r0, sp, #44	; 0x2c
   1435c:	ab1d      	add	r3, sp, #116	; 0x74
   1435e:	9312      	str	r3, [sp, #72]	; 0x48
   14360:	f7fe ff98 	bl	13294 <follow_path>
   14364:	4604      	mov	r4, r0
   14366:	2800      	cmp	r0, #0
   14368:	d16f      	bne.n	1444a <f_rename+0x112>
   1436a:	9910      	ldr	r1, [sp, #64]	; 0x40
   1436c:	2900      	cmp	r1, #0
   1436e:	d05b      	beq.n	14428 <f_rename+0xf0>
   14370:	2215      	movs	r2, #21
   14372:	310b      	adds	r1, #11
   14374:	a805      	add	r0, sp, #20
   14376:	f7fe fa90 	bl	1289a <mem_cpy>
   1437a:	2224      	movs	r2, #36	; 0x24
   1437c:	a90b      	add	r1, sp, #44	; 0x2c
   1437e:	a814      	add	r0, sp, #80	; 0x50
   14380:	f7fe fa8b 	bl	1289a <mem_cpy>
   14384:	4668      	mov	r0, sp
   14386:	f7fe faba 	bl	128fe <get_ldnumber>
   1438a:	2800      	cmp	r0, #0
   1438c:	db4e      	blt.n	1442c <f_rename+0xf4>
   1438e:	9900      	ldr	r1, [sp, #0]
   14390:	a814      	add	r0, sp, #80	; 0x50
   14392:	f7fe ff7f 	bl	13294 <follow_path>
   14396:	4604      	mov	r4, r0
   14398:	2800      	cmp	r0, #0
   1439a:	d049      	beq.n	14430 <f_rename+0xf8>
   1439c:	2804      	cmp	r0, #4
   1439e:	d154      	bne.n	1444a <f_rename+0x112>
   143a0:	a814      	add	r0, sp, #80	; 0x50
   143a2:	f7ff f8ab 	bl	134fc <dir_register>
   143a6:	4604      	mov	r4, r0
   143a8:	2800      	cmp	r0, #0
   143aa:	d14e      	bne.n	1444a <f_rename+0x112>
   143ac:	9c19      	ldr	r4, [sp, #100]	; 0x64
   143ae:	2213      	movs	r2, #19
   143b0:	f10d 0116 	add.w	r1, sp, #22
   143b4:	f104 000d 	add.w	r0, r4, #13
   143b8:	f7fe fa6f 	bl	1289a <mem_cpy>
   143bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
   143c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   143c2:	f043 0320 	orr.w	r3, r3, #32
   143c6:	72e3      	strb	r3, [r4, #11]
   143c8:	2301      	movs	r3, #1
   143ca:	7113      	strb	r3, [r2, #4]
   143cc:	990d      	ldr	r1, [sp, #52]	; 0x34
   143ce:	9b16      	ldr	r3, [sp, #88]	; 0x58
   143d0:	4299      	cmp	r1, r3
   143d2:	d02f      	beq.n	14434 <f_rename+0xfc>
   143d4:	7ae3      	ldrb	r3, [r4, #11]
   143d6:	06db      	lsls	r3, r3, #27
   143d8:	d52c      	bpl.n	14434 <f_rename+0xfc>
   143da:	7813      	ldrb	r3, [r2, #0]
   143dc:	8b61      	ldrh	r1, [r4, #26]
   143de:	2b03      	cmp	r3, #3
   143e0:	bf08      	it	eq
   143e2:	8aa3      	ldrheq	r3, [r4, #20]
   143e4:	4610      	mov	r0, r2
   143e6:	bf08      	it	eq
   143e8:	ea41 4103 	orreq.w	r1, r1, r3, lsl #16
   143ec:	f7fe fcf2 	bl	12dd4 <clust2sect>
   143f0:	4601      	mov	r1, r0
   143f2:	b348      	cbz	r0, 14448 <f_rename+0x110>
   143f4:	4610      	mov	r0, r2
   143f6:	f7fe fb65 	bl	12ac4 <move_window>
   143fa:	4604      	mov	r4, r0
   143fc:	bb28      	cbnz	r0, 1444a <f_rename+0x112>
   143fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   14400:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
   14404:	2a2e      	cmp	r2, #46	; 0x2e
   14406:	d115      	bne.n	14434 <f_rename+0xfc>
   14408:	781a      	ldrb	r2, [r3, #0]
   1440a:	2a03      	cmp	r2, #3
   1440c:	d103      	bne.n	14416 <f_rename+0xde>
   1440e:	9916      	ldr	r1, [sp, #88]	; 0x58
   14410:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14412:	4291      	cmp	r1, r2
   14414:	d000      	beq.n	14418 <f_rename+0xe0>
   14416:	9c16      	ldr	r4, [sp, #88]	; 0x58
   14418:	f8a3 406e 	strh.w	r4, [r3, #110]	; 0x6e
   1441c:	2201      	movs	r2, #1
   1441e:	0c24      	lsrs	r4, r4, #16
   14420:	f8a3 4068 	strh.w	r4, [r3, #104]	; 0x68
   14424:	711a      	strb	r2, [r3, #4]
   14426:	e005      	b.n	14434 <f_rename+0xfc>
   14428:	2404      	movs	r4, #4
   1442a:	e00e      	b.n	1444a <f_rename+0x112>
   1442c:	240b      	movs	r4, #11
   1442e:	e00c      	b.n	1444a <f_rename+0x112>
   14430:	2408      	movs	r4, #8
   14432:	e00a      	b.n	1444a <f_rename+0x112>
   14434:	a80b      	add	r0, sp, #44	; 0x2c
   14436:	f7ff f973 	bl	13720 <dir_remove>
   1443a:	4604      	mov	r4, r0
   1443c:	b928      	cbnz	r0, 1444a <f_rename+0x112>
   1443e:	980b      	ldr	r0, [sp, #44]	; 0x2c
   14440:	f7fe fb06 	bl	12a50 <sync_fs>
   14444:	4604      	mov	r4, r0
   14446:	e000      	b.n	1444a <f_rename+0x112>
   14448:	2402      	movs	r4, #2
   1444a:	980b      	ldr	r0, [sp, #44]	; 0x2c
   1444c:	4621      	mov	r1, r4
   1444e:	f7fe fcb4 	bl	12dba <unlock_fs>
   14452:	4620      	mov	r0, r4
   14454:	b05e      	add	sp, #376	; 0x178
   14456:	bd10      	pop	{r4, pc}

00014458 <f_mkfs>:
f_mkfs():
   14458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1445c:	b089      	sub	sp, #36	; 0x24
   1445e:	ab08      	add	r3, sp, #32
   14460:	f843 0d0c 	str.w	r0, [r3, #-12]!
   14464:	4618      	mov	r0, r3
   14466:	460e      	mov	r6, r1
   14468:	4615      	mov	r5, r2
   1446a:	f7fe fa48 	bl	128fe <get_ldnumber>
   1446e:	2800      	cmp	r0, #0
   14470:	f2c0 8208 	blt.w	14884 <f_mkfs+0x42c>
   14474:	2e01      	cmp	r6, #1
   14476:	f200 8207 	bhi.w	14888 <f_mkfs+0x430>
   1447a:	1e6b      	subs	r3, r5, #1
   1447c:	402b      	ands	r3, r5
   1447e:	f040 8203 	bne.w	14888 <f_mkfs+0x430>
   14482:	4abf      	ldr	r2, [pc, #764]	; (14780 <f_mkfs+0x328>)
   14484:	f852 4020 	ldr.w	r4, [r2, r0, lsl #2]
   14488:	2c00      	cmp	r4, #0
   1448a:	f000 81ff 	beq.w	1488c <f_mkfs+0x434>
   1448e:	b2c7      	uxtb	r7, r0
   14490:	7023      	strb	r3, [r4, #0]
   14492:	4638      	mov	r0, r7
   14494:	f001 f8da 	bl	1564c <disk_initialize>
   14498:	07c2      	lsls	r2, r0, #31
   1449a:	f100 81f9 	bmi.w	14890 <f_mkfs+0x438>
   1449e:	0743      	lsls	r3, r0, #29
   144a0:	f100 81f8 	bmi.w	14894 <f_mkfs+0x43c>
   144a4:	aa07      	add	r2, sp, #28
   144a6:	2101      	movs	r1, #1
   144a8:	4638      	mov	r0, r7
   144aa:	f001 f922 	bl	156f2 <disk_ioctl>
   144ae:	b108      	cbz	r0, 144b4 <f_mkfs+0x5c>
   144b0:	2001      	movs	r0, #1
   144b2:	e240      	b.n	14936 <f_mkfs+0x4de>
   144b4:	9907      	ldr	r1, [sp, #28]
   144b6:	297f      	cmp	r1, #127	; 0x7f
   144b8:	d9fa      	bls.n	144b0 <f_mkfs+0x58>
   144ba:	2e00      	cmp	r6, #0
   144bc:	bf14      	ite	ne
   144be:	f04f 0a00 	movne.w	sl, #0
   144c2:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
   144c6:	ebca 0101 	rsb	r1, sl, r1
   144ca:	9107      	str	r1, [sp, #28]
   144cc:	b96d      	cbnz	r5, 144ea <f_mkfs+0x92>
   144ce:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   144d2:	fbb1 f3f3 	udiv	r3, r1, r3
   144d6:	48ab      	ldr	r0, [pc, #684]	; (14784 <f_mkfs+0x32c>)
   144d8:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   144dc:	4293      	cmp	r3, r2
   144de:	d201      	bcs.n	144e4 <f_mkfs+0x8c>
   144e0:	3501      	adds	r5, #1
   144e2:	e7f9      	b.n	144d8 <f_mkfs+0x80>
   144e4:	4ba8      	ldr	r3, [pc, #672]	; (14788 <f_mkfs+0x330>)
   144e6:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
   144ea:	0a6d      	lsrs	r5, r5, #9
   144ec:	d003      	beq.n	144f6 <f_mkfs+0x9e>
   144ee:	2d81      	cmp	r5, #129	; 0x81
   144f0:	bf28      	it	cs
   144f2:	2580      	movcs	r5, #128	; 0x80
   144f4:	e000      	b.n	144f8 <f_mkfs+0xa0>
   144f6:	2501      	movs	r5, #1
   144f8:	fbb1 f3f5 	udiv	r3, r1, r5
   144fc:	f640 72f5 	movw	r2, #4085	; 0xff5
   14500:	4293      	cmp	r3, r2
   14502:	f240 8203 	bls.w	1490c <f_mkfs+0x4b4>
   14506:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   1450a:	4293      	cmp	r3, r2
   1450c:	f240 820e 	bls.w	1492c <f_mkfs+0x4d4>
   14510:	009b      	lsls	r3, r3, #2
   14512:	f203 2307 	addw	r3, r3, #519	; 0x207
   14516:	0a5b      	lsrs	r3, r3, #9
   14518:	9301      	str	r3, [sp, #4]
   1451a:	2300      	movs	r3, #0
   1451c:	f04f 0803 	mov.w	r8, #3
   14520:	9303      	str	r3, [sp, #12]
   14522:	f04f 0b20 	mov.w	fp, #32
   14526:	eb0b 030a 	add.w	r3, fp, sl
   1452a:	9302      	str	r3, [sp, #8]
   1452c:	9a03      	ldr	r2, [sp, #12]
   1452e:	9b01      	ldr	r3, [sp, #4]
   14530:	eb03 0902 	add.w	r9, r3, r2
   14534:	9b02      	ldr	r3, [sp, #8]
   14536:	4499      	add	r9, r3
   14538:	ebca 0305 	rsb	r3, sl, r5
   1453c:	444b      	add	r3, r9
   1453e:	4299      	cmp	r1, r3
   14540:	d201      	bcs.n	14546 <f_mkfs+0xee>
   14542:	200e      	movs	r0, #14
   14544:	e1f7      	b.n	14936 <f_mkfs+0x4de>
   14546:	aa06      	add	r2, sp, #24
   14548:	2103      	movs	r1, #3
   1454a:	4638      	mov	r0, r7
   1454c:	f001 f8d1 	bl	156f2 <disk_ioctl>
   14550:	b920      	cbnz	r0, 1455c <f_mkfs+0x104>
   14552:	9b06      	ldr	r3, [sp, #24]
   14554:	3b01      	subs	r3, #1
   14556:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   1455a:	d301      	bcc.n	14560 <f_mkfs+0x108>
   1455c:	2301      	movs	r3, #1
   1455e:	9306      	str	r3, [sp, #24]
   14560:	9a06      	ldr	r2, [sp, #24]
   14562:	f1b8 0f03 	cmp.w	r8, #3
   14566:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   1456a:	444b      	add	r3, r9
   1456c:	f1c2 0200 	rsb	r2, r2, #0
   14570:	ea03 0302 	and.w	r3, r3, r2
   14574:	ebc9 0303 	rsb	r3, r9, r3
   14578:	9306      	str	r3, [sp, #24]
   1457a:	d104      	bne.n	14586 <f_mkfs+0x12e>
   1457c:	9a02      	ldr	r2, [sp, #8]
   1457e:	449b      	add	fp, r3
   14580:	441a      	add	r2, r3
   14582:	9202      	str	r2, [sp, #8]
   14584:	e002      	b.n	1458c <f_mkfs+0x134>
   14586:	9a01      	ldr	r2, [sp, #4]
   14588:	441a      	add	r2, r3
   1458a:	9201      	str	r2, [sp, #4]
   1458c:	9a07      	ldr	r2, [sp, #28]
   1458e:	9901      	ldr	r1, [sp, #4]
   14590:	ebcb 0302 	rsb	r3, fp, r2
   14594:	1a5b      	subs	r3, r3, r1
   14596:	9903      	ldr	r1, [sp, #12]
   14598:	f1b8 0f02 	cmp.w	r8, #2
   1459c:	eba3 0301 	sub.w	r3, r3, r1
   145a0:	fbb3 f3f5 	udiv	r3, r3, r5
   145a4:	9304      	str	r3, [sp, #16]
   145a6:	d105      	bne.n	145b4 <f_mkfs+0x15c>
   145a8:	f640 73f5 	movw	r3, #4085	; 0xff5
   145ac:	9904      	ldr	r1, [sp, #16]
   145ae:	4299      	cmp	r1, r3
   145b0:	d9c7      	bls.n	14542 <f_mkfs+0xea>
   145b2:	e016      	b.n	145e2 <f_mkfs+0x18a>
   145b4:	f1b8 0f03 	cmp.w	r8, #3
   145b8:	d105      	bne.n	145c6 <f_mkfs+0x16e>
   145ba:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   145be:	9a04      	ldr	r2, [sp, #16]
   145c0:	429a      	cmp	r2, r3
   145c2:	d9be      	bls.n	14542 <f_mkfs+0xea>
   145c4:	e182      	b.n	148cc <f_mkfs+0x474>
   145c6:	f1b8 0f01 	cmp.w	r8, #1
   145ca:	d10a      	bne.n	145e2 <f_mkfs+0x18a>
   145cc:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   145d0:	bf34      	ite	cc
   145d2:	f04f 0901 	movcc.w	r9, #1
   145d6:	f04f 0906 	movcs.w	r9, #6
   145da:	2e00      	cmp	r6, #0
   145dc:	f040 815c 	bne.w	14898 <f_mkfs+0x440>
   145e0:	e007      	b.n	145f2 <f_mkfs+0x19a>
   145e2:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   145e6:	bf34      	ite	cc
   145e8:	f04f 0904 	movcc.w	r9, #4
   145ec:	f04f 0906 	movcs.w	r9, #6
   145f0:	bbbe      	cbnz	r6, 14662 <f_mkfs+0x20a>
   145f2:	f104 0634 	add.w	r6, r4, #52	; 0x34
   145f6:	f44f 7200 	mov.w	r2, #512	; 0x200
   145fa:	2100      	movs	r1, #0
   145fc:	4630      	mov	r0, r6
   145fe:	f7fe f968 	bl	128d2 <mem_set>
   14602:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   14606:	f8dd e01c 	ldr.w	lr, [sp, #28]
   1460a:	21fe      	movs	r1, #254	; 0xfe
   1460c:	f884 11f7 	strb.w	r1, [r4, #503]	; 0x1f7
   14610:	eb0a 010e 	add.w	r1, sl, lr
   14614:	fbb1 f1f0 	udiv	r1, r1, r0
   14618:	0888      	lsrs	r0, r1, #2
   1461a:	9106      	str	r1, [sp, #24]
   1461c:	f884 11f9 	strb.w	r1, [r4, #505]	; 0x1f9
   14620:	213f      	movs	r1, #63	; 0x3f
   14622:	f8c4 11fa 	str.w	r1, [r4, #506]	; 0x1fa
   14626:	f64a 2155 	movw	r1, #43605	; 0xaa55
   1462a:	2301      	movs	r3, #1
   1462c:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   14630:	2200      	movs	r2, #0
   14632:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
   14636:	f8a4 1232 	strh.w	r1, [r4, #562]	; 0x232
   1463a:	f884 31f3 	strb.w	r3, [r4, #499]	; 0x1f3
   1463e:	f884 31f4 	strb.w	r3, [r4, #500]	; 0x1f4
   14642:	f884 21f5 	strb.w	r2, [r4, #501]	; 0x1f5
   14646:	f884 91f6 	strb.w	r9, [r4, #502]	; 0x1f6
   1464a:	f8c4 e1fe 	str.w	lr, [r4, #510]	; 0x1fe
   1464e:	4631      	mov	r1, r6
   14650:	4638      	mov	r0, r7
   14652:	f001 f832 	bl	156ba <disk_write>
   14656:	2800      	cmp	r0, #0
   14658:	f47f af2a 	bne.w	144b0 <f_mkfs+0x58>
   1465c:	f04f 09f8 	mov.w	r9, #248	; 0xf8
   14660:	e001      	b.n	14666 <f_mkfs+0x20e>
   14662:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   14666:	f104 0634 	add.w	r6, r4, #52	; 0x34
   1466a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1466e:	2100      	movs	r1, #0
   14670:	4630      	mov	r0, r6
   14672:	f7fe f92e 	bl	128d2 <mem_set>
   14676:	220b      	movs	r2, #11
   14678:	4944      	ldr	r1, [pc, #272]	; (1478c <f_mkfs+0x334>)
   1467a:	4630      	mov	r0, r6
   1467c:	f7fe f90d 	bl	1289a <mem_cpy>
   14680:	f44f 7300 	mov.w	r3, #512	; 0x200
   14684:	f1b8 0f03 	cmp.w	r8, #3
   14688:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
   1468c:	f04f 0301 	mov.w	r3, #1
   14690:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
   14694:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
   14698:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
   1469c:	bf0c      	ite	eq
   1469e:	2300      	moveq	r3, #0
   146a0:	f44f 7300 	movne.w	r3, #512	; 0x200
   146a4:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
   146a8:	9b07      	ldr	r3, [sp, #28]
   146aa:	f884 9049 	strb.w	r9, [r4, #73]	; 0x49
   146ae:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   146b2:	bf34      	ite	cc
   146b4:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
   146b8:	6563      	strcs	r3, [r4, #84]	; 0x54
   146ba:	233f      	movs	r3, #63	; 0x3f
   146bc:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   146c0:	23ff      	movs	r3, #255	; 0xff
   146c2:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
   146c6:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
   146ca:	f7fe f8bd 	bl	12848 <get_fattime>
   146ce:	f1b8 0f03 	cmp.w	r8, #3
   146d2:	9006      	str	r0, [sp, #24]
   146d4:	d116      	bne.n	14704 <f_mkfs+0x2ac>
   146d6:	9b01      	ldr	r3, [sp, #4]
   146d8:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
   146dc:	65a3      	str	r3, [r4, #88]	; 0x58
   146de:	2302      	movs	r3, #2
   146e0:	6623      	str	r3, [r4, #96]	; 0x60
   146e2:	2301      	movs	r3, #1
   146e4:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   146e8:	2306      	movs	r3, #6
   146ea:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
   146ee:	2380      	movs	r3, #128	; 0x80
   146f0:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
   146f4:	2329      	movs	r3, #41	; 0x29
   146f6:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
   146fa:	2213      	movs	r2, #19
   146fc:	4924      	ldr	r1, [pc, #144]	; (14790 <f_mkfs+0x338>)
   146fe:	f104 007b 	add.w	r0, r4, #123	; 0x7b
   14702:	e00f      	b.n	14724 <f_mkfs+0x2cc>
   14704:	f8bd 3004 	ldrh.w	r3, [sp, #4]
   14708:	4922      	ldr	r1, [pc, #136]	; (14794 <f_mkfs+0x33c>)
   1470a:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
   1470e:	2380      	movs	r3, #128	; 0x80
   14710:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
   14714:	2329      	movs	r3, #41	; 0x29
   14716:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
   1471a:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
   1471e:	2213      	movs	r2, #19
   14720:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   14724:	f7fe f8b9 	bl	1289a <mem_cpy>
   14728:	f64a 2355 	movw	r3, #43605	; 0xaa55
   1472c:	4652      	mov	r2, sl
   1472e:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   14732:	4631      	mov	r1, r6
   14734:	2301      	movs	r3, #1
   14736:	4638      	mov	r0, r7
   14738:	f000 ffbf 	bl	156ba <disk_write>
   1473c:	2800      	cmp	r0, #0
   1473e:	f47f aeb7 	bne.w	144b0 <f_mkfs+0x58>
   14742:	f1b8 0f03 	cmp.w	r8, #3
   14746:	d106      	bne.n	14756 <f_mkfs+0x2fe>
   14748:	2301      	movs	r3, #1
   1474a:	f10a 0206 	add.w	r2, sl, #6
   1474e:	4631      	mov	r1, r6
   14750:	4638      	mov	r0, r7
   14752:	f000 ffb2 	bl	156ba <disk_write>
   14756:	f44f 7200 	mov.w	r2, #512	; 0x200
   1475a:	2100      	movs	r1, #0
   1475c:	4630      	mov	r0, r6
   1475e:	f7fe f8b8 	bl	128d2 <mem_set>
   14762:	f1b8 0f03 	cmp.w	r8, #3
   14766:	d019      	beq.n	1479c <f_mkfs+0x344>
   14768:	4b0b      	ldr	r3, [pc, #44]	; (14798 <f_mkfs+0x340>)
   1476a:	f1b8 0f01 	cmp.w	r8, #1
   1476e:	bf18      	it	ne
   14770:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   14774:	ea43 0309 	orr.w	r3, r3, r9
   14778:	9306      	str	r3, [sp, #24]
   1477a:	6363      	str	r3, [r4, #52]	; 0x34
   1477c:	e018      	b.n	147b0 <f_mkfs+0x358>
   1477e:	bf00      	nop
   14780:	2007c360 	.word	0x2007c360
   14784:	00023812 	.word	0x00023812
   14788:	0002372a 	.word	0x0002372a
   1478c:	00023750 	.word	0x00023750
   14790:	0002375c 	.word	0x0002375c
   14794:	00023770 	.word	0x00023770
   14798:	00ffff00 	.word	0x00ffff00
   1479c:	f069 03ff 	orn	r3, r9, #255	; 0xff
   147a0:	9306      	str	r3, [sp, #24]
   147a2:	6363      	str	r3, [r4, #52]	; 0x34
   147a4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   147a8:	63a3      	str	r3, [r4, #56]	; 0x38
   147aa:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   147ae:	63e3      	str	r3, [r4, #60]	; 0x3c
   147b0:	9b02      	ldr	r3, [sp, #8]
   147b2:	4631      	mov	r1, r6
   147b4:	f103 0901 	add.w	r9, r3, #1
   147b8:	9a02      	ldr	r2, [sp, #8]
   147ba:	2301      	movs	r3, #1
   147bc:	4638      	mov	r0, r7
   147be:	f000 ff7c 	bl	156ba <disk_write>
   147c2:	4601      	mov	r1, r0
   147c4:	2800      	cmp	r0, #0
   147c6:	f47f ae73 	bne.w	144b0 <f_mkfs+0x58>
   147ca:	f44f 7200 	mov.w	r2, #512	; 0x200
   147ce:	4630      	mov	r0, r6
   147d0:	f7fe f87f 	bl	128d2 <mem_set>
   147d4:	2301      	movs	r3, #1
   147d6:	9306      	str	r3, [sp, #24]
   147d8:	9b06      	ldr	r3, [sp, #24]
   147da:	9a01      	ldr	r2, [sp, #4]
   147dc:	429a      	cmp	r2, r3
   147de:	d90f      	bls.n	14800 <f_mkfs+0x3a8>
   147e0:	2301      	movs	r3, #1
   147e2:	464a      	mov	r2, r9
   147e4:	4631      	mov	r1, r6
   147e6:	4638      	mov	r0, r7
   147e8:	f109 0b01 	add.w	fp, r9, #1
   147ec:	f000 ff65 	bl	156ba <disk_write>
   147f0:	2800      	cmp	r0, #0
   147f2:	f47f ae5d 	bne.w	144b0 <f_mkfs+0x58>
   147f6:	9b06      	ldr	r3, [sp, #24]
   147f8:	46d9      	mov	r9, fp
   147fa:	3301      	adds	r3, #1
   147fc:	9306      	str	r3, [sp, #24]
   147fe:	e7eb      	b.n	147d8 <f_mkfs+0x380>
   14800:	9b03      	ldr	r3, [sp, #12]
   14802:	464a      	mov	r2, r9
   14804:	f1b8 0f03 	cmp.w	r8, #3
   14808:	bf18      	it	ne
   1480a:	461d      	movne	r5, r3
   1480c:	444d      	add	r5, r9
   1480e:	2301      	movs	r3, #1
   14810:	4631      	mov	r1, r6
   14812:	4638      	mov	r0, r7
   14814:	f102 0b01 	add.w	fp, r2, #1
   14818:	f000 ff4f 	bl	156ba <disk_write>
   1481c:	2800      	cmp	r0, #0
   1481e:	f47f ae47 	bne.w	144b0 <f_mkfs+0x58>
   14822:	45ab      	cmp	fp, r5
   14824:	465a      	mov	r2, fp
   14826:	d1f2      	bne.n	1480e <f_mkfs+0x3b6>
   14828:	f1b8 0f03 	cmp.w	r8, #3
   1482c:	d121      	bne.n	14872 <f_mkfs+0x41a>
   1482e:	4b43      	ldr	r3, [pc, #268]	; (1493c <f_mkfs+0x4e4>)
   14830:	4631      	mov	r1, r6
   14832:	6363      	str	r3, [r4, #52]	; 0x34
   14834:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   14838:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   1483c:	3320      	adds	r3, #32
   1483e:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   14842:	9b04      	ldr	r3, [sp, #16]
   14844:	4638      	mov	r0, r7
   14846:	3b01      	subs	r3, #1
   14848:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   1484c:	2302      	movs	r3, #2
   1484e:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
   14852:	f64a 2355 	movw	r3, #43605	; 0xaa55
   14856:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   1485a:	2301      	movs	r3, #1
   1485c:	eb0a 0203 	add.w	r2, sl, r3
   14860:	f000 ff2b 	bl	156ba <disk_write>
   14864:	2301      	movs	r3, #1
   14866:	f10a 0207 	add.w	r2, sl, #7
   1486a:	4631      	mov	r1, r6
   1486c:	4638      	mov	r0, r7
   1486e:	f000 ff24 	bl	156ba <disk_write>
   14872:	2200      	movs	r2, #0
   14874:	4611      	mov	r1, r2
   14876:	4638      	mov	r0, r7
   14878:	f000 ff3b 	bl	156f2 <disk_ioctl>
   1487c:	3000      	adds	r0, #0
   1487e:	bf18      	it	ne
   14880:	2001      	movne	r0, #1
   14882:	e058      	b.n	14936 <f_mkfs+0x4de>
   14884:	200b      	movs	r0, #11
   14886:	e056      	b.n	14936 <f_mkfs+0x4de>
   14888:	2013      	movs	r0, #19
   1488a:	e054      	b.n	14936 <f_mkfs+0x4de>
   1488c:	200c      	movs	r0, #12
   1488e:	e052      	b.n	14936 <f_mkfs+0x4de>
   14890:	2003      	movs	r0, #3
   14892:	e050      	b.n	14936 <f_mkfs+0x4de>
   14894:	200a      	movs	r0, #10
   14896:	e04e      	b.n	14936 <f_mkfs+0x4de>
   14898:	f104 0634 	add.w	r6, r4, #52	; 0x34
   1489c:	f44f 7200 	mov.w	r2, #512	; 0x200
   148a0:	2100      	movs	r1, #0
   148a2:	4630      	mov	r0, r6
   148a4:	f7fe f815 	bl	128d2 <mem_set>
   148a8:	220b      	movs	r2, #11
   148aa:	4925      	ldr	r1, [pc, #148]	; (14940 <f_mkfs+0x4e8>)
   148ac:	4630      	mov	r0, r6
   148ae:	f7fd fff4 	bl	1289a <mem_cpy>
   148b2:	f44f 7300 	mov.w	r3, #512	; 0x200
   148b6:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
   148ba:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
   148be:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
   148c2:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
   148c6:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   148ca:	e6eb      	b.n	146a4 <f_mkfs+0x24c>
   148cc:	b1de      	cbz	r6, 14906 <f_mkfs+0x4ae>
   148ce:	f104 0634 	add.w	r6, r4, #52	; 0x34
   148d2:	f44f 7200 	mov.w	r2, #512	; 0x200
   148d6:	2100      	movs	r1, #0
   148d8:	4630      	mov	r0, r6
   148da:	f7fd fffa 	bl	128d2 <mem_set>
   148de:	220b      	movs	r2, #11
   148e0:	4917      	ldr	r1, [pc, #92]	; (14940 <f_mkfs+0x4e8>)
   148e2:	4630      	mov	r0, r6
   148e4:	f7fd ffd9 	bl	1289a <mem_cpy>
   148e8:	f44f 7300 	mov.w	r3, #512	; 0x200
   148ec:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
   148f0:	2301      	movs	r3, #1
   148f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
   148f6:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
   148fa:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
   148fe:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   14902:	2300      	movs	r3, #0
   14904:	e6ce      	b.n	146a4 <f_mkfs+0x24c>
   14906:	f04f 090c 	mov.w	r9, #12
   1490a:	e672      	b.n	145f2 <f_mkfs+0x19a>
   1490c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   14910:	3301      	adds	r3, #1
   14912:	085b      	lsrs	r3, r3, #1
   14914:	3303      	adds	r3, #3
   14916:	f04f 0801 	mov.w	r8, #1
   1491a:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   1491e:	0a5b      	lsrs	r3, r3, #9
   14920:	9301      	str	r3, [sp, #4]
   14922:	2320      	movs	r3, #32
   14924:	9303      	str	r3, [sp, #12]
   14926:	f04f 0b01 	mov.w	fp, #1
   1492a:	e5fc      	b.n	14526 <f_mkfs+0xce>
   1492c:	3302      	adds	r3, #2
   1492e:	005b      	lsls	r3, r3, #1
   14930:	f04f 0802 	mov.w	r8, #2
   14934:	e7f1      	b.n	1491a <f_mkfs+0x4c2>
   14936:	b009      	add	sp, #36	; 0x24
   14938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1493c:	41615252 	.word	0x41615252
   14940:	00023750 	.word	0x00023750

00014944 <ff_cre_syncobj>:
ff_cre_syncobj():
   14944:	b510      	push	{r4, lr}
   14946:	2001      	movs	r0, #1
   14948:	460c      	mov	r4, r1
   1494a:	f006 f925 	bl	1ab98 <xQueueCreateMutex>
   1494e:	6020      	str	r0, [r4, #0]
   14950:	3000      	adds	r0, #0
   14952:	bf18      	it	ne
   14954:	2001      	movne	r0, #1
   14956:	bd10      	pop	{r4, pc}

00014958 <ff_del_syncobj>:
ff_del_syncobj():
   14958:	2001      	movs	r0, #1
   1495a:	4770      	bx	lr

0001495c <ff_req_grant>:
ff_req_grant():
   1495c:	b510      	push	{r4, lr}
   1495e:	4604      	mov	r4, r0
   14960:	f005 fe54 	bl	1a60c <xTaskGetSchedulerState>
   14964:	2802      	cmp	r0, #2
   14966:	d10a      	bne.n	1497e <ff_req_grant+0x22>
   14968:	2300      	movs	r3, #0
   1496a:	4619      	mov	r1, r3
   1496c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   14970:	4620      	mov	r0, r4
   14972:	f006 f972 	bl	1ac5a <xQueueGenericReceive>
   14976:	1e43      	subs	r3, r0, #1
   14978:	4258      	negs	r0, r3
   1497a:	4158      	adcs	r0, r3
   1497c:	bd10      	pop	{r4, pc}
   1497e:	2001      	movs	r0, #1
   14980:	bd10      	pop	{r4, pc}

00014982 <ff_rel_grant>:
ff_rel_grant():
   14982:	b510      	push	{r4, lr}
   14984:	4604      	mov	r4, r0
   14986:	f005 fe41 	bl	1a60c <xTaskGetSchedulerState>
   1498a:	2802      	cmp	r0, #2
   1498c:	d107      	bne.n	1499e <ff_rel_grant+0x1c>
   1498e:	2300      	movs	r3, #0
   14990:	4620      	mov	r0, r4
   14992:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   14996:	461a      	mov	r2, r3
   14998:	4619      	mov	r1, r3
   1499a:	f006 b887 	b.w	1aaac <xQueueGenericSend>
   1499e:	bd10      	pop	{r4, pc}

000149a0 <ff_convert>:
ff_convert():
   149a0:	287f      	cmp	r0, #127	; 0x7f
   149a2:	b510      	push	{r4, lr}
   149a4:	d916      	bls.n	149d4 <ff_convert+0x34>
   149a6:	b131      	cbz	r1, 149b6 <ff_convert+0x16>
   149a8:	28ff      	cmp	r0, #255	; 0xff
   149aa:	d812      	bhi.n	149d2 <ff_convert+0x32>
   149ac:	4b0a      	ldr	r3, [pc, #40]	; (149d8 <ff_convert+0x38>)
   149ae:	3880      	subs	r0, #128	; 0x80
   149b0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   149b4:	bd10      	pop	{r4, pc}
   149b6:	4a08      	ldr	r2, [pc, #32]	; (149d8 <ff_convert+0x38>)
   149b8:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   149bc:	b28b      	uxth	r3, r1
   149be:	4284      	cmp	r4, r0
   149c0:	d003      	beq.n	149ca <ff_convert+0x2a>
   149c2:	3101      	adds	r1, #1
   149c4:	2980      	cmp	r1, #128	; 0x80
   149c6:	d1f7      	bne.n	149b8 <ff_convert+0x18>
   149c8:	460b      	mov	r3, r1
   149ca:	f103 0080 	add.w	r0, r3, #128	; 0x80
   149ce:	b2c0      	uxtb	r0, r0
   149d0:	bd10      	pop	{r4, pc}
   149d2:	2000      	movs	r0, #0
   149d4:	bd10      	pop	{r4, pc}
   149d6:	bf00      	nop
   149d8:	00023a08 	.word	0x00023a08

000149dc <ff_wtoupper>:
ff_wtoupper():
   149dc:	4906      	ldr	r1, [pc, #24]	; (149f8 <ff_wtoupper+0x1c>)
   149de:	2300      	movs	r3, #0
   149e0:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   149e4:	b132      	cbz	r2, 149f4 <ff_wtoupper+0x18>
   149e6:	4282      	cmp	r2, r0
   149e8:	d001      	beq.n	149ee <ff_wtoupper+0x12>
   149ea:	3301      	adds	r3, #1
   149ec:	e7f8      	b.n	149e0 <ff_wtoupper+0x4>
   149ee:	4a03      	ldr	r2, [pc, #12]	; (149fc <ff_wtoupper+0x20>)
   149f0:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
   149f4:	4770      	bx	lr
   149f6:	bf00      	nop
   149f8:	00023828 	.word	0x00023828
   149fc:	00023b08 	.word	0x00023b08

00014a00 <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
   14a00:	4b05      	ldr	r3, [pc, #20]	; (14a18 <flash_get_mem_size_bytes()+0x18>)
   14a02:	781b      	ldrb	r3, [r3, #0]
   14a04:	3b25      	subs	r3, #37	; 0x25
   14a06:	b2db      	uxtb	r3, r3
   14a08:	2b03      	cmp	r3, #3
   14a0a:	bf9a      	itte	ls
   14a0c:	4a03      	ldrls	r2, [pc, #12]	; (14a1c <flash_get_mem_size_bytes()+0x1c>)
   14a0e:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   14a12:	2000      	movhi	r0, #0
   14a14:	4770      	bx	lr
   14a16:	bf00      	nop
   14a18:	2007c36a 	.word	0x2007c36a
   14a1c:	00023cf0 	.word	0x00023cf0

00014a20 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
   14a20:	4b1b      	ldr	r3, [pc, #108]	; (14a90 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
   14a22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14a26:	881d      	ldrh	r5, [r3, #0]
   14a28:	4606      	mov	r6, r0
   14a2a:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
   14a2e:	460f      	mov	r7, r1
   14a30:	4614      	mov	r4, r2
   14a32:	d102      	bne.n	14a3a <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1a>
   14a34:	462a      	mov	r2, r5
   14a36:	4621      	mov	r1, r4
   14a38:	e013      	b.n	14a62 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x42>
   14a3a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   14a3e:	d109      	bne.n	14a54 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   14a40:	462a      	mov	r2, r5
   14a42:	4621      	mov	r1, r4
   14a44:	4638      	mov	r0, r7
   14a46:	47b0      	blx	r6
   14a48:	462a      	mov	r2, r5
   14a4a:	f504 7180 	add.w	r1, r4, #256	; 0x100
   14a4e:	f507 7080 	add.w	r0, r7, #256	; 0x100
   14a52:	e016      	b.n	14a82 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x62>
   14a54:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   14a58:	d105      	bne.n	14a66 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x46>
   14a5a:	0a51      	lsrs	r1, r2, #9
   14a5c:	0289      	lsls	r1, r1, #10
   14a5e:	f44f 7200 	mov.w	r2, #512	; 0x200
   14a62:	4638      	mov	r0, r7
   14a64:	e00d      	b.n	14a82 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x62>
   14a66:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   14a6a:	d10e      	bne.n	14a8a <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
   14a6c:	0a14      	lsrs	r4, r2, #8
   14a6e:	0261      	lsls	r1, r4, #9
   14a70:	f44f 7280 	mov.w	r2, #256	; 0x100
   14a74:	4638      	mov	r0, r7
   14a76:	47b0      	blx	r6
   14a78:	1c61      	adds	r1, r4, #1
   14a7a:	f44f 7280 	mov.w	r2, #256	; 0x100
   14a7e:	0249      	lsls	r1, r1, #9
   14a80:	18b8      	adds	r0, r7, r2
   14a82:	4633      	mov	r3, r6
   14a84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   14a88:	4718      	bx	r3
   14a8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14a8e:	bf00      	nop
   14a90:	2007c368 	.word	0x2007c368

00014a94 <ssp1_exchange_data>:
ssp1_exchange_data():
   14a94:	b530      	push	{r4, r5, lr}
   14a96:	4c2f      	ldr	r4, [pc, #188]	; (14b54 <ssp1_exchange_data+0xc0>)
   14a98:	4603      	mov	r3, r0
   14a9a:	4625      	mov	r5, r4
   14a9c:	2900      	cmp	r1, #0
   14a9e:	dd58      	ble.n	14b52 <ssp1_exchange_data+0xbe>
   14aa0:	2907      	cmp	r1, #7
   14aa2:	781a      	ldrb	r2, [r3, #0]
   14aa4:	dd2d      	ble.n	14b02 <ssp1_exchange_data+0x6e>
   14aa6:	60a2      	str	r2, [r4, #8]
   14aa8:	785a      	ldrb	r2, [r3, #1]
   14aaa:	3908      	subs	r1, #8
   14aac:	60a2      	str	r2, [r4, #8]
   14aae:	789a      	ldrb	r2, [r3, #2]
   14ab0:	60a2      	str	r2, [r4, #8]
   14ab2:	78da      	ldrb	r2, [r3, #3]
   14ab4:	60a2      	str	r2, [r4, #8]
   14ab6:	791a      	ldrb	r2, [r3, #4]
   14ab8:	60a2      	str	r2, [r4, #8]
   14aba:	795a      	ldrb	r2, [r3, #5]
   14abc:	60a2      	str	r2, [r4, #8]
   14abe:	799a      	ldrb	r2, [r3, #6]
   14ac0:	60a2      	str	r2, [r4, #8]
   14ac2:	f103 0208 	add.w	r2, r3, #8
   14ac6:	79db      	ldrb	r3, [r3, #7]
   14ac8:	60a3      	str	r3, [r4, #8]
   14aca:	69a3      	ldr	r3, [r4, #24]
   14acc:	075b      	lsls	r3, r3, #29
   14ace:	d5fc      	bpl.n	14aca <ssp1_exchange_data+0x36>
   14ad0:	68ab      	ldr	r3, [r5, #8]
   14ad2:	7003      	strb	r3, [r0, #0]
   14ad4:	68ab      	ldr	r3, [r5, #8]
   14ad6:	7043      	strb	r3, [r0, #1]
   14ad8:	68ab      	ldr	r3, [r5, #8]
   14ada:	7083      	strb	r3, [r0, #2]
   14adc:	68ab      	ldr	r3, [r5, #8]
   14ade:	70c3      	strb	r3, [r0, #3]
   14ae0:	68e3      	ldr	r3, [r4, #12]
   14ae2:	06db      	lsls	r3, r3, #27
   14ae4:	d4fc      	bmi.n	14ae0 <ssp1_exchange_data+0x4c>
   14ae6:	68ab      	ldr	r3, [r5, #8]
   14ae8:	3008      	adds	r0, #8
   14aea:	f800 3c04 	strb.w	r3, [r0, #-4]
   14aee:	68ab      	ldr	r3, [r5, #8]
   14af0:	f800 3c03 	strb.w	r3, [r0, #-3]
   14af4:	68ab      	ldr	r3, [r5, #8]
   14af6:	f800 3c02 	strb.w	r3, [r0, #-2]
   14afa:	68ab      	ldr	r3, [r5, #8]
   14afc:	f800 3c01 	strb.w	r3, [r0, #-1]
   14b00:	e01a      	b.n	14b38 <ssp1_exchange_data+0xa4>
   14b02:	2903      	cmp	r1, #3
   14b04:	dd1a      	ble.n	14b3c <ssp1_exchange_data+0xa8>
   14b06:	60a2      	str	r2, [r4, #8]
   14b08:	785a      	ldrb	r2, [r3, #1]
   14b0a:	3904      	subs	r1, #4
   14b0c:	60a2      	str	r2, [r4, #8]
   14b0e:	789a      	ldrb	r2, [r3, #2]
   14b10:	60a2      	str	r2, [r4, #8]
   14b12:	1d1a      	adds	r2, r3, #4
   14b14:	78db      	ldrb	r3, [r3, #3]
   14b16:	60a3      	str	r3, [r4, #8]
   14b18:	68e3      	ldr	r3, [r4, #12]
   14b1a:	06db      	lsls	r3, r3, #27
   14b1c:	d4fc      	bmi.n	14b18 <ssp1_exchange_data+0x84>
   14b1e:	68ab      	ldr	r3, [r5, #8]
   14b20:	3004      	adds	r0, #4
   14b22:	f800 3c04 	strb.w	r3, [r0, #-4]
   14b26:	68ab      	ldr	r3, [r5, #8]
   14b28:	f800 3c03 	strb.w	r3, [r0, #-3]
   14b2c:	68ab      	ldr	r3, [r5, #8]
   14b2e:	f800 3c02 	strb.w	r3, [r0, #-2]
   14b32:	68ab      	ldr	r3, [r5, #8]
   14b34:	f800 3c01 	strb.w	r3, [r0, #-1]
   14b38:	4613      	mov	r3, r2
   14b3a:	e7af      	b.n	14a9c <ssp1_exchange_data+0x8>
   14b3c:	3301      	adds	r3, #1
   14b3e:	60a2      	str	r2, [r4, #8]
   14b40:	3901      	subs	r1, #1
   14b42:	68e2      	ldr	r2, [r4, #12]
   14b44:	06d2      	lsls	r2, r2, #27
   14b46:	d4fc      	bmi.n	14b42 <ssp1_exchange_data+0xae>
   14b48:	68aa      	ldr	r2, [r5, #8]
   14b4a:	3001      	adds	r0, #1
   14b4c:	f800 2c01 	strb.w	r2, [r0, #-1]
   14b50:	e7a4      	b.n	14a9c <ssp1_exchange_data+0x8>
   14b52:	bd30      	pop	{r4, r5, pc}
   14b54:	40030000 	.word	0x40030000

00014b58 <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
   14b58:	b507      	push	{r0, r1, r2, lr}
   14b5a:	0c0b      	lsrs	r3, r1, #16
   14b5c:	f88d 3005 	strb.w	r3, [sp, #5]
   14b60:	f88d 1007 	strb.w	r1, [sp, #7]
   14b64:	0a0b      	lsrs	r3, r1, #8
   14b66:	2104      	movs	r1, #4
   14b68:	f88d 0004 	strb.w	r0, [sp, #4]
   14b6c:	eb0d 0001 	add.w	r0, sp, r1
   14b70:	f88d 3006 	strb.w	r3, [sp, #6]
   14b74:	f7ff ff8e 	bl	14a94 <ssp1_exchange_data>
   14b78:	b003      	add	sp, #12
   14b7a:	f85d fb04 	ldr.w	pc, [sp], #4
   14b7e:	ffff b5f7 	vsli.64	<illegal reg q13.5>, <illegal reg q11.5>, #63	; 0x3f

00014b80 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
   14b80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14b82:	4617      	mov	r7, r2
   14b84:	4606      	mov	r6, r0
   14b86:	4c0e      	ldr	r4, [pc, #56]	; (14bc0 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
   14b88:	2540      	movs	r5, #64	; 0x40
   14b8a:	2303      	movs	r3, #3
   14b8c:	61e5      	str	r5, [r4, #28]
   14b8e:	f88d 3004 	strb.w	r3, [sp, #4]
   14b92:	0c0b      	lsrs	r3, r1, #16
   14b94:	f88d 3005 	strb.w	r3, [sp, #5]
   14b98:	f88d 1007 	strb.w	r1, [sp, #7]
   14b9c:	0a0b      	lsrs	r3, r1, #8
   14b9e:	2104      	movs	r1, #4
   14ba0:	eb0d 0001 	add.w	r0, sp, r1
   14ba4:	f88d 3006 	strb.w	r3, [sp, #6]
   14ba8:	f7ff ff74 	bl	14a94 <ssp1_exchange_data>
   14bac:	2200      	movs	r2, #0
   14bae:	4639      	mov	r1, r7
   14bb0:	4630      	mov	r0, r6
   14bb2:	f7fc f98b 	bl	10ecc <ssp1_dma_transfer_block>
   14bb6:	61a5      	str	r5, [r4, #24]
   14bb8:	61a5      	str	r5, [r4, #24]
   14bba:	61a5      	str	r5, [r4, #24]
   14bbc:	b003      	add	sp, #12
   14bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14bc0:	2009c000 	.word	0x2009c000

00014bc4 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
   14bc4:	4b0e      	ldr	r3, [pc, #56]	; (14c00 <flash_wait_for_ready()+0x3c>)
   14bc6:	2240      	movs	r2, #64	; 0x40
   14bc8:	61da      	str	r2, [r3, #28]
   14bca:	4b0e      	ldr	r3, [pc, #56]	; (14c04 <flash_wait_for_ready()+0x40>)
   14bcc:	22d7      	movs	r2, #215	; 0xd7
   14bce:	609a      	str	r2, [r3, #8]
   14bd0:	461a      	mov	r2, r3
   14bd2:	68d1      	ldr	r1, [r2, #12]
   14bd4:	4b0b      	ldr	r3, [pc, #44]	; (14c04 <flash_wait_for_ready()+0x40>)
   14bd6:	06c9      	lsls	r1, r1, #27
   14bd8:	d4fb      	bmi.n	14bd2 <flash_wait_for_ready()+0xe>
   14bda:	689a      	ldr	r2, [r3, #8]
   14bdc:	461a      	mov	r2, r3
   14bde:	21ff      	movs	r1, #255	; 0xff
   14be0:	6099      	str	r1, [r3, #8]
   14be2:	68d0      	ldr	r0, [r2, #12]
   14be4:	06c0      	lsls	r0, r0, #27
   14be6:	d4fc      	bmi.n	14be2 <flash_wait_for_ready()+0x1e>
   14be8:	6890      	ldr	r0, [r2, #8]
   14bea:	f010 0f80 	tst.w	r0, #128	; 0x80
   14bee:	d0f7      	beq.n	14be0 <flash_wait_for_ready()+0x1c>
   14bf0:	4b03      	ldr	r3, [pc, #12]	; (14c00 <flash_wait_for_ready()+0x3c>)
   14bf2:	2240      	movs	r2, #64	; 0x40
   14bf4:	619a      	str	r2, [r3, #24]
   14bf6:	b2c0      	uxtb	r0, r0
   14bf8:	619a      	str	r2, [r3, #24]
   14bfa:	619a      	str	r2, [r3, #24]
   14bfc:	4770      	bx	lr
   14bfe:	bf00      	nop
   14c00:	2009c000 	.word	0x2009c000
   14c04:	40030000 	.word	0x40030000

00014c08 <flash_initialize>:
flash_initialize():
   14c08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14c0a:	f7ff ffdb 	bl	14bc4 <flash_wait_for_ready()>
   14c0e:	4c1f      	ldr	r4, [pc, #124]	; (14c8c <flash_initialize+0x84>)
   14c10:	2300      	movs	r3, #0
   14c12:	8023      	strh	r3, [r4, #0]
   14c14:	4b1e      	ldr	r3, [pc, #120]	; (14c90 <flash_initialize+0x88>)
   14c16:	4e1f      	ldr	r6, [pc, #124]	; (14c94 <flash_initialize+0x8c>)
   14c18:	2740      	movs	r7, #64	; 0x40
   14c1a:	881a      	ldrh	r2, [r3, #0]
   14c1c:	789b      	ldrb	r3, [r3, #2]
   14c1e:	61f7      	str	r7, [r6, #28]
   14c20:	2103      	movs	r1, #3
   14c22:	4605      	mov	r5, r0
   14c24:	a801      	add	r0, sp, #4
   14c26:	f8ad 2004 	strh.w	r2, [sp, #4]
   14c2a:	f88d 3006 	strb.w	r3, [sp, #6]
   14c2e:	f7ff ff31 	bl	14a94 <ssp1_exchange_data>
   14c32:	f89d 2005 	ldrb.w	r2, [sp, #5]
   14c36:	f89d 3006 	ldrb.w	r3, [sp, #6]
   14c3a:	2a1f      	cmp	r2, #31
   14c3c:	61b7      	str	r7, [r6, #24]
   14c3e:	4621      	mov	r1, r4
   14c40:	61b7      	str	r7, [r6, #24]
   14c42:	61b7      	str	r7, [r6, #24]
   14c44:	d11c      	bne.n	14c80 <flash_initialize+0x78>
   14c46:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   14c4a:	2a03      	cmp	r2, #3
   14c4c:	d818      	bhi.n	14c80 <flash_initialize+0x78>
   14c4e:	4a12      	ldr	r2, [pc, #72]	; (14c98 <flash_initialize+0x90>)
   14c50:	2b25      	cmp	r3, #37	; 0x25
   14c52:	7013      	strb	r3, [r2, #0]
   14c54:	f005 0001 	and.w	r0, r5, #1
   14c58:	d106      	bne.n	14c68 <flash_initialize+0x60>
   14c5a:	2800      	cmp	r0, #0
   14c5c:	bf14      	ite	ne
   14c5e:	f44f 7380 	movne.w	r3, #256	; 0x100
   14c62:	f44f 7384 	moveq.w	r3, #264	; 0x108
   14c66:	e005      	b.n	14c74 <flash_initialize+0x6c>
   14c68:	2800      	cmp	r0, #0
   14c6a:	bf14      	ite	ne
   14c6c:	f44f 7300 	movne.w	r3, #512	; 0x200
   14c70:	f44f 7304 	moveq.w	r3, #528	; 0x210
   14c74:	800b      	strh	r3, [r1, #0]
   14c76:	f7ff fec3 	bl	14a00 <flash_get_mem_size_bytes()>
   14c7a:	4b08      	ldr	r3, [pc, #32]	; (14c9c <flash_initialize+0x94>)
   14c7c:	0a40      	lsrs	r0, r0, #9
   14c7e:	6018      	str	r0, [r3, #0]
   14c80:	8808      	ldrh	r0, [r1, #0]
   14c82:	fab0 f080 	clz	r0, r0
   14c86:	0940      	lsrs	r0, r0, #5
   14c88:	b003      	add	sp, #12
   14c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14c8c:	2007c368 	.word	0x2007c368
   14c90:	00023ce8 	.word	0x00023ce8
   14c94:	2009c000 	.word	0x2009c000
   14c98:	2007c36a 	.word	0x2007c36a
   14c9c:	2007c36c 	.word	0x2007c36c

00014ca0 <flash_read_sectors>:
flash_read_sectors():
   14ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14ca2:	188b      	adds	r3, r1, r2
   14ca4:	4617      	mov	r7, r2
   14ca6:	4a0d      	ldr	r2, [pc, #52]	; (14cdc <flash_read_sectors+0x3c>)
   14ca8:	3b01      	subs	r3, #1
   14caa:	6812      	ldr	r2, [r2, #0]
   14cac:	4604      	mov	r4, r0
   14cae:	4293      	cmp	r3, r2
   14cb0:	d810      	bhi.n	14cd4 <flash_read_sectors+0x34>
   14cb2:	024d      	lsls	r5, r1, #9
   14cb4:	f7ff ff86 	bl	14bc4 <flash_wait_for_ready()>
   14cb8:	2600      	movs	r6, #0
   14cba:	1b2d      	subs	r5, r5, r4
   14cbc:	42be      	cmp	r6, r7
   14cbe:	eb04 0205 	add.w	r2, r4, r5
   14cc2:	da09      	bge.n	14cd8 <flash_read_sectors+0x38>
   14cc4:	4621      	mov	r1, r4
   14cc6:	4806      	ldr	r0, [pc, #24]	; (14ce0 <flash_read_sectors+0x40>)
   14cc8:	f7ff feaa 	bl	14a20 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
   14ccc:	f504 7400 	add.w	r4, r4, #512	; 0x200
   14cd0:	3601      	adds	r6, #1
   14cd2:	e7f3      	b.n	14cbc <flash_read_sectors+0x1c>
   14cd4:	2001      	movs	r0, #1
   14cd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14cd8:	2000      	movs	r0, #0
   14cda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14cdc:	2007c36c 	.word	0x2007c36c
   14ce0:	00014b81 	.word	0x00014b81

00014ce4 <flash_write_sectors>:
flash_write_sectors():
   14ce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14ce6:	188b      	adds	r3, r1, r2
   14ce8:	4617      	mov	r7, r2
   14cea:	4a0c      	ldr	r2, [pc, #48]	; (14d1c <flash_write_sectors+0x38>)
   14cec:	3b01      	subs	r3, #1
   14cee:	6812      	ldr	r2, [r2, #0]
   14cf0:	4293      	cmp	r3, r2
   14cf2:	d80f      	bhi.n	14d14 <flash_write_sectors+0x30>
   14cf4:	4604      	mov	r4, r0
   14cf6:	2600      	movs	r6, #0
   14cf8:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
   14cfc:	42be      	cmp	r6, r7
   14cfe:	eb04 0205 	add.w	r2, r4, r5
   14d02:	da09      	bge.n	14d18 <flash_write_sectors+0x34>
   14d04:	4621      	mov	r1, r4
   14d06:	4806      	ldr	r0, [pc, #24]	; (14d20 <flash_write_sectors+0x3c>)
   14d08:	f7ff fe8a 	bl	14a20 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
   14d0c:	f504 7400 	add.w	r4, r4, #512	; 0x200
   14d10:	3601      	adds	r6, #1
   14d12:	e7f3      	b.n	14cfc <flash_write_sectors+0x18>
   14d14:	2001      	movs	r0, #1
   14d16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14d18:	2000      	movs	r0, #0
   14d1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14d1c:	2007c36c 	.word	0x2007c36c
   14d20:	00014e05 	.word	0x00014e05

00014d24 <flash_ioctl>:
flash_ioctl():
   14d24:	b508      	push	{r3, lr}
   14d26:	2807      	cmp	r0, #7
   14d28:	d805      	bhi.n	14d36 <flash_ioctl+0x12>
   14d2a:	e8df f000 	tbb	[pc, r0]
   14d2e:	0906      	.short	0x0906
   14d30:	1414120e 	.word	0x1414120e
   14d34:	1414      	.short	0x1414
   14d36:	2004      	movs	r0, #4
   14d38:	bd08      	pop	{r3, pc}
   14d3a:	f7ff ff43 	bl	14bc4 <flash_wait_for_ready()>
   14d3e:	e00a      	b.n	14d56 <flash_ioctl+0x32>
   14d40:	f7ff fe5e 	bl	14a00 <flash_get_mem_size_bytes()>
   14d44:	0a40      	lsrs	r0, r0, #9
   14d46:	6008      	str	r0, [r1, #0]
   14d48:	e005      	b.n	14d56 <flash_ioctl+0x32>
   14d4a:	f44f 7300 	mov.w	r3, #512	; 0x200
   14d4e:	800b      	strh	r3, [r1, #0]
   14d50:	e001      	b.n	14d56 <flash_ioctl+0x32>
   14d52:	2301      	movs	r3, #1
   14d54:	600b      	str	r3, [r1, #0]
   14d56:	2000      	movs	r0, #0
   14d58:	bd08      	pop	{r3, pc}
$t():
   14d5a:	ffff b570 	vsli.32	<illegal reg q13.5>, q8, #31

00014d5c <flash_write_permanent_id>:
flash_write_permanent_id():
   14d5c:	b570      	push	{r4, r5, r6, lr}
   14d5e:	b090      	sub	sp, #64	; 0x40
   14d60:	4603      	mov	r3, r0
   14d62:	466a      	mov	r2, sp
   14d64:	466e      	mov	r6, sp
   14d66:	f100 0540 	add.w	r5, r0, #64	; 0x40
   14d6a:	4614      	mov	r4, r2
   14d6c:	6818      	ldr	r0, [r3, #0]
   14d6e:	6859      	ldr	r1, [r3, #4]
   14d70:	3308      	adds	r3, #8
   14d72:	c403      	stmia	r4!, {r0, r1}
   14d74:	42ab      	cmp	r3, r5
   14d76:	4622      	mov	r2, r4
   14d78:	d1f7      	bne.n	14d6a <flash_write_permanent_id+0xe>
   14d7a:	4d08      	ldr	r5, [pc, #32]	; (14d9c <flash_write_permanent_id+0x40>)
   14d7c:	2440      	movs	r4, #64	; 0x40
   14d7e:	61ec      	str	r4, [r5, #28]
   14d80:	2100      	movs	r1, #0
   14d82:	209b      	movs	r0, #155	; 0x9b
   14d84:	f7ff fee8 	bl	14b58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   14d88:	4621      	mov	r1, r4
   14d8a:	4630      	mov	r0, r6
   14d8c:	f7ff fe82 	bl	14a94 <ssp1_exchange_data>
   14d90:	61ac      	str	r4, [r5, #24]
   14d92:	61ac      	str	r4, [r5, #24]
   14d94:	61ac      	str	r4, [r5, #24]
   14d96:	b010      	add	sp, #64	; 0x40
   14d98:	bd70      	pop	{r4, r5, r6, pc}
   14d9a:	bf00      	nop
   14d9c:	2009c000 	.word	0x2009c000

00014da0 <flash_read_permanent_id>:
flash_read_permanent_id():
   14da0:	b570      	push	{r4, r5, r6, lr}
   14da2:	4606      	mov	r6, r0
   14da4:	4d07      	ldr	r5, [pc, #28]	; (14dc4 <flash_read_permanent_id+0x24>)
   14da6:	2440      	movs	r4, #64	; 0x40
   14da8:	2100      	movs	r1, #0
   14daa:	2077      	movs	r0, #119	; 0x77
   14dac:	61ec      	str	r4, [r5, #28]
   14dae:	f7ff fed3 	bl	14b58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   14db2:	4621      	mov	r1, r4
   14db4:	4630      	mov	r0, r6
   14db6:	f7ff fe6d 	bl	14a94 <ssp1_exchange_data>
   14dba:	61ac      	str	r4, [r5, #24]
   14dbc:	61ac      	str	r4, [r5, #24]
   14dbe:	61ac      	str	r4, [r5, #24]
   14dc0:	bd70      	pop	{r4, r5, r6, pc}
   14dc2:	bf00      	nop
   14dc4:	2009c000 	.word	0x2009c000

00014dc8 <flash_get_page_count>:
flash_get_page_count():
   14dc8:	b508      	push	{r3, lr}
   14dca:	4b06      	ldr	r3, [pc, #24]	; (14de4 <flash_get_page_count+0x1c>)
   14dcc:	8819      	ldrh	r1, [r3, #0]
   14dce:	f031 011f 	bics.w	r1, r1, #31
   14dd2:	d004      	beq.n	14dde <flash_get_page_count+0x16>
   14dd4:	f7ff fe14 	bl	14a00 <flash_get_mem_size_bytes()>
   14dd8:	fbb0 f0f1 	udiv	r0, r0, r1
   14ddc:	bd08      	pop	{r3, pc}
   14dde:	4608      	mov	r0, r1
   14de0:	bd08      	pop	{r3, pc}
   14de2:	bf00      	nop
   14de4:	2007c368 	.word	0x2007c368

00014de8 <flash_get_page_size>:
flash_get_page_size():
   14de8:	4b01      	ldr	r3, [pc, #4]	; (14df0 <flash_get_page_size+0x8>)
   14dea:	8818      	ldrh	r0, [r3, #0]
   14dec:	4770      	bx	lr
   14dee:	bf00      	nop
   14df0:	2007c368 	.word	0x2007c368

00014df4 <flash_supports_metadata>:
flash_supports_metadata():
   14df4:	4b02      	ldr	r3, [pc, #8]	; (14e00 <flash_supports_metadata+0xc>)
   14df6:	7818      	ldrb	r0, [r3, #0]
   14df8:	3000      	adds	r0, #0
   14dfa:	bf18      	it	ne
   14dfc:	2001      	movne	r0, #1
   14dfe:	4770      	bx	lr
   14e00:	2007c368 	.word	0x2007c368

00014e04 <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
   14e04:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14e08:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   14e0c:	460f      	mov	r7, r1
   14e0e:	4691      	mov	r9, r2
   14e10:	9301      	str	r3, [sp, #4]
   14e12:	4680      	mov	r8, r0
   14e14:	f7ff fed6 	bl	14bc4 <flash_wait_for_ready()>
   14e18:	f7ff ffec 	bl	14df4 <flash_supports_metadata>
   14e1c:	4606      	mov	r6, r0
   14e1e:	b1b8      	cbz	r0, 14e50 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
   14e20:	4c19      	ldr	r4, [pc, #100]	; (14e88 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
   14e22:	2540      	movs	r5, #64	; 0x40
   14e24:	4b19      	ldr	r3, [pc, #100]	; (14e8c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
   14e26:	61e5      	str	r5, [r4, #28]
   14e28:	881b      	ldrh	r3, [r3, #0]
   14e2a:	2003      	movs	r0, #3
   14e2c:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   14e30:	bf0c      	ite	eq
   14e32:	f44f 7180 	moveq.w	r1, #256	; 0x100
   14e36:	f44f 7100 	movne.w	r1, #512	; 0x200
   14e3a:	4339      	orrs	r1, r7
   14e3c:	f7ff fe8c 	bl	14b58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   14e40:	2104      	movs	r1, #4
   14e42:	eb0d 0001 	add.w	r0, sp, r1
   14e46:	f7ff fe25 	bl	14a94 <ssp1_exchange_data>
   14e4a:	61a5      	str	r5, [r4, #24]
   14e4c:	61a5      	str	r5, [r4, #24]
   14e4e:	61a5      	str	r5, [r4, #24]
   14e50:	4c0d      	ldr	r4, [pc, #52]	; (14e88 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
   14e52:	2340      	movs	r3, #64	; 0x40
   14e54:	4639      	mov	r1, r7
   14e56:	2082      	movs	r0, #130	; 0x82
   14e58:	61e3      	str	r3, [r4, #28]
   14e5a:	f7ff fe7d 	bl	14b58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   14e5e:	2201      	movs	r2, #1
   14e60:	4649      	mov	r1, r9
   14e62:	4640      	mov	r0, r8
   14e64:	f7fc f832 	bl	10ecc <ssp1_dma_transfer_block>
   14e68:	b13e      	cbz	r6, 14e7a <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
   14e6a:	9b01      	ldr	r3, [sp, #4]
   14e6c:	a802      	add	r0, sp, #8
   14e6e:	3301      	adds	r3, #1
   14e70:	f840 3d04 	str.w	r3, [r0, #-4]!
   14e74:	2104      	movs	r1, #4
   14e76:	f7ff fe0d 	bl	14a94 <ssp1_exchange_data>
   14e7a:	2340      	movs	r3, #64	; 0x40
   14e7c:	61a3      	str	r3, [r4, #24]
   14e7e:	61a3      	str	r3, [r4, #24]
   14e80:	61a3      	str	r3, [r4, #24]
   14e82:	b003      	add	sp, #12
   14e84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14e88:	2009c000 	.word	0x2009c000
   14e8c:	2007c368 	.word	0x2007c368

00014e90 <flash_get_page_write_count>:
flash_get_page_write_count():
   14e90:	4b12      	ldr	r3, [pc, #72]	; (14edc <flash_get_page_write_count+0x4c>)
   14e92:	b537      	push	{r0, r1, r2, r4, r5, lr}
   14e94:	881b      	ldrh	r3, [r3, #0]
   14e96:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   14e9a:	bf0c      	ite	eq
   14e9c:	f44f 7180 	moveq.w	r1, #256	; 0x100
   14ea0:	f44f 7100 	movne.w	r1, #512	; 0x200
   14ea4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   14ea8:	ea41 2140 	orr.w	r1, r1, r0, lsl #9
   14eac:	9301      	str	r3, [sp, #4]
   14eae:	f7ff ffa1 	bl	14df4 <flash_supports_metadata>
   14eb2:	b168      	cbz	r0, 14ed0 <flash_get_page_write_count+0x40>
   14eb4:	4c0a      	ldr	r4, [pc, #40]	; (14ee0 <flash_get_page_write_count+0x50>)
   14eb6:	2540      	movs	r5, #64	; 0x40
   14eb8:	2003      	movs	r0, #3
   14eba:	61e5      	str	r5, [r4, #28]
   14ebc:	f7ff fe4c 	bl	14b58 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   14ec0:	2104      	movs	r1, #4
   14ec2:	eb0d 0001 	add.w	r0, sp, r1
   14ec6:	f7ff fde5 	bl	14a94 <ssp1_exchange_data>
   14eca:	61a5      	str	r5, [r4, #24]
   14ecc:	61a5      	str	r5, [r4, #24]
   14ece:	61a5      	str	r5, [r4, #24]
   14ed0:	9801      	ldr	r0, [sp, #4]
   14ed2:	1c43      	adds	r3, r0, #1
   14ed4:	bf08      	it	eq
   14ed6:	2000      	moveq	r0, #0
   14ed8:	b003      	add	sp, #12
   14eda:	bd30      	pop	{r4, r5, pc}
   14edc:	2007c368 	.word	0x2007c368
   14ee0:	2009c000 	.word	0x2009c000

00014ee4 <flash_chip_erase>:
flash_chip_erase():
   14ee4:	b537      	push	{r0, r1, r2, r4, r5, lr}
   14ee6:	4b08      	ldr	r3, [pc, #32]	; (14f08 <flash_chip_erase+0x24>)
   14ee8:	4c08      	ldr	r4, [pc, #32]	; (14f0c <flash_chip_erase+0x28>)
   14eea:	6818      	ldr	r0, [r3, #0]
   14eec:	2540      	movs	r5, #64	; 0x40
   14eee:	2104      	movs	r1, #4
   14ef0:	9001      	str	r0, [sp, #4]
   14ef2:	61e5      	str	r5, [r4, #28]
   14ef4:	eb0d 0001 	add.w	r0, sp, r1
   14ef8:	f7ff fdcc 	bl	14a94 <ssp1_exchange_data>
   14efc:	61a5      	str	r5, [r4, #24]
   14efe:	61a5      	str	r5, [r4, #24]
   14f00:	61a5      	str	r5, [r4, #24]
   14f02:	b003      	add	sp, #12
   14f04:	bd30      	pop	{r4, r5, pc}
   14f06:	bf00      	nop
   14f08:	00023ceb 	.word	0x00023ceb
   14f0c:	2009c000 	.word	0x2009c000

00014f10 <sys_get_uptime_ms>:
sys_get_uptime_ms():
   14f10:	b508      	push	{r3, lr}
   14f12:	f006 f9ff 	bl	1b314 <sys_get_uptime_us>
   14f16:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14f1a:	2300      	movs	r3, #0
   14f1c:	f007 fe24 	bl	1cb68 <__aeabi_uldivmod>
   14f20:	bd08      	pop	{r3, pc}
   14f22:	ffff b510 	vsli.32	d27, d0, #31

00014f24 <ssp1_set_max_clock>:
ssp1_set_max_clock():
   14f24:	b510      	push	{r4, lr}
   14f26:	4604      	mov	r4, r0
   14f28:	f006 f84c 	bl	1afc4 <sys_get_cpu_clock>
   14f2c:	4b07      	ldr	r3, [pc, #28]	; (14f4c <ssp1_set_max_clock+0x28>)
   14f2e:	fbb0 f0f3 	udiv	r0, r0, r3
   14f32:	2302      	movs	r3, #2
   14f34:	fbb0 f2f3 	udiv	r2, r0, r3
   14f38:	4294      	cmp	r4, r2
   14f3a:	d302      	bcc.n	14f42 <ssp1_set_max_clock+0x1e>
   14f3c:	4a04      	ldr	r2, [pc, #16]	; (14f50 <ssp1_set_max_clock+0x2c>)
   14f3e:	6113      	str	r3, [r2, #16]
   14f40:	bd10      	pop	{r4, pc}
   14f42:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   14f46:	d0f9      	beq.n	14f3c <ssp1_set_max_clock+0x18>
   14f48:	3302      	adds	r3, #2
   14f4a:	e7f3      	b.n	14f34 <ssp1_set_max_clock+0x10>
   14f4c:	000f4240 	.word	0x000f4240
   14f50:	40030000 	.word	0x40030000

00014f54 <ssp1_exchange_byte>:
ssp1_exchange_byte():
   14f54:	4b04      	ldr	r3, [pc, #16]	; (14f68 <ssp1_exchange_byte+0x14>)
   14f56:	6098      	str	r0, [r3, #8]
   14f58:	68da      	ldr	r2, [r3, #12]
   14f5a:	06d2      	lsls	r2, r2, #27
   14f5c:	d4fc      	bmi.n	14f58 <ssp1_exchange_byte+0x4>
   14f5e:	4b02      	ldr	r3, [pc, #8]	; (14f68 <ssp1_exchange_byte+0x14>)
   14f60:	6898      	ldr	r0, [r3, #8]
   14f62:	b2c0      	uxtb	r0, r0
   14f64:	4770      	bx	lr
   14f66:	bf00      	nop
   14f68:	40030000 	.word	0x40030000

00014f6c <wait_ready>:
wait_ready():
   14f6c:	b570      	push	{r4, r5, r6, lr}
   14f6e:	f7ff ffcf 	bl	14f10 <sys_get_uptime_ms>
   14f72:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
   14f76:	20ff      	movs	r0, #255	; 0xff
   14f78:	f7ff ffec 	bl	14f54 <ssp1_exchange_byte>
   14f7c:	2500      	movs	r5, #0
   14f7e:	20ff      	movs	r0, #255	; 0xff
   14f80:	f7ff ffe8 	bl	14f54 <ssp1_exchange_byte>
   14f84:	28ff      	cmp	r0, #255	; 0xff
   14f86:	4606      	mov	r6, r0
   14f88:	d005      	beq.n	14f96 <wait_ready+0x2a>
   14f8a:	f7ff ffc1 	bl	14f10 <sys_get_uptime_ms>
   14f8e:	42a9      	cmp	r1, r5
   14f90:	bf08      	it	eq
   14f92:	42a0      	cmpeq	r0, r4
   14f94:	d3f3      	bcc.n	14f7e <wait_ready+0x12>
   14f96:	4630      	mov	r0, r6
   14f98:	bd70      	pop	{r4, r5, r6, pc}
   14f9a:	ffff b538 	vsli.32	d27, d24, #31

00014f9c <power_off>:
power_off():
   14f9c:	b538      	push	{r3, r4, r5, lr}
   14f9e:	4c06      	ldr	r4, [pc, #24]	; (14fb8 <power_off+0x1c>)
   14fa0:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   14fa4:	61e5      	str	r5, [r4, #28]
   14fa6:	f7ff ffe1 	bl	14f6c <wait_ready>
   14faa:	4a04      	ldr	r2, [pc, #16]	; (14fbc <power_off+0x20>)
   14fac:	61a5      	str	r5, [r4, #24]
   14fae:	7813      	ldrb	r3, [r2, #0]
   14fb0:	f043 0301 	orr.w	r3, r3, #1
   14fb4:	7013      	strb	r3, [r2, #0]
   14fb6:	bd38      	pop	{r3, r4, r5, pc}
   14fb8:	2009c020 	.word	0x2009c020
   14fbc:	2007c046 	.word	0x2007c046

00014fc0 <rcvr_datablock>:
rcvr_datablock():
   14fc0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   14fc4:	4606      	mov	r6, r0
   14fc6:	460d      	mov	r5, r1
   14fc8:	f7ff ffa2 	bl	14f10 <sys_get_uptime_ms>
   14fcc:	3064      	adds	r0, #100	; 0x64
   14fce:	4680      	mov	r8, r0
   14fd0:	f04f 0900 	mov.w	r9, #0
   14fd4:	20ff      	movs	r0, #255	; 0xff
   14fd6:	f7ff ffbd 	bl	14f54 <ssp1_exchange_byte>
   14fda:	28ff      	cmp	r0, #255	; 0xff
   14fdc:	d108      	bne.n	14ff0 <rcvr_datablock+0x30>
   14fde:	f7ff ff97 	bl	14f10 <sys_get_uptime_ms>
   14fe2:	4549      	cmp	r1, r9
   14fe4:	bf08      	it	eq
   14fe6:	4540      	cmpeq	r0, r8
   14fe8:	d3f4      	bcc.n	14fd4 <rcvr_datablock+0x14>
   14fea:	2000      	movs	r0, #0
   14fec:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   14ff0:	28fe      	cmp	r0, #254	; 0xfe
   14ff2:	d1fa      	bne.n	14fea <rcvr_datablock+0x2a>
   14ff4:	2d10      	cmp	r5, #16
   14ff6:	d906      	bls.n	15006 <rcvr_datablock+0x46>
   14ff8:	2200      	movs	r2, #0
   14ffa:	f44f 7100 	mov.w	r1, #512	; 0x200
   14ffe:	4630      	mov	r0, r6
   15000:	f7fb ff64 	bl	10ecc <ssp1_dma_transfer_block>
   15004:	e019      	b.n	1503a <rcvr_datablock+0x7a>
   15006:	1d34      	adds	r4, r6, #4
   15008:	3504      	adds	r5, #4
   1500a:	20ff      	movs	r0, #255	; 0xff
   1500c:	f7ff ffa2 	bl	14f54 <ssp1_exchange_byte>
   15010:	f804 0c04 	strb.w	r0, [r4, #-4]
   15014:	20ff      	movs	r0, #255	; 0xff
   15016:	f7ff ff9d 	bl	14f54 <ssp1_exchange_byte>
   1501a:	f804 0c03 	strb.w	r0, [r4, #-3]
   1501e:	20ff      	movs	r0, #255	; 0xff
   15020:	f7ff ff98 	bl	14f54 <ssp1_exchange_byte>
   15024:	f804 0c02 	strb.w	r0, [r4, #-2]
   15028:	20ff      	movs	r0, #255	; 0xff
   1502a:	f7ff ff93 	bl	14f54 <ssp1_exchange_byte>
   1502e:	3404      	adds	r4, #4
   15030:	f804 0c05 	strb.w	r0, [r4, #-5]
   15034:	1b2b      	subs	r3, r5, r4
   15036:	42de      	cmn	r6, r3
   15038:	d1e7      	bne.n	1500a <rcvr_datablock+0x4a>
   1503a:	20ff      	movs	r0, #255	; 0xff
   1503c:	f7ff ff8a 	bl	14f54 <ssp1_exchange_byte>
   15040:	20ff      	movs	r0, #255	; 0xff
   15042:	f7ff ff87 	bl	14f54 <ssp1_exchange_byte>
   15046:	2001      	movs	r0, #1
   15048:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0001504c <xmit_datablock>:
xmit_datablock():
   1504c:	b570      	push	{r4, r5, r6, lr}
   1504e:	4606      	mov	r6, r0
   15050:	460d      	mov	r5, r1
   15052:	f7ff ff8b 	bl	14f6c <wait_ready>
   15056:	28ff      	cmp	r0, #255	; 0xff
   15058:	4604      	mov	r4, r0
   1505a:	d119      	bne.n	15090 <xmit_datablock+0x44>
   1505c:	4628      	mov	r0, r5
   1505e:	f7ff ff79 	bl	14f54 <ssp1_exchange_byte>
   15062:	2dfd      	cmp	r5, #253	; 0xfd
   15064:	d016      	beq.n	15094 <xmit_datablock+0x48>
   15066:	4622      	mov	r2, r4
   15068:	f44f 7100 	mov.w	r1, #512	; 0x200
   1506c:	4630      	mov	r0, r6
   1506e:	f7fb ff2d 	bl	10ecc <ssp1_dma_transfer_block>
   15072:	4620      	mov	r0, r4
   15074:	f7ff ff6e 	bl	14f54 <ssp1_exchange_byte>
   15078:	4620      	mov	r0, r4
   1507a:	f7ff ff6b 	bl	14f54 <ssp1_exchange_byte>
   1507e:	4620      	mov	r0, r4
   15080:	f7ff ff68 	bl	14f54 <ssp1_exchange_byte>
   15084:	f000 001f 	and.w	r0, r0, #31
   15088:	1f43      	subs	r3, r0, #5
   1508a:	4258      	negs	r0, r3
   1508c:	4158      	adcs	r0, r3
   1508e:	bd70      	pop	{r4, r5, r6, pc}
   15090:	2000      	movs	r0, #0
   15092:	bd70      	pop	{r4, r5, r6, pc}
   15094:	2001      	movs	r0, #1
   15096:	bd70      	pop	{r4, r5, r6, pc}

00015098 <send_cmd>:
send_cmd():
   15098:	0602      	lsls	r2, r0, #24
   1509a:	b538      	push	{r3, r4, r5, lr}
   1509c:	4604      	mov	r4, r0
   1509e:	460d      	mov	r5, r1
   150a0:	d507      	bpl.n	150b2 <send_cmd+0x1a>
   150a2:	2100      	movs	r1, #0
   150a4:	2077      	movs	r0, #119	; 0x77
   150a6:	f7ff fff7 	bl	15098 <send_cmd>
   150aa:	2801      	cmp	r0, #1
   150ac:	d838      	bhi.n	15120 <send_cmd+0x88>
   150ae:	f004 047f 	and.w	r4, r4, #127	; 0x7f
   150b2:	4b1c      	ldr	r3, [pc, #112]	; (15124 <send_cmd+0x8c>)
   150b4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   150b8:	619a      	str	r2, [r3, #24]
   150ba:	61da      	str	r2, [r3, #28]
   150bc:	f7ff ff56 	bl	14f6c <wait_ready>
   150c0:	28ff      	cmp	r0, #255	; 0xff
   150c2:	4601      	mov	r1, r0
   150c4:	d128      	bne.n	15118 <send_cmd+0x80>
   150c6:	4620      	mov	r0, r4
   150c8:	f7ff ff44 	bl	14f54 <ssp1_exchange_byte>
   150cc:	0e28      	lsrs	r0, r5, #24
   150ce:	f7ff ff41 	bl	14f54 <ssp1_exchange_byte>
   150d2:	f3c5 4007 	ubfx	r0, r5, #16, #8
   150d6:	f7ff ff3d 	bl	14f54 <ssp1_exchange_byte>
   150da:	f3c5 2007 	ubfx	r0, r5, #8, #8
   150de:	f7ff ff39 	bl	14f54 <ssp1_exchange_byte>
   150e2:	b2e8      	uxtb	r0, r5
   150e4:	f7ff ff36 	bl	14f54 <ssp1_exchange_byte>
   150e8:	2c40      	cmp	r4, #64	; 0x40
   150ea:	d017      	beq.n	1511c <send_cmd+0x84>
   150ec:	2c48      	cmp	r4, #72	; 0x48
   150ee:	bf14      	ite	ne
   150f0:	2001      	movne	r0, #1
   150f2:	2087      	moveq	r0, #135	; 0x87
   150f4:	f7ff ff2e 	bl	14f54 <ssp1_exchange_byte>
   150f8:	2c4c      	cmp	r4, #76	; 0x4c
   150fa:	d102      	bne.n	15102 <send_cmd+0x6a>
   150fc:	4608      	mov	r0, r1
   150fe:	f7ff ff29 	bl	14f54 <ssp1_exchange_byte>
   15102:	210a      	movs	r1, #10
   15104:	20ff      	movs	r0, #255	; 0xff
   15106:	f7ff ff25 	bl	14f54 <ssp1_exchange_byte>
   1510a:	0603      	lsls	r3, r0, #24
   1510c:	d508      	bpl.n	15120 <send_cmd+0x88>
   1510e:	3901      	subs	r1, #1
   15110:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   15114:	d1f6      	bne.n	15104 <send_cmd+0x6c>
   15116:	bd38      	pop	{r3, r4, r5, pc}
   15118:	20ff      	movs	r0, #255	; 0xff
   1511a:	bd38      	pop	{r3, r4, r5, pc}
   1511c:	2095      	movs	r0, #149	; 0x95
   1511e:	e7ee      	b.n	150fe <send_cmd+0x66>
   15120:	bd38      	pop	{r3, r4, r5, pc}
   15122:	bf00      	nop
   15124:	2009c020 	.word	0x2009c020

00015128 <sd_update_card_status>:
sd_update_card_status():
   15128:	4a06      	ldr	r2, [pc, #24]	; (15144 <sd_update_card_status+0x1c>)
   1512a:	4907      	ldr	r1, [pc, #28]	; (15148 <sd_update_card_status+0x20>)
   1512c:	7813      	ldrb	r3, [r2, #0]
   1512e:	6949      	ldr	r1, [r1, #20]
   15130:	b2db      	uxtb	r3, r3
   15132:	0149      	lsls	r1, r1, #5
   15134:	bf54      	ite	pl
   15136:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
   1513a:	f043 0303 	orrmi.w	r3, r3, #3
   1513e:	7013      	strb	r3, [r2, #0]
   15140:	4770      	bx	lr
   15142:	bf00      	nop
   15144:	2007c046 	.word	0x2007c046
   15148:	2009c020 	.word	0x2009c020

0001514c <sd_initialize>:
sd_initialize():
   1514c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   15150:	f7ff ffea 	bl	15128 <sd_update_card_status>
   15154:	4b56      	ldr	r3, [pc, #344]	; (152b0 <sd_initialize+0x164>)
   15156:	781a      	ldrb	r2, [r3, #0]
   15158:	461e      	mov	r6, r3
   1515a:	f012 0f02 	tst.w	r2, #2
   1515e:	d001      	beq.n	15164 <sd_initialize+0x18>
   15160:	7818      	ldrb	r0, [r3, #0]
   15162:	e0a1      	b.n	152a8 <sd_initialize+0x15c>
   15164:	2001      	movs	r0, #1
   15166:	f7ff fedd 	bl	14f24 <ssp1_set_max_clock>
   1516a:	240a      	movs	r4, #10
   1516c:	20ff      	movs	r0, #255	; 0xff
   1516e:	3c01      	subs	r4, #1
   15170:	f7ff fef0 	bl	14f54 <ssp1_exchange_byte>
   15174:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   15178:	d1f8      	bne.n	1516c <sd_initialize+0x20>
   1517a:	4f4e      	ldr	r7, [pc, #312]	; (152b4 <sd_initialize+0x168>)
   1517c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   15180:	61fb      	str	r3, [r7, #28]
   15182:	4621      	mov	r1, r4
   15184:	2040      	movs	r0, #64	; 0x40
   15186:	f7ff ff87 	bl	15098 <send_cmd>
   1518a:	2801      	cmp	r0, #1
   1518c:	d002      	beq.n	15194 <sd_initialize+0x48>
   1518e:	f04f 0800 	mov.w	r8, #0
   15192:	e075      	b.n	15280 <sd_initialize+0x134>
   15194:	f7ff febc 	bl	14f10 <sys_get_uptime_ms>
   15198:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   1519c:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
   151a0:	2048      	movs	r0, #72	; 0x48
   151a2:	f7ff ff79 	bl	15098 <send_cmd>
   151a6:	2801      	cmp	r0, #1
   151a8:	d141      	bne.n	1522e <sd_initialize+0xe2>
   151aa:	f10d 0804 	add.w	r8, sp, #4
   151ae:	20ff      	movs	r0, #255	; 0xff
   151b0:	f7ff fed0 	bl	14f54 <ssp1_exchange_byte>
   151b4:	f808 0004 	strb.w	r0, [r8, r4]
   151b8:	3401      	adds	r4, #1
   151ba:	2c04      	cmp	r4, #4
   151bc:	d1f7      	bne.n	151ae <sd_initialize+0x62>
   151be:	f89d 3006 	ldrb.w	r3, [sp, #6]
   151c2:	2b01      	cmp	r3, #1
   151c4:	d1e3      	bne.n	1518e <sd_initialize+0x42>
   151c6:	f89d 3007 	ldrb.w	r3, [sp, #7]
   151ca:	2baa      	cmp	r3, #170	; 0xaa
   151cc:	d1df      	bne.n	1518e <sd_initialize+0x42>
   151ce:	462c      	mov	r4, r5
   151d0:	2500      	movs	r5, #0
   151d2:	f7ff fe9d 	bl	14f10 <sys_get_uptime_ms>
   151d6:	42a9      	cmp	r1, r5
   151d8:	bf08      	it	eq
   151da:	42a0      	cmpeq	r0, r4
   151dc:	d306      	bcc.n	151ec <sd_initialize+0xa0>
   151de:	f7ff fe97 	bl	14f10 <sys_get_uptime_ms>
   151e2:	42a9      	cmp	r1, r5
   151e4:	bf08      	it	eq
   151e6:	42a0      	cmpeq	r0, r4
   151e8:	d2d1      	bcs.n	1518e <sd_initialize+0x42>
   151ea:	e007      	b.n	151fc <sd_initialize+0xb0>
   151ec:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   151f0:	20e9      	movs	r0, #233	; 0xe9
   151f2:	f7ff ff51 	bl	15098 <send_cmd>
   151f6:	2800      	cmp	r0, #0
   151f8:	d1eb      	bne.n	151d2 <sd_initialize+0x86>
   151fa:	e7f0      	b.n	151de <sd_initialize+0x92>
   151fc:	2100      	movs	r1, #0
   151fe:	207a      	movs	r0, #122	; 0x7a
   15200:	f7ff ff4a 	bl	15098 <send_cmd>
   15204:	2800      	cmp	r0, #0
   15206:	d1c2      	bne.n	1518e <sd_initialize+0x42>
   15208:	4601      	mov	r1, r0
   1520a:	20ff      	movs	r0, #255	; 0xff
   1520c:	f7ff fea2 	bl	14f54 <ssp1_exchange_byte>
   15210:	f808 0001 	strb.w	r0, [r8, r1]
   15214:	3101      	adds	r1, #1
   15216:	2904      	cmp	r1, #4
   15218:	d1f7      	bne.n	1520a <sd_initialize+0xbe>
   1521a:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1521e:	f013 0f40 	tst.w	r3, #64	; 0x40
   15222:	bf14      	ite	ne
   15224:	f04f 080c 	movne.w	r8, #12
   15228:	f04f 0804 	moveq.w	r8, #4
   1522c:	e028      	b.n	15280 <sd_initialize+0x134>
   1522e:	4621      	mov	r1, r4
   15230:	20e9      	movs	r0, #233	; 0xe9
   15232:	f7ff ff31 	bl	15098 <send_cmd>
   15236:	2802      	cmp	r0, #2
   15238:	462c      	mov	r4, r5
   1523a:	bf35      	itete	cc
   1523c:	f04f 0802 	movcc.w	r8, #2
   15240:	f04f 0801 	movcs.w	r8, #1
   15244:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   15248:	f04f 0941 	movcs.w	r9, #65	; 0x41
   1524c:	2500      	movs	r5, #0
   1524e:	f7ff fe5f 	bl	14f10 <sys_get_uptime_ms>
   15252:	42a9      	cmp	r1, r5
   15254:	bf08      	it	eq
   15256:	42a0      	cmpeq	r0, r4
   15258:	d30b      	bcc.n	15272 <sd_initialize+0x126>
   1525a:	f7ff fe59 	bl	14f10 <sys_get_uptime_ms>
   1525e:	42a9      	cmp	r1, r5
   15260:	bf08      	it	eq
   15262:	42a0      	cmpeq	r0, r4
   15264:	d30c      	bcc.n	15280 <sd_initialize+0x134>
   15266:	f44f 7100 	mov.w	r1, #512	; 0x200
   1526a:	2050      	movs	r0, #80	; 0x50
   1526c:	f7ff ff14 	bl	15098 <send_cmd>
   15270:	e006      	b.n	15280 <sd_initialize+0x134>
   15272:	2100      	movs	r1, #0
   15274:	4648      	mov	r0, r9
   15276:	f7ff ff0f 	bl	15098 <send_cmd>
   1527a:	2800      	cmp	r0, #0
   1527c:	d1e7      	bne.n	1524e <sd_initialize+0x102>
   1527e:	e7ec      	b.n	1525a <sd_initialize+0x10e>
   15280:	4b0d      	ldr	r3, [pc, #52]	; (152b8 <sd_initialize+0x16c>)
   15282:	f883 8000 	strb.w	r8, [r3]
   15286:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1528a:	61bb      	str	r3, [r7, #24]
   1528c:	f1b8 0f00 	cmp.w	r8, #0
   15290:	d007      	beq.n	152a2 <sd_initialize+0x156>
   15292:	7833      	ldrb	r3, [r6, #0]
   15294:	2018      	movs	r0, #24
   15296:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   1529a:	7033      	strb	r3, [r6, #0]
   1529c:	f7ff fe42 	bl	14f24 <ssp1_set_max_clock>
   152a0:	e001      	b.n	152a6 <sd_initialize+0x15a>
   152a2:	f7ff fe7b 	bl	14f9c <power_off>
   152a6:	7830      	ldrb	r0, [r6, #0]
   152a8:	b2c0      	uxtb	r0, r0
   152aa:	b003      	add	sp, #12
   152ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   152b0:	2007c046 	.word	0x2007c046
   152b4:	2009c020 	.word	0x2009c020
   152b8:	2007c370 	.word	0x2007c370

000152bc <sd_status>:
sd_status():
   152bc:	b508      	push	{r3, lr}
   152be:	f7ff ff33 	bl	15128 <sd_update_card_status>
   152c2:	4b01      	ldr	r3, [pc, #4]	; (152c8 <sd_status+0xc>)
   152c4:	7818      	ldrb	r0, [r3, #0]
   152c6:	bd08      	pop	{r3, pc}
   152c8:	2007c046 	.word	0x2007c046

000152cc <sd_read>:
sd_read():
   152cc:	b570      	push	{r4, r5, r6, lr}
   152ce:	4614      	mov	r4, r2
   152d0:	4606      	mov	r6, r0
   152d2:	4608      	mov	r0, r1
   152d4:	f7ff ff28 	bl	15128 <sd_update_card_status>
   152d8:	2c00      	cmp	r4, #0
   152da:	d039      	beq.n	15350 <sd_read+0x84>
   152dc:	4b1e      	ldr	r3, [pc, #120]	; (15358 <sd_read+0x8c>)
   152de:	781b      	ldrb	r3, [r3, #0]
   152e0:	07db      	lsls	r3, r3, #31
   152e2:	d437      	bmi.n	15354 <sd_read+0x88>
   152e4:	4b1d      	ldr	r3, [pc, #116]	; (1535c <sd_read+0x90>)
   152e6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   152ea:	61da      	str	r2, [r3, #28]
   152ec:	4a1c      	ldr	r2, [pc, #112]	; (15360 <sd_read+0x94>)
   152ee:	461d      	mov	r5, r3
   152f0:	7812      	ldrb	r2, [r2, #0]
   152f2:	f012 0f08 	tst.w	r2, #8
   152f6:	bf08      	it	eq
   152f8:	0240      	lsleq	r0, r0, #9
   152fa:	2c01      	cmp	r4, #1
   152fc:	4601      	mov	r1, r0
   152fe:	d10c      	bne.n	1531a <sd_read+0x4e>
   15300:	2051      	movs	r0, #81	; 0x51
   15302:	f7ff fec9 	bl	15098 <send_cmd>
   15306:	b9e0      	cbnz	r0, 15342 <sd_read+0x76>
   15308:	f44f 7100 	mov.w	r1, #512	; 0x200
   1530c:	4630      	mov	r0, r6
   1530e:	f7ff fe57 	bl	14fc0 <rcvr_datablock>
   15312:	fab0 f480 	clz	r4, r0
   15316:	0964      	lsrs	r4, r4, #5
   15318:	e013      	b.n	15342 <sd_read+0x76>
   1531a:	2052      	movs	r0, #82	; 0x52
   1531c:	f7ff febc 	bl	15098 <send_cmd>
   15320:	b978      	cbnz	r0, 15342 <sd_read+0x76>
   15322:	f44f 7100 	mov.w	r1, #512	; 0x200
   15326:	4630      	mov	r0, r6
   15328:	f7ff fe4a 	bl	14fc0 <rcvr_datablock>
   1532c:	b128      	cbz	r0, 1533a <sd_read+0x6e>
   1532e:	3c01      	subs	r4, #1
   15330:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   15334:	f506 7600 	add.w	r6, r6, #512	; 0x200
   15338:	d1f3      	bne.n	15322 <sd_read+0x56>
   1533a:	2100      	movs	r1, #0
   1533c:	204c      	movs	r0, #76	; 0x4c
   1533e:	f7ff feab 	bl	15098 <send_cmd>
   15342:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   15346:	1c20      	adds	r0, r4, #0
   15348:	61ab      	str	r3, [r5, #24]
   1534a:	bf18      	it	ne
   1534c:	2001      	movne	r0, #1
   1534e:	bd70      	pop	{r4, r5, r6, pc}
   15350:	2004      	movs	r0, #4
   15352:	bd70      	pop	{r4, r5, r6, pc}
   15354:	2003      	movs	r0, #3
   15356:	bd70      	pop	{r4, r5, r6, pc}
   15358:	2007c046 	.word	0x2007c046
   1535c:	2009c020 	.word	0x2009c020
   15360:	2007c370 	.word	0x2007c370

00015364 <sd_write>:
sd_write():
   15364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15366:	4614      	mov	r4, r2
   15368:	4606      	mov	r6, r0
   1536a:	460f      	mov	r7, r1
   1536c:	f7ff fedc 	bl	15128 <sd_update_card_status>
   15370:	2c00      	cmp	r4, #0
   15372:	d044      	beq.n	153fe <sd_write+0x9a>
   15374:	4b25      	ldr	r3, [pc, #148]	; (1540c <sd_write+0xa8>)
   15376:	781a      	ldrb	r2, [r3, #0]
   15378:	07d2      	lsls	r2, r2, #31
   1537a:	d442      	bmi.n	15402 <sd_write+0x9e>
   1537c:	781b      	ldrb	r3, [r3, #0]
   1537e:	075b      	lsls	r3, r3, #29
   15380:	d441      	bmi.n	15406 <sd_write+0xa2>
   15382:	4b23      	ldr	r3, [pc, #140]	; (15410 <sd_write+0xac>)
   15384:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   15388:	61da      	str	r2, [r3, #28]
   1538a:	4a22      	ldr	r2, [pc, #136]	; (15414 <sd_write+0xb0>)
   1538c:	461d      	mov	r5, r3
   1538e:	7812      	ldrb	r2, [r2, #0]
   15390:	f012 0f08 	tst.w	r2, #8
   15394:	bf08      	it	eq
   15396:	027f      	lsleq	r7, r7, #9
   15398:	2c01      	cmp	r4, #1
   1539a:	d10c      	bne.n	153b6 <sd_write+0x52>
   1539c:	4639      	mov	r1, r7
   1539e:	2058      	movs	r0, #88	; 0x58
   153a0:	f7ff fe7a 	bl	15098 <send_cmd>
   153a4:	bb18      	cbnz	r0, 153ee <sd_write+0x8a>
   153a6:	21fe      	movs	r1, #254	; 0xfe
   153a8:	4630      	mov	r0, r6
   153aa:	f7ff fe4f 	bl	1504c <xmit_datablock>
   153ae:	fab0 f480 	clz	r4, r0
   153b2:	0964      	lsrs	r4, r4, #5
   153b4:	e01c      	b.n	153f0 <sd_write+0x8c>
   153b6:	f012 0f06 	tst.w	r2, #6
   153ba:	d003      	beq.n	153c4 <sd_write+0x60>
   153bc:	4621      	mov	r1, r4
   153be:	20d7      	movs	r0, #215	; 0xd7
   153c0:	f7ff fe6a 	bl	15098 <send_cmd>
   153c4:	4639      	mov	r1, r7
   153c6:	2059      	movs	r0, #89	; 0x59
   153c8:	f7ff fe66 	bl	15098 <send_cmd>
   153cc:	b980      	cbnz	r0, 153f0 <sd_write+0x8c>
   153ce:	21fc      	movs	r1, #252	; 0xfc
   153d0:	4630      	mov	r0, r6
   153d2:	f7ff fe3b 	bl	1504c <xmit_datablock>
   153d6:	b128      	cbz	r0, 153e4 <sd_write+0x80>
   153d8:	3c01      	subs	r4, #1
   153da:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   153de:	f506 7600 	add.w	r6, r6, #512	; 0x200
   153e2:	d1f4      	bne.n	153ce <sd_write+0x6a>
   153e4:	21fd      	movs	r1, #253	; 0xfd
   153e6:	2000      	movs	r0, #0
   153e8:	f7ff fe30 	bl	1504c <xmit_datablock>
   153ec:	b900      	cbnz	r0, 153f0 <sd_write+0x8c>
   153ee:	2401      	movs	r4, #1
   153f0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   153f4:	1c20      	adds	r0, r4, #0
   153f6:	61ab      	str	r3, [r5, #24]
   153f8:	bf18      	it	ne
   153fa:	2001      	movne	r0, #1
   153fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   153fe:	2004      	movs	r0, #4
   15400:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   15402:	2003      	movs	r0, #3
   15404:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   15406:	2002      	movs	r0, #2
   15408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1540a:	bf00      	nop
   1540c:	2007c046 	.word	0x2007c046
   15410:	2009c020 	.word	0x2009c020
   15414:	2007c370 	.word	0x2007c370

00015418 <sd_ioctl>:
sd_ioctl():
   15418:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1541a:	460d      	mov	r5, r1
   1541c:	f7ff fe84 	bl	15128 <sd_update_card_status>
   15420:	2805      	cmp	r0, #5
   15422:	d11a      	bne.n	1545a <sd_ioctl+0x42>
   15424:	782b      	ldrb	r3, [r5, #0]
   15426:	2b01      	cmp	r3, #1
   15428:	f000 8104 	beq.w	15634 <sd_ioctl+0x21c>
   1542c:	d303      	bcc.n	15436 <sd_ioctl+0x1e>
   1542e:	2b02      	cmp	r3, #2
   15430:	d00b      	beq.n	1544a <sd_ioctl+0x32>
   15432:	2004      	movs	r0, #4
   15434:	e101      	b.n	1563a <sd_ioctl+0x222>
   15436:	4b82      	ldr	r3, [pc, #520]	; (15640 <sd_ioctl+0x228>)
   15438:	6958      	ldr	r0, [r3, #20]
   1543a:	f010 6480 	ands.w	r4, r0, #67108864	; 0x4000000
   1543e:	f040 80f9 	bne.w	15634 <sd_ioctl+0x21c>
   15442:	f7ff fdab 	bl	14f9c <power_off>
   15446:	4620      	mov	r0, r4
   15448:	e0f7      	b.n	1563a <sd_ioctl+0x222>
   1544a:	4b7d      	ldr	r3, [pc, #500]	; (15640 <sd_ioctl+0x228>)
   1544c:	695b      	ldr	r3, [r3, #20]
   1544e:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   15452:	f3c3 6380 	ubfx	r3, r3, #26, #1
   15456:	706b      	strb	r3, [r5, #1]
   15458:	e0ec      	b.n	15634 <sd_ioctl+0x21c>
   1545a:	4b7a      	ldr	r3, [pc, #488]	; (15644 <sd_ioctl+0x22c>)
   1545c:	781b      	ldrb	r3, [r3, #0]
   1545e:	07db      	lsls	r3, r3, #31
   15460:	f100 80ea 	bmi.w	15638 <sd_ioctl+0x220>
   15464:	280e      	cmp	r0, #14
   15466:	f200 80df 	bhi.w	15628 <sd_ioctl+0x210>
   1546a:	e8df f000 	tbb	[pc, r0]
   1546e:	1208      	.short	0x1208
   15470:	dddd534f 	.word	0xdddd534f
   15474:	dddddddd 	.word	0xdddddddd
   15478:	bbb2afaa 	.word	0xbbb2afaa
   1547c:	cb          	.byte	0xcb
   1547d:	00          	.byte	0x00
   1547e:	4b70      	ldr	r3, [pc, #448]	; (15640 <sd_ioctl+0x228>)
   15480:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   15484:	61da      	str	r2, [r3, #28]
   15486:	f7ff fd71 	bl	14f6c <wait_ready>
   1548a:	38ff      	subs	r0, #255	; 0xff
   1548c:	bf18      	it	ne
   1548e:	2001      	movne	r0, #1
   15490:	e0cb      	b.n	1562a <sd_ioctl+0x212>
   15492:	2100      	movs	r1, #0
   15494:	2049      	movs	r0, #73	; 0x49
   15496:	f7ff fdff 	bl	15098 <send_cmd>
   1549a:	4604      	mov	r4, r0
   1549c:	b108      	cbz	r0, 154a2 <sd_ioctl+0x8a>
   1549e:	2001      	movs	r0, #1
   154a0:	e0c3      	b.n	1562a <sd_ioctl+0x212>
   154a2:	2110      	movs	r1, #16
   154a4:	4668      	mov	r0, sp
   154a6:	f7ff fd8b 	bl	14fc0 <rcvr_datablock>
   154aa:	2800      	cmp	r0, #0
   154ac:	d0f7      	beq.n	1549e <sd_ioctl+0x86>
   154ae:	f89d 3000 	ldrb.w	r3, [sp]
   154b2:	f89d 1008 	ldrb.w	r1, [sp, #8]
   154b6:	099b      	lsrs	r3, r3, #6
   154b8:	2b01      	cmp	r3, #1
   154ba:	f89d 3009 	ldrb.w	r3, [sp, #9]
   154be:	d106      	bne.n	154ce <sd_ioctl+0xb6>
   154c0:	3301      	adds	r3, #1
   154c2:	eb03 2101 	add.w	r1, r3, r1, lsl #8
   154c6:	b289      	uxth	r1, r1
   154c8:	0289      	lsls	r1, r1, #10
   154ca:	6029      	str	r1, [r5, #0]
   154cc:	e06b      	b.n	155a6 <sd_ioctl+0x18e>
   154ce:	f89d 2007 	ldrb.w	r2, [sp, #7]
   154d2:	f89d 0005 	ldrb.w	r0, [sp, #5]
   154d6:	0092      	lsls	r2, r2, #2
   154d8:	eb02 1191 	add.w	r1, r2, r1, lsr #6
   154dc:	f89d 2006 	ldrb.w	r2, [sp, #6]
   154e0:	3101      	adds	r1, #1
   154e2:	0292      	lsls	r2, r2, #10
   154e4:	f402 6240 	and.w	r2, r2, #3072	; 0xc00
   154e8:	4411      	add	r1, r2
   154ea:	f89d 200a 	ldrb.w	r2, [sp, #10]
   154ee:	f000 000f 	and.w	r0, r0, #15
   154f2:	eb00 10d2 	add.w	r0, r0, r2, lsr #7
   154f6:	005a      	lsls	r2, r3, #1
   154f8:	3002      	adds	r0, #2
   154fa:	f002 0206 	and.w	r2, r2, #6
   154fe:	1883      	adds	r3, r0, r2
   15500:	b2db      	uxtb	r3, r3
   15502:	b289      	uxth	r1, r1
   15504:	3b09      	subs	r3, #9
   15506:	fa01 f303 	lsl.w	r3, r1, r3
   1550a:	e04b      	b.n	155a4 <sd_ioctl+0x18c>
   1550c:	f44f 7300 	mov.w	r3, #512	; 0x200
   15510:	802b      	strh	r3, [r5, #0]
   15512:	e059      	b.n	155c8 <sd_ioctl+0x1b0>
   15514:	4e4c      	ldr	r6, [pc, #304]	; (15648 <sd_ioctl+0x230>)
   15516:	7833      	ldrb	r3, [r6, #0]
   15518:	f003 0304 	and.w	r3, r3, #4
   1551c:	f003 01ff 	and.w	r1, r3, #255	; 0xff
   15520:	b1f3      	cbz	r3, 15560 <sd_ioctl+0x148>
   15522:	2100      	movs	r1, #0
   15524:	20cd      	movs	r0, #205	; 0xcd
   15526:	f7ff fdb7 	bl	15098 <send_cmd>
   1552a:	2800      	cmp	r0, #0
   1552c:	d1b7      	bne.n	1549e <sd_ioctl+0x86>
   1552e:	20ff      	movs	r0, #255	; 0xff
   15530:	f7ff fd10 	bl	14f54 <ssp1_exchange_byte>
   15534:	2110      	movs	r1, #16
   15536:	4668      	mov	r0, sp
   15538:	f7ff fd42 	bl	14fc0 <rcvr_datablock>
   1553c:	2800      	cmp	r0, #0
   1553e:	d0ae      	beq.n	1549e <sd_ioctl+0x86>
   15540:	2130      	movs	r1, #48	; 0x30
   15542:	20ff      	movs	r0, #255	; 0xff
   15544:	f7ff fd06 	bl	14f54 <ssp1_exchange_byte>
   15548:	1e48      	subs	r0, r1, #1
   1554a:	f010 01ff 	ands.w	r1, r0, #255	; 0xff
   1554e:	d1f8      	bne.n	15542 <sd_ioctl+0x12a>
   15550:	f89d 300a 	ldrb.w	r3, [sp, #10]
   15554:	4608      	mov	r0, r1
   15556:	091a      	lsrs	r2, r3, #4
   15558:	2310      	movs	r3, #16
   1555a:	4093      	lsls	r3, r2
   1555c:	602b      	str	r3, [r5, #0]
   1555e:	e064      	b.n	1562a <sd_ioctl+0x212>
   15560:	2049      	movs	r0, #73	; 0x49
   15562:	f7ff fd99 	bl	15098 <send_cmd>
   15566:	4604      	mov	r4, r0
   15568:	2800      	cmp	r0, #0
   1556a:	d198      	bne.n	1549e <sd_ioctl+0x86>
   1556c:	2110      	movs	r1, #16
   1556e:	4668      	mov	r0, sp
   15570:	f7ff fd26 	bl	14fc0 <rcvr_datablock>
   15574:	2800      	cmp	r0, #0
   15576:	d092      	beq.n	1549e <sd_ioctl+0x86>
   15578:	7836      	ldrb	r6, [r6, #0]
   1557a:	f89d 200a 	ldrb.w	r2, [sp, #10]
   1557e:	f006 0602 	and.w	r6, r6, #2
   15582:	f006 00ff 	and.w	r0, r6, #255	; 0xff
   15586:	f89d 300b 	ldrb.w	r3, [sp, #11]
   1558a:	b176      	cbz	r6, 155aa <sd_ioctl+0x192>
   1558c:	0052      	lsls	r2, r2, #1
   1558e:	f002 027e 	and.w	r2, r2, #126	; 0x7e
   15592:	eb02 13d3 	add.w	r3, r2, r3, lsr #7
   15596:	1c5a      	adds	r2, r3, #1
   15598:	f89d 300d 	ldrb.w	r3, [sp, #13]
   1559c:	099b      	lsrs	r3, r3, #6
   1559e:	3b01      	subs	r3, #1
   155a0:	fa02 f303 	lsl.w	r3, r2, r3
   155a4:	602b      	str	r3, [r5, #0]
   155a6:	4620      	mov	r0, r4
   155a8:	e03f      	b.n	1562a <sd_ioctl+0x212>
   155aa:	00d9      	lsls	r1, r3, #3
   155ac:	f001 0118 	and.w	r1, r1, #24
   155b0:	f3c2 0284 	ubfx	r2, r2, #2, #5
   155b4:	eb01 1153 	add.w	r1, r1, r3, lsr #5
   155b8:	1c53      	adds	r3, r2, #1
   155ba:	fb01 3303 	mla	r3, r1, r3, r3
   155be:	602b      	str	r3, [r5, #0]
   155c0:	e033      	b.n	1562a <sd_ioctl+0x212>
   155c2:	4b21      	ldr	r3, [pc, #132]	; (15648 <sd_ioctl+0x230>)
   155c4:	781b      	ldrb	r3, [r3, #0]
   155c6:	702b      	strb	r3, [r5, #0]
   155c8:	2000      	movs	r0, #0
   155ca:	e02e      	b.n	1562a <sd_ioctl+0x212>
   155cc:	2100      	movs	r1, #0
   155ce:	2049      	movs	r0, #73	; 0x49
   155d0:	e001      	b.n	155d6 <sd_ioctl+0x1be>
   155d2:	2100      	movs	r1, #0
   155d4:	204a      	movs	r0, #74	; 0x4a
   155d6:	f7ff fd5f 	bl	15098 <send_cmd>
   155da:	2800      	cmp	r0, #0
   155dc:	f47f af5f 	bne.w	1549e <sd_ioctl+0x86>
   155e0:	2110      	movs	r1, #16
   155e2:	e01a      	b.n	1561a <sd_ioctl+0x202>
   155e4:	2100      	movs	r1, #0
   155e6:	207a      	movs	r0, #122	; 0x7a
   155e8:	f7ff fd56 	bl	15098 <send_cmd>
   155ec:	2800      	cmp	r0, #0
   155ee:	f47f af56 	bne.w	1549e <sd_ioctl+0x86>
   155f2:	1d29      	adds	r1, r5, #4
   155f4:	20ff      	movs	r0, #255	; 0xff
   155f6:	f7ff fcad 	bl	14f54 <ssp1_exchange_byte>
   155fa:	f805 0b01 	strb.w	r0, [r5], #1
   155fe:	428d      	cmp	r5, r1
   15600:	d1f8      	bne.n	155f4 <sd_ioctl+0x1dc>
   15602:	e7e1      	b.n	155c8 <sd_ioctl+0x1b0>
   15604:	2100      	movs	r1, #0
   15606:	20cd      	movs	r0, #205	; 0xcd
   15608:	f7ff fd46 	bl	15098 <send_cmd>
   1560c:	2800      	cmp	r0, #0
   1560e:	f47f af46 	bne.w	1549e <sd_ioctl+0x86>
   15612:	20ff      	movs	r0, #255	; 0xff
   15614:	f7ff fc9e 	bl	14f54 <ssp1_exchange_byte>
   15618:	2140      	movs	r1, #64	; 0x40
   1561a:	4628      	mov	r0, r5
   1561c:	f7ff fcd0 	bl	14fc0 <rcvr_datablock>
   15620:	fab0 f080 	clz	r0, r0
   15624:	0940      	lsrs	r0, r0, #5
   15626:	e000      	b.n	1562a <sd_ioctl+0x212>
   15628:	2004      	movs	r0, #4
   1562a:	4b05      	ldr	r3, [pc, #20]	; (15640 <sd_ioctl+0x228>)
   1562c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   15630:	619a      	str	r2, [r3, #24]
   15632:	e002      	b.n	1563a <sd_ioctl+0x222>
   15634:	2000      	movs	r0, #0
   15636:	e000      	b.n	1563a <sd_ioctl+0x222>
   15638:	2003      	movs	r0, #3
   1563a:	b004      	add	sp, #16
   1563c:	bd70      	pop	{r4, r5, r6, pc}
   1563e:	bf00      	nop
   15640:	2009c020 	.word	0x2009c020
   15644:	2007c046 	.word	0x2007c046
   15648:	2007c370 	.word	0x2007c370

0001564c <disk_initialize>:
disk_initialize():
   1564c:	b510      	push	{r4, lr}
   1564e:	4604      	mov	r4, r0
   15650:	f7fb feb8 	bl	113c4 <spi1_lock>
   15654:	b124      	cbz	r4, 15660 <disk_initialize+0x14>
   15656:	2c01      	cmp	r4, #1
   15658:	d106      	bne.n	15668 <disk_initialize+0x1c>
   1565a:	f7ff fd77 	bl	1514c <sd_initialize>
   1565e:	e001      	b.n	15664 <disk_initialize+0x18>
   15660:	f7ff fad2 	bl	14c08 <flash_initialize>
   15664:	4604      	mov	r4, r0
   15666:	e000      	b.n	1566a <disk_initialize+0x1e>
   15668:	2404      	movs	r4, #4
   1566a:	f7fb fec3 	bl	113f4 <spi1_unlock>
   1566e:	4620      	mov	r0, r4
   15670:	bd10      	pop	{r4, pc}

00015672 <disk_status>:
disk_status():
   15672:	b128      	cbz	r0, 15680 <disk_status+0xe>
   15674:	2801      	cmp	r0, #1
   15676:	d001      	beq.n	1567c <disk_status+0xa>
   15678:	2004      	movs	r0, #4
   1567a:	4770      	bx	lr
   1567c:	f7ff be1e 	b.w	152bc <sd_status>
   15680:	4770      	bx	lr

00015682 <disk_read>:
disk_read():
   15682:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15684:	4607      	mov	r7, r0
   15686:	460c      	mov	r4, r1
   15688:	4615      	mov	r5, r2
   1568a:	461e      	mov	r6, r3
   1568c:	f7fb fe9a 	bl	113c4 <spi1_lock>
   15690:	b13f      	cbz	r7, 156a2 <disk_read+0x20>
   15692:	2f01      	cmp	r7, #1
   15694:	d10c      	bne.n	156b0 <disk_read+0x2e>
   15696:	4632      	mov	r2, r6
   15698:	4629      	mov	r1, r5
   1569a:	4620      	mov	r0, r4
   1569c:	f7ff fe16 	bl	152cc <sd_read>
   156a0:	e004      	b.n	156ac <disk_read+0x2a>
   156a2:	4632      	mov	r2, r6
   156a4:	4629      	mov	r1, r5
   156a6:	4620      	mov	r0, r4
   156a8:	f7ff fafa 	bl	14ca0 <flash_read_sectors>
   156ac:	4604      	mov	r4, r0
   156ae:	e000      	b.n	156b2 <disk_read+0x30>
   156b0:	2404      	movs	r4, #4
   156b2:	f7fb fe9f 	bl	113f4 <spi1_unlock>
   156b6:	4620      	mov	r0, r4
   156b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000156ba <disk_write>:
disk_write():
   156ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   156bc:	4607      	mov	r7, r0
   156be:	460c      	mov	r4, r1
   156c0:	4615      	mov	r5, r2
   156c2:	461e      	mov	r6, r3
   156c4:	f7fb fe7e 	bl	113c4 <spi1_lock>
   156c8:	b13f      	cbz	r7, 156da <disk_write+0x20>
   156ca:	2f01      	cmp	r7, #1
   156cc:	d10c      	bne.n	156e8 <disk_write+0x2e>
   156ce:	4632      	mov	r2, r6
   156d0:	4629      	mov	r1, r5
   156d2:	4620      	mov	r0, r4
   156d4:	f7ff fe46 	bl	15364 <sd_write>
   156d8:	e004      	b.n	156e4 <disk_write+0x2a>
   156da:	4632      	mov	r2, r6
   156dc:	4629      	mov	r1, r5
   156de:	4620      	mov	r0, r4
   156e0:	f7ff fb00 	bl	14ce4 <flash_write_sectors>
   156e4:	4604      	mov	r4, r0
   156e6:	e000      	b.n	156ea <disk_write+0x30>
   156e8:	2404      	movs	r4, #4
   156ea:	f7fb fe83 	bl	113f4 <spi1_unlock>
   156ee:	4620      	mov	r0, r4
   156f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000156f2 <disk_ioctl>:
disk_ioctl():
   156f2:	b570      	push	{r4, r5, r6, lr}
   156f4:	4606      	mov	r6, r0
   156f6:	460c      	mov	r4, r1
   156f8:	4615      	mov	r5, r2
   156fa:	f7fb fe63 	bl	113c4 <spi1_lock>
   156fe:	b136      	cbz	r6, 1570e <disk_ioctl+0x1c>
   15700:	2e01      	cmp	r6, #1
   15702:	d10a      	bne.n	1571a <disk_ioctl+0x28>
   15704:	4629      	mov	r1, r5
   15706:	4620      	mov	r0, r4
   15708:	f7ff fe86 	bl	15418 <sd_ioctl>
   1570c:	e003      	b.n	15716 <disk_ioctl+0x24>
   1570e:	4629      	mov	r1, r5
   15710:	4620      	mov	r0, r4
   15712:	f7ff fb07 	bl	14d24 <flash_ioctl>
   15716:	4604      	mov	r4, r0
   15718:	e000      	b.n	1571c <disk_ioctl+0x2a>
   1571a:	2404      	movs	r4, #4
   1571c:	f7fb fe6a 	bl	113f4 <spi1_unlock>
   15720:	4620      	mov	r0, r4
   15722:	bd70      	pop	{r4, r5, r6, pc}

00015724 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>:
_ZN7Storage4copyEPKcS1_PjS2_S2_():
   15724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15728:	f2ad 6d54 	subw	sp, sp, #1620	; 0x654
   1572c:	460c      	mov	r4, r1
   1572e:	4690      	mov	r8, r2
   15730:	4601      	mov	r1, r0
   15732:	2201      	movs	r2, #1
   15734:	a882      	add	r0, sp, #520	; 0x208
   15736:	4699      	mov	r9, r3
   15738:	f7fe f8fe 	bl	13938 <f_open>
   1573c:	2800      	cmp	r0, #0
   1573e:	d167      	bne.n	15810 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xec>
   15740:	4621      	mov	r1, r4
   15742:	220a      	movs	r2, #10
   15744:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   15748:	f7fe f8f6 	bl	13938 <f_open>
   1574c:	4604      	mov	r4, r0
   1574e:	b120      	cbz	r0, 1575a <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x36>
   15750:	a882      	add	r0, sp, #520	; 0x208
   15752:	f7fe fb5a 	bl	13e0a <f_close>
   15756:	4620      	mov	r0, r4
   15758:	e05a      	b.n	15810 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xec>
   1575a:	466d      	mov	r5, sp
   1575c:	4606      	mov	r6, r0
   1575e:	4607      	mov	r7, r0
   15760:	6028      	str	r0, [r5, #0]
   15762:	9001      	str	r0, [sp, #4]
   15764:	f005 fdd6 	bl	1b314 <sys_get_uptime_us>
   15768:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1576c:	2300      	movs	r3, #0
   1576e:	f007 f9fb 	bl	1cb68 <__aeabi_uldivmod>
   15772:	462b      	mov	r3, r5
   15774:	4683      	mov	fp, r0
   15776:	f44f 7200 	mov.w	r2, #512	; 0x200
   1577a:	a902      	add	r1, sp, #8
   1577c:	a882      	add	r0, sp, #520	; 0x208
   1577e:	f7fe f975 	bl	13a6c <f_read>
   15782:	4682      	mov	sl, r0
   15784:	b9e0      	cbnz	r0, 157c0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x9c>
   15786:	682a      	ldr	r2, [r5, #0]
   15788:	b1d2      	cbz	r2, 157c0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x9c>
   1578a:	f005 fdc3 	bl	1b314 <sys_get_uptime_us>
   1578e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15792:	2300      	movs	r3, #0
   15794:	f007 f9e8 	bl	1cb68 <__aeabi_uldivmod>
   15798:	ebb0 000b 	subs.w	r0, r0, fp
   1579c:	4407      	add	r7, r0
   1579e:	f005 fdb9 	bl	1b314 <sys_get_uptime_us>
   157a2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   157a6:	2300      	movs	r3, #0
   157a8:	f007 f9de 	bl	1cb68 <__aeabi_uldivmod>
   157ac:	ab01      	add	r3, sp, #4
   157ae:	4683      	mov	fp, r0
   157b0:	682a      	ldr	r2, [r5, #0]
   157b2:	a902      	add	r1, sp, #8
   157b4:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   157b8:	f7fe fa10 	bl	13bdc <f_write>
   157bc:	4682      	mov	sl, r0
   157be:	b1b0      	cbz	r0, 157ee <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xca>
   157c0:	f1b8 0f00 	cmp.w	r8, #0
   157c4:	d001      	beq.n	157ca <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa6>
   157c6:	f8c8 7000 	str.w	r7, [r8]
   157ca:	f1b9 0f00 	cmp.w	r9, #0
   157ce:	d001      	beq.n	157d4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xb0>
   157d0:	f8c9 6000 	str.w	r6, [r9]
   157d4:	f8dd 3678 	ldr.w	r3, [sp, #1656]	; 0x678
   157d8:	b103      	cbz	r3, 157dc <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xb8>
   157da:	601c      	str	r4, [r3, #0]
   157dc:	a882      	add	r0, sp, #520	; 0x208
   157de:	f7fe fb14 	bl	13e0a <f_close>
   157e2:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   157e6:	f7fe fb10 	bl	13e0a <f_close>
   157ea:	4650      	mov	r0, sl
   157ec:	e010      	b.n	15810 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xec>
   157ee:	9901      	ldr	r1, [sp, #4]
   157f0:	682a      	ldr	r2, [r5, #0]
   157f2:	4291      	cmp	r1, r2
   157f4:	d1e4      	bne.n	157c0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x9c>
   157f6:	f005 fd8d 	bl	1b314 <sys_get_uptime_us>
   157fa:	2300      	movs	r3, #0
   157fc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15800:	f007 f9b2 	bl	1cb68 <__aeabi_uldivmod>
   15804:	682b      	ldr	r3, [r5, #0]
   15806:	ebb0 000b 	subs.w	r0, r0, fp
   1580a:	4406      	add	r6, r0
   1580c:	441c      	add	r4, r3
   1580e:	e7a9      	b.n	15764 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x40>
   15810:	f20d 6d54 	addw	sp, sp, #1620	; 0x654
   15814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015818 <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
   15818:	b5f0      	push	{r4, r5, r6, r7, lr}
   1581a:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   1581e:	460e      	mov	r6, r1
   15820:	4617      	mov	r7, r2
   15822:	4601      	mov	r1, r0
   15824:	461d      	mov	r5, r3
   15826:	2201      	movs	r2, #1
   15828:	2300      	movs	r3, #0
   1582a:	a801      	add	r0, sp, #4
   1582c:	9300      	str	r3, [sp, #0]
   1582e:	f7fe f883 	bl	13938 <f_open>
   15832:	4604      	mov	r4, r0
   15834:	b970      	cbnz	r0, 15854 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
   15836:	b11d      	cbz	r5, 15840 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
   15838:	4629      	mov	r1, r5
   1583a:	a801      	add	r0, sp, #4
   1583c:	f7fe faf7 	bl	13e2e <f_lseek>
   15840:	466b      	mov	r3, sp
   15842:	463a      	mov	r2, r7
   15844:	4631      	mov	r1, r6
   15846:	a801      	add	r0, sp, #4
   15848:	f7fe f910 	bl	13a6c <f_read>
   1584c:	4604      	mov	r4, r0
   1584e:	a801      	add	r0, sp, #4
   15850:	f7fe fadb 	bl	13e0a <f_close>
   15854:	4620      	mov	r0, r4
   15856:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   1585a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001585c <Storage::write(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage5writeEPKcPvjj():
   1585c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1585e:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   15862:	460e      	mov	r6, r1
   15864:	4617      	mov	r7, r2
   15866:	4601      	mov	r1, r0
   15868:	461d      	mov	r5, r3
   1586a:	220a      	movs	r2, #10
   1586c:	2300      	movs	r3, #0
   1586e:	a801      	add	r0, sp, #4
   15870:	9300      	str	r3, [sp, #0]
   15872:	f7fe f861 	bl	13938 <f_open>
   15876:	4604      	mov	r4, r0
   15878:	b970      	cbnz	r0, 15898 <Storage::write(char const*, void*, unsigned int, unsigned int)+0x3c>
   1587a:	b11d      	cbz	r5, 15884 <Storage::write(char const*, void*, unsigned int, unsigned int)+0x28>
   1587c:	4629      	mov	r1, r5
   1587e:	a801      	add	r0, sp, #4
   15880:	f7fe fad5 	bl	13e2e <f_lseek>
   15884:	466b      	mov	r3, sp
   15886:	463a      	mov	r2, r7
   15888:	4631      	mov	r1, r6
   1588a:	a801      	add	r0, sp, #4
   1588c:	f7fe f9a6 	bl	13bdc <f_write>
   15890:	4604      	mov	r4, r0
   15892:	a801      	add	r0, sp, #4
   15894:	f7fe fab9 	bl	13e0a <f_close>
   15898:	4620      	mov	r0, r4
   1589a:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   1589e:	bdf0      	pop	{r4, r5, r6, r7, pc}

000158a0 <Storage::append(char const*, void const*, unsigned int, unsigned int)>:
_ZN7Storage6appendEPKcPKvjj():
   158a0:	b5f0      	push	{r4, r5, r6, r7, lr}
   158a2:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   158a6:	460e      	mov	r6, r1
   158a8:	4617      	mov	r7, r2
   158aa:	4601      	mov	r1, r0
   158ac:	461d      	mov	r5, r3
   158ae:	2212      	movs	r2, #18
   158b0:	2300      	movs	r3, #0
   158b2:	a801      	add	r0, sp, #4
   158b4:	9300      	str	r3, [sp, #0]
   158b6:	f7fe f83f 	bl	13938 <f_open>
   158ba:	4604      	mov	r4, r0
   158bc:	b980      	cbnz	r0, 158e0 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x40>
   158be:	b10d      	cbz	r5, 158c4 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x24>
   158c0:	4629      	mov	r1, r5
   158c2:	e000      	b.n	158c6 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x26>
   158c4:	9904      	ldr	r1, [sp, #16]
   158c6:	a801      	add	r0, sp, #4
   158c8:	f7fe fab1 	bl	13e2e <f_lseek>
   158cc:	466b      	mov	r3, sp
   158ce:	463a      	mov	r2, r7
   158d0:	4631      	mov	r1, r6
   158d2:	a801      	add	r0, sp, #4
   158d4:	f7fe f982 	bl	13bdc <f_write>
   158d8:	4604      	mov	r4, r0
   158da:	a801      	add	r0, sp, #4
   158dc:	f7fe fa95 	bl	13e0a <f_close>
   158e0:	4620      	mov	r0, r4
   158e2:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   158e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

000158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
   158e8:	4613      	mov	r3, r2
   158ea:	460a      	mov	r2, r1
   158ec:	7901      	ldrb	r1, [r0, #4]
   158ee:	6800      	ldr	r0, [r0, #0]
   158f0:	f7fa bf1d 	b.w	1072e <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

000158f4 <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
   158f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   158f6:	2200      	movs	r2, #0
   158f8:	ab04      	add	r3, sp, #16
   158fa:	7904      	ldrb	r4, [r0, #4]
   158fc:	f823 2d04 	strh.w	r2, [r3, #-4]!
   15900:	2202      	movs	r2, #2
   15902:	9200      	str	r2, [sp, #0]
   15904:	6800      	ldr	r0, [r0, #0]
   15906:	460a      	mov	r2, r1
   15908:	4621      	mov	r1, r4
   1590a:	f7fa fefb 	bl	10704 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
   1590e:	f89d 000c 	ldrb.w	r0, [sp, #12]
   15912:	f89d 300d 	ldrb.w	r3, [sp, #13]
   15916:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   1591a:	b004      	add	sp, #16
   1591c:	bd10      	pop	{r4, pc}

0001591e <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
   1591e:	b510      	push	{r4, lr}
   15920:	4604      	mov	r4, r0
   15922:	2219      	movs	r2, #25
   15924:	212a      	movs	r1, #42	; 0x2a
   15926:	f7ff ffdf 	bl	158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>
   1592a:	220d      	movs	r2, #13
   1592c:	7921      	ldrb	r1, [r4, #4]
   1592e:	6820      	ldr	r0, [r4, #0]
   15930:	f7fa feec 	bl	1070c <I2C_Base::readReg(unsigned char, unsigned char)>
   15934:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   15938:	4258      	negs	r0, r3
   1593a:	4158      	adcs	r0, r3
   1593c:	bd10      	pop	{r4, pc}

0001593e <Acceleration_Sensor::getX()>:
_ZN19Acceleration_Sensor4getXEv():
   1593e:	b508      	push	{r3, lr}
   15940:	2101      	movs	r1, #1
   15942:	f7ff ffd7 	bl	158f4 <i2c2_device::get16BitRegister(unsigned char)>
   15946:	2310      	movs	r3, #16
   15948:	b200      	sxth	r0, r0
   1594a:	fb90 f0f3 	sdiv	r0, r0, r3
   1594e:	bd08      	pop	{r3, pc}

00015950 <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
   15950:	4a04      	ldr	r2, [pc, #16]	; (15964 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   15952:	8813      	ldrh	r3, [r2, #0]
   15954:	2b1f      	cmp	r3, #31
   15956:	bf9f      	itttt	ls
   15958:	1c58      	addls	r0, r3, #1
   1595a:	8010      	strhls	r0, [r2, #0]
   1595c:	4a02      	ldrls	r2, [pc, #8]	; (15968 <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   1595e:	f842 1023 	strls.w	r1, [r2, r3, lsl #2]
   15962:	4770      	bx	lr
   15964:	2007c378 	.word	0x2007c378
   15968:	2007c37c 	.word	0x2007c37c

0001596c <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
   1596c:	4a15      	ldr	r2, [pc, #84]	; (159c4 <IR_Sensor::decodeIrCode()+0x58>)
   1596e:	b5f0      	push	{r4, r5, r6, r7, lr}
   15970:	8813      	ldrh	r3, [r2, #0]
   15972:	4616      	mov	r6, r2
   15974:	2b01      	cmp	r3, #1
   15976:	d921      	bls.n	159bc <IR_Sensor::decodeIrCode()+0x50>
   15978:	4a13      	ldr	r2, [pc, #76]	; (159c8 <IR_Sensor::decodeIrCode()+0x5c>)
   1597a:	2000      	movs	r0, #0
   1597c:	4615      	mov	r5, r2
   1597e:	3b01      	subs	r3, #1
   15980:	4298      	cmp	r0, r3
   15982:	da06      	bge.n	15992 <IR_Sensor::decodeIrCode()+0x26>
   15984:	6851      	ldr	r1, [r2, #4]
   15986:	6814      	ldr	r4, [r2, #0]
   15988:	3001      	adds	r0, #1
   1598a:	1b09      	subs	r1, r1, r4
   1598c:	f842 1b04 	str.w	r1, [r2], #4
   15990:	e7f6      	b.n	15980 <IR_Sensor::decodeIrCode()+0x14>
   15992:	2100      	movs	r1, #0
   15994:	460c      	mov	r4, r1
   15996:	686a      	ldr	r2, [r5, #4]
   15998:	f04f 0e01 	mov.w	lr, #1
   1599c:	eb02 0052 	add.w	r0, r2, r2, lsr #1
   159a0:	b28a      	uxth	r2, r1
   159a2:	4293      	cmp	r3, r2
   159a4:	dd08      	ble.n	159b8 <IR_Sensor::decodeIrCode()+0x4c>
   159a6:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   159aa:	3101      	adds	r1, #1
   159ac:	42b8      	cmp	r0, r7
   159ae:	bf3c      	itt	cc
   159b0:	fa0e f202 	lslcc.w	r2, lr, r2
   159b4:	4314      	orrcc	r4, r2
   159b6:	e7f3      	b.n	159a0 <IR_Sensor::decodeIrCode()+0x34>
   159b8:	4b04      	ldr	r3, [pc, #16]	; (159cc <IR_Sensor::decodeIrCode()+0x60>)
   159ba:	601c      	str	r4, [r3, #0]
   159bc:	2300      	movs	r3, #0
   159be:	8033      	strh	r3, [r6, #0]
   159c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   159c2:	bf00      	nop
   159c4:	2007c378 	.word	0x2007c378
   159c8:	2007c37c 	.word	0x2007c37c
   159cc:	2007c374 	.word	0x2007c374

000159d0 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
   159d0:	b508      	push	{r3, lr}
   159d2:	2101      	movs	r1, #1
   159d4:	2002      	movs	r0, #2
   159d6:	f005 fd83 	bl	1b4e0 <lpc_pconp>
   159da:	4b08      	ldr	r3, [pc, #32]	; (159fc <IR_Sensor::init()+0x2c>)
   159dc:	2001      	movs	r0, #1
   159de:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   159e0:	f022 0207 	bic.w	r2, r2, #7
   159e4:	629a      	str	r2, [r3, #40]	; 0x28
   159e6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   159e8:	f042 0206 	orr.w	r2, r2, #6
   159ec:	629a      	str	r2, [r3, #40]	; 0x28
   159ee:	4a04      	ldr	r2, [pc, #16]	; (15a00 <IR_Sensor::init()+0x30>)
   159f0:	68d3      	ldr	r3, [r2, #12]
   159f2:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   159f6:	60d3      	str	r3, [r2, #12]
   159f8:	bd08      	pop	{r3, pc}
   159fa:	bf00      	nop
   159fc:	40008000 	.word	0x40008000
   15a00:	4002c000 	.word	0x4002c000

00015a04 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
   15a04:	b508      	push	{r3, lr}
   15a06:	4b04      	ldr	r3, [pc, #16]	; (15a18 <LED_Display::setLeftDigit(char)+0x14>)
   15a08:	7141      	strb	r1, [r0, #5]
   15a0a:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   15a0e:	5c5a      	ldrb	r2, [r3, r1]
   15a10:	2103      	movs	r1, #3
   15a12:	f7ff ff69 	bl	158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15a16:	bd08      	pop	{r3, pc}
   15a18:	00023d00 	.word	0x00023d00

00015a1c <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
   15a1c:	b508      	push	{r3, lr}
   15a1e:	4b04      	ldr	r3, [pc, #16]	; (15a30 <LED_Display::setRightDigit(char)+0x14>)
   15a20:	7181      	strb	r1, [r0, #6]
   15a22:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   15a26:	5c5a      	ldrb	r2, [r3, r1]
   15a28:	2102      	movs	r1, #2
   15a2a:	f7ff ff5d 	bl	158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15a2e:	bd08      	pop	{r3, pc}
   15a30:	00023d00 	.word	0x00023d00

00015a34 <LED_Display::init()>:
_ZN11LED_Display4initEv():
   15a34:	b538      	push	{r3, r4, r5, lr}
   15a36:	4604      	mov	r4, r0
   15a38:	7901      	ldrb	r1, [r0, #4]
   15a3a:	6800      	ldr	r0, [r0, #0]
   15a3c:	f7fa fe82 	bl	10744 <I2C_Base::checkDeviceResponse(unsigned char)>
   15a40:	4605      	mov	r5, r0
   15a42:	b188      	cbz	r0, 15a68 <LED_Display::init()+0x34>
   15a44:	2200      	movs	r2, #0
   15a46:	2106      	movs	r1, #6
   15a48:	4620      	mov	r0, r4
   15a4a:	f7ff ff4d 	bl	158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15a4e:	2200      	movs	r2, #0
   15a50:	2107      	movs	r1, #7
   15a52:	4620      	mov	r0, r4
   15a54:	f7ff ff48 	bl	158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15a58:	212e      	movs	r1, #46	; 0x2e
   15a5a:	4620      	mov	r0, r4
   15a5c:	f7ff ffd2 	bl	15a04 <LED_Display::setLeftDigit(char)>
   15a60:	212e      	movs	r1, #46	; 0x2e
   15a62:	4620      	mov	r0, r4
   15a64:	f7ff ffda 	bl	15a1c <LED_Display::setRightDigit(char)>
   15a68:	4628      	mov	r0, r5
   15a6a:	bd38      	pop	{r3, r4, r5, pc}

00015a6c <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
   15a6c:	2364      	movs	r3, #100	; 0x64
   15a6e:	b570      	push	{r4, r5, r6, lr}
   15a70:	fbb1 f4f3 	udiv	r4, r1, r3
   15a74:	fb04 1113 	mls	r1, r4, r3, r1
   15a78:	b2cc      	uxtb	r4, r1
   15a7a:	210a      	movs	r1, #10
   15a7c:	fbb4 f5f1 	udiv	r5, r4, r1
   15a80:	fb01 4115 	mls	r1, r1, r5, r4
   15a84:	3130      	adds	r1, #48	; 0x30
   15a86:	b2c9      	uxtb	r1, r1
   15a88:	4606      	mov	r6, r0
   15a8a:	f7ff ffc7 	bl	15a1c <LED_Display::setRightDigit(char)>
   15a8e:	2c09      	cmp	r4, #9
   15a90:	bf88      	it	hi
   15a92:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   15a96:	4630      	mov	r0, r6
   15a98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   15a9c:	bf94      	ite	ls
   15a9e:	2120      	movls	r1, #32
   15aa0:	b2c9      	uxtbhi	r1, r1
   15aa2:	f7ff bfaf 	b.w	15a04 <LED_Display::setLeftDigit(char)>

00015aa6 <LED::init()>:
_ZN3LED4initEv():
   15aa6:	2001      	movs	r0, #1
   15aa8:	4770      	bx	lr
   15aaa:	ffff b538 	vsli.32	d27, d24, #31

00015aac <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
   15aac:	b538      	push	{r3, r4, r5, lr}
   15aae:	460d      	mov	r5, r1
   15ab0:	4604      	mov	r4, r0
   15ab2:	f004 f835 	bl	19b20 <vPortEnterCritical>
   15ab6:	f005 030f 	and.w	r3, r5, #15
   15aba:	7023      	strb	r3, [r4, #0]
   15abc:	4b11      	ldr	r3, [pc, #68]	; (15b04 <LED::setAll(unsigned char)+0x58>)
   15abe:	f015 0f01 	tst.w	r5, #1
   15ac2:	f04f 0201 	mov.w	r2, #1
   15ac6:	bf14      	ite	ne
   15ac8:	61da      	strne	r2, [r3, #28]
   15aca:	619a      	streq	r2, [r3, #24]
   15acc:	7822      	ldrb	r2, [r4, #0]
   15ace:	f012 0f02 	tst.w	r2, #2
   15ad2:	f04f 0202 	mov.w	r2, #2
   15ad6:	bf14      	ite	ne
   15ad8:	61da      	strne	r2, [r3, #28]
   15ada:	619a      	streq	r2, [r3, #24]
   15adc:	7822      	ldrb	r2, [r4, #0]
   15ade:	f012 0f04 	tst.w	r2, #4
   15ae2:	f04f 0210 	mov.w	r2, #16
   15ae6:	bf14      	ite	ne
   15ae8:	61da      	strne	r2, [r3, #28]
   15aea:	619a      	streq	r2, [r3, #24]
   15aec:	7822      	ldrb	r2, [r4, #0]
   15aee:	f012 0f08 	tst.w	r2, #8
   15af2:	f44f 7280 	mov.w	r2, #256	; 0x100
   15af6:	bf14      	ite	ne
   15af8:	61da      	strne	r2, [r3, #28]
   15afa:	619a      	streq	r2, [r3, #24]
   15afc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   15b00:	f004 b820 	b.w	19b44 <vPortExitCritical>
   15b04:	2009c020 	.word	0x2009c020

00015b08 <LED::toggle(unsigned char)>:
_ZN3LED6toggleEh():
   15b08:	b538      	push	{r3, r4, r5, lr}
   15b0a:	460d      	mov	r5, r1
   15b0c:	4604      	mov	r4, r0
   15b0e:	f004 f807 	bl	19b20 <vPortEnterCritical>
   15b12:	1e69      	subs	r1, r5, #1
   15b14:	2301      	movs	r3, #1
   15b16:	fa03 f101 	lsl.w	r1, r3, r1
   15b1a:	7823      	ldrb	r3, [r4, #0]
   15b1c:	4620      	mov	r0, r4
   15b1e:	4059      	eors	r1, r3
   15b20:	b2c9      	uxtb	r1, r1
   15b22:	7021      	strb	r1, [r4, #0]
   15b24:	f7ff ffc2 	bl	15aac <LED::setAll(unsigned char)>
   15b28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   15b2c:	f004 b80a 	b.w	19b44 <vPortExitCritical>

00015b30 <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   15b30:	2001      	movs	r0, #1
   15b32:	4770      	bx	lr

00015b34 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
   15b34:	2002      	movs	r0, #2
   15b36:	f7fb bb21 	b.w	1117c <adc0_get_reading>

00015b3a <Switches::init()>:
_ZN8Switches4initEv():
   15b3a:	2001      	movs	r0, #1
   15b3c:	4770      	bx	lr
   15b3e:	ffff 4b04 	vtbl.8	d20, {d15-d18}, d4

00015b40 <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
   15b40:	4b04      	ldr	r3, [pc, #16]	; (15b54 <Switches::getSwitchValues()+0x14>)
   15b42:	695b      	ldr	r3, [r3, #20]
   15b44:	0b18      	lsrs	r0, r3, #12
   15b46:	f000 000c 	and.w	r0, r0, #12
   15b4a:	f3c3 2341 	ubfx	r3, r3, #9, #2
   15b4e:	4318      	orrs	r0, r3
   15b50:	4770      	bx	lr
   15b52:	bf00      	nop
   15b54:	2009c020 	.word	0x2009c020

00015b58 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
   15b58:	b510      	push	{r4, lr}
   15b5a:	4604      	mov	r4, r0
   15b5c:	2281      	movs	r2, #129	; 0x81
   15b5e:	2101      	movs	r1, #1
   15b60:	f7ff fec2 	bl	158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15b64:	2201      	movs	r2, #1
   15b66:	7921      	ldrb	r1, [r4, #4]
   15b68:	6820      	ldr	r0, [r4, #0]
   15b6a:	f7fa fdcf 	bl	1070c <I2C_Base::readReg(unsigned char, unsigned char)>
   15b6e:	f010 0f60 	tst.w	r0, #96	; 0x60
   15b72:	bf14      	ite	ne
   15b74:	2001      	movne	r0, #1
   15b76:	2000      	moveq	r0, #0
   15b78:	bd10      	pop	{r4, pc}

00015b7a <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
   15b7a:	b538      	push	{r3, r4, r5, lr}
   15b7c:	2100      	movs	r1, #0
   15b7e:	4604      	mov	r4, r0
   15b80:	f7ff feb8 	bl	158f4 <i2c2_device::get16BitRegister(unsigned char)>
   15b84:	2281      	movs	r2, #129	; 0x81
   15b86:	b205      	sxth	r5, r0
   15b88:	2101      	movs	r1, #1
   15b8a:	4620      	mov	r0, r4
   15b8c:	f7ff feac 	bl	158e8 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15b90:	2010      	movs	r0, #16
   15b92:	fb95 f0f0 	sdiv	r0, r5, r0
   15b96:	f006 fdfd 	bl	1c794 <__aeabi_i2f>
   15b9a:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   15b9e:	f006 fe4d 	bl	1c83c <__aeabi_fmul>
   15ba2:	68a1      	ldr	r1, [r4, #8]
   15ba4:	f006 fd42 	bl	1c62c <__addsf3>
   15ba8:	bd38      	pop	{r3, r4, r5, pc}
   15baa:	ffff b508 	vabal.u<illegal width 64>	<illegal reg q13.5>, d15, d8

00015bac <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
   15bac:	b508      	push	{r3, lr}
   15bae:	f7ff ffe4 	bl	15b7a <I2C_Temp::getCelsius()>
   15bb2:	4905      	ldr	r1, [pc, #20]	; (15bc8 <I2C_Temp::getFarenheit()+0x1c>)
   15bb4:	f006 fe42 	bl	1c83c <__aeabi_fmul>
   15bb8:	4904      	ldr	r1, [pc, #16]	; (15bcc <I2C_Temp::getFarenheit()+0x20>)
   15bba:	f006 fef3 	bl	1c9a4 <__aeabi_fdiv>
   15bbe:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   15bc2:	f006 fd33 	bl	1c62c <__addsf3>
   15bc6:	bd08      	pop	{r3, pc}
   15bc8:	41100000 	.word	0x41100000
   15bcc:	40a00000 	.word	0x40a00000

00015bd0 <scheduler_task::init()>:
_ZN14scheduler_task4initEv():
   15bd0:	2001      	movs	r0, #1
   15bd2:	4770      	bx	lr

00015bd4 <scheduler_task::regTlm()>:
_ZN14scheduler_task6regTlmEv():
   15bd4:	2001      	movs	r0, #1
   15bd6:	4770      	bx	lr

00015bd8 <scheduler_task::taskEntry()>:
_ZN14scheduler_task9taskEntryEv():
   15bd8:	2001      	movs	r0, #1
   15bda:	4770      	bx	lr

00015bdc <terminalTask::regTlm()>:
_ZN12terminalTask6regTlmEv():
   15bdc:	2001      	movs	r0, #1
   15bde:	4770      	bx	lr

00015be0 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD2Ev():
   15be0:	b538      	push	{r3, r4, r5, lr}
   15be2:	4604      	mov	r4, r0
   15be4:	4b0f      	ldr	r3, [pc, #60]	; (15c24 <terminalTask::~terminalTask()+0x44>)
   15be6:	2500      	movs	r5, #0
   15be8:	6003      	str	r3, [r0, #0]
   15bea:	6d63      	ldr	r3, [r4, #84]	; 0x54
   15bec:	6de0      	ldr	r0, [r4, #92]	; 0x5c
   15bee:	42ab      	cmp	r3, r5
   15bf0:	d905      	bls.n	15bfe <terminalTask::~terminalTask()+0x1e>
   15bf2:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   15bf6:	f7fb fced 	bl	115d4 <operator delete(void*)>
   15bfa:	3501      	adds	r5, #1
   15bfc:	e7f5      	b.n	15bea <terminalTask::~terminalTask()+0xa>
   15bfe:	b108      	cbz	r0, 15c04 <terminalTask::~terminalTask()+0x24>
   15c00:	f7fb fcea 	bl	115d8 <operator delete[](void*)>
   15c04:	2500      	movs	r5, #0
   15c06:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   15c08:	6c20      	ldr	r0, [r4, #64]	; 0x40
   15c0a:	42ab      	cmp	r3, r5
   15c0c:	d905      	bls.n	15c1a <terminalTask::~terminalTask()+0x3a>
   15c0e:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   15c12:	f7fb fcdf 	bl	115d4 <operator delete(void*)>
   15c16:	3501      	adds	r5, #1
   15c18:	e7f5      	b.n	15c06 <terminalTask::~terminalTask()+0x26>
   15c1a:	b108      	cbz	r0, 15c20 <terminalTask::~terminalTask()+0x40>
   15c1c:	f7fb fcdc 	bl	115d8 <operator delete[](void*)>
   15c20:	4620      	mov	r0, r4
   15c22:	bd38      	pop	{r3, r4, r5, pc}
   15c24:	00023da8 	.word	0x00023da8

00015c28 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD0Ev():
   15c28:	b510      	push	{r4, lr}
   15c2a:	4604      	mov	r4, r0
   15c2c:	f7ff ffd8 	bl	15be0 <terminalTask::~terminalTask()>
   15c30:	4620      	mov	r0, r4
   15c32:	f7fb fccf 	bl	115d4 <operator delete(void*)>
   15c36:	4620      	mov	r0, r4
   15c38:	bd10      	pop	{r4, pc}

00015c3a <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.4]>:
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj.part.4():
   15c3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15c3e:	4604      	mov	r4, r0
   15c40:	460e      	mov	r6, r1
   15c42:	68c0      	ldr	r0, [r0, #12]
   15c44:	0089      	lsls	r1, r1, #2
   15c46:	f008 fdf1 	bl	1e82c <realloc>
   15c4a:	68a5      	ldr	r5, [r4, #8]
   15c4c:	60e0      	str	r0, [r4, #12]
   15c4e:	00af      	lsls	r7, r5, #2
   15c50:	f04f 0800 	mov.w	r8, #0
   15c54:	42ae      	cmp	r6, r5
   15c56:	d90d      	bls.n	15c74 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.4]+0x3a>
   15c58:	200c      	movs	r0, #12
   15c5a:	f7fb fcb9 	bl	115d0 <operator new(unsigned int)>
   15c5e:	68e3      	ldr	r3, [r4, #12]
   15c60:	f8c0 8000 	str.w	r8, [r0]
   15c64:	f8c0 8004 	str.w	r8, [r0, #4]
   15c68:	f880 8008 	strb.w	r8, [r0, #8]
   15c6c:	3501      	adds	r5, #1
   15c6e:	51d8      	str	r0, [r3, r7]
   15c70:	3704      	adds	r7, #4
   15c72:	e7ef      	b.n	15c54 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.4]+0x1a>
   15c74:	6066      	str	r6, [r4, #4]
   15c76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15c7a:	ffff b5f7 	vsli.64	<illegal reg q13.5>, <illegal reg q11.5>, #63	; 0x3f

00015c7c <terminalTask::terminalTask(unsigned char)>:
_ZN12terminalTaskC2Eh():
   15c7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15c7e:	4604      	mov	r4, r0
   15c80:	2500      	movs	r5, #0
   15c82:	460b      	mov	r3, r1
   15c84:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   15c88:	9500      	str	r5, [sp, #0]
   15c8a:	4925      	ldr	r1, [pc, #148]	; (15d20 <terminalTask::terminalTask(unsigned char)+0xa4>)
   15c8c:	f003 f9ea 	bl	19064 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   15c90:	4b24      	ldr	r3, [pc, #144]	; (15d24 <terminalTask::terminalTask(unsigned char)+0xa8>)
   15c92:	2604      	movs	r6, #4
   15c94:	6023      	str	r3, [r4, #0]
   15c96:	6366      	str	r6, [r4, #52]	; 0x34
   15c98:	63a5      	str	r5, [r4, #56]	; 0x38
   15c9a:	63e5      	str	r5, [r4, #60]	; 0x3c
   15c9c:	6425      	str	r5, [r4, #64]	; 0x40
   15c9e:	2102      	movs	r1, #2
   15ca0:	f104 0034 	add.w	r0, r4, #52	; 0x34
   15ca4:	f7ff ffc9 	bl	15c3a <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.4]>
   15ca8:	6526      	str	r6, [r4, #80]	; 0x50
   15caa:	6565      	str	r5, [r4, #84]	; 0x54
   15cac:	65a5      	str	r5, [r4, #88]	; 0x58
   15cae:	65e5      	str	r5, [r4, #92]	; 0x5c
   15cb0:	4628      	mov	r0, r5
   15cb2:	2160      	movs	r1, #96	; 0x60
   15cb4:	f008 fdba 	bl	1e82c <realloc>
   15cb8:	6da5      	ldr	r5, [r4, #88]	; 0x58
   15cba:	65e0      	str	r0, [r4, #92]	; 0x5c
   15cbc:	00ae      	lsls	r6, r5, #2
   15cbe:	2d17      	cmp	r5, #23
   15cc0:	d80c      	bhi.n	15cdc <terminalTask::terminalTask(unsigned char)+0x60>
   15cc2:	2010      	movs	r0, #16
   15cc4:	f7fb fc84 	bl	115d0 <operator new(unsigned int)>
   15cc8:	4607      	mov	r7, r0
   15cca:	2210      	movs	r2, #16
   15ccc:	2100      	movs	r1, #0
   15cce:	f007 fb44 	bl	1d35a <memset>
   15cd2:	6de3      	ldr	r3, [r4, #92]	; 0x5c
   15cd4:	3501      	adds	r5, #1
   15cd6:	519f      	str	r7, [r3, r6]
   15cd8:	3604      	adds	r6, #4
   15cda:	e7f0      	b.n	15cbe <terminalTask::terminalTask(unsigned char)+0x42>
   15cdc:	2318      	movs	r3, #24
   15cde:	6563      	str	r3, [r4, #84]	; 0x54
   15ce0:	2301      	movs	r3, #1
   15ce2:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
   15ce6:	4e10      	ldr	r6, [pc, #64]	; (15d28 <terminalTask::terminalTask(unsigned char)+0xac>)
   15ce8:	2300      	movs	r3, #0
   15cea:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
   15cee:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
   15cf2:	67a3      	str	r3, [r4, #120]	; 0x78
   15cf4:	2200      	movs	r2, #0
   15cf6:	2300      	movs	r3, #0
   15cf8:	2700      	movs	r7, #0
   15cfa:	e9c4 2320 	strd	r2, r3, [r4, #128]	; 0x80
   15cfe:	e9c4 6722 	strd	r6, r7, [r4, #136]	; 0x88
   15d02:	f005 fb07 	bl	1b314 <sys_get_uptime_us>
   15d06:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15d0a:	2300      	movs	r3, #0
   15d0c:	f006 ff2c 	bl	1cb68 <__aeabi_uldivmod>
   15d10:	1980      	adds	r0, r0, r6
   15d12:	4179      	adcs	r1, r7
   15d14:	e9c4 0120 	strd	r0, r1, [r4, #128]	; 0x80
   15d18:	4620      	mov	r0, r4
   15d1a:	b003      	add	sp, #12
   15d1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15d1e:	bf00      	nop
   15d20:	00023dc0 	.word	0x00023dc0
   15d24:	00023da8 	.word	0x00023da8
   15d28:	0001d4c0 	.word	0x0001d4c0

00015d2c <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>:
_ZN12terminalTask22handleEchoAndBackspaceEPNS_9cmdChan_tEc():
   15d2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15d30:	7a0f      	ldrb	r7, [r1, #8]
   15d32:	4614      	mov	r4, r2
   15d34:	684d      	ldr	r5, [r1, #4]
   15d36:	680e      	ldr	r6, [r1, #0]
   15d38:	b18f      	cbz	r7, 15d5e <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x32>
   15d3a:	2a08      	cmp	r2, #8
   15d3c:	d123      	bne.n	15d86 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x5a>
   15d3e:	4628      	mov	r0, r5
   15d40:	f002 fdbb 	bl	188ba <str::getLen() const>
   15d44:	2800      	cmp	r0, #0
   15d46:	dd1c      	ble.n	15d82 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x56>
   15d48:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15d4c:	4913      	ldr	r1, [pc, #76]	; (15d9c <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x70>)
   15d4e:	4630      	mov	r0, r6
   15d50:	f7fa fa5a 	bl	10208 <CharDev::put(char const*, unsigned int)>
   15d54:	2101      	movs	r1, #1
   15d56:	4628      	mov	r0, r5
   15d58:	f002 feae 	bl	18ab8 <str::eraseLast(int)>
   15d5c:	e008      	b.n	15d70 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x44>
   15d5e:	2a0a      	cmp	r2, #10
   15d60:	d019      	beq.n	15d96 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x6a>
   15d62:	2a0d      	cmp	r2, #13
   15d64:	d012      	beq.n	15d8c <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x60>
   15d66:	4621      	mov	r1, r4
   15d68:	4628      	mov	r0, r5
   15d6a:	f002 ffc6 	bl	18cfa <str::operator+=(char)>
   15d6e:	b197      	cbz	r7, 15d96 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x6a>
   15d70:	6833      	ldr	r3, [r6, #0]
   15d72:	4621      	mov	r1, r4
   15d74:	4630      	mov	r0, r6
   15d76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   15d7a:	685b      	ldr	r3, [r3, #4]
   15d7c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15d80:	4718      	bx	r3
   15d82:	2407      	movs	r4, #7
   15d84:	e7f4      	b.n	15d70 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x44>
   15d86:	2a0a      	cmp	r2, #10
   15d88:	d102      	bne.n	15d90 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x64>
   15d8a:	e7f1      	b.n	15d70 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x44>
   15d8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15d90:	2a0d      	cmp	r2, #13
   15d92:	d0ed      	beq.n	15d70 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x44>
   15d94:	e7e7      	b.n	15d66 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x3a>
   15d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15d9a:	bf00      	nop
   15d9c:	00023dc9 	.word	0x00023dc9

00015da0 <terminalTask::addCommandChannel(CharDev*, bool)>:
_ZN12terminalTask17addCommandChannelEP7CharDevb():
   15da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15da2:	4604      	mov	r4, r0
   15da4:	2014      	movs	r0, #20
   15da6:	4615      	mov	r5, r2
   15da8:	460f      	mov	r7, r1
   15daa:	f7fb fc11 	bl	115d0 <operator new(unsigned int)>
   15dae:	2180      	movs	r1, #128	; 0x80
   15db0:	4606      	mov	r6, r0
   15db2:	f002 ff52 	bl	18c5a <str::str(int)>
   15db6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   15db8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
   15dba:	429a      	cmp	r2, r3
   15dbc:	d306      	bcc.n	15dcc <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   15dbe:	6b61      	ldr	r1, [r4, #52]	; 0x34
   15dc0:	1859      	adds	r1, r3, r1
   15dc2:	d203      	bcs.n	15dcc <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   15dc4:	f104 0034 	add.w	r0, r4, #52	; 0x34
   15dc8:	f7ff ff37 	bl	15c3a <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.4]>
   15dcc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   15dce:	6c22      	ldr	r2, [r4, #64]	; 0x40
   15dd0:	1c59      	adds	r1, r3, #1
   15dd2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   15dd6:	63e1      	str	r1, [r4, #60]	; 0x3c
   15dd8:	601f      	str	r7, [r3, #0]
   15dda:	605e      	str	r6, [r3, #4]
   15ddc:	721d      	strb	r5, [r3, #8]
   15dde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00015de0 <terminalTask::getCommand()>:
_ZN12terminalTask10getCommandEv():
   15de0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   15de4:	6bcf      	ldr	r7, [r1, #60]	; 0x3c
   15de6:	4606      	mov	r6, r0
   15de8:	460d      	mov	r5, r1
   15dea:	ac01      	add	r4, sp, #4
   15dec:	b93f      	cbnz	r7, 15dfe <terminalTask::getCommand()+0x1e>
   15dee:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   15df2:	f004 fa3b 	bl	1a26c <vTaskDelay>
   15df6:	9701      	str	r7, [sp, #4]
   15df8:	6067      	str	r7, [r4, #4]
   15dfa:	60a7      	str	r7, [r4, #8]
   15dfc:	e047      	b.n	15e8e <terminalTask::getCommand()+0xae>
   15dfe:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   15e00:	f10d 0810 	add.w	r8, sp, #16
   15e04:	681b      	ldr	r3, [r3, #0]
   15e06:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   15e0a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   15e0e:	2300      	movs	r3, #0
   15e10:	f808 3d0d 	strb.w	r3, [r8, #-13]!
   15e14:	f004 f8e4 	bl	19fe0 <xTaskGetTickCount>
   15e18:	4681      	mov	r9, r0
   15e1a:	2700      	movs	r7, #0
   15e1c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   15e1e:	429f      	cmp	r7, r3
   15e20:	d263      	bcs.n	15eea <terminalTask::getCommand()+0x10a>
   15e22:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   15e24:	ea4f 0a87 	mov.w	sl, r7, lsl #2
   15e28:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
   15e2c:	6818      	ldr	r0, [r3, #0]
   15e2e:	7c03      	ldrb	r3, [r0, #16]
   15e30:	2b00      	cmp	r3, #0
   15e32:	d034      	beq.n	15e9e <terminalTask::getCommand()+0xbe>
   15e34:	6803      	ldr	r3, [r0, #0]
   15e36:	2200      	movs	r2, #0
   15e38:	681b      	ldr	r3, [r3, #0]
   15e3a:	4641      	mov	r1, r8
   15e3c:	4798      	blx	r3
   15e3e:	b370      	cbz	r0, 15e9e <terminalTask::getCommand()+0xbe>
   15e40:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   15e42:	429f      	cmp	r7, r3
   15e44:	d22d      	bcs.n	15ea2 <terminalTask::getCommand()+0xc2>
   15e46:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   15e48:	f853 300a 	ldr.w	r3, [r3, sl]
   15e4c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   15e50:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   15e54:	f89d 2003 	ldrb.w	r2, [sp, #3]
   15e58:	4621      	mov	r1, r4
   15e5a:	4628      	mov	r0, r5
   15e5c:	f7ff ff66 	bl	15d2c <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>
   15e60:	f005 fa58 	bl	1b314 <sys_get_uptime_us>
   15e64:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15e68:	2300      	movs	r3, #0
   15e6a:	f006 fe7d 	bl	1cb68 <__aeabi_uldivmod>
   15e6e:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   15e72:	1880      	adds	r0, r0, r2
   15e74:	4159      	adcs	r1, r3
   15e76:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
   15e7a:	9802      	ldr	r0, [sp, #8]
   15e7c:	f002 fd1d 	bl	188ba <str::getLen() const>
   15e80:	4607      	mov	r7, r0
   15e82:	9802      	ldr	r0, [sp, #8]
   15e84:	f002 fd1c 	bl	188c0 <str::getCapacity() const>
   15e88:	3801      	subs	r0, #1
   15e8a:	4287      	cmp	r7, r0
   15e8c:	db0c      	blt.n	15ea8 <terminalTask::getCommand()+0xc8>
   15e8e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
   15e92:	e886 0007 	stmia.w	r6, {r0, r1, r2}
   15e96:	4630      	mov	r0, r6
   15e98:	b004      	add	sp, #16
   15e9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   15e9e:	3701      	adds	r7, #1
   15ea0:	e7bc      	b.n	15e1c <terminalTask::getCommand()+0x3c>
   15ea2:	f105 0344 	add.w	r3, r5, #68	; 0x44
   15ea6:	e7d1      	b.n	15e4c <terminalTask::getCommand()+0x6c>
   15ea8:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   15eac:	4313      	orrs	r3, r2
   15eae:	d024      	beq.n	15efa <terminalTask::getCommand()+0x11a>
   15eb0:	f005 fa30 	bl	1b314 <sys_get_uptime_us>
   15eb4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15eb8:	2300      	movs	r3, #0
   15eba:	f006 fe55 	bl	1cb68 <__aeabi_uldivmod>
   15ebe:	e9d5 2320 	ldrd	r2, r3, [r5, #128]	; 0x80
   15ec2:	4299      	cmp	r1, r3
   15ec4:	bf08      	it	eq
   15ec6:	4290      	cmpeq	r0, r2
   15ec8:	d317      	bcc.n	15efa <terminalTask::getCommand()+0x11a>
   15eca:	f005 fa23 	bl	1b314 <sys_get_uptime_us>
   15ece:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15ed2:	2300      	movs	r3, #0
   15ed4:	f006 fe48 	bl	1cb68 <__aeabi_uldivmod>
   15ed8:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   15edc:	1880      	adds	r0, r0, r2
   15ede:	4159      	adcs	r1, r3
   15ee0:	2300      	movs	r3, #0
   15ee2:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
   15ee6:	9301      	str	r3, [sp, #4]
   15ee8:	e7d1      	b.n	15e8e <terminalTask::getCommand()+0xae>
   15eea:	f004 f879 	bl	19fe0 <xTaskGetTickCount>
   15eee:	4581      	cmp	r9, r0
   15ef0:	d1c3      	bne.n	15e7a <terminalTask::getCommand()+0x9a>
   15ef2:	2002      	movs	r0, #2
   15ef4:	f004 f9ba 	bl	1a26c <vTaskDelay>
   15ef8:	e7bf      	b.n	15e7a <terminalTask::getCommand()+0x9a>
   15efa:	f89d 3003 	ldrb.w	r3, [sp, #3]
   15efe:	2b0a      	cmp	r3, #10
   15f00:	d188      	bne.n	15e14 <terminalTask::getCommand()+0x34>
   15f02:	e7c4      	b.n	15e8e <terminalTask::getCommand()+0xae>

00015f04 <terminalTask::run(void*)>:
_ZN12terminalTask3runEPv():
   15f04:	b5f0      	push	{r4, r5, r6, r7, lr}
   15f06:	4605      	mov	r5, r0
   15f08:	b085      	sub	sp, #20
   15f0a:	4820      	ldr	r0, [pc, #128]	; (15f8c <terminalTask::run(void*)+0x88>)
   15f0c:	f008 fbb2 	bl	1e674 <iprintf>
   15f10:	4629      	mov	r1, r5
   15f12:	a801      	add	r0, sp, #4
   15f14:	f7ff ff64 	bl	15de0 <terminalTask::getCommand()>
   15f18:	9c01      	ldr	r4, [sp, #4]
   15f1a:	b91c      	cbnz	r4, 15f24 <terminalTask::run(void*)+0x20>
   15f1c:	481c      	ldr	r0, [pc, #112]	; (15f90 <terminalTask::run(void*)+0x8c>)
   15f1e:	f008 fc1b 	bl	1e758 <puts>
   15f22:	e030      	b.n	15f86 <terminalTask::run(void*)+0x82>
   15f24:	9e02      	ldr	r6, [sp, #8]
   15f26:	4630      	mov	r0, r6
   15f28:	f002 fcc7 	bl	188ba <str::getLen() const>
   15f2c:	2800      	cmp	r0, #0
   15f2e:	dd2a      	ble.n	15f86 <terminalTask::run(void*)+0x82>
   15f30:	f005 f9f0 	bl	1b314 <sys_get_uptime_us>
   15f34:	4607      	mov	r7, r0
   15f36:	b1f8      	cbz	r0, 15f78 <terminalTask::run(void*)+0x74>
   15f38:	f8b5 3074 	ldrh.w	r3, [r5, #116]	; 0x74
   15f3c:	f105 0050 	add.w	r0, r5, #80	; 0x50
   15f40:	3301      	adds	r3, #1
   15f42:	f8a5 3074 	strh.w	r3, [r5, #116]	; 0x74
   15f46:	4622      	mov	r2, r4
   15f48:	4631      	mov	r1, r6
   15f4a:	f003 f9a7 	bl	1929c <CommandProcessor::handleCommand(str&, CharDev&)>
   15f4e:	4b11      	ldr	r3, [pc, #68]	; (15f94 <terminalTask::run(void*)+0x90>)
   15f50:	2500      	movs	r5, #0
   15f52:	6818      	ldr	r0, [r3, #0]
   15f54:	9000      	str	r0, [sp, #0]
   15f56:	6823      	ldr	r3, [r4, #0]
   15f58:	f81d 1005 	ldrb.w	r1, [sp, r5]
   15f5c:	685b      	ldr	r3, [r3, #4]
   15f5e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15f62:	4620      	mov	r0, r4
   15f64:	3501      	adds	r5, #1
   15f66:	4798      	blx	r3
   15f68:	2d04      	cmp	r5, #4
   15f6a:	d1f4      	bne.n	15f56 <terminalTask::run(void*)+0x52>
   15f6c:	f005 f9d2 	bl	1b314 <sys_get_uptime_us>
   15f70:	1bc1      	subs	r1, r0, r7
   15f72:	4809      	ldr	r0, [pc, #36]	; (15f98 <terminalTask::run(void*)+0x94>)
   15f74:	f008 fb7e 	bl	1e674 <iprintf>
   15f78:	4630      	mov	r0, r6
   15f7a:	f002 fca3 	bl	188c4 <str::clear()>
   15f7e:	6823      	ldr	r3, [r4, #0]
   15f80:	4620      	mov	r0, r4
   15f82:	689b      	ldr	r3, [r3, #8]
   15f84:	4798      	blx	r3
   15f86:	2001      	movs	r0, #1
   15f88:	b005      	add	sp, #20
   15f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15f8c:	00023dcc 	.word	0x00023dcc
   15f90:	000251e4 	.word	0x000251e4
   15f94:	00023d9c 	.word	0x00023d9c
   15f98:	00023dd2 	.word	0x00023dd2

00015f9c <SingletonTemplate<Uart0>::getInstance()>:
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
   15f9c:	b538      	push	{r3, r4, r5, lr}
   15f9e:	4c06      	ldr	r4, [pc, #24]	; (15fb8 <SingletonTemplate<Uart0>::getInstance()+0x1c>)
   15fa0:	6823      	ldr	r3, [r4, #0]
   15fa2:	b933      	cbnz	r3, 15fb2 <SingletonTemplate<Uart0>::getInstance()+0x16>
   15fa4:	202c      	movs	r0, #44	; 0x2c
   15fa6:	f7fb fb13 	bl	115d0 <operator new(unsigned int)>
   15faa:	4605      	mov	r5, r0
   15fac:	f7fa fd7a 	bl	10aa4 <Uart0::Uart0()>
   15fb0:	6025      	str	r5, [r4, #0]
   15fb2:	6820      	ldr	r0, [r4, #0]
   15fb4:	bd38      	pop	{r3, r4, r5, pc}
   15fb6:	bf00      	nop
   15fb8:	2007c1cc 	.word	0x2007c1cc

00015fbc <Uart0::putcharIntrDriven(char)>:
_ZN5Uart017putcharIntrDrivenEc():
   15fbc:	b510      	push	{r4, lr}
   15fbe:	4604      	mov	r4, r0
   15fc0:	f7ff ffec 	bl	15f9c <SingletonTemplate<Uart0>::getInstance()>
   15fc4:	6803      	ldr	r3, [r0, #0]
   15fc6:	4621      	mov	r1, r4
   15fc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   15fcc:	685b      	ldr	r3, [r3, #4]
   15fce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15fd2:	4718      	bx	r3

00015fd4 <Uart0::getcharIntrDriven(char)>:
_ZN5Uart017getcharIntrDrivenEc():
   15fd4:	b513      	push	{r0, r1, r4, lr}
   15fd6:	2300      	movs	r3, #0
   15fd8:	ac02      	add	r4, sp, #8
   15fda:	f804 3d01 	strb.w	r3, [r4, #-1]!
   15fde:	f7ff ffdd 	bl	15f9c <SingletonTemplate<Uart0>::getInstance()>
   15fe2:	6803      	ldr	r3, [r0, #0]
   15fe4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15fe8:	681b      	ldr	r3, [r3, #0]
   15fea:	4621      	mov	r1, r4
   15fec:	4798      	blx	r3
   15fee:	f89d 0007 	ldrb.w	r0, [sp, #7]
   15ff2:	b002      	add	sp, #8
   15ff4:	bd10      	pop	{r4, pc}
   15ff6:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

00015ff8 <terminalTask::taskEntry()>:
_ZN12terminalTask9taskEntryEv():
   15ff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15ffc:	f100 0450 	add.w	r4, r0, #80	; 0x50
   16000:	b08a      	sub	sp, #40	; 0x28
   16002:	2500      	movs	r5, #0
   16004:	4606      	mov	r6, r0
   16006:	9500      	str	r5, [sp, #0]
   16008:	4620      	mov	r0, r4
   1600a:	4b62      	ldr	r3, [pc, #392]	; (16194 <terminalTask::taskEntry()+0x19c>)
   1600c:	4a62      	ldr	r2, [pc, #392]	; (16198 <terminalTask::taskEntry()+0x1a0>)
   1600e:	4963      	ldr	r1, [pc, #396]	; (1619c <terminalTask::taskEntry()+0x1a4>)
   16010:	f003 f864 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16014:	9500      	str	r5, [sp, #0]
   16016:	4620      	mov	r0, r4
   16018:	4b61      	ldr	r3, [pc, #388]	; (161a0 <terminalTask::taskEntry()+0x1a8>)
   1601a:	4a62      	ldr	r2, [pc, #392]	; (161a4 <terminalTask::taskEntry()+0x1ac>)
   1601c:	4962      	ldr	r1, [pc, #392]	; (161a8 <terminalTask::taskEntry()+0x1b0>)
   1601e:	f003 f85d 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16022:	9500      	str	r5, [sp, #0]
   16024:	4620      	mov	r0, r4
   16026:	4b61      	ldr	r3, [pc, #388]	; (161ac <terminalTask::taskEntry()+0x1b4>)
   16028:	4a61      	ldr	r2, [pc, #388]	; (161b0 <terminalTask::taskEntry()+0x1b8>)
   1602a:	4962      	ldr	r1, [pc, #392]	; (161b4 <terminalTask::taskEntry()+0x1bc>)
   1602c:	f003 f856 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16030:	9500      	str	r5, [sp, #0]
   16032:	4620      	mov	r0, r4
   16034:	4b60      	ldr	r3, [pc, #384]	; (161b8 <terminalTask::taskEntry()+0x1c0>)
   16036:	4a61      	ldr	r2, [pc, #388]	; (161bc <terminalTask::taskEntry()+0x1c4>)
   16038:	4961      	ldr	r1, [pc, #388]	; (161c0 <terminalTask::taskEntry()+0x1c8>)
   1603a:	f003 f84f 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1603e:	9500      	str	r5, [sp, #0]
   16040:	4620      	mov	r0, r4
   16042:	4b60      	ldr	r3, [pc, #384]	; (161c4 <terminalTask::taskEntry()+0x1cc>)
   16044:	4a60      	ldr	r2, [pc, #384]	; (161c8 <terminalTask::taskEntry()+0x1d0>)
   16046:	4961      	ldr	r1, [pc, #388]	; (161cc <terminalTask::taskEntry()+0x1d4>)
   16048:	f003 f848 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1604c:	9500      	str	r5, [sp, #0]
   1604e:	4620      	mov	r0, r4
   16050:	4b5f      	ldr	r3, [pc, #380]	; (161d0 <terminalTask::taskEntry()+0x1d8>)
   16052:	4a60      	ldr	r2, [pc, #384]	; (161d4 <terminalTask::taskEntry()+0x1dc>)
   16054:	4960      	ldr	r1, [pc, #384]	; (161d8 <terminalTask::taskEntry()+0x1e0>)
   16056:	f003 f841 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1605a:	9500      	str	r5, [sp, #0]
   1605c:	4620      	mov	r0, r4
   1605e:	4b5f      	ldr	r3, [pc, #380]	; (161dc <terminalTask::taskEntry()+0x1e4>)
   16060:	4a5f      	ldr	r2, [pc, #380]	; (161e0 <terminalTask::taskEntry()+0x1e8>)
   16062:	4960      	ldr	r1, [pc, #384]	; (161e4 <terminalTask::taskEntry()+0x1ec>)
   16064:	f003 f83a 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16068:	9500      	str	r5, [sp, #0]
   1606a:	4620      	mov	r0, r4
   1606c:	4b5e      	ldr	r3, [pc, #376]	; (161e8 <terminalTask::taskEntry()+0x1f0>)
   1606e:	4a5f      	ldr	r2, [pc, #380]	; (161ec <terminalTask::taskEntry()+0x1f4>)
   16070:	495f      	ldr	r1, [pc, #380]	; (161f0 <terminalTask::taskEntry()+0x1f8>)
   16072:	f003 f833 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16076:	9500      	str	r5, [sp, #0]
   16078:	4620      	mov	r0, r4
   1607a:	4b5e      	ldr	r3, [pc, #376]	; (161f4 <terminalTask::taskEntry()+0x1fc>)
   1607c:	4a5e      	ldr	r2, [pc, #376]	; (161f8 <terminalTask::taskEntry()+0x200>)
   1607e:	495f      	ldr	r1, [pc, #380]	; (161fc <terminalTask::taskEntry()+0x204>)
   16080:	f003 f82c 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16084:	9500      	str	r5, [sp, #0]
   16086:	4620      	mov	r0, r4
   16088:	4b5d      	ldr	r3, [pc, #372]	; (16200 <terminalTask::taskEntry()+0x208>)
   1608a:	4a5e      	ldr	r2, [pc, #376]	; (16204 <terminalTask::taskEntry()+0x20c>)
   1608c:	495e      	ldr	r1, [pc, #376]	; (16208 <terminalTask::taskEntry()+0x210>)
   1608e:	f003 f825 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16092:	9500      	str	r5, [sp, #0]
   16094:	4620      	mov	r0, r4
   16096:	4b5d      	ldr	r3, [pc, #372]	; (1620c <terminalTask::taskEntry()+0x214>)
   16098:	4a5d      	ldr	r2, [pc, #372]	; (16210 <terminalTask::taskEntry()+0x218>)
   1609a:	495e      	ldr	r1, [pc, #376]	; (16214 <terminalTask::taskEntry()+0x21c>)
   1609c:	f003 f81e 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   160a0:	9500      	str	r5, [sp, #0]
   160a2:	4620      	mov	r0, r4
   160a4:	4b5c      	ldr	r3, [pc, #368]	; (16218 <terminalTask::taskEntry()+0x220>)
   160a6:	4a5d      	ldr	r2, [pc, #372]	; (1621c <terminalTask::taskEntry()+0x224>)
   160a8:	495d      	ldr	r1, [pc, #372]	; (16220 <terminalTask::taskEntry()+0x228>)
   160aa:	f003 f817 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   160ae:	9500      	str	r5, [sp, #0]
   160b0:	4620      	mov	r0, r4
   160b2:	4b5c      	ldr	r3, [pc, #368]	; (16224 <terminalTask::taskEntry()+0x22c>)
   160b4:	4a5c      	ldr	r2, [pc, #368]	; (16228 <terminalTask::taskEntry()+0x230>)
   160b6:	495d      	ldr	r1, [pc, #372]	; (1622c <terminalTask::taskEntry()+0x234>)
   160b8:	f003 f810 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   160bc:	9500      	str	r5, [sp, #0]
   160be:	4620      	mov	r0, r4
   160c0:	4b5b      	ldr	r3, [pc, #364]	; (16230 <terminalTask::taskEntry()+0x238>)
   160c2:	4a5c      	ldr	r2, [pc, #368]	; (16234 <terminalTask::taskEntry()+0x23c>)
   160c4:	495c      	ldr	r1, [pc, #368]	; (16238 <terminalTask::taskEntry()+0x240>)
   160c6:	f003 f809 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   160ca:	9500      	str	r5, [sp, #0]
   160cc:	4620      	mov	r0, r4
   160ce:	4b5b      	ldr	r3, [pc, #364]	; (1623c <terminalTask::taskEntry()+0x244>)
   160d0:	4a5b      	ldr	r2, [pc, #364]	; (16240 <terminalTask::taskEntry()+0x248>)
   160d2:	495c      	ldr	r1, [pc, #368]	; (16244 <terminalTask::taskEntry()+0x24c>)
   160d4:	f003 f802 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   160d8:	9500      	str	r5, [sp, #0]
   160da:	4620      	mov	r0, r4
   160dc:	4b5a      	ldr	r3, [pc, #360]	; (16248 <terminalTask::taskEntry()+0x250>)
   160de:	4a5b      	ldr	r2, [pc, #364]	; (1624c <terminalTask::taskEntry()+0x254>)
   160e0:	495b      	ldr	r1, [pc, #364]	; (16250 <terminalTask::taskEntry()+0x258>)
   160e2:	f002 fffb 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   160e6:	9500      	str	r5, [sp, #0]
   160e8:	4620      	mov	r0, r4
   160ea:	4b5a      	ldr	r3, [pc, #360]	; (16254 <terminalTask::taskEntry()+0x25c>)
   160ec:	4a5a      	ldr	r2, [pc, #360]	; (16258 <terminalTask::taskEntry()+0x260>)
   160ee:	495b      	ldr	r1, [pc, #364]	; (1625c <terminalTask::taskEntry()+0x264>)
   160f0:	f002 fff4 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   160f4:	9500      	str	r5, [sp, #0]
   160f6:	4620      	mov	r0, r4
   160f8:	4b59      	ldr	r3, [pc, #356]	; (16260 <terminalTask::taskEntry()+0x268>)
   160fa:	4a5a      	ldr	r2, [pc, #360]	; (16264 <terminalTask::taskEntry()+0x26c>)
   160fc:	495a      	ldr	r1, [pc, #360]	; (16268 <terminalTask::taskEntry()+0x270>)
   160fe:	f002 ffed 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16102:	9500      	str	r5, [sp, #0]
   16104:	4620      	mov	r0, r4
   16106:	4b59      	ldr	r3, [pc, #356]	; (1626c <terminalTask::taskEntry()+0x274>)
   16108:	4a59      	ldr	r2, [pc, #356]	; (16270 <terminalTask::taskEntry()+0x278>)
   1610a:	495a      	ldr	r1, [pc, #360]	; (16274 <terminalTask::taskEntry()+0x27c>)
   1610c:	f002 ffe6 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16110:	9500      	str	r5, [sp, #0]
   16112:	4620      	mov	r0, r4
   16114:	4b58      	ldr	r3, [pc, #352]	; (16278 <terminalTask::taskEntry()+0x280>)
   16116:	4a59      	ldr	r2, [pc, #356]	; (1627c <terminalTask::taskEntry()+0x284>)
   16118:	4959      	ldr	r1, [pc, #356]	; (16280 <terminalTask::taskEntry()+0x288>)
   1611a:	f002 ffdf 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1611e:	9500      	str	r5, [sp, #0]
   16120:	4620      	mov	r0, r4
   16122:	4b58      	ldr	r3, [pc, #352]	; (16284 <terminalTask::taskEntry()+0x28c>)
   16124:	4a58      	ldr	r2, [pc, #352]	; (16288 <terminalTask::taskEntry()+0x290>)
   16126:	4959      	ldr	r1, [pc, #356]	; (1628c <terminalTask::taskEntry()+0x294>)
   16128:	f002 ffd8 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1612c:	9500      	str	r5, [sp, #0]
   1612e:	4b58      	ldr	r3, [pc, #352]	; (16290 <terminalTask::taskEntry()+0x298>)
   16130:	4a58      	ldr	r2, [pc, #352]	; (16294 <terminalTask::taskEntry()+0x29c>)
   16132:	4959      	ldr	r1, [pc, #356]	; (16298 <terminalTask::taskEntry()+0x2a0>)
   16134:	4620      	mov	r0, r4
   16136:	f002 ffd1 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1613a:	f7ff ff2f 	bl	15f9c <SingletonTemplate<Uart0>::getInstance()>
   1613e:	f44f 7380 	mov.w	r3, #256	; 0x100
   16142:	2220      	movs	r2, #32
   16144:	f44f 4116 	mov.w	r1, #38400	; 0x9600
   16148:	4605      	mov	r5, r0
   1614a:	f7fa fc8b 	bl	10a64 <Uart0::init(unsigned int, int, int)>
   1614e:	4680      	mov	r8, r0
   16150:	2701      	movs	r7, #1
   16152:	742f      	strb	r7, [r5, #16]
   16154:	4851      	ldr	r0, [pc, #324]	; (1629c <terminalTask::taskEntry()+0x2a4>)
   16156:	f7fb f9a3 	bl	114a0 <sys_set_inchar_func>
   1615a:	4851      	ldr	r0, [pc, #324]	; (162a0 <terminalTask::taskEntry()+0x2a8>)
   1615c:	f7fb f99a 	bl	11494 <sys_set_outchar_func>
   16160:	463a      	mov	r2, r7
   16162:	4629      	mov	r1, r5
   16164:	4630      	mov	r0, r6
   16166:	f7ff fe1b 	bl	15da0 <terminalTask::addCommandChannel(CharDev*, bool)>
   1616a:	2208      	movs	r2, #8
   1616c:	a903      	add	r1, sp, #12
   1616e:	a805      	add	r0, sp, #20
   16170:	f002 fb7c 	bl	1886c <str::str(char*, int)>
   16174:	a805      	add	r0, sp, #20
   16176:	494b      	ldr	r1, [pc, #300]	; (162a4 <terminalTask::taskEntry()+0x2ac>)
   16178:	f002 fdea 	bl	18d50 <str::operator=(char const*)>
   1617c:	462a      	mov	r2, r5
   1617e:	a905      	add	r1, sp, #20
   16180:	4620      	mov	r0, r4
   16182:	f003 f88b 	bl	1929c <CommandProcessor::handleCommand(str&, CharDev&)>
   16186:	a805      	add	r0, sp, #20
   16188:	f002 fb85 	bl	18896 <str::~str()>
   1618c:	4640      	mov	r0, r8
   1618e:	b00a      	add	sp, #40	; 0x28
   16190:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16194:	00023de8 	.word	0x00023de8
   16198:	00023e0a 	.word	0x00023e0a
   1619c:	00017759 	.word	0x00017759
   161a0:	00023e0f 	.word	0x00023e0f
   161a4:	00025867 	.word	0x00025867
   161a8:	00016b2d 	.word	0x00016b2d
   161ac:	00023e46 	.word	0x00023e46
   161b0:	00023e56 	.word	0x00023e56
   161b4:	00016c15 	.word	0x00016c15
   161b8:	00023e5e 	.word	0x00023e5e
   161bc:	00023e6c 	.word	0x00023e6c
   161c0:	00017789 	.word	0x00017789
   161c4:	00023e73 	.word	0x00023e73
   161c8:	00023eb4 	.word	0x00023eb4
   161cc:	00016c39 	.word	0x00016c39
   161d0:	00023eb9 	.word	0x00023eb9
   161d4:	00023f15 	.word	0x00023f15
   161d8:	00016f11 	.word	0x00016f11
   161dc:	00023f19 	.word	0x00023f19
   161e0:	00023fa7 	.word	0x00023fa7
   161e4:	00016e91 	.word	0x00016e91
   161e8:	00023f5b 	.word	0x00023f5b
   161ec:	00023fa6 	.word	0x00023fa6
   161f0:	00017311 	.word	0x00017311
   161f4:	00023faa 	.word	0x00023faa
   161f8:	00023fd8 	.word	0x00023fd8
   161fc:	00017015 	.word	0x00017015
   16200:	00023fdb 	.word	0x00023fdb
   16204:	00024000 	.word	0x00024000
   16208:	0001718d 	.word	0x0001718d
   1620c:	00024006 	.word	0x00024006
   16210:	00024033 	.word	0x00024033
   16214:	00017205 	.word	0x00017205
   16218:	00024036 	.word	0x00024036
   1621c:	00026461 	.word	0x00026461
   16220:	00017261 	.word	0x00017261
   16224:	0002405b 	.word	0x0002405b
   16228:	0002594a 	.word	0x0002594a
   1622c:	000171c9 	.word	0x000171c9
   16230:	0002407e 	.word	0x0002407e
   16234:	00024151 	.word	0x00024151
   16238:	00017599 	.word	0x00017599
   1623c:	00024155 	.word	0x00024155
   16240:	00024198 	.word	0x00024198
   16244:	00017451 	.word	0x00017451
   16248:	000241a0 	.word	0x000241a0
   1624c:	000241b3 	.word	0x000241b3
   16250:	00017511 	.word	0x00017511
   16254:	000241ba 	.word	0x000241ba
   16258:	000242b9 	.word	0x000242b9
   1625c:	00016cfd 	.word	0x00016cfd
   16260:	000242bd 	.word	0x000242bd
   16264:	000242e5 	.word	0x000242e5
   16268:	00017541 	.word	0x00017541
   1626c:	000242eb 	.word	0x000242eb
   16270:	00025380 	.word	0x00025380
   16274:	00016541 	.word	0x00016541
   16278:	00024315 	.word	0x00024315
   1627c:	00024409 	.word	0x00024409
   16280:	000179a9 	.word	0x000179a9
   16284:	000243d2 	.word	0x000243d2
   16288:	00024f0f 	.word	0x00024f0f
   1628c:	00017901 	.word	0x00017901
   16290:	0002440e 	.word	0x0002440e
   16294:	00024449 	.word	0x00024449
   16298:	00016a9d 	.word	0x00016a9d
   1629c:	00015fd5 	.word	0x00015fd5
   162a0:	00015fbd 	.word	0x00015fbd
   162a4:	0002444e 	.word	0x0002444e

000162a8 <wsAddrHandler(str&, CharDev&, void*)>:
_ZL13wsAddrHandlerR3strR7CharDevPv():
   162a8:	b538      	push	{r3, r4, r5, lr}
   162aa:	460d      	mov	r5, r1
   162ac:	f002 fc9a 	bl	18be4 <str::operator int() const>
   162b0:	4604      	mov	r4, r0
   162b2:	b2c0      	uxtb	r0, r0
   162b4:	f7fb ff9c 	bl	121f0 <mesh_set_node_address>
   162b8:	4a05      	ldr	r2, [pc, #20]	; (162d0 <wsAddrHandler(str&, CharDev&, void*)+0x28>)
   162ba:	4b06      	ldr	r3, [pc, #24]	; (162d4 <wsAddrHandler(str&, CharDev&, void*)+0x2c>)
   162bc:	4906      	ldr	r1, [pc, #24]	; (162d8 <wsAddrHandler(str&, CharDev&, void*)+0x30>)
   162be:	2800      	cmp	r0, #0
   162c0:	bf18      	it	ne
   162c2:	4613      	movne	r3, r2
   162c4:	4622      	mov	r2, r4
   162c6:	4628      	mov	r0, r5
   162c8:	f7f9 ffe8 	bl	1029c <CharDev::printf(char const*, ...)>
   162cc:	2001      	movs	r0, #1
   162ce:	bd38      	pop	{r3, r4, r5, pc}
   162d0:	00024e9d 	.word	0x00024e9d
   162d4:	00024473 	.word	0x00024473
   162d8:	0002447a 	.word	0x0002447a

000162dc <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char) [clone .constprop.4]>:
_ZL25wirelessHandlerPrintStatsR7CharDevP12mesh_stats_th.constprop.4():
   162dc:	b530      	push	{r4, r5, lr}
   162de:	460c      	mov	r4, r1
   162e0:	4605      	mov	r5, r0
   162e2:	b087      	sub	sp, #28
   162e4:	490a      	ldr	r1, [pc, #40]	; (16310 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char) [clone .constprop.4]+0x34>)
   162e6:	f7f9 ffd9 	bl	1029c <CharDev::printf(char const*, ...)>
   162ea:	88a1      	ldrh	r1, [r4, #4]
   162ec:	8823      	ldrh	r3, [r4, #0]
   162ee:	9104      	str	r1, [sp, #16]
   162f0:	8921      	ldrh	r1, [r4, #8]
   162f2:	8862      	ldrh	r2, [r4, #2]
   162f4:	9103      	str	r1, [sp, #12]
   162f6:	88e1      	ldrh	r1, [r4, #6]
   162f8:	4628      	mov	r0, r5
   162fa:	9102      	str	r1, [sp, #8]
   162fc:	7ae1      	ldrb	r1, [r4, #11]
   162fe:	9101      	str	r1, [sp, #4]
   16300:	7aa1      	ldrb	r1, [r4, #10]
   16302:	9100      	str	r1, [sp, #0]
   16304:	4903      	ldr	r1, [pc, #12]	; (16314 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char) [clone .constprop.4]+0x38>)
   16306:	f7f9 ffc9 	bl	1029c <CharDev::printf(char const*, ...)>
   1630a:	b007      	add	sp, #28
   1630c:	bd30      	pop	{r4, r5, pc}
   1630e:	bf00      	nop
   16310:	00024491 	.word	0x00024491
   16314:	000244c7 	.word	0x000244c7

00016318 <wsTxHandler(str&, CharDev&, void*)>:
_ZL11wsTxHandlerR3strR7CharDevPv():
   16318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1631c:	b08c      	sub	sp, #48	; 0x30
   1631e:	ab03      	add	r3, sp, #12
   16320:	2600      	movs	r6, #0
   16322:	9300      	str	r3, [sp, #0]
   16324:	460d      	mov	r5, r1
   16326:	4690      	mov	r8, r2
   16328:	ab02      	add	r3, sp, #8
   1632a:	2202      	movs	r2, #2
   1632c:	4938      	ldr	r1, [pc, #224]	; (16410 <wsTxHandler(str&, CharDev&, void*)+0xf8>)
   1632e:	9602      	str	r6, [sp, #8]
   16330:	9603      	str	r6, [sp, #12]
   16332:	f002 fad9 	bl	188e8 <str::tokenize(char const*, int, ...)>
   16336:	42b0      	cmp	r0, r6
   16338:	dd66      	ble.n	16408 <wsTxHandler(str&, CharDev&, void*)+0xf0>
   1633a:	9802      	ldr	r0, [sp, #8]
   1633c:	f006 fdab 	bl	1ce96 <atoi>
   16340:	b2c7      	uxtb	r7, r0
   16342:	9803      	ldr	r0, [sp, #12]
   16344:	b118      	cbz	r0, 1634e <wsTxHandler(str&, CharDev&, void*)+0x36>
   16346:	f008 fd08 	bl	1ed5a <strlen>
   1634a:	b2c4      	uxtb	r4, r0
   1634c:	e000      	b.n	16350 <wsTxHandler(str&, CharDev&, void*)+0x38>
   1634e:	4604      	mov	r4, r0
   16350:	2100      	movs	r1, #0
   16352:	a804      	add	r0, sp, #16
   16354:	f7fb fad6 	bl	11904 <wireless_get_rx_pkt>
   16358:	b130      	cbz	r0, 16368 <wsTxHandler(str&, CharDev&, void*)+0x50>
   1635a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1635e:	492d      	ldr	r1, [pc, #180]	; (16414 <wsTxHandler(str&, CharDev&, void*)+0xfc>)
   16360:	4628      	mov	r0, r5
   16362:	f7f9 ff65 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   16366:	e7f3      	b.n	16350 <wsTxHandler(str&, CharDev&, void*)+0x38>
   16368:	2302      	movs	r3, #2
   1636a:	f118 0100 	adds.w	r1, r8, #0
   1636e:	9300      	str	r3, [sp, #0]
   16370:	9a03      	ldr	r2, [sp, #12]
   16372:	4623      	mov	r3, r4
   16374:	bf18      	it	ne
   16376:	2101      	movne	r1, #1
   16378:	4638      	mov	r0, r7
   1637a:	f7fc f87d 	bl	12478 <mesh_send>
   1637e:	4606      	mov	r6, r0
   16380:	b938      	cbnz	r0, 16392 <wsTxHandler(str&, CharDev&, void*)+0x7a>
   16382:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16386:	4924      	ldr	r1, [pc, #144]	; (16418 <wsTxHandler(str&, CharDev&, void*)+0x100>)
   16388:	4628      	mov	r0, r5
   1638a:	f7f9 ff51 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   1638e:	2601      	movs	r6, #1
   16390:	e03a      	b.n	16408 <wsTxHandler(str&, CharDev&, void*)+0xf0>
   16392:	f1b8 0f00 	cmp.w	r8, #0
   16396:	d037      	beq.n	16408 <wsTxHandler(str&, CharDev&, void*)+0xf0>
   16398:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   1639c:	a804      	add	r0, sp, #16
   1639e:	f7fb fab9 	bl	11914 <wireless_get_ack_pkt>
   163a2:	b360      	cbz	r0, 163fe <wsTxHandler(str&, CharDev&, void*)+0xe6>
   163a4:	f89d 3010 	ldrb.w	r3, [sp, #16]
   163a8:	42bb      	cmp	r3, r7
   163aa:	d128      	bne.n	163fe <wsTxHandler(str&, CharDev&, void*)+0xe6>
   163ac:	f89d 3017 	ldrb.w	r3, [sp, #23]
   163b0:	2b0c      	cmp	r3, #12
   163b2:	d104      	bne.n	163be <wsTxHandler(str&, CharDev&, void*)+0xa6>
   163b4:	463a      	mov	r2, r7
   163b6:	a906      	add	r1, sp, #24
   163b8:	4628      	mov	r0, r5
   163ba:	f7ff ff8f 	bl	162dc <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char) [clone .constprop.4]>
   163be:	b9bc      	cbnz	r4, 163f0 <wsTxHandler(str&, CharDev&, void*)+0xd8>
   163c0:	4916      	ldr	r1, [pc, #88]	; (1641c <wsTxHandler(str&, CharDev&, void*)+0x104>)
   163c2:	4628      	mov	r0, r5
   163c4:	f7f9 ff6a 	bl	1029c <CharDev::printf(char const*, ...)>
   163c8:	f89d 3017 	ldrb.w	r3, [sp, #23]
   163cc:	429c      	cmp	r4, r3
   163ce:	da0a      	bge.n	163e6 <wsTxHandler(str&, CharDev&, void*)+0xce>
   163d0:	ab04      	add	r3, sp, #16
   163d2:	1919      	adds	r1, r3, r4
   163d4:	682b      	ldr	r3, [r5, #0]
   163d6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   163da:	685b      	ldr	r3, [r3, #4]
   163dc:	7a09      	ldrb	r1, [r1, #8]
   163de:	4628      	mov	r0, r5
   163e0:	4798      	blx	r3
   163e2:	3401      	adds	r4, #1
   163e4:	e7f0      	b.n	163c8 <wsTxHandler(str&, CharDev&, void*)+0xb0>
   163e6:	490e      	ldr	r1, [pc, #56]	; (16420 <wsTxHandler(str&, CharDev&, void*)+0x108>)
   163e8:	4628      	mov	r0, r5
   163ea:	f7f9 ff57 	bl	1029c <CharDev::printf(char const*, ...)>
   163ee:	e00b      	b.n	16408 <wsTxHandler(str&, CharDev&, void*)+0xf0>
   163f0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   163f4:	490b      	ldr	r1, [pc, #44]	; (16424 <wsTxHandler(str&, CharDev&, void*)+0x10c>)
   163f6:	4628      	mov	r0, r5
   163f8:	f7f9 ff1a 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   163fc:	e004      	b.n	16408 <wsTxHandler(str&, CharDev&, void*)+0xf0>
   163fe:	9a02      	ldr	r2, [sp, #8]
   16400:	4909      	ldr	r1, [pc, #36]	; (16428 <wsTxHandler(str&, CharDev&, void*)+0x110>)
   16402:	4628      	mov	r0, r5
   16404:	f7f9 ff4a 	bl	1029c <CharDev::printf(char const*, ...)>
   16408:	4630      	mov	r0, r6
   1640a:	b00c      	add	sp, #48	; 0x30
   1640c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16410:	00023dca 	.word	0x00023dca
   16414:	000244e5 	.word	0x000244e5
   16418:	00024507 	.word	0x00024507
   1641c:	0002452f 	.word	0x0002452f
   16420:	00025416 	.word	0x00025416
   16424:	00024543 	.word	0x00024543
   16428:	00024560 	.word	0x00024560

0001642c <wsStatsHandler(str&, CharDev&, void*)>:
_ZL14wsStatsHandlerR3strR7CharDevPv():
   1642c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1642e:	a801      	add	r0, sp, #4
   16430:	460c      	mov	r4, r1
   16432:	f7fc f9ff 	bl	12834 <mesh_get_stats>
   16436:	f7fb fee7 	bl	12208 <mesh_get_node_address>
   1643a:	a901      	add	r1, sp, #4
   1643c:	4602      	mov	r2, r0
   1643e:	4620      	mov	r0, r4
   16440:	f7ff ff4c 	bl	162dc <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char) [clone .constprop.4]>
   16444:	2001      	movs	r0, #1
   16446:	b004      	add	sp, #16
   16448:	bd10      	pop	{r4, pc}
   1644a:	ffff b530 	vsli.32	d27, d16, #31

0001644c <wsRxHandler(str&, CharDev&, void*)>:
_ZL11wsRxHandlerR3strR7CharDevPv():
   1644c:	b530      	push	{r4, r5, lr}
   1644e:	b08b      	sub	sp, #44	; 0x2c
   16450:	aa0a      	add	r2, sp, #40	; 0x28
   16452:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   16456:	460c      	mov	r4, r1
   16458:	f842 3d24 	str.w	r3, [r2, #-36]!
   1645c:	4917      	ldr	r1, [pc, #92]	; (164bc <wsRxHandler(str&, CharDev&, void*)+0x70>)
   1645e:	f002 fa35 	bl	188cc <str::scanf(char const*, ...)>
   16462:	2500      	movs	r5, #0
   16464:	9901      	ldr	r1, [sp, #4]
   16466:	a802      	add	r0, sp, #8
   16468:	f7fb fa4c 	bl	11904 <wireless_get_rx_pkt>
   1646c:	b1d8      	cbz	r0, 164a6 <wsRxHandler(str&, CharDev&, void*)+0x5a>
   1646e:	f89d 2008 	ldrb.w	r2, [sp, #8]
   16472:	4913      	ldr	r1, [pc, #76]	; (164c0 <wsRxHandler(str&, CharDev&, void*)+0x74>)
   16474:	4620      	mov	r0, r4
   16476:	f7f9 ff11 	bl	1029c <CharDev::printf(char const*, ...)>
   1647a:	2500      	movs	r5, #0
   1647c:	f89d 300f 	ldrb.w	r3, [sp, #15]
   16480:	429d      	cmp	r5, r3
   16482:	da0a      	bge.n	1649a <wsRxHandler(str&, CharDev&, void*)+0x4e>
   16484:	ab02      	add	r3, sp, #8
   16486:	1959      	adds	r1, r3, r5
   16488:	6823      	ldr	r3, [r4, #0]
   1648a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1648e:	685b      	ldr	r3, [r3, #4]
   16490:	7a09      	ldrb	r1, [r1, #8]
   16492:	4620      	mov	r0, r4
   16494:	4798      	blx	r3
   16496:	3501      	adds	r5, #1
   16498:	e7f0      	b.n	1647c <wsRxHandler(str&, CharDev&, void*)+0x30>
   1649a:	490a      	ldr	r1, [pc, #40]	; (164c4 <wsRxHandler(str&, CharDev&, void*)+0x78>)
   1649c:	4620      	mov	r0, r4
   1649e:	f7f9 fefd 	bl	1029c <CharDev::printf(char const*, ...)>
   164a2:	2501      	movs	r5, #1
   164a4:	e7de      	b.n	16464 <wsRxHandler(str&, CharDev&, void*)+0x18>
   164a6:	b92d      	cbnz	r5, 164b4 <wsRxHandler(str&, CharDev&, void*)+0x68>
   164a8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   164ac:	4906      	ldr	r1, [pc, #24]	; (164c8 <wsRxHandler(str&, CharDev&, void*)+0x7c>)
   164ae:	4620      	mov	r0, r4
   164b0:	f7f9 febe 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   164b4:	2001      	movs	r0, #1
   164b6:	b00b      	add	sp, #44	; 0x2c
   164b8:	bd30      	pop	{r4, r5, pc}
   164ba:	bf00      	nop
   164bc:	00025235 	.word	0x00025235
   164c0:	00024586 	.word	0x00024586
   164c4:	000251e3 	.word	0x000251e3
   164c8:	0002459d 	.word	0x0002459d

000164cc <wsRteHandler(str&, CharDev&, void*)>:
_Z12wsRteHandlerR3strR7CharDevPv():
   164cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
   164ce:	460c      	mov	r4, r1
   164d0:	f7fc f814 	bl	124fc <mesh_get_num_routing_entries>
   164d4:	4605      	mov	r5, r0
   164d6:	4916      	ldr	r1, [pc, #88]	; (16530 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   164d8:	4620      	mov	r0, r4
   164da:	f7f9 fedf 	bl	1029c <CharDev::printf(char const*, ...)>
   164de:	4915      	ldr	r1, [pc, #84]	; (16534 <wsRteHandler(str&, CharDev&, void*)+0x68>)
   164e0:	462a      	mov	r2, r5
   164e2:	4620      	mov	r0, r4
   164e4:	f7f9 feda 	bl	1029c <CharDev::printf(char const*, ...)>
   164e8:	4911      	ldr	r1, [pc, #68]	; (16530 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   164ea:	4620      	mov	r0, r4
   164ec:	f7f9 fed6 	bl	1029c <CharDev::printf(char const*, ...)>
   164f0:	b1d5      	cbz	r5, 16528 <wsRteHandler(str&, CharDev&, void*)+0x5c>
   164f2:	4911      	ldr	r1, [pc, #68]	; (16538 <wsRteHandler(str&, CharDev&, void*)+0x6c>)
   164f4:	4620      	mov	r0, r4
   164f6:	f7f9 fed1 	bl	1029c <CharDev::printf(char const*, ...)>
   164fa:	490d      	ldr	r1, [pc, #52]	; (16530 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   164fc:	4620      	mov	r0, r4
   164fe:	f7f9 fecd 	bl	1029c <CharDev::printf(char const*, ...)>
   16502:	2500      	movs	r5, #0
   16504:	b2e8      	uxtb	r0, r5
   16506:	f7fb ffe3 	bl	124d0 <mesh_get_routing_entry>
   1650a:	3501      	adds	r5, #1
   1650c:	b140      	cbz	r0, 16520 <wsRteHandler(str&, CharDev&, void*)+0x54>
   1650e:	7881      	ldrb	r1, [r0, #2]
   16510:	7843      	ldrb	r3, [r0, #1]
   16512:	7802      	ldrb	r2, [r0, #0]
   16514:	9100      	str	r1, [sp, #0]
   16516:	4620      	mov	r0, r4
   16518:	4908      	ldr	r1, [pc, #32]	; (1653c <wsRteHandler(str&, CharDev&, void*)+0x70>)
   1651a:	f7f9 febf 	bl	1029c <CharDev::printf(char const*, ...)>
   1651e:	e7f1      	b.n	16504 <wsRteHandler(str&, CharDev&, void*)+0x38>
   16520:	4903      	ldr	r1, [pc, #12]	; (16530 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   16522:	4620      	mov	r0, r4
   16524:	f7f9 feba 	bl	1029c <CharDev::printf(char const*, ...)>
   16528:	2001      	movs	r0, #1
   1652a:	b003      	add	sp, #12
   1652c:	bd30      	pop	{r4, r5, pc}
   1652e:	bf00      	nop
   16530:	000245ae 	.word	0x000245ae
   16534:	000245c9 	.word	0x000245c9
   16538:	000245e3 	.word	0x000245e3
   1653c:	000245fe 	.word	0x000245fe

00016540 <wirelessHandler(str&, CharDev&, void*)>:
_Z15wirelessHandlerR3strR7CharDevPv():
   16540:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   16544:	4c3c      	ldr	r4, [pc, #240]	; (16638 <wirelessHandler(str&, CharDev&, void*)+0xf8>)
   16546:	4607      	mov	r7, r0
   16548:	6826      	ldr	r6, [r4, #0]
   1654a:	4689      	mov	r9, r1
   1654c:	2e00      	cmp	r6, #0
   1654e:	d162      	bne.n	16616 <wirelessHandler(str&, CharDev&, void*)+0xd6>
   16550:	2024      	movs	r0, #36	; 0x24
   16552:	f7fb f83d 	bl	115d0 <operator new(unsigned int)>
   16556:	2304      	movs	r3, #4
   16558:	4605      	mov	r5, r0
   1655a:	e880 0048 	stmia.w	r0, {r3, r6}
   1655e:	6086      	str	r6, [r0, #8]
   16560:	60c6      	str	r6, [r0, #12]
   16562:	2120      	movs	r1, #32
   16564:	4630      	mov	r0, r6
   16566:	f008 f961 	bl	1e82c <realloc>
   1656a:	68ae      	ldr	r6, [r5, #8]
   1656c:	60e8      	str	r0, [r5, #12]
   1656e:	ea4f 0886 	mov.w	r8, r6, lsl #2
   16572:	2e07      	cmp	r6, #7
   16574:	d80e      	bhi.n	16594 <wirelessHandler(str&, CharDev&, void*)+0x54>
   16576:	2010      	movs	r0, #16
   16578:	f7fb f82a 	bl	115d0 <operator new(unsigned int)>
   1657c:	4682      	mov	sl, r0
   1657e:	2210      	movs	r2, #16
   16580:	2100      	movs	r1, #0
   16582:	f006 feea 	bl	1d35a <memset>
   16586:	68eb      	ldr	r3, [r5, #12]
   16588:	3601      	adds	r6, #1
   1658a:	f843 a008 	str.w	sl, [r3, r8]
   1658e:	f108 0804 	add.w	r8, r8, #4
   16592:	e7ee      	b.n	16572 <wirelessHandler(str&, CharDev&, void*)+0x32>
   16594:	2600      	movs	r6, #0
   16596:	2308      	movs	r3, #8
   16598:	606b      	str	r3, [r5, #4]
   1659a:	f04f 0801 	mov.w	r8, #1
   1659e:	4b27      	ldr	r3, [pc, #156]	; (1663c <wirelessHandler(str&, CharDev&, void*)+0xfc>)
   165a0:	4a27      	ldr	r2, [pc, #156]	; (16640 <wirelessHandler(str&, CharDev&, void*)+0x100>)
   165a2:	4928      	ldr	r1, [pc, #160]	; (16644 <wirelessHandler(str&, CharDev&, void*)+0x104>)
   165a4:	4628      	mov	r0, r5
   165a6:	9600      	str	r6, [sp, #0]
   165a8:	f885 8020 	strb.w	r8, [r5, #32]
   165ac:	6025      	str	r5, [r4, #0]
   165ae:	f002 fd95 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   165b2:	4b25      	ldr	r3, [pc, #148]	; (16648 <wirelessHandler(str&, CharDev&, void*)+0x108>)
   165b4:	4a25      	ldr	r2, [pc, #148]	; (1664c <wirelessHandler(str&, CharDev&, void*)+0x10c>)
   165b6:	4926      	ldr	r1, [pc, #152]	; (16650 <wirelessHandler(str&, CharDev&, void*)+0x110>)
   165b8:	6820      	ldr	r0, [r4, #0]
   165ba:	9600      	str	r6, [sp, #0]
   165bc:	f002 fd8e 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   165c0:	4b24      	ldr	r3, [pc, #144]	; (16654 <wirelessHandler(str&, CharDev&, void*)+0x114>)
   165c2:	4a25      	ldr	r2, [pc, #148]	; (16658 <wirelessHandler(str&, CharDev&, void*)+0x118>)
   165c4:	4925      	ldr	r1, [pc, #148]	; (1665c <wirelessHandler(str&, CharDev&, void*)+0x11c>)
   165c6:	6820      	ldr	r0, [r4, #0]
   165c8:	9600      	str	r6, [sp, #0]
   165ca:	f002 fd87 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   165ce:	4b24      	ldr	r3, [pc, #144]	; (16660 <wirelessHandler(str&, CharDev&, void*)+0x120>)
   165d0:	4a24      	ldr	r2, [pc, #144]	; (16664 <wirelessHandler(str&, CharDev&, void*)+0x124>)
   165d2:	4925      	ldr	r1, [pc, #148]	; (16668 <wirelessHandler(str&, CharDev&, void*)+0x128>)
   165d4:	6820      	ldr	r0, [r4, #0]
   165d6:	9600      	str	r6, [sp, #0]
   165d8:	f002 fd80 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   165dc:	4b23      	ldr	r3, [pc, #140]	; (1666c <wirelessHandler(str&, CharDev&, void*)+0x12c>)
   165de:	4a24      	ldr	r2, [pc, #144]	; (16670 <wirelessHandler(str&, CharDev&, void*)+0x130>)
   165e0:	4924      	ldr	r1, [pc, #144]	; (16674 <wirelessHandler(str&, CharDev&, void*)+0x134>)
   165e2:	6820      	ldr	r0, [r4, #0]
   165e4:	9600      	str	r6, [sp, #0]
   165e6:	f002 fd79 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   165ea:	4b23      	ldr	r3, [pc, #140]	; (16678 <wirelessHandler(str&, CharDev&, void*)+0x138>)
   165ec:	4a23      	ldr	r2, [pc, #140]	; (1667c <wirelessHandler(str&, CharDev&, void*)+0x13c>)
   165ee:	4924      	ldr	r1, [pc, #144]	; (16680 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   165f0:	6820      	ldr	r0, [r4, #0]
   165f2:	f8cd 8000 	str.w	r8, [sp]
   165f6:	f002 fd71 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   165fa:	4b22      	ldr	r3, [pc, #136]	; (16684 <wirelessHandler(str&, CharDev&, void*)+0x144>)
   165fc:	4a22      	ldr	r2, [pc, #136]	; (16688 <wirelessHandler(str&, CharDev&, void*)+0x148>)
   165fe:	4920      	ldr	r1, [pc, #128]	; (16680 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   16600:	6820      	ldr	r0, [r4, #0]
   16602:	9600      	str	r6, [sp, #0]
   16604:	f002 fd6a 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16608:	9600      	str	r6, [sp, #0]
   1660a:	4b20      	ldr	r3, [pc, #128]	; (1668c <wirelessHandler(str&, CharDev&, void*)+0x14c>)
   1660c:	4a20      	ldr	r2, [pc, #128]	; (16690 <wirelessHandler(str&, CharDev&, void*)+0x150>)
   1660e:	4921      	ldr	r1, [pc, #132]	; (16694 <wirelessHandler(str&, CharDev&, void*)+0x154>)
   16610:	6820      	ldr	r0, [r4, #0]
   16612:	f002 fd63 	bl	190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   16616:	4920      	ldr	r1, [pc, #128]	; (16698 <wirelessHandler(str&, CharDev&, void*)+0x158>)
   16618:	4638      	mov	r0, r7
   1661a:	f002 fadf 	bl	18bdc <str::operator==(char const*) const>
   1661e:	b118      	cbz	r0, 16628 <wirelessHandler(str&, CharDev&, void*)+0xe8>
   16620:	491e      	ldr	r1, [pc, #120]	; (1669c <wirelessHandler(str&, CharDev&, void*)+0x15c>)
   16622:	4638      	mov	r0, r7
   16624:	f002 fb94 	bl	18d50 <str::operator=(char const*)>
   16628:	464a      	mov	r2, r9
   1662a:	4639      	mov	r1, r7
   1662c:	6820      	ldr	r0, [r4, #0]
   1662e:	b002      	add	sp, #8
   16630:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16634:	f002 be32 	b.w	1929c <CommandProcessor::handleCommand(str&, CharDev&)>
   16638:	2007c400 	.word	0x2007c400
   1663c:	00024619 	.word	0x00024619
   16640:	00024653 	.word	0x00024653
   16644:	000168ed 	.word	0x000168ed
   16648:	0002465a 	.word	0x0002465a
   1664c:	000246ae 	.word	0x000246ae
   16650:	000166c1 	.word	0x000166c1
   16654:	000246b7 	.word	0x000246b7
   16658:	000258fc 	.word	0x000258fc
   1665c:	0001644d 	.word	0x0001644d
   16660:	000246da 	.word	0x000246da
   16664:	000254f6 	.word	0x000254f6
   16668:	000162a9 	.word	0x000162a9
   1666c:	00024704 	.word	0x00024704
   16670:	00024720 	.word	0x00024720
   16674:	000164cd 	.word	0x000164cd
   16678:	00024727 	.word	0x00024727
   1667c:	0002478e 	.word	0x0002478e
   16680:	00016319 	.word	0x00016319
   16684:	00024768 	.word	0x00024768
   16688:	0002478d 	.word	0x0002478d
   1668c:	00024792 	.word	0x00024792
   16690:	000247ad 	.word	0x000247ad
   16694:	0001642d 	.word	0x0001642d
   16698:	000251e4 	.word	0x000251e4
   1669c:	0002444e 	.word	0x0002444e

000166a0 <SingletonTemplate<NordicStream>::getInstance()>:
_ZN17SingletonTemplateI12NordicStreamE11getInstanceEv():
   166a0:	b538      	push	{r3, r4, r5, lr}
   166a2:	4c06      	ldr	r4, [pc, #24]	; (166bc <SingletonTemplate<NordicStream>::getInstance()+0x1c>)
   166a4:	6823      	ldr	r3, [r4, #0]
   166a6:	b933      	cbnz	r3, 166b6 <SingletonTemplate<NordicStream>::getInstance()+0x16>
   166a8:	2058      	movs	r0, #88	; 0x58
   166aa:	f7fa ff91 	bl	115d0 <operator new(unsigned int)>
   166ae:	4605      	mov	r5, r0
   166b0:	f7fa fe68 	bl	11384 <NordicStream::NordicStream()>
   166b4:	6025      	str	r5, [r4, #0]
   166b6:	6820      	ldr	r0, [r4, #0]
   166b8:	bd38      	pop	{r3, r4, r5, pc}
   166ba:	bf00      	nop
   166bc:	2007c3fc 	.word	0x2007c3fc

000166c0 <wsFileTxHandler(str&, CharDev&, void*)>:
_ZL15wsFileTxHandlerR3strR7CharDevPv():
   166c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166c4:	4604      	mov	r4, r0
   166c6:	f2ad 5ddc 	subw	sp, sp, #1500	; 0x5dc
   166ca:	2280      	movs	r2, #128	; 0x80
   166cc:	4688      	mov	r8, r1
   166ce:	a80d      	add	r0, sp, #52	; 0x34
   166d0:	2100      	movs	r1, #0
   166d2:	f006 fe42 	bl	1d35a <memset>
   166d6:	2280      	movs	r2, #128	; 0x80
   166d8:	2100      	movs	r1, #0
   166da:	a82d      	add	r0, sp, #180	; 0xb4
   166dc:	f006 fe3d 	bl	1d35a <memset>
   166e0:	ae06      	add	r6, sp, #24
   166e2:	2300      	movs	r3, #0
   166e4:	6033      	str	r3, [r6, #0]
   166e6:	aa0d      	add	r2, sp, #52	; 0x34
   166e8:	9600      	str	r6, [sp, #0]
   166ea:	ab2d      	add	r3, sp, #180	; 0xb4
   166ec:	4975      	ldr	r1, [pc, #468]	; (168c4 <wsFileTxHandler(str&, CharDev&, void*)+0x204>)
   166ee:	4620      	mov	r0, r4
   166f0:	f002 f8ec 	bl	188cc <str::scanf(char const*, ...)>
   166f4:	2803      	cmp	r0, #3
   166f6:	d001      	beq.n	166fc <wsFileTxHandler(str&, CharDev&, void*)+0x3c>
   166f8:	2000      	movs	r0, #0
   166fa:	e0df      	b.n	168bc <wsFileTxHandler(str&, CharDev&, void*)+0x1fc>
   166fc:	2201      	movs	r2, #1
   166fe:	a90d      	add	r1, sp, #52	; 0x34
   16700:	a8ed      	add	r0, sp, #948	; 0x3b4
   16702:	f7fd f919 	bl	13938 <f_open>
   16706:	4605      	mov	r5, r0
   16708:	2800      	cmp	r0, #0
   1670a:	d1f5      	bne.n	166f8 <wsFileTxHandler(str&, CharDev&, void*)+0x38>
   1670c:	f7ff ffc8 	bl	166a0 <SingletonTemplate<NordicStream>::getInstance()>
   16710:	6833      	ldr	r3, [r6, #0]
   16712:	2280      	movs	r2, #128	; 0x80
   16714:	f880 3053 	strb.w	r3, [r0, #83]	; 0x53
   16718:	a94d      	add	r1, sp, #308	; 0x134
   1671a:	4604      	mov	r4, r0
   1671c:	a808      	add	r0, sp, #32
   1671e:	f88d 5017 	strb.w	r5, [sp, #23]
   16722:	9507      	str	r5, [sp, #28]
   16724:	f002 f8a2 	bl	1886c <str::str(char*, int)>
   16728:	ab2d      	add	r3, sp, #180	; 0xb4
   1672a:	9300      	str	r3, [sp, #0]
   1672c:	6833      	ldr	r3, [r6, #0]
   1672e:	aa0d      	add	r2, sp, #52	; 0x34
   16730:	4965      	ldr	r1, [pc, #404]	; (168c8 <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   16732:	4640      	mov	r0, r8
   16734:	f7f9 fdb2 	bl	1029c <CharDev::printf(char const*, ...)>
   16738:	46a9      	mov	r9, r5
   1673a:	ae07      	add	r6, sp, #28
   1673c:	4633      	mov	r3, r6
   1673e:	f44f 7200 	mov.w	r2, #512	; 0x200
   16742:	a96d      	add	r1, sp, #436	; 0x1b4
   16744:	a8ed      	add	r0, sp, #948	; 0x3b4
   16746:	f7fd f991 	bl	13a6c <f_read>
   1674a:	2800      	cmp	r0, #0
   1674c:	f040 80af 	bne.w	168ae <wsFileTxHandler(str&, CharDev&, void*)+0x1ee>
   16750:	6833      	ldr	r3, [r6, #0]
   16752:	2b00      	cmp	r3, #0
   16754:	f000 80ab 	beq.w	168ae <wsFileTxHandler(str&, CharDev&, void*)+0x1ee>
   16758:	1c6f      	adds	r7, r5, #1
   1675a:	6832      	ldr	r2, [r6, #0]
   1675c:	495b      	ldr	r1, [pc, #364]	; (168cc <wsFileTxHandler(str&, CharDev&, void*)+0x20c>)
   1675e:	4620      	mov	r0, r4
   16760:	f7f9 fd9c 	bl	1029c <CharDev::printf(char const*, ...)>
   16764:	6823      	ldr	r3, [r4, #0]
   16766:	4620      	mov	r0, r4
   16768:	689b      	ldr	r3, [r3, #8]
   1676a:	4798      	blx	r3
   1676c:	1e7d      	subs	r5, r7, #1
   1676e:	f50d 7bda 	add.w	fp, sp, #436	; 0x1b4
   16772:	f04f 0a00 	mov.w	sl, #0
   16776:	ab6d      	add	r3, sp, #436	; 0x1b4
   16778:	6832      	ldr	r2, [r6, #0]
   1677a:	ebc3 030b 	rsb	r3, r3, fp
   1677e:	429a      	cmp	r2, r3
   16780:	6823      	ldr	r3, [r4, #0]
   16782:	d90c      	bls.n	1679e <wsFileTxHandler(str&, CharDev&, void*)+0xde>
   16784:	f8cd b00c 	str.w	fp, [sp, #12]
   16788:	685b      	ldr	r3, [r3, #4]
   1678a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1678e:	f81b 1b01 	ldrb.w	r1, [fp], #1
   16792:	4620      	mov	r0, r4
   16794:	4798      	blx	r3
   16796:	9b03      	ldr	r3, [sp, #12]
   16798:	781b      	ldrb	r3, [r3, #0]
   1679a:	449a      	add	sl, r3
   1679c:	e7eb      	b.n	16776 <wsFileTxHandler(str&, CharDev&, void*)+0xb6>
   1679e:	689b      	ldr	r3, [r3, #8]
   167a0:	4620      	mov	r0, r4
   167a2:	4798      	blx	r3
   167a4:	a808      	add	r0, sp, #32
   167a6:	f002 fa1b 	bl	18be0 <str::operator()() const>
   167aa:	4683      	mov	fp, r0
   167ac:	a808      	add	r0, sp, #32
   167ae:	f002 f887 	bl	188c0 <str::getCapacity() const>
   167b2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   167b6:	4602      	mov	r2, r0
   167b8:	4659      	mov	r1, fp
   167ba:	4620      	mov	r0, r4
   167bc:	f7f9 fd46 	bl	1024c <CharDev::gets(char*, int, unsigned int)>
   167c0:	2220      	movs	r2, #32
   167c2:	2101      	movs	r1, #1
   167c4:	eb0d 0002 	add.w	r0, sp, r2
   167c8:	f002 f9b6 	bl	18b38 <str::eraseFirstWords(int, char)>
   167cc:	a808      	add	r0, sp, #32
   167ce:	f002 fa09 	bl	18be4 <str::operator int() const>
   167d2:	4582      	cmp	sl, r0
   167d4:	d020      	beq.n	16818 <wsFileTxHandler(str&, CharDev&, void*)+0x158>
   167d6:	a808      	add	r0, sp, #32
   167d8:	f002 fa04 	bl	18be4 <str::operator int() const>
   167dc:	4652      	mov	r2, sl
   167de:	4603      	mov	r3, r0
   167e0:	493b      	ldr	r1, [pc, #236]	; (168d0 <wsFileTxHandler(str&, CharDev&, void*)+0x210>)
   167e2:	4640      	mov	r0, r8
   167e4:	f7f9 fd5a 	bl	1029c <CharDev::printf(char const*, ...)>
   167e8:	493a      	ldr	r1, [pc, #232]	; (168d4 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   167ea:	4620      	mov	r0, r4
   167ec:	f7f9 fd56 	bl	1029c <CharDev::printf(char const*, ...)>
   167f0:	6823      	ldr	r3, [r4, #0]
   167f2:	4620      	mov	r0, r4
   167f4:	689b      	ldr	r3, [r3, #8]
   167f6:	4798      	blx	r3
   167f8:	6823      	ldr	r3, [r4, #0]
   167fa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   167fe:	681b      	ldr	r3, [r3, #0]
   16800:	f10d 0117 	add.w	r1, sp, #23
   16804:	4620      	mov	r0, r4
   16806:	4798      	blx	r3
   16808:	2800      	cmp	r0, #0
   1680a:	d1f5      	bne.n	167f8 <wsFileTxHandler(str&, CharDev&, void*)+0x138>
   1680c:	2f02      	cmp	r7, #2
   1680e:	f107 0301 	add.w	r3, r7, #1
   16812:	d84c      	bhi.n	168ae <wsFileTxHandler(str&, CharDev&, void*)+0x1ee>
   16814:	461f      	mov	r7, r3
   16816:	e7a0      	b.n	1675a <wsFileTxHandler(str&, CharDev&, void*)+0x9a>
   16818:	6833      	ldr	r3, [r6, #0]
   1681a:	aa2d      	add	r2, sp, #180	; 0xb4
   1681c:	492e      	ldr	r1, [pc, #184]	; (168d8 <wsFileTxHandler(str&, CharDev&, void*)+0x218>)
   1681e:	9300      	str	r3, [sp, #0]
   16820:	4620      	mov	r0, r4
   16822:	464b      	mov	r3, r9
   16824:	f7f9 fd3a 	bl	1029c <CharDev::printf(char const*, ...)>
   16828:	6823      	ldr	r3, [r4, #0]
   1682a:	4620      	mov	r0, r4
   1682c:	689b      	ldr	r3, [r3, #8]
   1682e:	4798      	blx	r3
   16830:	a808      	add	r0, sp, #32
   16832:	f002 f9d5 	bl	18be0 <str::operator()() const>
   16836:	4682      	mov	sl, r0
   16838:	a808      	add	r0, sp, #32
   1683a:	f002 f841 	bl	188c0 <str::getCapacity() const>
   1683e:	4651      	mov	r1, sl
   16840:	4602      	mov	r2, r0
   16842:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   16846:	4620      	mov	r0, r4
   16848:	f7f9 fd00 	bl	1024c <CharDev::gets(char*, int, unsigned int)>
   1684c:	4923      	ldr	r1, [pc, #140]	; (168dc <wsFileTxHandler(str&, CharDev&, void*)+0x21c>)
   1684e:	a808      	add	r0, sp, #32
   16850:	f002 f8c2 	bl	189d8 <str::containsIgnoreCase(char const*) const>
   16854:	b9d0      	cbnz	r0, 1688c <wsFileTxHandler(str&, CharDev&, void*)+0x1cc>
   16856:	a808      	add	r0, sp, #32
   16858:	f002 f9c2 	bl	18be0 <str::operator()() const>
   1685c:	4920      	ldr	r1, [pc, #128]	; (168e0 <wsFileTxHandler(str&, CharDev&, void*)+0x220>)
   1685e:	4602      	mov	r2, r0
   16860:	4640      	mov	r0, r8
   16862:	f7f9 fd1b 	bl	1029c <CharDev::printf(char const*, ...)>
   16866:	491b      	ldr	r1, [pc, #108]	; (168d4 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   16868:	4620      	mov	r0, r4
   1686a:	f7f9 fd17 	bl	1029c <CharDev::printf(char const*, ...)>
   1686e:	6823      	ldr	r3, [r4, #0]
   16870:	4620      	mov	r0, r4
   16872:	689b      	ldr	r3, [r3, #8]
   16874:	4798      	blx	r3
   16876:	6823      	ldr	r3, [r4, #0]
   16878:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1687c:	681b      	ldr	r3, [r3, #0]
   1687e:	f10d 0117 	add.w	r1, sp, #23
   16882:	4620      	mov	r0, r4
   16884:	4798      	blx	r3
   16886:	2800      	cmp	r0, #0
   16888:	d1f5      	bne.n	16876 <wsFileTxHandler(str&, CharDev&, void*)+0x1b6>
   1688a:	e7bf      	b.n	1680c <wsFileTxHandler(str&, CharDev&, void*)+0x14c>
   1688c:	4915      	ldr	r1, [pc, #84]	; (168e4 <wsFileTxHandler(str&, CharDev&, void*)+0x224>)
   1688e:	a808      	add	r0, sp, #32
   16890:	f002 fa5e 	bl	18d50 <str::operator=(char const*)>
   16894:	6833      	ldr	r3, [r6, #0]
   16896:	4914      	ldr	r1, [pc, #80]	; (168e8 <wsFileTxHandler(str&, CharDev&, void*)+0x228>)
   16898:	4499      	add	r9, r3
   1689a:	464a      	mov	r2, r9
   1689c:	9bf0      	ldr	r3, [sp, #960]	; 0x3c0
   1689e:	4640      	mov	r0, r8
   168a0:	f7f9 fcfc 	bl	1029c <CharDev::printf(char const*, ...)>
   168a4:	2d00      	cmp	r5, #0
   168a6:	f43f af48 	beq.w	1673a <wsFileTxHandler(str&, CharDev&, void*)+0x7a>
   168aa:	1ebd      	subs	r5, r7, #2
   168ac:	e745      	b.n	1673a <wsFileTxHandler(str&, CharDev&, void*)+0x7a>
   168ae:	a8ed      	add	r0, sp, #948	; 0x3b4
   168b0:	f7fd faab 	bl	13e0a <f_close>
   168b4:	a808      	add	r0, sp, #32
   168b6:	f001 ffee 	bl	18896 <str::~str()>
   168ba:	2001      	movs	r0, #1
   168bc:	f20d 5ddc 	addw	sp, sp, #1500	; 0x5dc
   168c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168c4:	000247b3 	.word	0x000247b3
   168c8:	000247c2 	.word	0x000247c2
   168cc:	000247d9 	.word	0x000247d9
   168d0:	000247eb 	.word	0x000247eb
   168d4:	000251e3 	.word	0x000251e3
   168d8:	00024812 	.word	0x00024812
   168dc:	00024828 	.word	0x00024828
   168e0:	0002482b 	.word	0x0002482b
   168e4:	000251e4 	.word	0x000251e4
   168e8:	00024863 	.word	0x00024863

000168ec <wsStreamHandler(str&, CharDev&, void*)>:
_ZL15wsStreamHandlerR3strR7CharDevPv():
   168ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   168f0:	4607      	mov	r7, r0
   168f2:	b086      	sub	sp, #24
   168f4:	aa06      	add	r2, sp, #24
   168f6:	2400      	movs	r4, #0
   168f8:	f842 4d0c 	str.w	r4, [r2, #-12]!
   168fc:	460e      	mov	r6, r1
   168fe:	493d      	ldr	r1, [pc, #244]	; (169f4 <wsStreamHandler(str&, CharDev&, void*)+0x108>)
   16900:	f001 ffe4 	bl	188cc <str::scanf(char const*, ...)>
   16904:	2220      	movs	r2, #32
   16906:	2101      	movs	r1, #1
   16908:	4638      	mov	r0, r7
   1690a:	f002 f915 	bl	18b38 <str::eraseFirstWords(int, char)>
   1690e:	9b03      	ldr	r3, [sp, #12]
   16910:	2b00      	cmp	r3, #0
   16912:	d065      	beq.n	169e0 <wsStreamHandler(str&, CharDev&, void*)+0xf4>
   16914:	4638      	mov	r0, r7
   16916:	f001 ffd0 	bl	188ba <str::getLen() const>
   1691a:	2800      	cmp	r0, #0
   1691c:	d060      	beq.n	169e0 <wsStreamHandler(str&, CharDev&, void*)+0xf4>
   1691e:	f7ff febf 	bl	166a0 <SingletonTemplate<NordicStream>::getInstance()>
   16922:	4605      	mov	r5, r0
   16924:	f10d 0818 	add.w	r8, sp, #24
   16928:	f808 4d0d 	strb.w	r4, [r8, #-13]!
   1692c:	682b      	ldr	r3, [r5, #0]
   1692e:	2205      	movs	r2, #5
   16930:	681b      	ldr	r3, [r3, #0]
   16932:	4641      	mov	r1, r8
   16934:	4628      	mov	r0, r5
   16936:	4798      	blx	r3
   16938:	4604      	mov	r4, r0
   1693a:	2800      	cmp	r0, #0
   1693c:	d1f6      	bne.n	1692c <wsStreamHandler(str&, CharDev&, void*)+0x40>
   1693e:	9b03      	ldr	r3, [sp, #12]
   16940:	4638      	mov	r0, r7
   16942:	f885 3053 	strb.w	r3, [r5, #83]	; 0x53
   16946:	f002 f94b 	bl	18be0 <str::operator()() const>
   1694a:	4627      	mov	r7, r4
   1694c:	4601      	mov	r1, r0
   1694e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16952:	4628      	mov	r0, r5
   16954:	f7f9 fc6c 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   16958:	682b      	ldr	r3, [r5, #0]
   1695a:	4628      	mov	r0, r5
   1695c:	689b      	ldr	r3, [r3, #8]
   1695e:	4798      	blx	r3
   16960:	4b25      	ldr	r3, [pc, #148]	; (169f8 <wsStreamHandler(str&, CharDev&, void*)+0x10c>)
   16962:	f10d 0918 	add.w	r9, sp, #24
   16966:	6818      	ldr	r0, [r3, #0]
   16968:	f849 4d04 	str.w	r4, [r9, #-4]!
   1696c:	9004      	str	r0, [sp, #16]
   1696e:	682b      	ldr	r3, [r5, #0]
   16970:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16974:	681b      	ldr	r3, [r3, #0]
   16976:	4641      	mov	r1, r8
   16978:	4628      	mov	r0, r5
   1697a:	4798      	blx	r3
   1697c:	b1d0      	cbz	r0, 169b4 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
   1697e:	2203      	movs	r2, #3
   16980:	f10d 0115 	add.w	r1, sp, #21
   16984:	4648      	mov	r0, r9
   16986:	f006 fccd 	bl	1d324 <memmove>
   1698a:	f89d a00b 	ldrb.w	sl, [sp, #11]
   1698e:	2204      	movs	r2, #4
   16990:	a904      	add	r1, sp, #16
   16992:	4648      	mov	r0, r9
   16994:	f88d a017 	strb.w	sl, [sp, #23]
   16998:	f006 fcaa 	bl	1d2f0 <memcmp>
   1699c:	b150      	cbz	r0, 169b4 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
   1699e:	6833      	ldr	r3, [r6, #0]
   169a0:	2201      	movs	r2, #1
   169a2:	685b      	ldr	r3, [r3, #4]
   169a4:	4651      	mov	r1, sl
   169a6:	4630      	mov	r0, r6
   169a8:	3701      	adds	r7, #1
   169aa:	4798      	blx	r3
   169ac:	2800      	cmp	r0, #0
   169ae:	d1de      	bne.n	1696e <wsStreamHandler(str&, CharDev&, void*)+0x82>
   169b0:	3401      	adds	r4, #1
   169b2:	e7dc      	b.n	1696e <wsStreamHandler(str&, CharDev&, void*)+0x82>
   169b4:	2218      	movs	r2, #24
   169b6:	fbb7 f3f2 	udiv	r3, r7, r2
   169ba:	fb02 7213 	mls	r2, r2, r3, r7
   169be:	b102      	cbz	r2, 169c2 <wsStreamHandler(str&, CharDev&, void*)+0xd6>
   169c0:	3301      	adds	r3, #1
   169c2:	463a      	mov	r2, r7
   169c4:	490d      	ldr	r1, [pc, #52]	; (169fc <wsStreamHandler(str&, CharDev&, void*)+0x110>)
   169c6:	4630      	mov	r0, r6
   169c8:	f7f9 fc68 	bl	1029c <CharDev::printf(char const*, ...)>
   169cc:	b174      	cbz	r4, 169ec <wsStreamHandler(str&, CharDev&, void*)+0x100>
   169ce:	2361      	movs	r3, #97	; 0x61
   169d0:	9300      	str	r3, [sp, #0]
   169d2:	4622      	mov	r2, r4
   169d4:	4b0a      	ldr	r3, [pc, #40]	; (16a00 <wsStreamHandler(str&, CharDev&, void*)+0x114>)
   169d6:	490b      	ldr	r1, [pc, #44]	; (16a04 <wsStreamHandler(str&, CharDev&, void*)+0x118>)
   169d8:	4630      	mov	r0, r6
   169da:	f7f9 fc5f 	bl	1029c <CharDev::printf(char const*, ...)>
   169de:	e005      	b.n	169ec <wsStreamHandler(str&, CharDev&, void*)+0x100>
   169e0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   169e4:	4908      	ldr	r1, [pc, #32]	; (16a08 <wsStreamHandler(str&, CharDev&, void*)+0x11c>)
   169e6:	4630      	mov	r0, r6
   169e8:	f7f9 fc22 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   169ec:	2001      	movs	r0, #1
   169ee:	b006      	add	sp, #24
   169f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   169f4:	00025235 	.word	0x00025235
   169f8:	0002446f 	.word	0x0002446f
   169fc:	0002486f 	.word	0x0002486f
   16a00:	00024896 	.word	0x00024896
   16a04:	000248cf 	.word	0x000248cf
   16a08:	00024988 	.word	0x00024988

00016a0c <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
   16a0c:	b570      	push	{r4, r5, r6, lr}
   16a0e:	4d0f      	ldr	r5, [pc, #60]	; (16a4c <Storage::getFlashDrive()+0x40>)
   16a10:	4e0f      	ldr	r6, [pc, #60]	; (16a50 <Storage::getFlashDrive()+0x44>)
   16a12:	682c      	ldr	r4, [r5, #0]
   16a14:	f014 0401 	ands.w	r4, r4, #1
   16a18:	d115      	bne.n	16a46 <Storage::getFlashDrive()+0x3a>
   16a1a:	4628      	mov	r0, r5
   16a1c:	f005 f8e6 	bl	1bbec <__cxa_guard_acquire>
   16a20:	b188      	cbz	r0, 16a46 <Storage::getFlashDrive()+0x3a>
   16a22:	f44f 700e 	mov.w	r0, #568	; 0x238
   16a26:	f7fa fdd3 	bl	115d0 <operator new(unsigned int)>
   16a2a:	2330      	movs	r3, #48	; 0x30
   16a2c:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
   16a30:	233a      	movs	r3, #58	; 0x3a
   16a32:	f880 4234 	strb.w	r4, [r0, #564]	; 0x234
   16a36:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
   16a3a:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
   16a3e:	6030      	str	r0, [r6, #0]
   16a40:	4628      	mov	r0, r5
   16a42:	f005 f8df 	bl	1bc04 <__cxa_guard_release>
   16a46:	6830      	ldr	r0, [r6, #0]
   16a48:	bd70      	pop	{r4, r5, r6, pc}
   16a4a:	bf00      	nop
   16a4c:	2007c414 	.word	0x2007c414
   16a50:	2007c418 	.word	0x2007c418

00016a54 <Storage::getSDDrive()>:
_ZN7Storage10getSDDriveEv():
   16a54:	b570      	push	{r4, r5, r6, lr}
   16a56:	4d0f      	ldr	r5, [pc, #60]	; (16a94 <Storage::getSDDrive()+0x40>)
   16a58:	4e0f      	ldr	r6, [pc, #60]	; (16a98 <Storage::getSDDrive()+0x44>)
   16a5a:	682b      	ldr	r3, [r5, #0]
   16a5c:	f013 0401 	ands.w	r4, r3, #1
   16a60:	d116      	bne.n	16a90 <Storage::getSDDrive()+0x3c>
   16a62:	4628      	mov	r0, r5
   16a64:	f005 f8c2 	bl	1bbec <__cxa_guard_acquire>
   16a68:	b190      	cbz	r0, 16a90 <Storage::getSDDrive()+0x3c>
   16a6a:	f44f 700e 	mov.w	r0, #568	; 0x238
   16a6e:	f7fa fdaf 	bl	115d0 <operator new(unsigned int)>
   16a72:	2301      	movs	r3, #1
   16a74:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
   16a78:	2331      	movs	r3, #49	; 0x31
   16a7a:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
   16a7e:	233a      	movs	r3, #58	; 0x3a
   16a80:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
   16a84:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
   16a88:	6030      	str	r0, [r6, #0]
   16a8a:	4628      	mov	r0, r5
   16a8c:	f005 f8ba 	bl	1bc04 <__cxa_guard_release>
   16a90:	6830      	ldr	r0, [r6, #0]
   16a92:	bd70      	pop	{r4, r5, r6, pc}
   16a94:	2007c40c 	.word	0x2007c40c
   16a98:	2007c410 	.word	0x2007c410

00016a9c <UARTHandler(str&, CharDev&, void*)>:
_Z11UARTHandlerR3strR7CharDevPv():
   16a9c:	b570      	push	{r4, r5, r6, lr}
   16a9e:	4d1d      	ldr	r5, [pc, #116]	; (16b14 <UARTHandler(str&, CharDev&, void*)+0x78>)
   16aa0:	4604      	mov	r4, r0
   16aa2:	682b      	ldr	r3, [r5, #0]
   16aa4:	b933      	cbnz	r3, 16ab4 <UARTHandler(str&, CharDev&, void*)+0x18>
   16aa6:	202c      	movs	r0, #44	; 0x2c
   16aa8:	f7fa fd92 	bl	115d0 <operator new(unsigned int)>
   16aac:	4606      	mov	r6, r0
   16aae:	f7fa fbd5 	bl	1125c <Uart3::Uart3()>
   16ab2:	602e      	str	r6, [r5, #0]
   16ab4:	4918      	ldr	r1, [pc, #96]	; (16b18 <UARTHandler(str&, CharDev&, void*)+0x7c>)
   16ab6:	4620      	mov	r0, r4
   16ab8:	682d      	ldr	r5, [r5, #0]
   16aba:	f002 f88f 	bl	18bdc <str::operator==(char const*) const>
   16abe:	b970      	cbnz	r0, 16ade <UARTHandler(str&, CharDev&, void*)+0x42>
   16ac0:	4916      	ldr	r1, [pc, #88]	; (16b1c <UARTHandler(str&, CharDev&, void*)+0x80>)
   16ac2:	4620      	mov	r0, r4
   16ac4:	f002 f88a 	bl	18bdc <str::operator==(char const*) const>
   16ac8:	b948      	cbnz	r0, 16ade <UARTHandler(str&, CharDev&, void*)+0x42>
   16aca:	4915      	ldr	r1, [pc, #84]	; (16b20 <UARTHandler(str&, CharDev&, void*)+0x84>)
   16acc:	4620      	mov	r0, r4
   16ace:	f002 f885 	bl	18bdc <str::operator==(char const*) const>
   16ad2:	b920      	cbnz	r0, 16ade <UARTHandler(str&, CharDev&, void*)+0x42>
   16ad4:	4913      	ldr	r1, [pc, #76]	; (16b24 <UARTHandler(str&, CharDev&, void*)+0x88>)
   16ad6:	4620      	mov	r0, r4
   16ad8:	f002 f880 	bl	18bdc <str::operator==(char const*) const>
   16adc:	b158      	cbz	r0, 16af6 <UARTHandler(str&, CharDev&, void*)+0x5a>
   16ade:	682b      	ldr	r3, [r5, #0]
   16ae0:	2100      	movs	r1, #0
   16ae2:	4620      	mov	r0, r4
   16ae4:	685e      	ldr	r6, [r3, #4]
   16ae6:	f002 f880 	bl	18bea <str::operator[](int)>
   16aea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16aee:	7801      	ldrb	r1, [r0, #0]
   16af0:	4628      	mov	r0, r5
   16af2:	47b0      	blx	r6
   16af4:	e00b      	b.n	16b0e <UARTHandler(str&, CharDev&, void*)+0x72>
   16af6:	490c      	ldr	r1, [pc, #48]	; (16b28 <UARTHandler(str&, CharDev&, void*)+0x8c>)
   16af8:	4620      	mov	r0, r4
   16afa:	f002 f86f 	bl	18bdc <str::operator==(char const*) const>
   16afe:	b130      	cbz	r0, 16b0e <UARTHandler(str&, CharDev&, void*)+0x72>
   16b00:	682b      	ldr	r3, [r5, #0]
   16b02:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16b06:	685b      	ldr	r3, [r3, #4]
   16b08:	2135      	movs	r1, #53	; 0x35
   16b0a:	4628      	mov	r0, r5
   16b0c:	4798      	blx	r3
   16b0e:	2001      	movs	r0, #1
   16b10:	bd70      	pop	{r4, r5, r6, pc}
   16b12:	bf00      	nop
   16b14:	2007c1f0 	.word	0x2007c1f0
   16b18:	000249d3 	.word	0x000249d3
   16b1c:	000259a3 	.word	0x000259a3
   16b20:	000249d5 	.word	0x000249d5
   16b24:	000249d7 	.word	0x000249d7
   16b28:	000249d9 	.word	0x000249d9

00016b2c <taskListHandler(str&, CharDev&, void*)>:
_Z15taskListHandlerR3strR7CharDevPv():
   16b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b30:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   16b34:	460f      	mov	r7, r1
   16b36:	f002 f855 	bl	18be4 <str::operator int() const>
   16b3a:	1e04      	subs	r4, r0, #0
   16b3c:	dd04      	ble.n	16b48 <taskListHandler(str&, CharDev&, void*)+0x1c>
   16b3e:	f003 fe03 	bl	1a748 <vTaskResetRunTimeStats>
   16b42:	4620      	mov	r0, r4
   16b44:	f003 fb92 	bl	1a26c <vTaskDelay>
   16b48:	f10d 0914 	add.w	r9, sp, #20
   16b4c:	464c      	mov	r4, r9
   16b4e:	4d2a      	ldr	r5, [pc, #168]	; (16bf8 <taskListHandler(str&, CharDev&, void*)+0xcc>)
   16b50:	f04f 0b64 	mov.w	fp, #100	; 0x64
   16b54:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   16b56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   16b58:	682b      	ldr	r3, [r5, #0]
   16b5a:	aa04      	add	r2, sp, #16
   16b5c:	6023      	str	r3, [r4, #0]
   16b5e:	2110      	movs	r1, #16
   16b60:	2400      	movs	r4, #0
   16b62:	a80a      	add	r0, sp, #40	; 0x28
   16b64:	9404      	str	r4, [sp, #16]
   16b66:	f003 fba9 	bl	1a2bc <uxTaskGetSystemState>
   16b6a:	4a24      	ldr	r2, [pc, #144]	; (16bfc <taskListHandler(str&, CharDev&, void*)+0xd0>)
   16b6c:	4682      	mov	sl, r0
   16b6e:	4924      	ldr	r1, [pc, #144]	; (16c00 <taskListHandler(str&, CharDev&, void*)+0xd4>)
   16b70:	4638      	mov	r0, r7
   16b72:	f7f9 fb93 	bl	1029c <CharDev::printf(char const*, ...)>
   16b76:	4626      	mov	r6, r4
   16b78:	ad0a      	add	r5, sp, #40	; 0x28
   16b7a:	f04f 0800 	mov.w	r8, #0
   16b7e:	45d0      	cmp	r8, sl
   16b80:	d01c      	beq.n	16bbc <taskListHandler(str&, CharDev&, void*)+0x90>
   16b82:	696b      	ldr	r3, [r5, #20]
   16b84:	42a3      	cmp	r3, r4
   16b86:	d115      	bne.n	16bb4 <taskListHandler(str&, CharDev&, void*)+0x88>
   16b88:	69aa      	ldr	r2, [r5, #24]
   16b8a:	9b04      	ldr	r3, [sp, #16]
   16b8c:	4416      	add	r6, r2
   16b8e:	b11b      	cbz	r3, 16b98 <taskListHandler(str&, CharDev&, void*)+0x6c>
   16b90:	fbb3 f3fb 	udiv	r3, r3, fp
   16b94:	fbb2 f3f3 	udiv	r3, r2, r3
   16b98:	7b29      	ldrb	r1, [r5, #12]
   16b9a:	9203      	str	r2, [sp, #12]
   16b9c:	9302      	str	r3, [sp, #8]
   16b9e:	8bab      	ldrh	r3, [r5, #28]
   16ba0:	9400      	str	r4, [sp, #0]
   16ba2:	009b      	lsls	r3, r3, #2
   16ba4:	9301      	str	r3, [sp, #4]
   16ba6:	f859 3021 	ldr.w	r3, [r9, r1, lsl #2]
   16baa:	686a      	ldr	r2, [r5, #4]
   16bac:	4915      	ldr	r1, [pc, #84]	; (16c04 <taskListHandler(str&, CharDev&, void*)+0xd8>)
   16bae:	4638      	mov	r0, r7
   16bb0:	f7f9 fb74 	bl	1029c <CharDev::printf(char const*, ...)>
   16bb4:	f108 0801 	add.w	r8, r8, #1
   16bb8:	3520      	adds	r5, #32
   16bba:	e7e0      	b.n	16b7e <taskListHandler(str&, CharDev&, void*)+0x52>
   16bbc:	3401      	adds	r4, #1
   16bbe:	2c0a      	cmp	r4, #10
   16bc0:	d1da      	bne.n	16b78 <taskListHandler(str&, CharDev&, void*)+0x4c>
   16bc2:	9b04      	ldr	r3, [sp, #16]
   16bc4:	2264      	movs	r2, #100	; 0x64
   16bc6:	1b9e      	subs	r6, r3, r6
   16bc8:	fbb3 f3f2 	udiv	r3, r3, r2
   16bcc:	490e      	ldr	r1, [pc, #56]	; (16c08 <taskListHandler(str&, CharDev&, void*)+0xdc>)
   16bce:	fbb6 f3f3 	udiv	r3, r6, r3
   16bd2:	4a0e      	ldr	r2, [pc, #56]	; (16c0c <taskListHandler(str&, CharDev&, void*)+0xe0>)
   16bd4:	9600      	str	r6, [sp, #0]
   16bd6:	4638      	mov	r0, r7
   16bd8:	f7f9 fb60 	bl	1029c <CharDev::printf(char const*, ...)>
   16bdc:	f003 fa18 	bl	1a010 <uxTaskGetNumberOfTasks>
   16be0:	2810      	cmp	r0, #16
   16be2:	d904      	bls.n	16bee <taskListHandler(str&, CharDev&, void*)+0xc2>
   16be4:	2210      	movs	r2, #16
   16be6:	490a      	ldr	r1, [pc, #40]	; (16c10 <taskListHandler(str&, CharDev&, void*)+0xe4>)
   16be8:	4638      	mov	r0, r7
   16bea:	f7f9 fb57 	bl	1029c <CharDev::printf(char const*, ...)>
   16bee:	2001      	movs	r0, #1
   16bf0:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   16bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bf8:	000249b4 	.word	0x000249b4
   16bfc:	000249e2 	.word	0x000249e2
   16c00:	000249e7 	.word	0x000249e7
   16c04:	00024a0e 	.word	0x00024a0e
   16c08:	00024a36 	.word	0x00024a36
   16c0c:	00024a2b 	.word	0x00024a2b
   16c10:	00024a55 	.word	0x00024a55

00016c14 <memInfoHandler(str&, CharDev&, void*)>:
_Z14memInfoHandlerR3strR7CharDevPv():
   16c14:	b510      	push	{r4, lr}
   16c16:	460c      	mov	r4, r1
   16c18:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
   16c1c:	4668      	mov	r0, sp
   16c1e:	f004 fb8f 	bl	1b340 <sys_get_mem_info_str>
   16c22:	4620      	mov	r0, r4
   16c24:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16c28:	4669      	mov	r1, sp
   16c2a:	f7f9 fb01 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   16c2e:	2001      	movs	r0, #1
   16c30:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
   16c34:	bd10      	pop	{r4, pc}
   16c36:	ffff b530 	vsli.32	d27, d16, #31

00016c38 <timeHandler(str&, CharDev&, void*)>:
_Z11timeHandlerR3strR7CharDevPv():
   16c38:	b530      	push	{r4, r5, lr}
   16c3a:	460c      	mov	r4, r1
   16c3c:	b091      	sub	sp, #68	; 0x44
   16c3e:	492c      	ldr	r1, [pc, #176]	; (16cf0 <timeHandler(str&, CharDev&, void*)+0xb8>)
   16c40:	4605      	mov	r5, r0
   16c42:	f001 fedb 	bl	189fc <str::beginsWith(char const*) const>
   16c46:	2800      	cmp	r0, #0
   16c48:	d047      	beq.n	16cda <timeHandler(str&, CharDev&, void*)+0xa2>
   16c4a:	ab0c      	add	r3, sp, #48	; 0x30
   16c4c:	9304      	str	r3, [sp, #16]
   16c4e:	ab0b      	add	r3, sp, #44	; 0x2c
   16c50:	9303      	str	r3, [sp, #12]
   16c52:	ab0a      	add	r3, sp, #40	; 0x28
   16c54:	9302      	str	r3, [sp, #8]
   16c56:	ab09      	add	r3, sp, #36	; 0x24
   16c58:	9301      	str	r3, [sp, #4]
   16c5a:	ab08      	add	r3, sp, #32
   16c5c:	9300      	str	r3, [sp, #0]
   16c5e:	aa06      	add	r2, sp, #24
   16c60:	ab07      	add	r3, sp, #28
   16c62:	4924      	ldr	r1, [pc, #144]	; (16cf4 <timeHandler(str&, CharDev&, void*)+0xbc>)
   16c64:	4628      	mov	r0, r5
   16c66:	f001 fe31 	bl	188cc <str::scanf(char const*, ...)>
   16c6a:	2807      	cmp	r0, #7
   16c6c:	d001      	beq.n	16c72 <timeHandler(str&, CharDev&, void*)+0x3a>
   16c6e:	2000      	movs	r0, #0
   16c70:	e03b      	b.n	16cea <timeHandler(str&, CharDev&, void*)+0xb2>
   16c72:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   16c76:	9a06      	ldr	r2, [sp, #24]
   16c78:	a80d      	add	r0, sp, #52	; 0x34
   16c7a:	f362 0303 	bfi	r3, r2, #0, #4
   16c7e:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   16c82:	9a07      	ldr	r2, [sp, #28]
   16c84:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   16c88:	f362 0304 	bfi	r3, r2, #0, #5
   16c8c:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   16c90:	9a08      	ldr	r2, [sp, #32]
   16c92:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   16c96:	f362 030b 	bfi	r3, r2, #0, #12
   16c9a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
   16c9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   16ca0:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   16ca4:	f362 0304 	bfi	r3, r2, #0, #5
   16ca8:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
   16cac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   16cae:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   16cb2:	f362 0305 	bfi	r3, r2, #0, #6
   16cb6:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
   16cba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   16cbc:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   16cc0:	f362 0305 	bfi	r3, r2, #0, #6
   16cc4:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
   16cc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   16cca:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   16cce:	f362 0302 	bfi	r3, r2, #0, #3
   16cd2:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   16cd6:	f7f9 ff2d 	bl	10b34 <rtc_settime>
   16cda:	f7f9 ffc7 	bl	10c6c <rtc_get_date_time_str>
   16cde:	4906      	ldr	r1, [pc, #24]	; (16cf8 <timeHandler(str&, CharDev&, void*)+0xc0>)
   16ce0:	4602      	mov	r2, r0
   16ce2:	4620      	mov	r0, r4
   16ce4:	f7f9 fada 	bl	1029c <CharDev::printf(char const*, ...)>
   16ce8:	2001      	movs	r0, #1
   16cea:	b011      	add	sp, #68	; 0x44
   16cec:	bd30      	pop	{r4, r5, pc}
   16cee:	bf00      	nop
   16cf0:	00025955 	.word	0x00025955
   16cf4:	00024a7f 	.word	0x00024a7f
   16cf8:	00025d12 	.word	0x00025d12

00016cfc <logHandler(str&, CharDev&, void*)>:
_Z10logHandlerR3strR7CharDevPv():
   16cfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   16cfe:	460d      	mov	r5, r1
   16d00:	494f      	ldr	r1, [pc, #316]	; (16e40 <logHandler(str&, CharDev&, void*)+0x144>)
   16d02:	4604      	mov	r4, r0
   16d04:	f001 ff6a 	bl	18bdc <str::operator==(char const*) const>
   16d08:	4606      	mov	r6, r0
   16d0a:	b140      	cbz	r0, 16d1e <logHandler(str&, CharDev&, void*)+0x22>
   16d0c:	f002 fd36 	bl	1977c <logger_send_flush_request>
   16d10:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16d14:	494b      	ldr	r1, [pc, #300]	; (16e44 <logHandler(str&, CharDev&, void*)+0x148>)
   16d16:	4628      	mov	r0, r5
   16d18:	f7f9 fa8a 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   16d1c:	e08c      	b.n	16e38 <logHandler(str&, CharDev&, void*)+0x13c>
   16d1e:	494a      	ldr	r1, [pc, #296]	; (16e48 <logHandler(str&, CharDev&, void*)+0x14c>)
   16d20:	4620      	mov	r0, r4
   16d22:	f001 ff5b 	bl	18bdc <str::operator==(char const*) const>
   16d26:	b360      	cbz	r0, 16d82 <logHandler(str&, CharDev&, void*)+0x86>
   16d28:	f002 fd4c 	bl	197c4 <logger_get_blocked_call_count>
   16d2c:	4947      	ldr	r1, [pc, #284]	; (16e4c <logHandler(str&, CharDev&, void*)+0x150>)
   16d2e:	4602      	mov	r2, r0
   16d30:	4628      	mov	r0, r5
   16d32:	f7f9 fab3 	bl	1029c <CharDev::printf(char const*, ...)>
   16d36:	f002 fd51 	bl	197dc <logger_get_num_buffers_watermark>
   16d3a:	4945      	ldr	r1, [pc, #276]	; (16e50 <logHandler(str&, CharDev&, void*)+0x154>)
   16d3c:	4602      	mov	r2, r0
   16d3e:	4628      	mov	r0, r5
   16d40:	f7f9 faac 	bl	1029c <CharDev::printf(char const*, ...)>
   16d44:	f002 fd44 	bl	197d0 <logger_get_highest_file_write_time_ms>
   16d48:	4942      	ldr	r1, [pc, #264]	; (16e54 <logHandler(str&, CharDev&, void*)+0x158>)
   16d4a:	4602      	mov	r2, r0
   16d4c:	4628      	mov	r0, r5
   16d4e:	f7f9 faa5 	bl	1029c <CharDev::printf(char const*, ...)>
   16d52:	4630      	mov	r0, r6
   16d54:	f002 fd2c 	bl	197b0 <logger_get_logged_call_count>
   16d58:	4604      	mov	r4, r0
   16d5a:	2001      	movs	r0, #1
   16d5c:	f002 fd28 	bl	197b0 <logger_get_logged_call_count>
   16d60:	4606      	mov	r6, r0
   16d62:	2002      	movs	r0, #2
   16d64:	f002 fd24 	bl	197b0 <logger_get_logged_call_count>
   16d68:	4607      	mov	r7, r0
   16d6a:	2003      	movs	r0, #3
   16d6c:	f002 fd20 	bl	197b0 <logger_get_logged_call_count>
   16d70:	9700      	str	r7, [sp, #0]
   16d72:	9001      	str	r0, [sp, #4]
   16d74:	4633      	mov	r3, r6
   16d76:	4622      	mov	r2, r4
   16d78:	4937      	ldr	r1, [pc, #220]	; (16e58 <logHandler(str&, CharDev&, void*)+0x15c>)
   16d7a:	4628      	mov	r0, r5
   16d7c:	f7f9 fa8e 	bl	1029c <CharDev::printf(char const*, ...)>
   16d80:	e05a      	b.n	16e38 <logHandler(str&, CharDev&, void*)+0x13c>
   16d82:	4936      	ldr	r1, [pc, #216]	; (16e5c <logHandler(str&, CharDev&, void*)+0x160>)
   16d84:	4620      	mov	r0, r4
   16d86:	f001 fe39 	bl	189fc <str::beginsWith(char const*) const>
   16d8a:	b150      	cbz	r0, 16da2 <logHandler(str&, CharDev&, void*)+0xa6>
   16d8c:	2220      	movs	r2, #32
   16d8e:	2101      	movs	r1, #1
   16d90:	4620      	mov	r0, r4
   16d92:	f001 fed1 	bl	18b38 <str::eraseFirstWords(int, char)>
   16d96:	4620      	mov	r0, r4
   16d98:	f001 ff22 	bl	18be0 <str::operator()() const>
   16d9c:	f002 fe38 	bl	19a10 <logger_log_raw>
   16da0:	e04a      	b.n	16e38 <logHandler(str&, CharDev&, void*)+0x13c>
   16da2:	492f      	ldr	r1, [pc, #188]	; (16e60 <logHandler(str&, CharDev&, void*)+0x164>)
   16da4:	4620      	mov	r0, r4
   16da6:	f001 fe29 	bl	189fc <str::beginsWith(char const*) const>
   16daa:	4606      	mov	r6, r0
   16dac:	b920      	cbnz	r0, 16db8 <logHandler(str&, CharDev&, void*)+0xbc>
   16dae:	492d      	ldr	r1, [pc, #180]	; (16e64 <logHandler(str&, CharDev&, void*)+0x168>)
   16db0:	4620      	mov	r0, r4
   16db2:	f001 fe23 	bl	189fc <str::beginsWith(char const*) const>
   16db6:	b360      	cbz	r0, 16e12 <logHandler(str&, CharDev&, void*)+0x116>
   16db8:	492b      	ldr	r1, [pc, #172]	; (16e68 <logHandler(str&, CharDev&, void*)+0x16c>)
   16dba:	4620      	mov	r0, r4
   16dbc:	f001 fe0c 	bl	189d8 <str::containsIgnoreCase(char const*) const>
   16dc0:	b960      	cbnz	r0, 16ddc <logHandler(str&, CharDev&, void*)+0xe0>
   16dc2:	492a      	ldr	r1, [pc, #168]	; (16e6c <logHandler(str&, CharDev&, void*)+0x170>)
   16dc4:	4620      	mov	r0, r4
   16dc6:	f001 fe07 	bl	189d8 <str::containsIgnoreCase(char const*) const>
   16dca:	b928      	cbnz	r0, 16dd8 <logHandler(str&, CharDev&, void*)+0xdc>
   16dcc:	4620      	mov	r0, r4
   16dce:	4928      	ldr	r1, [pc, #160]	; (16e70 <logHandler(str&, CharDev&, void*)+0x174>)
   16dd0:	f001 fe02 	bl	189d8 <str::containsIgnoreCase(char const*) const>
   16dd4:	4604      	mov	r4, r0
   16dd6:	e002      	b.n	16dde <logHandler(str&, CharDev&, void*)+0xe2>
   16dd8:	2403      	movs	r4, #3
   16dda:	e000      	b.n	16dde <logHandler(str&, CharDev&, void*)+0xe2>
   16ddc:	2402      	movs	r4, #2
   16dde:	4631      	mov	r1, r6
   16de0:	4620      	mov	r0, r4
   16de2:	f002 fd6d 	bl	198c0 <logger_set_printf>
   16de6:	4a23      	ldr	r2, [pc, #140]	; (16e74 <logHandler(str&, CharDev&, void*)+0x178>)
   16de8:	4b23      	ldr	r3, [pc, #140]	; (16e78 <logHandler(str&, CharDev&, void*)+0x17c>)
   16dea:	2e00      	cmp	r6, #0
   16dec:	bf18      	it	ne
   16dee:	461a      	movne	r2, r3
   16df0:	b13c      	cbz	r4, 16e02 <logHandler(str&, CharDev&, void*)+0x106>
   16df2:	2c01      	cmp	r4, #1
   16df4:	d007      	beq.n	16e06 <logHandler(str&, CharDev&, void*)+0x10a>
   16df6:	491d      	ldr	r1, [pc, #116]	; (16e6c <logHandler(str&, CharDev&, void*)+0x170>)
   16df8:	4b1b      	ldr	r3, [pc, #108]	; (16e68 <logHandler(str&, CharDev&, void*)+0x16c>)
   16dfa:	2c02      	cmp	r4, #2
   16dfc:	bf18      	it	ne
   16dfe:	460b      	movne	r3, r1
   16e00:	e002      	b.n	16e08 <logHandler(str&, CharDev&, void*)+0x10c>
   16e02:	4b1e      	ldr	r3, [pc, #120]	; (16e7c <logHandler(str&, CharDev&, void*)+0x180>)
   16e04:	e000      	b.n	16e08 <logHandler(str&, CharDev&, void*)+0x10c>
   16e06:	4b1a      	ldr	r3, [pc, #104]	; (16e70 <logHandler(str&, CharDev&, void*)+0x174>)
   16e08:	491d      	ldr	r1, [pc, #116]	; (16e80 <logHandler(str&, CharDev&, void*)+0x184>)
   16e0a:	4628      	mov	r0, r5
   16e0c:	f7f9 fa46 	bl	1029c <CharDev::printf(char const*, ...)>
   16e10:	e012      	b.n	16e38 <logHandler(str&, CharDev&, void*)+0x13c>
   16e12:	4620      	mov	r0, r4
   16e14:	f001 fee4 	bl	18be0 <str::operator()() const>
   16e18:	4a1a      	ldr	r2, [pc, #104]	; (16e84 <logHandler(str&, CharDev&, void*)+0x188>)
   16e1a:	491b      	ldr	r1, [pc, #108]	; (16e88 <logHandler(str&, CharDev&, void*)+0x18c>)
   16e1c:	9000      	str	r0, [sp, #0]
   16e1e:	f240 130f 	movw	r3, #271	; 0x10f
   16e22:	2001      	movs	r0, #1
   16e24:	f002 fd5a 	bl	198dc <logger_log>
   16e28:	4620      	mov	r0, r4
   16e2a:	f001 fed9 	bl	18be0 <str::operator()() const>
   16e2e:	4917      	ldr	r1, [pc, #92]	; (16e8c <logHandler(str&, CharDev&, void*)+0x190>)
   16e30:	4602      	mov	r2, r0
   16e32:	4628      	mov	r0, r5
   16e34:	f7f9 fa32 	bl	1029c <CharDev::printf(char const*, ...)>
   16e38:	2001      	movs	r0, #1
   16e3a:	b003      	add	sp, #12
   16e3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16e3e:	bf00      	nop
   16e40:	00024aba 	.word	0x00024aba
   16e44:	00024ac0 	.word	0x00024ac0
   16e48:	00024ad9 	.word	0x00024ad9
   16e4c:	00024ae0 	.word	0x00024ae0
   16e50:	00024af5 	.word	0x00024af5
   16e54:	00024b0a 	.word	0x00024b0a
   16e58:	00024b29 	.word	0x00024b29
   16e5c:	00024b59 	.word	0x00024b59
   16e60:	00024b5d 	.word	0x00024b5d
   16e64:	00024b65 	.word	0x00024b65
   16e68:	00024ab5 	.word	0x00024ab5
   16e6c:	00024aaf 	.word	0x00024aaf
   16e70:	00025867 	.word	0x00025867
   16e74:	00024aa0 	.word	0x00024aa0
   16e78:	00024a98 	.word	0x00024a98
   16e7c:	00024aa9 	.word	0x00024aa9
   16e80:	00024b6e 	.word	0x00024b6e
   16e84:	000249c8 	.word	0x000249c8
   16e88:	00024b87 	.word	0x00024b87
   16e8c:	00024bb7 	.word	0x00024bb7

00016e90 <cpHandler(str&, CharDev&, void*)>:
_Z9cpHandlerR3strR7CharDevPv():
   16e90:	b530      	push	{r4, r5, lr}
   16e92:	b089      	sub	sp, #36	; 0x24
   16e94:	ab04      	add	r3, sp, #16
   16e96:	2400      	movs	r4, #0
   16e98:	9300      	str	r3, [sp, #0]
   16e9a:	460d      	mov	r5, r1
   16e9c:	ab03      	add	r3, sp, #12
   16e9e:	2202      	movs	r2, #2
   16ea0:	4918      	ldr	r1, [pc, #96]	; (16f04 <cpHandler(str&, CharDev&, void*)+0x74>)
   16ea2:	9403      	str	r4, [sp, #12]
   16ea4:	9404      	str	r4, [sp, #16]
   16ea6:	f001 fd1f 	bl	188e8 <str::tokenize(char const*, int, ...)>
   16eaa:	2802      	cmp	r0, #2
   16eac:	d127      	bne.n	16efe <cpHandler(str&, CharDev&, void*)+0x6e>
   16eae:	ab07      	add	r3, sp, #28
   16eb0:	9300      	str	r3, [sp, #0]
   16eb2:	aa05      	add	r2, sp, #20
   16eb4:	ab06      	add	r3, sp, #24
   16eb6:	9904      	ldr	r1, [sp, #16]
   16eb8:	9803      	ldr	r0, [sp, #12]
   16eba:	9405      	str	r4, [sp, #20]
   16ebc:	9406      	str	r4, [sp, #24]
   16ebe:	9407      	str	r4, [sp, #28]
   16ec0:	f7fe fc30 	bl	15724 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
   16ec4:	4602      	mov	r2, r0
   16ec6:	b138      	cbz	r0, 16ed8 <cpHandler(str&, CharDev&, void*)+0x48>
   16ec8:	9b04      	ldr	r3, [sp, #16]
   16eca:	490f      	ldr	r1, [pc, #60]	; (16f08 <cpHandler(str&, CharDev&, void*)+0x78>)
   16ecc:	9300      	str	r3, [sp, #0]
   16ece:	4628      	mov	r0, r5
   16ed0:	9b03      	ldr	r3, [sp, #12]
   16ed2:	f7f9 f9e3 	bl	1029c <CharDev::printf(char const*, ...)>
   16ed6:	e010      	b.n	16efa <cpHandler(str&, CharDev&, void*)+0x6a>
   16ed8:	9a05      	ldr	r2, [sp, #20]
   16eda:	9b06      	ldr	r3, [sp, #24]
   16edc:	2a00      	cmp	r2, #0
   16ede:	9907      	ldr	r1, [sp, #28]
   16ee0:	bf08      	it	eq
   16ee2:	2201      	moveq	r2, #1
   16ee4:	2b00      	cmp	r3, #0
   16ee6:	bf08      	it	eq
   16ee8:	2301      	moveq	r3, #1
   16eea:	fbb1 f3f3 	udiv	r3, r1, r3
   16eee:	fbb1 f2f2 	udiv	r2, r1, r2
   16ef2:	4628      	mov	r0, r5
   16ef4:	4905      	ldr	r1, [pc, #20]	; (16f0c <cpHandler(str&, CharDev&, void*)+0x7c>)
   16ef6:	f7f9 f9d1 	bl	1029c <CharDev::printf(char const*, ...)>
   16efa:	2001      	movs	r0, #1
   16efc:	e000      	b.n	16f00 <cpHandler(str&, CharDev&, void*)+0x70>
   16efe:	4620      	mov	r0, r4
   16f00:	b009      	add	sp, #36	; 0x24
   16f02:	bd30      	pop	{r4, r5, pc}
   16f04:	00023dca 	.word	0x00023dca
   16f08:	00024bc5 	.word	0x00024bc5
   16f0c:	00024be4 	.word	0x00024be4

00016f10 <catHandler(str&, CharDev&, void*)>:
_Z10catHandlerR3strR7CharDevPv():
   16f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16f14:	460e      	mov	r6, r1
   16f16:	f5ad 6d85 	sub.w	sp, sp, #1064	; 0x428
   16f1a:	4939      	ldr	r1, [pc, #228]	; (17000 <catHandler(str&, CharDev&, void*)+0xf0>)
   16f1c:	4605      	mov	r5, r0
   16f1e:	f001 fdf7 	bl	18b10 <str::erase(char const*)>
   16f22:	4938      	ldr	r1, [pc, #224]	; (17004 <catHandler(str&, CharDev&, void*)+0xf4>)
   16f24:	4607      	mov	r7, r0
   16f26:	4628      	mov	r0, r5
   16f28:	f001 fe1b 	bl	18b62 <str::trimStart(char const*)>
   16f2c:	4935      	ldr	r1, [pc, #212]	; (17004 <catHandler(str&, CharDev&, void*)+0xf4>)
   16f2e:	4628      	mov	r0, r5
   16f30:	f001 fe37 	bl	18ba2 <str::trimEnd(char const*)>
   16f34:	4628      	mov	r0, r5
   16f36:	f001 fe53 	bl	18be0 <str::operator()() const>
   16f3a:	2201      	movs	r2, #1
   16f3c:	4601      	mov	r1, r0
   16f3e:	a881      	add	r0, sp, #516	; 0x204
   16f40:	f7fc fcfa 	bl	13938 <f_open>
   16f44:	4604      	mov	r4, r0
   16f46:	b140      	cbz	r0, 16f5a <catHandler(str&, CharDev&, void*)+0x4a>
   16f48:	4628      	mov	r0, r5
   16f4a:	f001 fe49 	bl	18be0 <str::operator()() const>
   16f4e:	492e      	ldr	r1, [pc, #184]	; (17008 <catHandler(str&, CharDev&, void*)+0xf8>)
   16f50:	4602      	mov	r2, r0
   16f52:	4630      	mov	r0, r6
   16f54:	f7f9 f9a2 	bl	1029c <CharDev::printf(char const*, ...)>
   16f58:	e04c      	b.n	16ff4 <catHandler(str&, CharDev&, void*)+0xe4>
   16f5a:	f10d 0a04 	add.w	sl, sp, #4
   16f5e:	4601      	mov	r1, r0
   16f60:	f44f 7200 	mov.w	r2, #512	; 0x200
   16f64:	4650      	mov	r0, sl
   16f66:	f006 f9f8 	bl	1d35a <memset>
   16f6a:	9400      	str	r4, [sp, #0]
   16f6c:	f004 f9d2 	bl	1b314 <sys_get_uptime_us>
   16f70:	4680      	mov	r8, r0
   16f72:	4689      	mov	r9, r1
   16f74:	466b      	mov	r3, sp
   16f76:	f44f 7200 	mov.w	r2, #512	; 0x200
   16f7a:	4651      	mov	r1, sl
   16f7c:	a881      	add	r0, sp, #516	; 0x204
   16f7e:	f7fc fd75 	bl	13a6c <f_read>
   16f82:	b908      	cbnz	r0, 16f88 <catHandler(str&, CharDev&, void*)+0x78>
   16f84:	9b00      	ldr	r3, [sp, #0]
   16f86:	bb23      	cbnz	r3, 16fd2 <catHandler(str&, CharDev&, void*)+0xc2>
   16f88:	a881      	add	r0, sp, #516	; 0x204
   16f8a:	f7fc ff3e 	bl	13e0a <f_close>
   16f8e:	b1cf      	cbz	r7, 16fc4 <catHandler(str&, CharDev&, void*)+0xb4>
   16f90:	f004 f9c0 	bl	1b314 <sys_get_uptime_us>
   16f94:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16f98:	2300      	movs	r3, #0
   16f9a:	f005 fde5 	bl	1cb68 <__aeabi_uldivmod>
   16f9e:	2300      	movs	r3, #0
   16fa0:	4605      	mov	r5, r0
   16fa2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16fa6:	4640      	mov	r0, r8
   16fa8:	4649      	mov	r1, r9
   16faa:	f005 fddd 	bl	1cb68 <__aeabi_uldivmod>
   16fae:	1a28      	subs	r0, r5, r0
   16fb0:	bf14      	ite	ne
   16fb2:	4603      	movne	r3, r0
   16fb4:	2301      	moveq	r3, #1
   16fb6:	fbb4 f3f3 	udiv	r3, r4, r3
   16fba:	4622      	mov	r2, r4
   16fbc:	4913      	ldr	r1, [pc, #76]	; (1700c <catHandler(str&, CharDev&, void*)+0xfc>)
   16fbe:	4630      	mov	r0, r6
   16fc0:	f7f9 f96c 	bl	1029c <CharDev::printf(char const*, ...)>
   16fc4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16fc8:	4911      	ldr	r1, [pc, #68]	; (17010 <catHandler(str&, CharDev&, void*)+0x100>)
   16fca:	4630      	mov	r0, r6
   16fcc:	f7f9 f930 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   16fd0:	e010      	b.n	16ff4 <catHandler(str&, CharDev&, void*)+0xe4>
   16fd2:	441c      	add	r4, r3
   16fd4:	2f00      	cmp	r7, #0
   16fd6:	d1cd      	bne.n	16f74 <catHandler(str&, CharDev&, void*)+0x64>
   16fd8:	463d      	mov	r5, r7
   16fda:	9b00      	ldr	r3, [sp, #0]
   16fdc:	429d      	cmp	r5, r3
   16fde:	d2c9      	bcs.n	16f74 <catHandler(str&, CharDev&, void*)+0x64>
   16fe0:	6833      	ldr	r3, [r6, #0]
   16fe2:	f81a 1005 	ldrb.w	r1, [sl, r5]
   16fe6:	685b      	ldr	r3, [r3, #4]
   16fe8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16fec:	4630      	mov	r0, r6
   16fee:	4798      	blx	r3
   16ff0:	3501      	adds	r5, #1
   16ff2:	e7f2      	b.n	16fda <catHandler(str&, CharDev&, void*)+0xca>
   16ff4:	2001      	movs	r0, #1
   16ff6:	f50d 6d85 	add.w	sp, sp, #1064	; 0x428
   16ffa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16ffe:	bf00      	nop
   17000:	00024c12 	.word	0x00024c12
   17004:	00023dca 	.word	0x00023dca
   17008:	00024c1b 	.word	0x00024c1b
   1700c:	00024c2f 	.word	0x00024c2f
   17010:	000251e4 	.word	0x000251e4

00017014 <lsHandler(str&, CharDev&, void*)>:
_Z9lsHandlerR3strR7CharDevPv():
   17014:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   17018:	2300      	movs	r3, #0
   1701a:	b0be      	sub	sp, #248	; 0xf8
   1701c:	460c      	mov	r4, r1
   1701e:	4953      	ldr	r1, [pc, #332]	; (1716c <lsHandler(str&, CharDev&, void*)+0x158>)
   17020:	4605      	mov	r5, r0
   17022:	930c      	str	r3, [sp, #48]	; 0x30
   17024:	f001 fdda 	bl	18bdc <str::operator==(char const*) const>
   17028:	b920      	cbnz	r0, 17034 <lsHandler(str&, CharDev&, void*)+0x20>
   1702a:	4628      	mov	r0, r5
   1702c:	f001 fdd8 	bl	18be0 <str::operator()() const>
   17030:	4606      	mov	r6, r0
   17032:	e000      	b.n	17036 <lsHandler(str&, CharDev&, void*)+0x22>
   17034:	4e4e      	ldr	r6, [pc, #312]	; (17170 <lsHandler(str&, CharDev&, void*)+0x15c>)
   17036:	4631      	mov	r1, r6
   17038:	a815      	add	r0, sp, #84	; 0x54
   1703a:	f7fc ff9f 	bl	13f7c <f_opendir>
   1703e:	4605      	mov	r5, r0
   17040:	b130      	cbz	r0, 17050 <lsHandler(str&, CharDev&, void*)+0x3c>
   17042:	4603      	mov	r3, r0
   17044:	4632      	mov	r2, r6
   17046:	494b      	ldr	r1, [pc, #300]	; (17174 <lsHandler(str&, CharDev&, void*)+0x160>)
   17048:	4620      	mov	r0, r4
   1704a:	f7f9 f927 	bl	1029c <CharDev::printf(char const*, ...)>
   1704e:	e089      	b.n	17164 <lsHandler(str&, CharDev&, void*)+0x150>
   17050:	4632      	mov	r2, r6
   17052:	4949      	ldr	r1, [pc, #292]	; (17178 <lsHandler(str&, CharDev&, void*)+0x164>)
   17054:	4620      	mov	r0, r4
   17056:	f7f9 f921 	bl	1029c <CharDev::printf(char const*, ...)>
   1705a:	462f      	mov	r7, r5
   1705c:	f10d 0878 	add.w	r8, sp, #120	; 0x78
   17060:	2380      	movs	r3, #128	; 0x80
   17062:	a90d      	add	r1, sp, #52	; 0x34
   17064:	a815      	add	r0, sp, #84	; 0x54
   17066:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
   1706a:	9314      	str	r3, [sp, #80]	; 0x50
   1706c:	f7fc ffca 	bl	14004 <f_readdir>
   17070:	2800      	cmp	r0, #0
   17072:	d161      	bne.n	17138 <lsHandler(str&, CharDev&, void*)+0x124>
   17074:	f89d 303d 	ldrb.w	r3, [sp, #61]	; 0x3d
   17078:	2b00      	cmp	r3, #0
   1707a:	d05d      	beq.n	17138 <lsHandler(str&, CharDev&, void*)+0x124>
   1707c:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   17080:	f10d 003d 	add.w	r0, sp, #61	; 0x3d
   17084:	06ca      	lsls	r2, r1, #27
   17086:	bf5b      	ittet	pl
   17088:	9b0d      	ldrpl	r3, [sp, #52]	; 0x34
   1708a:	9a0c      	ldrpl	r2, [sp, #48]	; 0x30
   1708c:	2244      	movmi	r2, #68	; 0x44
   1708e:	189b      	addpl	r3, r3, r2
   17090:	bf5b      	ittet	pl
   17092:	930c      	strpl	r3, [sp, #48]	; 0x30
   17094:	222d      	movpl	r2, #45	; 0x2d
   17096:	3501      	addmi	r5, #1
   17098:	3701      	addpl	r7, #1
   1709a:	f011 0f01 	tst.w	r1, #1
   1709e:	bf14      	ite	ne
   170a0:	2352      	movne	r3, #82	; 0x52
   170a2:	232d      	moveq	r3, #45	; 0x2d
   170a4:	f8bd a03a 	ldrh.w	sl, [sp, #58]	; 0x3a
   170a8:	f011 0f02 	tst.w	r1, #2
   170ac:	9009      	str	r0, [sp, #36]	; 0x24
   170ae:	980d      	ldr	r0, [sp, #52]	; 0x34
   170b0:	bf14      	ite	ne
   170b2:	f04f 0e48 	movne.w	lr, #72	; 0x48
   170b6:	f04f 0e2d 	moveq.w	lr, #45	; 0x2d
   170ba:	f011 0f04 	tst.w	r1, #4
   170be:	bf14      	ite	ne
   170c0:	f04f 0c53 	movne.w	ip, #83	; 0x53
   170c4:	f04f 0c2d 	moveq.w	ip, #45	; 0x2d
   170c8:	9008      	str	r0, [sp, #32]
   170ca:	f011 0f20 	tst.w	r1, #32
   170ce:	f3ca 1045 	ubfx	r0, sl, #5, #6
   170d2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
   170d6:	9007      	str	r0, [sp, #28]
   170d8:	ea4f 20ea 	mov.w	r0, sl, asr #11
   170dc:	9006      	str	r0, [sp, #24]
   170de:	f001 001f 	and.w	r0, r1, #31
   170e2:	9005      	str	r0, [sp, #20]
   170e4:	f3c1 1043 	ubfx	r0, r1, #5, #4
   170e8:	ea4f 2161 	mov.w	r1, r1, asr #9
   170ec:	bf14      	ite	ne
   170ee:	f04f 0941 	movne.w	r9, #65	; 0x41
   170f2:	f04f 092d 	moveq.w	r9, #45	; 0x2d
   170f6:	f201 71bc 	addw	r1, r1, #1980	; 0x7bc
   170fa:	f8cd c004 	str.w	ip, [sp, #4]
   170fe:	f8cd e000 	str.w	lr, [sp]
   17102:	9004      	str	r0, [sp, #16]
   17104:	9103      	str	r1, [sp, #12]
   17106:	f8cd 9008 	str.w	r9, [sp, #8]
   1710a:	491c      	ldr	r1, [pc, #112]	; (1717c <lsHandler(str&, CharDev&, void*)+0x168>)
   1710c:	4620      	mov	r0, r4
   1710e:	f7f9 f8c5 	bl	1029c <CharDev::printf(char const*, ...)>
   17112:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17116:	491a      	ldr	r1, [pc, #104]	; (17180 <lsHandler(str&, CharDev&, void*)+0x16c>)
   17118:	4620      	mov	r0, r4
   1711a:	f7f9 f875 	bl	10208 <CharDev::put(char const*, unsigned int)>
   1711e:	4641      	mov	r1, r8
   17120:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17124:	4620      	mov	r0, r4
   17126:	f7f9 f86f 	bl	10208 <CharDev::put(char const*, unsigned int)>
   1712a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1712e:	490f      	ldr	r1, [pc, #60]	; (1716c <lsHandler(str&, CharDev&, void*)+0x158>)
   17130:	4620      	mov	r0, r4
   17132:	f7f9 f87d 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   17136:	e791      	b.n	1705c <lsHandler(str&, CharDev&, void*)+0x48>
   17138:	463a      	mov	r2, r7
   1713a:	4912      	ldr	r1, [pc, #72]	; (17184 <lsHandler(str&, CharDev&, void*)+0x170>)
   1713c:	9500      	str	r5, [sp, #0]
   1713e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   17140:	4620      	mov	r0, r4
   17142:	f7f9 f8ab 	bl	1029c <CharDev::printf(char const*, ...)>
   17146:	aa0b      	add	r2, sp, #44	; 0x2c
   17148:	a90c      	add	r1, sp, #48	; 0x30
   1714a:	4630      	mov	r0, r6
   1714c:	f7fc ff89 	bl	14062 <f_getfree>
   17150:	b940      	cbnz	r0, 17164 <lsHandler(str&, CharDev&, void*)+0x150>
   17152:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   17154:	490c      	ldr	r1, [pc, #48]	; (17188 <lsHandler(str&, CharDev&, void*)+0x174>)
   17156:	789a      	ldrb	r2, [r3, #2]
   17158:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1715a:	4620      	mov	r0, r4
   1715c:	435a      	muls	r2, r3
   1715e:	0852      	lsrs	r2, r2, #1
   17160:	f7f9 f89c 	bl	1029c <CharDev::printf(char const*, ...)>
   17164:	2001      	movs	r0, #1
   17166:	b03e      	add	sp, #248	; 0xf8
   17168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1716c:	000251e4 	.word	0x000251e4
   17170:	00024c4a 	.word	0x00024c4a
   17174:	00024c4d 	.word	0x00024c4d
   17178:	00024c71 	.word	0x00024c71
   1717c:	00024c8c 	.word	0x00024c8c
   17180:	00024cb9 	.word	0x00024cb9
   17184:	00024cbd 	.word	0x00024cbd
   17188:	00024ce7 	.word	0x00024ce7

0001718c <mkdirHandler(str&, CharDev&, void*)>:
_Z12mkdirHandlerR3strR7CharDevPv():
   1718c:	b570      	push	{r4, r5, r6, lr}
   1718e:	460c      	mov	r4, r1
   17190:	4606      	mov	r6, r0
   17192:	f001 fd25 	bl	18be0 <str::operator()() const>
   17196:	4605      	mov	r5, r0
   17198:	4630      	mov	r0, r6
   1719a:	f001 fd21 	bl	18be0 <str::operator()() const>
   1719e:	f7fd f822 	bl	141e6 <f_mkdir>
   171a2:	4a06      	ldr	r2, [pc, #24]	; (171bc <mkdirHandler(str&, CharDev&, void*)+0x30>)
   171a4:	4b06      	ldr	r3, [pc, #24]	; (171c0 <mkdirHandler(str&, CharDev&, void*)+0x34>)
   171a6:	4907      	ldr	r1, [pc, #28]	; (171c4 <mkdirHandler(str&, CharDev&, void*)+0x38>)
   171a8:	2800      	cmp	r0, #0
   171aa:	bf08      	it	eq
   171ac:	4613      	moveq	r3, r2
   171ae:	462a      	mov	r2, r5
   171b0:	4620      	mov	r0, r4
   171b2:	f7f9 f873 	bl	1029c <CharDev::printf(char const*, ...)>
   171b6:	2001      	movs	r0, #1
   171b8:	bd70      	pop	{r4, r5, r6, pc}
   171ba:	bf00      	nop
   171bc:	00024e9d 	.word	0x00024e9d
   171c0:	00024ea7 	.word	0x00024ea7
   171c4:	00024cfb 	.word	0x00024cfb

000171c8 <rmHandler(str&, CharDev&, void*)>:
_Z9rmHandlerR3strR7CharDevPv():
   171c8:	b570      	push	{r4, r5, r6, lr}
   171ca:	460c      	mov	r4, r1
   171cc:	4606      	mov	r6, r0
   171ce:	f001 fd07 	bl	18be0 <str::operator()() const>
   171d2:	4605      	mov	r5, r0
   171d4:	4630      	mov	r0, r6
   171d6:	f001 fd03 	bl	18be0 <str::operator()() const>
   171da:	f7fc ffa7 	bl	1412c <f_unlink>
   171de:	4a06      	ldr	r2, [pc, #24]	; (171f8 <rmHandler(str&, CharDev&, void*)+0x30>)
   171e0:	4b06      	ldr	r3, [pc, #24]	; (171fc <rmHandler(str&, CharDev&, void*)+0x34>)
   171e2:	4907      	ldr	r1, [pc, #28]	; (17200 <rmHandler(str&, CharDev&, void*)+0x38>)
   171e4:	2800      	cmp	r0, #0
   171e6:	bf08      	it	eq
   171e8:	4613      	moveq	r3, r2
   171ea:	462a      	mov	r2, r5
   171ec:	4620      	mov	r0, r4
   171ee:	f7f9 f855 	bl	1029c <CharDev::printf(char const*, ...)>
   171f2:	2001      	movs	r0, #1
   171f4:	bd70      	pop	{r4, r5, r6, pc}
   171f6:	bf00      	nop
   171f8:	00024e9d 	.word	0x00024e9d
   171fc:	00024ea7 	.word	0x00024ea7
   17200:	00024d17 	.word	0x00024d17

00017204 <mvHandler(str&, CharDev&, void*)>:
_Z9mvHandlerR3strR7CharDevPv():
   17204:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   17206:	ab03      	add	r3, sp, #12
   17208:	2400      	movs	r4, #0
   1720a:	9300      	str	r3, [sp, #0]
   1720c:	460e      	mov	r6, r1
   1720e:	ab02      	add	r3, sp, #8
   17210:	2202      	movs	r2, #2
   17212:	490f      	ldr	r1, [pc, #60]	; (17250 <mvHandler(str&, CharDev&, void*)+0x4c>)
   17214:	9402      	str	r4, [sp, #8]
   17216:	9403      	str	r4, [sp, #12]
   17218:	f001 fb66 	bl	188e8 <str::tokenize(char const*, int, ...)>
   1721c:	2802      	cmp	r0, #2
   1721e:	d114      	bne.n	1724a <mvHandler(str&, CharDev&, void*)+0x46>
   17220:	9c02      	ldr	r4, [sp, #8]
   17222:	9d03      	ldr	r5, [sp, #12]
   17224:	4620      	mov	r0, r4
   17226:	4629      	mov	r1, r5
   17228:	f7fd f886 	bl	14338 <f_rename>
   1722c:	4b09      	ldr	r3, [pc, #36]	; (17254 <mvHandler(str&, CharDev&, void*)+0x50>)
   1722e:	490a      	ldr	r1, [pc, #40]	; (17258 <mvHandler(str&, CharDev&, void*)+0x54>)
   17230:	4622      	mov	r2, r4
   17232:	2800      	cmp	r0, #0
   17234:	bf0c      	ite	eq
   17236:	4608      	moveq	r0, r1
   17238:	4618      	movne	r0, r3
   1723a:	462b      	mov	r3, r5
   1723c:	9000      	str	r0, [sp, #0]
   1723e:	4907      	ldr	r1, [pc, #28]	; (1725c <mvHandler(str&, CharDev&, void*)+0x58>)
   17240:	4630      	mov	r0, r6
   17242:	f7f9 f82b 	bl	1029c <CharDev::printf(char const*, ...)>
   17246:	2001      	movs	r0, #1
   17248:	e000      	b.n	1724c <mvHandler(str&, CharDev&, void*)+0x48>
   1724a:	4620      	mov	r0, r4
   1724c:	b004      	add	sp, #16
   1724e:	bd70      	pop	{r4, r5, r6, pc}
   17250:	00023dca 	.word	0x00023dca
   17254:	00024ea7 	.word	0x00024ea7
   17258:	00024e9d 	.word	0x00024e9d
   1725c:	00024d29 	.word	0x00024d29

00017260 <newFileHandler(str&, CharDev&, void*)>:
_Z14newFileHandlerR3strR7CharDevPv():
   17260:	b530      	push	{r4, r5, lr}
   17262:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   17266:	460c      	mov	r4, r1
   17268:	4605      	mov	r5, r0
   1726a:	f001 fcb9 	bl	18be0 <str::operator()() const>
   1726e:	220a      	movs	r2, #10
   17270:	4601      	mov	r1, r0
   17272:	a803      	add	r0, sp, #12
   17274:	f7fc fb60 	bl	13938 <f_open>
   17278:	b140      	cbz	r0, 1728c <newFileHandler(str&, CharDev&, void*)+0x2c>
   1727a:	4628      	mov	r0, r5
   1727c:	f001 fcb0 	bl	18be0 <str::operator()() const>
   17280:	491f      	ldr	r1, [pc, #124]	; (17300 <newFileHandler(str&, CharDev&, void*)+0xa0>)
   17282:	4602      	mov	r2, r0
   17284:	4620      	mov	r0, r4
   17286:	f7f9 f809 	bl	1029c <CharDev::printf(char const*, ...)>
   1728a:	e034      	b.n	172f6 <newFileHandler(str&, CharDev&, void*)+0x96>
   1728c:	f88d 0007 	strb.w	r0, [sp, #7]
   17290:	9002      	str	r0, [sp, #8]
   17292:	491c      	ldr	r1, [pc, #112]	; (17304 <newFileHandler(str&, CharDev&, void*)+0xa4>)
   17294:	f242 7310 	movw	r3, #10000	; 0x2710
   17298:	227e      	movs	r2, #126	; 0x7e
   1729a:	4620      	mov	r0, r4
   1729c:	f7f8 fffe 	bl	1029c <CharDev::printf(char const*, ...)>
   172a0:	4919      	ldr	r1, [pc, #100]	; (17308 <newFileHandler(str&, CharDev&, void*)+0xa8>)
   172a2:	4620      	mov	r0, r4
   172a4:	f7f8 fffa 	bl	1029c <CharDev::printf(char const*, ...)>
   172a8:	6823      	ldr	r3, [r4, #0]
   172aa:	f242 7210 	movw	r2, #10000	; 0x2710
   172ae:	681b      	ldr	r3, [r3, #0]
   172b0:	f10d 0107 	add.w	r1, sp, #7
   172b4:	4620      	mov	r0, r4
   172b6:	4798      	blx	r3
   172b8:	b118      	cbz	r0, 172c2 <newFileHandler(str&, CharDev&, void*)+0x62>
   172ba:	f89d 3007 	ldrb.w	r3, [sp, #7]
   172be:	2b7e      	cmp	r3, #126	; 0x7e
   172c0:	d103      	bne.n	172ca <newFileHandler(str&, CharDev&, void*)+0x6a>
   172c2:	a803      	add	r0, sp, #12
   172c4:	f7fc fda1 	bl	13e0a <f_close>
   172c8:	e015      	b.n	172f6 <newFileHandler(str&, CharDev&, void*)+0x96>
   172ca:	ab02      	add	r3, sp, #8
   172cc:	2201      	movs	r2, #1
   172ce:	f10d 0107 	add.w	r1, sp, #7
   172d2:	a803      	add	r0, sp, #12
   172d4:	f7fc fc82 	bl	13bdc <f_write>
   172d8:	b958      	cbnz	r0, 172f2 <newFileHandler(str&, CharDev&, void*)+0x92>
   172da:	9b02      	ldr	r3, [sp, #8]
   172dc:	2b01      	cmp	r3, #1
   172de:	d108      	bne.n	172f2 <newFileHandler(str&, CharDev&, void*)+0x92>
   172e0:	6823      	ldr	r3, [r4, #0]
   172e2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   172e6:	685b      	ldr	r3, [r3, #4]
   172e8:	f89d 1007 	ldrb.w	r1, [sp, #7]
   172ec:	4620      	mov	r0, r4
   172ee:	4798      	blx	r3
   172f0:	e7da      	b.n	172a8 <newFileHandler(str&, CharDev&, void*)+0x48>
   172f2:	4906      	ldr	r1, [pc, #24]	; (1730c <newFileHandler(str&, CharDev&, void*)+0xac>)
   172f4:	e7d5      	b.n	172a2 <newFileHandler(str&, CharDev&, void*)+0x42>
   172f6:	2001      	movs	r0, #1
   172f8:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   172fc:	bd30      	pop	{r4, r5, pc}
   172fe:	bf00      	nop
   17300:	00024d41 	.word	0x00024d41
   17304:	00024d68 	.word	0x00024d68
   17308:	00024da0 	.word	0x00024da0
   1730c:	00024dc0 	.word	0x00024dc0

00017310 <dcpHandler(str&, CharDev&, void*)>:
_Z10dcpHandlerR3strR7CharDevPv():
   17310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17314:	f5ad 7d41 	sub.w	sp, sp, #772	; 0x304
   17318:	2300      	movs	r3, #0
   1731a:	ac04      	add	r4, sp, #16
   1731c:	6023      	str	r3, [r4, #0]
   1731e:	9303      	str	r3, [sp, #12]
   17320:	460d      	mov	r5, r1
   17322:	9400      	str	r4, [sp, #0]
   17324:	ab03      	add	r3, sp, #12
   17326:	2202      	movs	r2, #2
   17328:	4941      	ldr	r1, [pc, #260]	; (17430 <dcpHandler(str&, CharDev&, void*)+0x120>)
   1732a:	f001 fadd 	bl	188e8 <str::tokenize(char const*, int, ...)>
   1732e:	2802      	cmp	r0, #2
   17330:	d006      	beq.n	17340 <dcpHandler(str&, CharDev&, void*)+0x30>
   17332:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17336:	493f      	ldr	r1, [pc, #252]	; (17434 <dcpHandler(str&, CharDev&, void*)+0x124>)
   17338:	4628      	mov	r0, r5
   1733a:	f7f8 ff79 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   1733e:	e072      	b.n	17426 <dcpHandler(str&, CharDev&, void*)+0x116>
   17340:	6821      	ldr	r1, [r4, #0]
   17342:	a817      	add	r0, sp, #92	; 0x5c
   17344:	f7fc fe1a 	bl	13f7c <f_opendir>
   17348:	b110      	cbz	r0, 17350 <dcpHandler(str&, CharDev&, void*)+0x40>
   1734a:	6822      	ldr	r2, [r4, #0]
   1734c:	493a      	ldr	r1, [pc, #232]	; (17438 <dcpHandler(str&, CharDev&, void*)+0x128>)
   1734e:	e006      	b.n	1735e <dcpHandler(str&, CharDev&, void*)+0x4e>
   17350:	9903      	ldr	r1, [sp, #12]
   17352:	a817      	add	r0, sp, #92	; 0x5c
   17354:	f7fc fe12 	bl	13f7c <f_opendir>
   17358:	b128      	cbz	r0, 17366 <dcpHandler(str&, CharDev&, void*)+0x56>
   1735a:	9a03      	ldr	r2, [sp, #12]
   1735c:	4937      	ldr	r1, [pc, #220]	; (1743c <dcpHandler(str&, CharDev&, void*)+0x12c>)
   1735e:	4628      	mov	r0, r5
   17360:	f7f8 ff9c 	bl	1029c <CharDev::printf(char const*, ...)>
   17364:	e05f      	b.n	17426 <dcpHandler(str&, CharDev&, void*)+0x116>
   17366:	f44f 7280 	mov.w	r2, #256	; 0x100
   1736a:	eb0d 0102 	add.w	r1, sp, r2
   1736e:	a805      	add	r0, sp, #20
   17370:	f001 fa7c 	bl	1886c <str::str(char*, int)>
   17374:	f44f 7280 	mov.w	r2, #256	; 0x100
   17378:	a980      	add	r1, sp, #512	; 0x200
   1737a:	a80a      	add	r0, sp, #40	; 0x28
   1737c:	f001 fa76 	bl	1886c <str::str(char*, int)>
   17380:	ae20      	add	r6, sp, #128	; 0x80
   17382:	2780      	movs	r7, #128	; 0x80
   17384:	a90f      	add	r1, sp, #60	; 0x3c
   17386:	a817      	add	r0, sp, #92	; 0x5c
   17388:	9615      	str	r6, [sp, #84]	; 0x54
   1738a:	9716      	str	r7, [sp, #88]	; 0x58
   1738c:	f7fc fe3a 	bl	14004 <f_readdir>
   17390:	2800      	cmp	r0, #0
   17392:	d142      	bne.n	1741a <dcpHandler(str&, CharDev&, void*)+0x10a>
   17394:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
   17398:	2b00      	cmp	r3, #0
   1739a:	d03e      	beq.n	1741a <dcpHandler(str&, CharDev&, void*)+0x10a>
   1739c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
   173a0:	f003 0310 	and.w	r3, r3, #16
   173a4:	f003 0aff 	and.w	sl, r3, #255	; 0xff
   173a8:	2b00      	cmp	r3, #0
   173aa:	d1eb      	bne.n	17384 <dcpHandler(str&, CharDev&, void*)+0x74>
   173ac:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   173b0:	9a03      	ldr	r2, [sp, #12]
   173b2:	4923      	ldr	r1, [pc, #140]	; (17440 <dcpHandler(str&, CharDev&, void*)+0x130>)
   173b4:	a805      	add	r0, sp, #20
   173b6:	f001 fc5d 	bl	18c74 <str::printf(char const*, ...)>
   173ba:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   173be:	6822      	ldr	r2, [r4, #0]
   173c0:	491f      	ldr	r1, [pc, #124]	; (17440 <dcpHandler(str&, CharDev&, void*)+0x130>)
   173c2:	a80a      	add	r0, sp, #40	; 0x28
   173c4:	f001 fc56 	bl	18c74 <str::printf(char const*, ...)>
   173c8:	a805      	add	r0, sp, #20
   173ca:	f001 fc09 	bl	18be0 <str::operator()() const>
   173ce:	4607      	mov	r7, r0
   173d0:	a80a      	add	r0, sp, #40	; 0x28
   173d2:	f001 fc05 	bl	18be0 <str::operator()() const>
   173d6:	4680      	mov	r8, r0
   173d8:	a805      	add	r0, sp, #20
   173da:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   173de:	f001 fbff 	bl	18be0 <str::operator()() const>
   173e2:	4683      	mov	fp, r0
   173e4:	a80a      	add	r0, sp, #40	; 0x28
   173e6:	f001 fbfb 	bl	18be0 <str::operator()() const>
   173ea:	4653      	mov	r3, sl
   173ec:	4652      	mov	r2, sl
   173ee:	4601      	mov	r1, r0
   173f0:	f8cd a000 	str.w	sl, [sp]
   173f4:	4658      	mov	r0, fp
   173f6:	f7fe f995 	bl	15724 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
   173fa:	4a12      	ldr	r2, [pc, #72]	; (17444 <dcpHandler(str&, CharDev&, void*)+0x134>)
   173fc:	4b12      	ldr	r3, [pc, #72]	; (17448 <dcpHandler(str&, CharDev&, void*)+0x138>)
   173fe:	f8cd 9000 	str.w	r9, [sp]
   17402:	2800      	cmp	r0, #0
   17404:	bf0c      	ite	eq
   17406:	4618      	moveq	r0, r3
   17408:	4610      	movne	r0, r2
   1740a:	4910      	ldr	r1, [pc, #64]	; (1744c <dcpHandler(str&, CharDev&, void*)+0x13c>)
   1740c:	9001      	str	r0, [sp, #4]
   1740e:	4643      	mov	r3, r8
   17410:	463a      	mov	r2, r7
   17412:	4628      	mov	r0, r5
   17414:	f7f8 ff42 	bl	1029c <CharDev::printf(char const*, ...)>
   17418:	e7b3      	b.n	17382 <dcpHandler(str&, CharDev&, void*)+0x72>
   1741a:	a80a      	add	r0, sp, #40	; 0x28
   1741c:	f001 fa3b 	bl	18896 <str::~str()>
   17420:	a805      	add	r0, sp, #20
   17422:	f001 fa38 	bl	18896 <str::~str()>
   17426:	2001      	movs	r0, #1
   17428:	f50d 7d41 	add.w	sp, sp, #772	; 0x304
   1742c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17430:	00023dca 	.word	0x00023dca
   17434:	00024de7 	.word	0x00024de7
   17438:	00024e2c 	.word	0x00024e2c
   1743c:	00024e51 	.word	0x00024e51
   17440:	00024e71 	.word	0x00024e71
   17444:	00024ea7 	.word	0x00024ea7
   17448:	00024e9d 	.word	0x00024e9d
   1744c:	00024e77 	.word	0x00024e77

00017450 <storageHandler(str&, CharDev&, void*)>:
_Z14storageHandlerR3strR7CharDevPv():
   17450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17452:	460d      	mov	r5, r1
   17454:	4924      	ldr	r1, [pc, #144]	; (174e8 <storageHandler(str&, CharDev&, void*)+0x98>)
   17456:	4606      	mov	r6, r0
   17458:	f001 fbc0 	bl	18bdc <str::operator==(char const*) const>
   1745c:	4604      	mov	r4, r0
   1745e:	4607      	mov	r7, r0
   17460:	b118      	cbz	r0, 1746a <storageHandler(str&, CharDev&, void*)+0x1a>
   17462:	f7ff faf7 	bl	16a54 <Storage::getSDDrive()>
   17466:	2200      	movs	r2, #0
   17468:	e008      	b.n	1747c <storageHandler(str&, CharDev&, void*)+0x2c>
   1746a:	4920      	ldr	r1, [pc, #128]	; (174ec <storageHandler(str&, CharDev&, void*)+0x9c>)
   1746c:	4630      	mov	r0, r6
   1746e:	f001 fbb5 	bl	18bdc <str::operator==(char const*) const>
   17472:	4604      	mov	r4, r0
   17474:	b160      	cbz	r0, 17490 <storageHandler(str&, CharDev&, void*)+0x40>
   17476:	f7ff fac9 	bl	16a0c <Storage::getFlashDrive()>
   1747a:	463a      	mov	r2, r7
   1747c:	4611      	mov	r1, r2
   1747e:	f200 2035 	addw	r0, r0, #565	; 0x235
   17482:	f7fc ffe9 	bl	14458 <f_mkfs>
   17486:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1748a:	4b19      	ldr	r3, [pc, #100]	; (174f0 <storageHandler(str&, CharDev&, void*)+0xa0>)
   1748c:	4919      	ldr	r1, [pc, #100]	; (174f4 <storageHandler(str&, CharDev&, void*)+0xa4>)
   1748e:	e022      	b.n	174d6 <storageHandler(str&, CharDev&, void*)+0x86>
   17490:	4919      	ldr	r1, [pc, #100]	; (174f8 <storageHandler(str&, CharDev&, void*)+0xa8>)
   17492:	4630      	mov	r0, r6
   17494:	f001 fba2 	bl	18bdc <str::operator==(char const*) const>
   17498:	4604      	mov	r4, r0
   1749a:	b158      	cbz	r0, 174b4 <storageHandler(str&, CharDev&, void*)+0x64>
   1749c:	f7ff fada 	bl	16a54 <Storage::getSDDrive()>
   174a0:	2201      	movs	r2, #1
   174a2:	f200 2135 	addw	r1, r0, #565	; 0x235
   174a6:	f7fc fa09 	bl	138bc <f_mount>
   174aa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   174ae:	4b13      	ldr	r3, [pc, #76]	; (174fc <storageHandler(str&, CharDev&, void*)+0xac>)
   174b0:	4913      	ldr	r1, [pc, #76]	; (17500 <storageHandler(str&, CharDev&, void*)+0xb0>)
   174b2:	e010      	b.n	174d6 <storageHandler(str&, CharDev&, void*)+0x86>
   174b4:	4913      	ldr	r1, [pc, #76]	; (17504 <storageHandler(str&, CharDev&, void*)+0xb4>)
   174b6:	4630      	mov	r0, r6
   174b8:	f001 fb90 	bl	18bdc <str::operator==(char const*) const>
   174bc:	4604      	mov	r4, r0
   174be:	b180      	cbz	r0, 174e2 <storageHandler(str&, CharDev&, void*)+0x92>
   174c0:	f7ff faa4 	bl	16a0c <Storage::getFlashDrive()>
   174c4:	2201      	movs	r2, #1
   174c6:	f200 2135 	addw	r1, r0, #565	; 0x235
   174ca:	f7fc f9f7 	bl	138bc <f_mount>
   174ce:	4b0e      	ldr	r3, [pc, #56]	; (17508 <storageHandler(str&, CharDev&, void*)+0xb8>)
   174d0:	490e      	ldr	r1, [pc, #56]	; (1750c <storageHandler(str&, CharDev&, void*)+0xbc>)
   174d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   174d6:	2800      	cmp	r0, #0
   174d8:	bf18      	it	ne
   174da:	4619      	movne	r1, r3
   174dc:	4628      	mov	r0, r5
   174de:	f7f8 fea7 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   174e2:	4620      	mov	r0, r4
   174e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   174e6:	bf00      	nop
   174e8:	00024efe 	.word	0x00024efe
   174ec:	00024f08 	.word	0x00024f08
   174f0:	00024ea0 	.word	0x00024ea0
   174f4:	00024e96 	.word	0x00024e96
   174f8:	00024f15 	.word	0x00024f15
   174fc:	00024ebd 	.word	0x00024ebd
   17500:	00024ead 	.word	0x00024ead
   17504:	00024f1e 	.word	0x00024f1e
   17508:	00024ee2 	.word	0x00024ee2
   1750c:	00024ed4 	.word	0x00024ed4

00017510 <rebootHandler(str&, CharDev&, void*)>:
_Z13rebootHandlerR3strR7CharDevPv():
   17510:	b508      	push	{r3, lr}
   17512:	4608      	mov	r0, r1
   17514:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17518:	4908      	ldr	r1, [pc, #32]	; (1753c <rebootHandler(str&, CharDev&, void*)+0x2c>)
   1751a:	f7f8 fe89 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   1751e:	f002 f92d 	bl	1977c <logger_send_flush_request>
   17522:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   17526:	f002 fea1 	bl	1a26c <vTaskDelay>
   1752a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1752e:	22aa      	movs	r2, #170	; 0xaa
   17530:	721a      	strb	r2, [r3, #8]
   17532:	2200      	movs	r2, #0
   17534:	701a      	strb	r2, [r3, #0]
   17536:	2001      	movs	r0, #1
   17538:	bd08      	pop	{r3, pc}
   1753a:	bf00      	nop
   1753c:	00024f2a 	.word	0x00024f2a

00017540 <learnIrHandler(str&, CharDev&, void*)>:
_Z14learnIrHandlerR3strR7CharDevPv():
   17540:	b510      	push	{r4, lr}
   17542:	2001      	movs	r0, #1
   17544:	460c      	mov	r4, r1
   17546:	f001 fda7 	bl	19098 <scheduler_task::getSharedObject(unsigned char)>
   1754a:	b140      	cbz	r0, 1755e <learnIrHandler(str&, CharDev&, void*)+0x1e>
   1754c:	2300      	movs	r3, #0
   1754e:	461a      	mov	r2, r3
   17550:	4619      	mov	r1, r3
   17552:	f003 faab 	bl	1aaac <xQueueGenericSend>
   17556:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1755a:	4905      	ldr	r1, [pc, #20]	; (17570 <learnIrHandler(str&, CharDev&, void*)+0x30>)
   1755c:	e002      	b.n	17564 <learnIrHandler(str&, CharDev&, void*)+0x24>
   1755e:	4905      	ldr	r1, [pc, #20]	; (17574 <learnIrHandler(str&, CharDev&, void*)+0x34>)
   17560:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17564:	4620      	mov	r0, r4
   17566:	f7f8 fe63 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   1756a:	2001      	movs	r0, #1
   1756c:	bd10      	pop	{r4, pc}
   1756e:	bf00      	nop
   17570:	00024f3b 	.word	0x00024f3b
   17574:	00024f51 	.word	0x00024f51

00017578 <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
   17578:	b538      	push	{r3, r4, r5, lr}
   1757a:	4c06      	ldr	r4, [pc, #24]	; (17594 <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   1757c:	6823      	ldr	r3, [r4, #0]
   1757e:	b933      	cbnz	r3, 1758e <SingletonTemplate<I2C2>::getInstance()+0x16>
   17580:	201c      	movs	r0, #28
   17582:	f7fa f825 	bl	115d0 <operator new(unsigned int)>
   17586:	4605      	mov	r5, r0
   17588:	f7f9 fa3c 	bl	10a04 <I2C2::I2C2()>
   1758c:	6025      	str	r5, [r4, #0]
   1758e:	6820      	ldr	r0, [r4, #0]
   17590:	bd38      	pop	{r3, r4, r5, pc}
   17592:	bf00      	nop
   17594:	2007c1c8 	.word	0x2007c1c8

00017598 <i2cIoHandler(str&, CharDev&, void*)>:
_Z12i2cIoHandlerR3strR7CharDevPv():
   17598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1759c:	460d      	mov	r5, r1
   1759e:	b0c7      	sub	sp, #284	; 0x11c
   175a0:	4955      	ldr	r1, [pc, #340]	; (176f8 <i2cIoHandler(str&, CharDev&, void*)+0x160>)
   175a2:	4681      	mov	r9, r0
   175a4:	f001 fa41 	bl	18a2a <str::beginsWithIgnoreCase(char const*) const>
   175a8:	4954      	ldr	r1, [pc, #336]	; (176fc <i2cIoHandler(str&, CharDev&, void*)+0x164>)
   175aa:	4682      	mov	sl, r0
   175ac:	4648      	mov	r0, r9
   175ae:	f001 fa3c 	bl	18a2a <str::beginsWithIgnoreCase(char const*) const>
   175b2:	4953      	ldr	r1, [pc, #332]	; (17700 <i2cIoHandler(str&, CharDev&, void*)+0x168>)
   175b4:	4683      	mov	fp, r0
   175b6:	4648      	mov	r0, r9
   175b8:	f001 fa37 	bl	18a2a <str::beginsWithIgnoreCase(char const*) const>
   175bc:	2700      	movs	r7, #0
   175be:	f10d 0810 	add.w	r8, sp, #16
   175c2:	ae05      	add	r6, sp, #20
   175c4:	4604      	mov	r4, r0
   175c6:	9702      	str	r7, [sp, #8]
   175c8:	9703      	str	r7, [sp, #12]
   175ca:	f8c8 7000 	str.w	r7, [r8]
   175ce:	6037      	str	r7, [r6, #0]
   175d0:	f1ba 0f00 	cmp.w	sl, #0
   175d4:	d045      	beq.n	17662 <i2cIoHandler(str&, CharDev&, void*)+0xca>
   175d6:	9600      	str	r6, [sp, #0]
   175d8:	ab03      	add	r3, sp, #12
   175da:	aa02      	add	r2, sp, #8
   175dc:	4949      	ldr	r1, [pc, #292]	; (17704 <i2cIoHandler(str&, CharDev&, void*)+0x16c>)
   175de:	4648      	mov	r0, r9
   175e0:	f001 f974 	bl	188cc <str::scanf(char const*, ...)>
   175e4:	2801      	cmp	r0, #1
   175e6:	dc07      	bgt.n	175f8 <i2cIoHandler(str&, CharDev&, void*)+0x60>
   175e8:	4628      	mov	r0, r5
   175ea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   175ee:	4946      	ldr	r1, [pc, #280]	; (17708 <i2cIoHandler(str&, CharDev&, void*)+0x170>)
   175f0:	f7f8 fe1e 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   175f4:	4638      	mov	r0, r7
   175f6:	e07c      	b.n	176f2 <i2cIoHandler(str&, CharDev&, void*)+0x15a>
   175f8:	f10d 0818 	add.w	r8, sp, #24
   175fc:	f44f 7480 	mov.w	r4, #256	; 0x100
   17600:	4622      	mov	r2, r4
   17602:	4639      	mov	r1, r7
   17604:	4640      	mov	r0, r8
   17606:	f005 fea8 	bl	1d35a <memset>
   1760a:	6833      	ldr	r3, [r6, #0]
   1760c:	b913      	cbnz	r3, 17614 <i2cIoHandler(str&, CharDev&, void*)+0x7c>
   1760e:	2301      	movs	r3, #1
   17610:	6033      	str	r3, [r6, #0]
   17612:	e003      	b.n	1761c <i2cIoHandler(str&, CharDev&, void*)+0x84>
   17614:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   17618:	bf88      	it	hi
   1761a:	6034      	strhi	r4, [r6, #0]
   1761c:	f7ff ffac 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   17620:	6833      	ldr	r3, [r6, #0]
   17622:	f89d 200c 	ldrb.w	r2, [sp, #12]
   17626:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1762a:	9300      	str	r3, [sp, #0]
   1762c:	4643      	mov	r3, r8
   1762e:	f7f9 f869 	bl	10704 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
   17632:	4a36      	ldr	r2, [pc, #216]	; (1770c <i2cIoHandler(str&, CharDev&, void*)+0x174>)
   17634:	4b36      	ldr	r3, [pc, #216]	; (17710 <i2cIoHandler(str&, CharDev&, void*)+0x178>)
   17636:	4937      	ldr	r1, [pc, #220]	; (17714 <i2cIoHandler(str&, CharDev&, void*)+0x17c>)
   17638:	2800      	cmp	r0, #0
   1763a:	bf18      	it	ne
   1763c:	4613      	movne	r3, r2
   1763e:	9a02      	ldr	r2, [sp, #8]
   17640:	4628      	mov	r0, r5
   17642:	f7f8 fe2b 	bl	1029c <CharDev::printf(char const*, ...)>
   17646:	2400      	movs	r4, #0
   17648:	6833      	ldr	r3, [r6, #0]
   1764a:	429c      	cmp	r4, r3
   1764c:	d24e      	bcs.n	176ec <i2cIoHandler(str&, CharDev&, void*)+0x154>
   1764e:	9a03      	ldr	r2, [sp, #12]
   17650:	f818 3004 	ldrb.w	r3, [r8, r4]
   17654:	4422      	add	r2, r4
   17656:	4930      	ldr	r1, [pc, #192]	; (17718 <i2cIoHandler(str&, CharDev&, void*)+0x180>)
   17658:	4628      	mov	r0, r5
   1765a:	f7f8 fe1f 	bl	1029c <CharDev::printf(char const*, ...)>
   1765e:	3401      	adds	r4, #1
   17660:	e7f2      	b.n	17648 <i2cIoHandler(str&, CharDev&, void*)+0xb0>
   17662:	f1bb 0f00 	cmp.w	fp, #0
   17666:	d02c      	beq.n	176c2 <i2cIoHandler(str&, CharDev&, void*)+0x12a>
   17668:	f8cd 8000 	str.w	r8, [sp]
   1766c:	ab03      	add	r3, sp, #12
   1766e:	aa02      	add	r2, sp, #8
   17670:	492a      	ldr	r1, [pc, #168]	; (1771c <i2cIoHandler(str&, CharDev&, void*)+0x184>)
   17672:	4648      	mov	r0, r9
   17674:	f001 f92a 	bl	188cc <str::scanf(char const*, ...)>
   17678:	2803      	cmp	r0, #3
   1767a:	d007      	beq.n	1768c <i2cIoHandler(str&, CharDev&, void*)+0xf4>
   1767c:	4628      	mov	r0, r5
   1767e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17682:	4927      	ldr	r1, [pc, #156]	; (17720 <i2cIoHandler(str&, CharDev&, void*)+0x188>)
   17684:	f7f8 fdd4 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   17688:	4650      	mov	r0, sl
   1768a:	e032      	b.n	176f2 <i2cIoHandler(str&, CharDev&, void*)+0x15a>
   1768c:	f7ff ff74 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   17690:	f898 3000 	ldrb.w	r3, [r8]
   17694:	f89d 200c 	ldrb.w	r2, [sp, #12]
   17698:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1769c:	f7f9 f847 	bl	1072e <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>
   176a0:	b148      	cbz	r0, 176b6 <i2cIoHandler(str&, CharDev&, void*)+0x11e>
   176a2:	9b03      	ldr	r3, [sp, #12]
   176a4:	491f      	ldr	r1, [pc, #124]	; (17724 <i2cIoHandler(str&, CharDev&, void*)+0x18c>)
   176a6:	9300      	str	r3, [sp, #0]
   176a8:	f8d8 2000 	ldr.w	r2, [r8]
   176ac:	9b02      	ldr	r3, [sp, #8]
   176ae:	4628      	mov	r0, r5
   176b0:	f7f8 fdf4 	bl	1029c <CharDev::printf(char const*, ...)>
   176b4:	e01a      	b.n	176ec <i2cIoHandler(str&, CharDev&, void*)+0x154>
   176b6:	9a02      	ldr	r2, [sp, #8]
   176b8:	491b      	ldr	r1, [pc, #108]	; (17728 <i2cIoHandler(str&, CharDev&, void*)+0x190>)
   176ba:	4628      	mov	r0, r5
   176bc:	f7f8 fdee 	bl	1029c <CharDev::printf(char const*, ...)>
   176c0:	e014      	b.n	176ec <i2cIoHandler(str&, CharDev&, void*)+0x154>
   176c2:	b1a8      	cbz	r0, 176f0 <i2cIoHandler(str&, CharDev&, void*)+0x158>
   176c4:	2302      	movs	r3, #2
   176c6:	9302      	str	r3, [sp, #8]
   176c8:	9b02      	ldr	r3, [sp, #8]
   176ca:	2bfe      	cmp	r3, #254	; 0xfe
   176cc:	dc10      	bgt.n	176f0 <i2cIoHandler(str&, CharDev&, void*)+0x158>
   176ce:	f7ff ff53 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   176d2:	f89d 1008 	ldrb.w	r1, [sp, #8]
   176d6:	f7f9 f835 	bl	10744 <I2C_Base::checkDeviceResponse(unsigned char)>
   176da:	b120      	cbz	r0, 176e6 <i2cIoHandler(str&, CharDev&, void*)+0x14e>
   176dc:	9a02      	ldr	r2, [sp, #8]
   176de:	4913      	ldr	r1, [pc, #76]	; (1772c <i2cIoHandler(str&, CharDev&, void*)+0x194>)
   176e0:	4628      	mov	r0, r5
   176e2:	f7f8 fddb 	bl	1029c <CharDev::printf(char const*, ...)>
   176e6:	9b02      	ldr	r3, [sp, #8]
   176e8:	3302      	adds	r3, #2
   176ea:	e7ec      	b.n	176c6 <i2cIoHandler(str&, CharDev&, void*)+0x12e>
   176ec:	2001      	movs	r0, #1
   176ee:	e000      	b.n	176f2 <i2cIoHandler(str&, CharDev&, void*)+0x15a>
   176f0:	4620      	mov	r0, r4
   176f2:	b047      	add	sp, #284	; 0x11c
   176f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   176f8:	00023f10 	.word	0x00023f10
   176fc:	00024f8a 	.word	0x00024f8a
   17700:	00024f90 	.word	0x00024f90
   17704:	00024f99 	.word	0x00024f99
   17708:	00024fa8 	.word	0x00024fa8
   1770c:	00024e9d 	.word	0x00024e9d
   17710:	00024ea7 	.word	0x00024ea7
   17714:	00024fc9 	.word	0x00024fc9
   17718:	00024fed 	.word	0x00024fed
   1771c:	00024ffd 	.word	0x00024ffd
   17720:	0002500d 	.word	0x0002500d
   17724:	00025034 	.word	0x00025034
   17728:	0002504e 	.word	0x0002504e
   1772c:	0002506b 	.word	0x0002506b

00017730 <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
   17730:	b538      	push	{r3, r4, r5, lr}
   17732:	4c08      	ldr	r4, [pc, #32]	; (17754 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   17734:	6823      	ldr	r3, [r4, #0]
   17736:	b95b      	cbnz	r3, 17750 <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
   17738:	200c      	movs	r0, #12
   1773a:	f7f9 ff49 	bl	115d0 <operator new(unsigned int)>
   1773e:	4605      	mov	r5, r0
   17740:	f7ff ff1a 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   17744:	2390      	movs	r3, #144	; 0x90
   17746:	712b      	strb	r3, [r5, #4]
   17748:	2300      	movs	r3, #0
   1774a:	6028      	str	r0, [r5, #0]
   1774c:	60ab      	str	r3, [r5, #8]
   1774e:	6025      	str	r5, [r4, #0]
   17750:	6820      	ldr	r0, [r4, #0]
   17752:	bd38      	pop	{r3, r4, r5, pc}
   17754:	2007c404 	.word	0x2007c404

00017758 <onDemandTemperatureHandler(str&, CharDev&, void*)>:
_Z26onDemandTemperatureHandlerR3strR7CharDevPv():
   17758:	b510      	push	{r4, lr}
   1775a:	f7ff ffe9 	bl	17730 <SingletonTemplate<TemperatureSensor>::getInstance()>
   1775e:	4604      	mov	r4, r0
   17760:	4807      	ldr	r0, [pc, #28]	; (17780 <onDemandTemperatureHandler(str&, CharDev&, void*)+0x28>)
   17762:	f006 fff9 	bl	1e758 <puts>
   17766:	4620      	mov	r0, r4
   17768:	f7fe fa20 	bl	15bac <I2C_Temp::getFarenheit()>
   1776c:	f004 fbd2 	bl	1bf14 <__aeabi_f2d>
   17770:	4602      	mov	r2, r0
   17772:	460b      	mov	r3, r1
   17774:	4803      	ldr	r0, [pc, #12]	; (17784 <onDemandTemperatureHandler(str&, CharDev&, void*)+0x2c>)
   17776:	f006 ff7d 	bl	1e674 <iprintf>
   1777a:	2001      	movs	r0, #1
   1777c:	bd10      	pop	{r4, pc}
   1777e:	bf00      	nop
   17780:	00025091 	.word	0x00025091
   17784:	0002509e 	.word	0x0002509e

00017788 <healthHandler(str&, CharDev&, void*)>:
_Z13healthHandlerR3strR7CharDevPv():
   17788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1778c:	4c55      	ldr	r4, [pc, #340]	; (178e4 <healthHandler(str&, CharDev&, void*)+0x15c>)
   1778e:	b091      	sub	sp, #68	; 0x44
   17790:	6823      	ldr	r3, [r4, #0]
   17792:	460e      	mov	r6, r1
   17794:	b933      	cbnz	r3, 177a4 <healthHandler(str&, CharDev&, void*)+0x1c>
   17796:	202c      	movs	r0, #44	; 0x2c
   17798:	f7f9 ff1a 	bl	115d0 <operator new(unsigned int)>
   1779c:	4605      	mov	r5, r0
   1779e:	f7f9 f981 	bl	10aa4 <Uart0::Uart0()>
   177a2:	6025      	str	r5, [r4, #0]
   177a4:	6827      	ldr	r7, [r4, #0]
   177a6:	f7ff f931 	bl	16a0c <Storage::getFlashDrive()>
   177aa:	2400      	movs	r4, #0
   177ac:	aa0c      	add	r2, sp, #48	; 0x30
   177ae:	a90d      	add	r1, sp, #52	; 0x34
   177b0:	f200 2035 	addw	r0, r0, #565	; 0x235
   177b4:	940d      	str	r4, [sp, #52]	; 0x34
   177b6:	f7fc fc54 	bl	14062 <f_getfree>
   177ba:	b948      	cbnz	r0, 177d0 <healthHandler(str&, CharDev&, void*)+0x48>
   177bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   177be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   177c0:	6995      	ldr	r5, [r2, #24]
   177c2:	7893      	ldrb	r3, [r2, #2]
   177c4:	3d02      	subs	r5, #2
   177c6:	435c      	muls	r4, r3
   177c8:	435d      	muls	r5, r3
   177ca:	0864      	lsrs	r4, r4, #1
   177cc:	086d      	lsrs	r5, r5, #1
   177ce:	e000      	b.n	177d2 <healthHandler(str&, CharDev&, void*)+0x4a>
   177d0:	4625      	mov	r5, r4
   177d2:	f7ff ffad 	bl	17730 <SingletonTemplate<TemperatureSensor>::getInstance()>
   177d6:	f7fe f9e9 	bl	15bac <I2C_Temp::getFarenheit()>
   177da:	4681      	mov	r9, r0
   177dc:	f005 f97e 	bl	1cadc <__aeabi_f2iz>
   177e0:	900a      	str	r0, [sp, #40]	; 0x28
   177e2:	f004 ffd7 	bl	1c794 <__aeabi_i2f>
   177e6:	4601      	mov	r1, r0
   177e8:	4648      	mov	r0, r9
   177ea:	f004 ff1d 	bl	1c628 <__aeabi_fsub>
   177ee:	493e      	ldr	r1, [pc, #248]	; (178e8 <healthHandler(str&, CharDev&, void*)+0x160>)
   177f0:	f005 f824 	bl	1c83c <__aeabi_fmul>
   177f4:	f005 f972 	bl	1cadc <__aeabi_f2iz>
   177f8:	4681      	mov	r9, r0
   177fa:	a80d      	add	r0, sp, #52	; 0x34
   177fc:	f003 fc3a 	bl	1b074 <sys_get_boot_time>
   17800:	f7fd faf8 	bl	14df4 <flash_supports_metadata>
   17804:	b368      	cbz	r0, 17862 <healthHandler(str&, CharDev&, void*)+0xda>
   17806:	f7f9 fddd 	bl	113c4 <spi1_lock>
   1780a:	f7fd fadd 	bl	14dc8 <flash_get_page_count>
   1780e:	f04f 0a00 	mov.w	sl, #0
   17812:	4603      	mov	r3, r0
   17814:	46d3      	mov	fp, sl
   17816:	46d0      	mov	r8, sl
   17818:	459a      	cmp	sl, r3
   1781a:	930b      	str	r3, [sp, #44]	; 0x2c
   1781c:	d00b      	beq.n	17836 <healthHandler(str&, CharDev&, void*)+0xae>
   1781e:	4650      	mov	r0, sl
   17820:	f7fd fb36 	bl	14e90 <flash_get_page_write_count>
   17824:	4580      	cmp	r8, r0
   17826:	bf38      	it	cc
   17828:	46d3      	movcc	fp, sl
   1782a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1782c:	bf38      	it	cc
   1782e:	4680      	movcc	r8, r0
   17830:	f10a 0a01 	add.w	sl, sl, #1
   17834:	e7f0      	b.n	17818 <healthHandler(str&, CharDev&, void*)+0x90>
   17836:	f7f9 fddd 	bl	113f4 <spi1_unlock>
   1783a:	2364      	movs	r3, #100	; 0x64
   1783c:	fb03 f308 	mul.w	r3, r3, r8
   17840:	4a2a      	ldr	r2, [pc, #168]	; (178ec <healthHandler(str&, CharDev&, void*)+0x164>)
   17842:	f8cd 8008 	str.w	r8, [sp, #8]
   17846:	fbb3 f3f2 	udiv	r3, r3, r2
   1784a:	f1c3 0364 	rsb	r3, r3, #100	; 0x64
   1784e:	9300      	str	r3, [sp, #0]
   17850:	f8cd b004 	str.w	fp, [sp, #4]
   17854:	462b      	mov	r3, r5
   17856:	4622      	mov	r2, r4
   17858:	4925      	ldr	r1, [pc, #148]	; (178f0 <healthHandler(str&, CharDev&, void*)+0x168>)
   1785a:	4630      	mov	r0, r6
   1785c:	f7f8 fd1e 	bl	1029c <CharDev::printf(char const*, ...)>
   17860:	e005      	b.n	1786e <healthHandler(str&, CharDev&, void*)+0xe6>
   17862:	462b      	mov	r3, r5
   17864:	4622      	mov	r2, r4
   17866:	4923      	ldr	r1, [pc, #140]	; (178f4 <healthHandler(str&, CharDev&, void*)+0x16c>)
   17868:	4630      	mov	r0, r6
   1786a:	f7f8 fd17 	bl	1029c <CharDev::printf(char const*, ...)>
   1786e:	4c22      	ldr	r4, [pc, #136]	; (178f8 <healthHandler(str&, CharDev&, void*)+0x170>)
   17870:	6823      	ldr	r3, [r4, #0]
   17872:	b91b      	cbnz	r3, 1787c <healthHandler(str&, CharDev&, void*)+0xf4>
   17874:	2001      	movs	r0, #1
   17876:	f7f9 feab 	bl	115d0 <operator new(unsigned int)>
   1787a:	6020      	str	r0, [r4, #0]
   1787c:	6820      	ldr	r0, [r4, #0]
   1787e:	f7fe f959 	bl	15b34 <Light_Sensor::getRawValue()>
   17882:	4604      	mov	r4, r0
   17884:	f7f9 f9f2 	bl	10c6c <rtc_get_date_time_str>
   17888:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
   1788a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1788c:	9309      	str	r3, [sp, #36]	; 0x24
   1788e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
   17890:	491a      	ldr	r1, [pc, #104]	; (178fc <healthHandler(str&, CharDev&, void*)+0x174>)
   17892:	9308      	str	r3, [sp, #32]
   17894:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   17898:	9001      	str	r0, [sp, #4]
   1789a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1789e:	9307      	str	r3, [sp, #28]
   178a0:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   178a4:	9400      	str	r4, [sp, #0]
   178a6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   178aa:	9306      	str	r3, [sp, #24]
   178ac:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   178b0:	4630      	mov	r0, r6
   178b2:	f003 031f 	and.w	r3, r3, #31
   178b6:	9305      	str	r3, [sp, #20]
   178b8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   178bc:	f3c3 030b 	ubfx	r3, r3, #0, #12
   178c0:	9304      	str	r3, [sp, #16]
   178c2:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   178c6:	f003 031f 	and.w	r3, r3, #31
   178ca:	9303      	str	r3, [sp, #12]
   178cc:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   178d0:	f003 030f 	and.w	r3, r3, #15
   178d4:	9302      	str	r3, [sp, #8]
   178d6:	464b      	mov	r3, r9
   178d8:	f7f8 fce0 	bl	1029c <CharDev::printf(char const*, ...)>
   178dc:	2001      	movs	r0, #1
   178de:	b011      	add	sp, #68	; 0x44
   178e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178e4:	2007c1cc 	.word	0x2007c1cc
   178e8:	41200000 	.word	0x41200000
   178ec:	000186a0 	.word	0x000186a0
   178f0:	000250b8 	.word	0x000250b8
   178f4:	000250ec 	.word	0x000250ec
   178f8:	2007c408 	.word	0x2007c408
   178fc:	000250fa 	.word	0x000250fa

00017900 <flashProgHandler(str&, CharDev&, void*)>:
_Z16flashProgHandlerR3strR7CharDevPv():
   17900:	b570      	push	{r4, r5, r6, lr}
   17902:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   17906:	4605      	mov	r5, r0
   17908:	460c      	mov	r4, r1
   1790a:	f000 ffd6 	bl	188ba <str::getLen() const>
   1790e:	280b      	cmp	r0, #11
   17910:	dd02      	ble.n	17918 <flashProgHandler(str&, CharDev&, void*)+0x18>
   17912:	220c      	movs	r2, #12
   17914:	491f      	ldr	r1, [pc, #124]	; (17994 <flashProgHandler(str&, CharDev&, void*)+0x94>)
   17916:	e036      	b.n	17986 <flashProgHandler(str&, CharDev&, void*)+0x86>
   17918:	4628      	mov	r0, r5
   1791a:	f001 f961 	bl	18be0 <str::operator()() const>
   1791e:	2201      	movs	r2, #1
   17920:	4601      	mov	r1, r0
   17922:	a801      	add	r0, sp, #4
   17924:	f7fc f808 	bl	13938 <f_open>
   17928:	4606      	mov	r6, r0
   1792a:	bb38      	cbnz	r0, 1797c <flashProgHandler(str&, CharDev&, void*)+0x7c>
   1792c:	a801      	add	r0, sp, #4
   1792e:	f7fc fa6c 	bl	13e0a <f_close>
   17932:	4628      	mov	r0, r5
   17934:	f001 f954 	bl	18be0 <str::operator()() const>
   17938:	4917      	ldr	r1, [pc, #92]	; (17998 <flashProgHandler(str&, CharDev&, void*)+0x98>)
   1793a:	4602      	mov	r2, r0
   1793c:	9b04      	ldr	r3, [sp, #16]
   1793e:	4620      	mov	r0, r4
   17940:	f7f8 fcac 	bl	1029c <CharDev::printf(char const*, ...)>
   17944:	6823      	ldr	r3, [r4, #0]
   17946:	4620      	mov	r0, r4
   17948:	689b      	ldr	r3, [r3, #8]
   1794a:	4798      	blx	r3
   1794c:	200a      	movs	r0, #10
   1794e:	f002 fc8d 	bl	1a26c <vTaskDelay>
   17952:	f002 f8d9 	bl	19b08 <ulPortSetInterruptMask>
   17956:	4628      	mov	r0, r5
   17958:	f001 f942 	bl	18be0 <str::operator()() const>
   1795c:	4602      	mov	r2, r0
   1795e:	4b0f      	ldr	r3, [pc, #60]	; (1799c <flashProgHandler(str&, CharDev&, void*)+0x9c>)
   17960:	6800      	ldr	r0, [r0, #0]
   17962:	6851      	ldr	r1, [r2, #4]
   17964:	c303      	stmia	r3!, {r0, r1}
   17966:	6890      	ldr	r0, [r2, #8]
   17968:	4a0d      	ldr	r2, [pc, #52]	; (179a0 <flashProgHandler(str&, CharDev&, void*)+0xa0>)
   1796a:	6018      	str	r0, [r3, #0]
   1796c:	f843 2c0c 	str.w	r2, [r3, #-12]
   17970:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   17974:	22aa      	movs	r2, #170	; 0xaa
   17976:	721a      	strb	r2, [r3, #8]
   17978:	701e      	strb	r6, [r3, #0]
   1797a:	e007      	b.n	1798c <flashProgHandler(str&, CharDev&, void*)+0x8c>
   1797c:	4628      	mov	r0, r5
   1797e:	f001 f92f 	bl	18be0 <str::operator()() const>
   17982:	4602      	mov	r2, r0
   17984:	4907      	ldr	r1, [pc, #28]	; (179a4 <flashProgHandler(str&, CharDev&, void*)+0xa4>)
   17986:	4620      	mov	r0, r4
   17988:	f7f8 fc88 	bl	1029c <CharDev::printf(char const*, ...)>
   1798c:	2001      	movs	r0, #1
   1798e:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   17992:	bd70      	pop	{r4, r5, r6, pc}
   17994:	00025177 	.word	0x00025177
   17998:	0002519e 	.word	0x0002519e
   1799c:	40024048 	.word	0x40024048
   179a0:	deadd00d 	.word	0xdeadd00d
   179a4:	000251e5 	.word	0x000251e5

000179a8 <getFileHandler(str&, CharDev&, void*)>:
_Z14getFileHandlerR3strR7CharDevPv():
   179a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   179ac:	4c40      	ldr	r4, [pc, #256]	; (17ab0 <getFileHandler(str&, CharDev&, void*)+0x108>)
   179ae:	b0a4      	sub	sp, #144	; 0x90
   179b0:	6823      	ldr	r3, [r4, #0]
   179b2:	4606      	mov	r6, r0
   179b4:	07db      	lsls	r3, r3, #31
   179b6:	460d      	mov	r5, r1
   179b8:	d40c      	bmi.n	179d4 <getFileHandler(str&, CharDev&, void*)+0x2c>
   179ba:	4620      	mov	r0, r4
   179bc:	f004 f916 	bl	1bbec <__cxa_guard_acquire>
   179c0:	b140      	cbz	r0, 179d4 <getFileHandler(str&, CharDev&, void*)+0x2c>
   179c2:	f44f 6080 	mov.w	r0, #1024	; 0x400
   179c6:	f005 fc75 	bl	1d2b4 <malloc>
   179ca:	4b3a      	ldr	r3, [pc, #232]	; (17ab4 <getFileHandler(str&, CharDev&, void*)+0x10c>)
   179cc:	6018      	str	r0, [r3, #0]
   179ce:	4620      	mov	r0, r4
   179d0:	f004 f918 	bl	1bc04 <__cxa_guard_release>
   179d4:	4938      	ldr	r1, [pc, #224]	; (17ab8 <getFileHandler(str&, CharDev&, void*)+0x110>)
   179d6:	4630      	mov	r0, r6
   179d8:	f001 f827 	bl	18a2a <str::beginsWithIgnoreCase(char const*) const>
   179dc:	4607      	mov	r7, r0
   179de:	4604      	mov	r4, r0
   179e0:	b300      	cbz	r0, 17a24 <getFileHandler(str&, CharDev&, void*)+0x7c>
   179e2:	2280      	movs	r2, #128	; 0x80
   179e4:	2100      	movs	r1, #0
   179e6:	a804      	add	r0, sp, #16
   179e8:	f005 fcb7 	bl	1d35a <memset>
   179ec:	2300      	movs	r3, #0
   179ee:	9302      	str	r3, [sp, #8]
   179f0:	9303      	str	r3, [sp, #12]
   179f2:	ab03      	add	r3, sp, #12
   179f4:	9300      	str	r3, [sp, #0]
   179f6:	aa04      	add	r2, sp, #16
   179f8:	ab02      	add	r3, sp, #8
   179fa:	4930      	ldr	r1, [pc, #192]	; (17abc <getFileHandler(str&, CharDev&, void*)+0x114>)
   179fc:	4630      	mov	r0, r6
   179fe:	f000 ff65 	bl	188cc <str::scanf(char const*, ...)>
   17a02:	492c      	ldr	r1, [pc, #176]	; (17ab4 <getFileHandler(str&, CharDev&, void*)+0x10c>)
   17a04:	9b02      	ldr	r3, [sp, #8]
   17a06:	9a03      	ldr	r2, [sp, #12]
   17a08:	6809      	ldr	r1, [r1, #0]
   17a0a:	a804      	add	r0, sp, #16
   17a0c:	b913      	cbnz	r3, 17a14 <getFileHandler(str&, CharDev&, void*)+0x6c>
   17a0e:	f7fd ff25 	bl	1585c <Storage::write(char const*, void*, unsigned int, unsigned int)>
   17a12:	e001      	b.n	17a18 <getFileHandler(str&, CharDev&, void*)+0x70>
   17a14:	f7fd ff44 	bl	158a0 <Storage::append(char const*, void const*, unsigned int, unsigned int)>
   17a18:	4b29      	ldr	r3, [pc, #164]	; (17ac0 <getFileHandler(str&, CharDev&, void*)+0x118>)
   17a1a:	492a      	ldr	r1, [pc, #168]	; (17ac4 <getFileHandler(str&, CharDev&, void*)+0x11c>)
   17a1c:	2800      	cmp	r0, #0
   17a1e:	bf18      	it	ne
   17a20:	4619      	movne	r1, r3
   17a22:	e038      	b.n	17a96 <getFileHandler(str&, CharDev&, void*)+0xee>
   17a24:	4928      	ldr	r1, [pc, #160]	; (17ac8 <getFileHandler(str&, CharDev&, void*)+0x120>)
   17a26:	4630      	mov	r0, r6
   17a28:	f000 ffff 	bl	18a2a <str::beginsWithIgnoreCase(char const*) const>
   17a2c:	4607      	mov	r7, r0
   17a2e:	2800      	cmp	r0, #0
   17a30:	d03a      	beq.n	17aa8 <getFileHandler(str&, CharDev&, void*)+0x100>
   17a32:	ab04      	add	r3, sp, #16
   17a34:	4630      	mov	r0, r6
   17a36:	aa03      	add	r2, sp, #12
   17a38:	4924      	ldr	r1, [pc, #144]	; (17acc <getFileHandler(str&, CharDev&, void*)+0x124>)
   17a3a:	9403      	str	r4, [sp, #12]
   17a3c:	9404      	str	r4, [sp, #16]
   17a3e:	f88d 4008 	strb.w	r4, [sp, #8]
   17a42:	f000 ff43 	bl	188cc <str::scanf(char const*, ...)>
   17a46:	9e03      	ldr	r6, [sp, #12]
   17a48:	9b04      	ldr	r3, [sp, #16]
   17a4a:	4433      	add	r3, r6
   17a4c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   17a50:	dc02      	bgt.n	17a58 <getFileHandler(str&, CharDev&, void*)+0xb0>
   17a52:	f8df 8060 	ldr.w	r8, [pc, #96]	; 17ab4 <getFileHandler(str&, CharDev&, void*)+0x10c>
   17a56:	e00c      	b.n	17a72 <getFileHandler(str&, CharDev&, void*)+0xca>
   17a58:	f44f 6280 	mov.w	r2, #1024	; 0x400
   17a5c:	491c      	ldr	r1, [pc, #112]	; (17ad0 <getFileHandler(str&, CharDev&, void*)+0x128>)
   17a5e:	e020      	b.n	17aa2 <getFileHandler(str&, CharDev&, void*)+0xfa>
   17a60:	f8d8 3000 	ldr.w	r3, [r8]
   17a64:	f89d 2008 	ldrb.w	r2, [sp, #8]
   17a68:	559a      	strb	r2, [r3, r6]
   17a6a:	f89d 3008 	ldrb.w	r3, [sp, #8]
   17a6e:	3601      	adds	r6, #1
   17a70:	441c      	add	r4, r3
   17a72:	9b03      	ldr	r3, [sp, #12]
   17a74:	9a04      	ldr	r2, [sp, #16]
   17a76:	1af3      	subs	r3, r6, r3
   17a78:	4293      	cmp	r3, r2
   17a7a:	da10      	bge.n	17a9e <getFileHandler(str&, CharDev&, void*)+0xf6>
   17a7c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
   17a80:	da0d      	bge.n	17a9e <getFileHandler(str&, CharDev&, void*)+0xf6>
   17a82:	682b      	ldr	r3, [r5, #0]
   17a84:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   17a88:	681b      	ldr	r3, [r3, #0]
   17a8a:	a902      	add	r1, sp, #8
   17a8c:	4628      	mov	r0, r5
   17a8e:	4798      	blx	r3
   17a90:	2800      	cmp	r0, #0
   17a92:	d1e5      	bne.n	17a60 <getFileHandler(str&, CharDev&, void*)+0xb8>
   17a94:	490f      	ldr	r1, [pc, #60]	; (17ad4 <getFileHandler(str&, CharDev&, void*)+0x12c>)
   17a96:	4628      	mov	r0, r5
   17a98:	f7f8 fc00 	bl	1029c <CharDev::printf(char const*, ...)>
   17a9c:	e004      	b.n	17aa8 <getFileHandler(str&, CharDev&, void*)+0x100>
   17a9e:	4622      	mov	r2, r4
   17aa0:	490d      	ldr	r1, [pc, #52]	; (17ad8 <getFileHandler(str&, CharDev&, void*)+0x130>)
   17aa2:	4628      	mov	r0, r5
   17aa4:	f7f8 fbfa 	bl	1029c <CharDev::printf(char const*, ...)>
   17aa8:	4638      	mov	r0, r7
   17aaa:	b024      	add	sp, #144	; 0x90
   17aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17ab0:	2007c420 	.word	0x2007c420
   17ab4:	2007c41c 	.word	0x2007c41c
   17ab8:	00025210 	.word	0x00025210
   17abc:	00025217 	.word	0x00025217
   17ac0:	000251fe 	.word	0x000251fe
   17ac4:	000251fa 	.word	0x000251fa
   17ac8:	00025227 	.word	0x00025227
   17acc:	0002522e 	.word	0x0002522e
   17ad0:	00025238 	.word	0x00025238
   17ad4:	0002525c 	.word	0x0002525c
   17ad8:	0002526c 	.word	0x0002526c

00017adc <hl_print_line()>:
_ZL13hl_print_linev():
   17adc:	4801      	ldr	r0, [pc, #4]	; (17ae4 <hl_print_line()+0x8>)
   17ade:	f006 be3b 	b.w	1e758 <puts>
   17ae2:	bf00      	nop
   17ae4:	00025279 	.word	0x00025279

00017ae8 <ssp_set_max_clock>:
ssp_set_max_clock():
   17ae8:	b538      	push	{r3, r4, r5, lr}
   17aea:	4604      	mov	r4, r0
   17aec:	460d      	mov	r5, r1
   17aee:	f003 fa69 	bl	1afc4 <sys_get_cpu_clock>
   17af2:	4b07      	ldr	r3, [pc, #28]	; (17b10 <ssp_set_max_clock+0x28>)
   17af4:	fbb0 f0f3 	udiv	r0, r0, r3
   17af8:	2302      	movs	r3, #2
   17afa:	fbb0 f2f3 	udiv	r2, r0, r3
   17afe:	42aa      	cmp	r2, r5
   17b00:	d904      	bls.n	17b0c <ssp_set_max_clock+0x24>
   17b02:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   17b06:	d001      	beq.n	17b0c <ssp_set_max_clock+0x24>
   17b08:	3302      	adds	r3, #2
   17b0a:	e7f6      	b.n	17afa <ssp_set_max_clock+0x12>
   17b0c:	6123      	str	r3, [r4, #16]
   17b0e:	bd38      	pop	{r3, r4, r5, pc}
   17b10:	000f4240 	.word	0x000f4240

00017b14 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
   17b14:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   17b16:	f200 2635 	addw	r6, r0, #565	; 0x235
   17b1a:	460c      	mov	r4, r1
   17b1c:	2201      	movs	r2, #1
   17b1e:	4631      	mov	r1, r6
   17b20:	f7fb fecc 	bl	138bc <f_mount>
   17b24:	4605      	mov	r5, r0
   17b26:	bb48      	cbnz	r0, 17b7c <hl_mount_storage(FileSystemObject&, char const*)+0x68>
   17b28:	9003      	str	r0, [sp, #12]
   17b2a:	aa02      	add	r2, sp, #8
   17b2c:	a903      	add	r1, sp, #12
   17b2e:	4630      	mov	r0, r6
   17b30:	f7fc fa97 	bl	14062 <f_getfree>
   17b34:	bb00      	cbnz	r0, 17b78 <hl_mount_storage(FileSystemObject&, char const*)+0x64>
   17b36:	9802      	ldr	r0, [sp, #8]
   17b38:	9a03      	ldr	r2, [sp, #12]
   17b3a:	7883      	ldrb	r3, [r0, #2]
   17b3c:	fb02 f103 	mul.w	r1, r2, r3
   17b40:	6982      	ldr	r2, [r0, #24]
   17b42:	4813      	ldr	r0, [pc, #76]	; (17b90 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   17b44:	3a02      	subs	r2, #2
   17b46:	435a      	muls	r2, r3
   17b48:	0852      	lsrs	r2, r2, #1
   17b4a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   17b4e:	bf38      	it	cc
   17b50:	2001      	movcc	r0, #1
   17b52:	4b10      	ldr	r3, [pc, #64]	; (17b94 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   17b54:	ea4f 0151 	mov.w	r1, r1, lsr #1
   17b58:	bf24      	itt	cs
   17b5a:	4603      	movcs	r3, r0
   17b5c:	f44f 6080 	movcs.w	r0, #1024	; 0x400
   17b60:	fbb1 f1f0 	udiv	r1, r1, r0
   17b64:	fbb2 f2f0 	udiv	r2, r2, r0
   17b68:	9100      	str	r1, [sp, #0]
   17b6a:	9301      	str	r3, [sp, #4]
   17b6c:	4621      	mov	r1, r4
   17b6e:	480a      	ldr	r0, [pc, #40]	; (17b98 <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
   17b70:	f006 fd80 	bl	1e674 <iprintf>
   17b74:	2001      	movs	r0, #1
   17b76:	e008      	b.n	17b8a <hl_mount_storage(FileSystemObject&, char const*)+0x76>
   17b78:	4b08      	ldr	r3, [pc, #32]	; (17b9c <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   17b7a:	e000      	b.n	17b7e <hl_mount_storage(FileSystemObject&, char const*)+0x6a>
   17b7c:	4b08      	ldr	r3, [pc, #32]	; (17ba0 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   17b7e:	462a      	mov	r2, r5
   17b80:	4621      	mov	r1, r4
   17b82:	4808      	ldr	r0, [pc, #32]	; (17ba4 <hl_mount_storage(FileSystemObject&, char const*)+0x90>)
   17b84:	f006 fd76 	bl	1e674 <iprintf>
   17b88:	2000      	movs	r0, #0
   17b8a:	b004      	add	sp, #16
   17b8c:	bd70      	pop	{r4, r5, r6, pc}
   17b8e:	bf00      	nop
   17b90:	000252b7 	.word	0x000252b7
   17b94:	000252b4 	.word	0x000252b4
   17b98:	000252c1 	.word	0x000252c1
   17b9c:	000252bd 	.word	0x000252bd
   17ba0:	000252ba 	.word	0x000252ba
   17ba4:	000252ef 	.word	0x000252ef

00017ba8 <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
   17ba8:	b538      	push	{r3, r4, r5, lr}
   17baa:	4c07      	ldr	r4, [pc, #28]	; (17bc8 <SingletonTemplate<LED_Display>::getInstance()+0x20>)
   17bac:	6823      	ldr	r3, [r4, #0]
   17bae:	b94b      	cbnz	r3, 17bc4 <SingletonTemplate<LED_Display>::getInstance()+0x1c>
   17bb0:	2008      	movs	r0, #8
   17bb2:	f7f9 fd0d 	bl	115d0 <operator new(unsigned int)>
   17bb6:	4605      	mov	r5, r0
   17bb8:	f7ff fcde 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   17bbc:	2340      	movs	r3, #64	; 0x40
   17bbe:	6028      	str	r0, [r5, #0]
   17bc0:	712b      	strb	r3, [r5, #4]
   17bc2:	6025      	str	r5, [r4, #0]
   17bc4:	6820      	ldr	r0, [r4, #0]
   17bc6:	bd38      	pop	{r3, r4, r5, pc}
   17bc8:	2007c42c 	.word	0x2007c42c

00017bcc <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
   17bcc:	b538      	push	{r3, r4, r5, lr}
   17bce:	4c05      	ldr	r4, [pc, #20]	; (17be4 <SingletonTemplate<LED>::getInstance()+0x18>)
   17bd0:	6825      	ldr	r5, [r4, #0]
   17bd2:	b925      	cbnz	r5, 17bde <SingletonTemplate<LED>::getInstance()+0x12>
   17bd4:	2001      	movs	r0, #1
   17bd6:	f7f9 fcfb 	bl	115d0 <operator new(unsigned int)>
   17bda:	7005      	strb	r5, [r0, #0]
   17bdc:	6020      	str	r0, [r4, #0]
   17bde:	6820      	ldr	r0, [r4, #0]
   17be0:	bd38      	pop	{r3, r4, r5, pc}
   17be2:	bf00      	nop
   17be4:	2007c428 	.word	0x2007c428

00017be8 <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
   17be8:	b510      	push	{r4, lr}
   17bea:	4c04      	ldr	r4, [pc, #16]	; (17bfc <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   17bec:	6823      	ldr	r3, [r4, #0]
   17bee:	b91b      	cbnz	r3, 17bf8 <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
   17bf0:	2001      	movs	r0, #1
   17bf2:	f7f9 fced 	bl	115d0 <operator new(unsigned int)>
   17bf6:	6020      	str	r0, [r4, #0]
   17bf8:	6820      	ldr	r0, [r4, #0]
   17bfa:	bd10      	pop	{r4, pc}
   17bfc:	2007c408 	.word	0x2007c408

00017c00 <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
   17c00:	b510      	push	{r4, lr}
   17c02:	4c04      	ldr	r4, [pc, #16]	; (17c14 <SingletonTemplate<Switches>::getInstance()+0x14>)
   17c04:	6823      	ldr	r3, [r4, #0]
   17c06:	b91b      	cbnz	r3, 17c10 <SingletonTemplate<Switches>::getInstance()+0x10>
   17c08:	2001      	movs	r0, #1
   17c0a:	f7f9 fce1 	bl	115d0 <operator new(unsigned int)>
   17c0e:	6020      	str	r0, [r4, #0]
   17c10:	6820      	ldr	r0, [r4, #0]
   17c12:	bd10      	pop	{r4, pc}
   17c14:	2007c424 	.word	0x2007c424

00017c18 <high_level_init()>:
_Z15high_level_initv():
   17c18:	49ad      	ldr	r1, [pc, #692]	; (17ed0 <high_level_init()+0x2b8>)
   17c1a:	4aae      	ldr	r2, [pc, #696]	; (17ed4 <high_level_init()+0x2bc>)
   17c1c:	2340      	movs	r3, #64	; 0x40
   17c1e:	b5f0      	push	{r4, r5, r6, r7, lr}
   17c20:	618b      	str	r3, [r1, #24]
   17c22:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   17c26:	6193      	str	r3, [r2, #24]
   17c28:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   17c2c:	618b      	str	r3, [r1, #24]
   17c2e:	4baa      	ldr	r3, [pc, #680]	; (17ed8 <high_level_init()+0x2c0>)
   17c30:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
   17c34:	6818      	ldr	r0, [r3, #0]
   17c36:	2507      	movs	r5, #7
   17c38:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   17c3c:	6018      	str	r0, [r3, #0]
   17c3e:	6818      	ldr	r0, [r3, #0]
   17c40:	2402      	movs	r4, #2
   17c42:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   17c46:	6018      	str	r0, [r3, #0]
   17c48:	6818      	ldr	r0, [r3, #0]
   17c4a:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   17c4e:	6018      	str	r0, [r3, #0]
   17c50:	6808      	ldr	r0, [r1, #0]
   17c52:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   17c56:	6008      	str	r0, [r1, #0]
   17c58:	6818      	ldr	r0, [r3, #0]
   17c5a:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   17c5e:	6018      	str	r0, [r3, #0]
   17c60:	6818      	ldr	r0, [r3, #0]
   17c62:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   17c66:	6018      	str	r0, [r3, #0]
   17c68:	6818      	ldr	r0, [r3, #0]
   17c6a:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   17c6e:	6018      	str	r0, [r3, #0]
   17c70:	6818      	ldr	r0, [r3, #0]
   17c72:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   17c76:	6018      	str	r0, [r3, #0]
   17c78:	6818      	ldr	r0, [r3, #0]
   17c7a:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   17c7e:	6018      	str	r0, [r3, #0]
   17c80:	6818      	ldr	r0, [r3, #0]
   17c82:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   17c86:	6018      	str	r0, [r3, #0]
   17c88:	6858      	ldr	r0, [r3, #4]
   17c8a:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   17c8e:	6058      	str	r0, [r3, #4]
   17c90:	6858      	ldr	r0, [r3, #4]
   17c92:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   17c96:	6058      	str	r0, [r3, #4]
   17c98:	6858      	ldr	r0, [r3, #4]
   17c9a:	f020 0003 	bic.w	r0, r0, #3
   17c9e:	6058      	str	r0, [r3, #4]
   17ca0:	6808      	ldr	r0, [r1, #0]
   17ca2:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   17ca6:	6008      	str	r0, [r1, #0]
   17ca8:	6858      	ldr	r0, [r3, #4]
   17caa:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   17cae:	6058      	str	r0, [r3, #4]
   17cb0:	6808      	ldr	r0, [r1, #0]
   17cb2:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   17cb6:	6008      	str	r0, [r1, #0]
   17cb8:	68d9      	ldr	r1, [r3, #12]
   17cba:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   17cbe:	60d9      	str	r1, [r3, #12]
   17cc0:	6811      	ldr	r1, [r2, #0]
   17cc2:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   17cc6:	6011      	str	r1, [r2, #0]
   17cc8:	6859      	ldr	r1, [r3, #4]
   17cca:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   17cce:	6059      	str	r1, [r3, #4]
   17cd0:	6859      	ldr	r1, [r3, #4]
   17cd2:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   17cd6:	6059      	str	r1, [r3, #4]
   17cd8:	6898      	ldr	r0, [r3, #8]
   17cda:	4980      	ldr	r1, [pc, #512]	; (17edc <high_level_init()+0x2c4>)
   17cdc:	4001      	ands	r1, r0
   17cde:	6099      	str	r1, [r3, #8]
   17ce0:	6811      	ldr	r1, [r2, #0]
   17ce2:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   17ce6:	f041 0101 	orr.w	r1, r1, #1
   17cea:	6011      	str	r1, [r2, #0]
   17cec:	6899      	ldr	r1, [r3, #8]
   17cee:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   17cf2:	6099      	str	r1, [r3, #8]
   17cf4:	6899      	ldr	r1, [r3, #8]
   17cf6:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   17cfa:	6099      	str	r1, [r3, #8]
   17cfc:	6811      	ldr	r1, [r2, #0]
   17cfe:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   17d02:	6011      	str	r1, [r2, #0]
   17d04:	68d9      	ldr	r1, [r3, #12]
   17d06:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   17d0a:	60d9      	str	r1, [r3, #12]
   17d0c:	68d9      	ldr	r1, [r3, #12]
   17d0e:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   17d12:	60d9      	str	r1, [r3, #12]
   17d14:	68d9      	ldr	r1, [r3, #12]
   17d16:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   17d1a:	60d9      	str	r1, [r3, #12]
   17d1c:	6813      	ldr	r3, [r2, #0]
   17d1e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   17d22:	6013      	str	r3, [r2, #0]
   17d24:	6813      	ldr	r3, [r2, #0]
   17d26:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   17d2a:	6013      	str	r3, [r2, #0]
   17d2c:	f7f9 f9ec 	bl	11108 <adc0_init>
   17d30:	2101      	movs	r1, #1
   17d32:	200a      	movs	r0, #10
   17d34:	f003 fbd4 	bl	1b4e0 <lpc_pconp>
   17d38:	2101      	movs	r1, #1
   17d3a:	200a      	movs	r0, #10
   17d3c:	f003 fbe8 	bl	1b510 <lpc_pclk>
   17d40:	4867      	ldr	r0, [pc, #412]	; (17ee0 <high_level_init()+0x2c8>)
   17d42:	2101      	movs	r1, #1
   17d44:	6005      	str	r5, [r0, #0]
   17d46:	6044      	str	r4, [r0, #4]
   17d48:	f7ff fece 	bl	17ae8 <ssp_set_max_clock>
   17d4c:	f7f9 f8b0 	bl	10eb0 <ssp1_dma_init>
   17d50:	2101      	movs	r1, #1
   17d52:	2015      	movs	r0, #21
   17d54:	f003 fbc4 	bl	1b4e0 <lpc_pconp>
   17d58:	2101      	movs	r1, #1
   17d5a:	2015      	movs	r0, #21
   17d5c:	f003 fbd8 	bl	1b510 <lpc_pclk>
   17d60:	4860      	ldr	r0, [pc, #384]	; (17ee4 <high_level_init()+0x2cc>)
   17d62:	2101      	movs	r1, #1
   17d64:	6005      	str	r5, [r0, #0]
   17d66:	6044      	str	r4, [r0, #4]
   17d68:	f7ff febe 	bl	17ae8 <ssp_set_max_clock>
   17d6c:	f7ff fc04 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   17d70:	2164      	movs	r1, #100	; 0x64
   17d72:	f7f8 fe13 	bl	1099c <I2C2::init(unsigned int)>
   17d76:	b910      	cbnz	r0, 17d7e <high_level_init()+0x166>
   17d78:	485b      	ldr	r0, [pc, #364]	; (17ee8 <high_level_init()+0x2d0>)
   17d7a:	f006 fced 	bl	1e758 <puts>
   17d7e:	f003 fa9f 	bl	1b2c0 <lpc_sys_setup_system_timer>
   17d82:	f7f9 fd99 	bl	118b8 <wireless_init>
   17d86:	b910      	cbnz	r0, 17d8e <high_level_init()+0x176>
   17d88:	4858      	ldr	r0, [pc, #352]	; (17eec <high_level_init()+0x2d4>)
   17d8a:	f006 fce5 	bl	1e758 <puts>
   17d8e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   17d92:	f000 fd5a 	bl	1884a <delay_ms>
   17d96:	f7ff fea1 	bl	17adc <hl_print_line()>
   17d9a:	f003 f913 	bl	1afc4 <sys_get_cpu_clock>
   17d9e:	f004 fcf5 	bl	1c78c <__aeabi_ui2f>
   17da2:	4953      	ldr	r1, [pc, #332]	; (17ef0 <high_level_init()+0x2d8>)
   17da4:	f004 fdfe 	bl	1c9a4 <__aeabi_fdiv>
   17da8:	f004 f8b4 	bl	1bf14 <__aeabi_f2d>
   17dac:	4602      	mov	r2, r0
   17dae:	460b      	mov	r3, r1
   17db0:	4850      	ldr	r0, [pc, #320]	; (17ef4 <high_level_init()+0x2dc>)
   17db2:	f006 fc5f 	bl	1e674 <iprintf>
   17db6:	f003 f957 	bl	1b068 <sys_get_boot_type>
   17dba:	2805      	cmp	r0, #5
   17dbc:	ac04      	add	r4, sp, #16
   17dbe:	d114      	bne.n	17dea <high_level_init()+0x1d2>
   17dc0:	2300      	movs	r3, #0
   17dc2:	6063      	str	r3, [r4, #4]
   17dc4:	4b4c      	ldr	r3, [pc, #304]	; (17ef8 <high_level_init()+0x2e0>)
   17dc6:	681b      	ldr	r3, [r3, #0]
   17dc8:	6023      	str	r3, [r4, #0]
   17dca:	f7ff fe87 	bl	17adc <hl_print_line()>
   17dce:	4b4b      	ldr	r3, [pc, #300]	; (17efc <high_level_init()+0x2e4>)
   17dd0:	484b      	ldr	r0, [pc, #300]	; (17f00 <high_level_init()+0x2e8>)
   17dd2:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   17dd4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   17dd6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   17dd8:	9400      	str	r4, [sp, #0]
   17dda:	f006 fc4b 	bl	1e674 <iprintf>
   17dde:	f7ff fe7d 	bl	17adc <hl_print_line()>
   17de2:	f241 3088 	movw	r0, #5000	; 0x1388
   17de6:	f000 fd30 	bl	1884a <delay_ms>
   17dea:	f7fe fe0f 	bl	16a0c <Storage::getFlashDrive()>
   17dee:	4945      	ldr	r1, [pc, #276]	; (17f04 <high_level_init()+0x2ec>)
   17df0:	f7ff fe90 	bl	17b14 <hl_mount_storage(FileSystemObject&, char const*)>
   17df4:	4605      	mov	r5, r0
   17df6:	bb68      	cbnz	r0, 17e54 <high_level_init()+0x23c>
   17df8:	4843      	ldr	r0, [pc, #268]	; (17f08 <high_level_init()+0x2f0>)
   17dfa:	f006 fc3b 	bl	1e674 <iprintf>
   17dfe:	f7fd f871 	bl	14ee4 <flash_chip_erase>
   17e02:	f7fe fe03 	bl	16a0c <Storage::getFlashDrive()>
   17e06:	4629      	mov	r1, r5
   17e08:	462a      	mov	r2, r5
   17e0a:	f200 2035 	addw	r0, r0, #565	; 0x235
   17e0e:	f7fc fb23 	bl	14458 <f_mkfs>
   17e12:	4b3e      	ldr	r3, [pc, #248]	; (17f0c <high_level_init()+0x2f4>)
   17e14:	4a3e      	ldr	r2, [pc, #248]	; (17f10 <high_level_init()+0x2f8>)
   17e16:	2800      	cmp	r0, #0
   17e18:	bf0c      	ite	eq
   17e1a:	4610      	moveq	r0, r2
   17e1c:	4618      	movne	r0, r3
   17e1e:	f006 fc9b 	bl	1e758 <puts>
   17e22:	f7fe fdf3 	bl	16a0c <Storage::getFlashDrive()>
   17e26:	4937      	ldr	r1, [pc, #220]	; (17f04 <high_level_init()+0x2ec>)
   17e28:	f7ff fe74 	bl	17b14 <hl_mount_storage(FileSystemObject&, char const*)>
   17e2c:	b990      	cbnz	r0, 17e54 <high_level_init()+0x23c>
   17e2e:	4839      	ldr	r0, [pc, #228]	; (17f14 <high_level_init()+0x2fc>)
   17e30:	f006 fc92 	bl	1e758 <puts>
   17e34:	f7fc ffd8 	bl	14de8 <flash_get_page_size>
   17e38:	4601      	mov	r1, r0
   17e3a:	4837      	ldr	r0, [pc, #220]	; (17f18 <high_level_init()+0x300>)
   17e3c:	f006 fc1a 	bl	1e674 <iprintf>
   17e40:	f7fc ffc2 	bl	14dc8 <flash_get_page_count>
   17e44:	4605      	mov	r5, r0
   17e46:	f7fc ffcf 	bl	14de8 <flash_get_page_size>
   17e4a:	fb00 f105 	mul.w	r1, r0, r5
   17e4e:	4833      	ldr	r0, [pc, #204]	; (17f1c <high_level_init()+0x304>)
   17e50:	f006 fc10 	bl	1e674 <iprintf>
   17e54:	4e32      	ldr	r6, [pc, #200]	; (17f20 <high_level_init()+0x308>)
   17e56:	4f33      	ldr	r7, [pc, #204]	; (17f24 <high_level_init()+0x30c>)
   17e58:	6833      	ldr	r3, [r6, #0]
   17e5a:	f013 0501 	ands.w	r5, r3, #1
   17e5e:	d116      	bne.n	17e8e <high_level_init()+0x276>
   17e60:	4630      	mov	r0, r6
   17e62:	f003 fec3 	bl	1bbec <__cxa_guard_acquire>
   17e66:	b190      	cbz	r0, 17e8e <high_level_init()+0x276>
   17e68:	f44f 700e 	mov.w	r0, #568	; 0x238
   17e6c:	f7f9 fbb0 	bl	115d0 <operator new(unsigned int)>
   17e70:	2301      	movs	r3, #1
   17e72:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
   17e76:	2331      	movs	r3, #49	; 0x31
   17e78:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
   17e7c:	233a      	movs	r3, #58	; 0x3a
   17e7e:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
   17e82:	f880 5237 	strb.w	r5, [r0, #567]	; 0x237
   17e86:	6038      	str	r0, [r7, #0]
   17e88:	4630      	mov	r0, r6
   17e8a:	f003 febb 	bl	1bc04 <__cxa_guard_release>
   17e8e:	4926      	ldr	r1, [pc, #152]	; (17f28 <high_level_init()+0x310>)
   17e90:	6838      	ldr	r0, [r7, #0]
   17e92:	4d26      	ldr	r5, [pc, #152]	; (17f2c <high_level_init()+0x314>)
   17e94:	f7ff fe3e 	bl	17b14 <hl_mount_storage(FileSystemObject&, char const*)>
   17e98:	2118      	movs	r1, #24
   17e9a:	4811      	ldr	r0, [pc, #68]	; (17ee0 <high_level_init()+0x2c8>)
   17e9c:	f7ff fe24 	bl	17ae8 <ssp_set_max_clock>
   17ea0:	f7ff fe1c 	bl	17adc <hl_print_line()>
   17ea4:	682b      	ldr	r3, [r5, #0]
   17ea6:	b94b      	cbnz	r3, 17ebc <high_level_init()+0x2a4>
   17ea8:	2008      	movs	r0, #8
   17eaa:	f7f9 fb91 	bl	115d0 <operator new(unsigned int)>
   17eae:	4606      	mov	r6, r0
   17eb0:	f7ff fb62 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   17eb4:	2338      	movs	r3, #56	; 0x38
   17eb6:	6030      	str	r0, [r6, #0]
   17eb8:	7133      	strb	r3, [r6, #4]
   17eba:	602e      	str	r6, [r5, #0]
   17ebc:	6828      	ldr	r0, [r5, #0]
   17ebe:	f7fd fd2e 	bl	1591e <Acceleration_Sensor::init()>
   17ec2:	4605      	mov	r5, r0
   17ec4:	bbb0      	cbnz	r0, 17f34 <high_level_init()+0x31c>
   17ec6:	481a      	ldr	r0, [pc, #104]	; (17f30 <high_level_init()+0x318>)
   17ec8:	f006 fc46 	bl	1e758 <puts>
   17ecc:	e033      	b.n	17f36 <high_level_init()+0x31e>
   17ece:	bf00      	nop
   17ed0:	2009c000 	.word	0x2009c000
   17ed4:	2009c020 	.word	0x2009c020
   17ed8:	4002c000 	.word	0x4002c000
   17edc:	fffcfcf0 	.word	0xfffcfcf0
   17ee0:	40030000 	.word	0x40030000
   17ee4:	40088000 	.word	0x40088000
   17ee8:	00025333 	.word	0x00025333
   17eec:	00025364 	.word	0x00025364
   17ef0:	49742400 	.word	0x49742400
   17ef4:	00025389 	.word	0x00025389
   17ef8:	40024044 	.word	0x40024044
   17efc:	40024000 	.word	0x40024000
   17f00:	000253a1 	.word	0x000253a1
   17f04:	00025419 	.word	0x00025419
   17f08:	00025421 	.word	0x00025421
   17f0c:	00025327 	.word	0x00025327
   17f10:	00025322 	.word	0x00025322
   17f14:	0002545e 	.word	0x0002545e
   17f18:	0002547d 	.word	0x0002547d
   17f1c:	0002548c 	.word	0x0002548c
   17f20:	2007c40c 	.word	0x2007c40c
   17f24:	2007c410 	.word	0x2007c410
   17f28:	00024ecc 	.word	0x00024ecc
   17f2c:	2007c434 	.word	0x2007c434
   17f30:	000254a7 	.word	0x000254a7
   17f34:	2501      	movs	r5, #1
   17f36:	f7ff fbfb 	bl	17730 <SingletonTemplate<TemperatureSensor>::getInstance()>
   17f3a:	f7fd fe0d 	bl	15b58 <I2C_Temp::init()>
   17f3e:	4606      	mov	r6, r0
   17f40:	b918      	cbnz	r0, 17f4a <high_level_init()+0x332>
   17f42:	4872      	ldr	r0, [pc, #456]	; (1810c <high_level_init()+0x4f4>)
   17f44:	f006 fc08 	bl	1e758 <puts>
   17f48:	4635      	mov	r5, r6
   17f4a:	f7ff fe2d 	bl	17ba8 <SingletonTemplate<LED_Display>::getInstance()>
   17f4e:	f7fd fd71 	bl	15a34 <LED_Display::init()>
   17f52:	4606      	mov	r6, r0
   17f54:	b918      	cbnz	r0, 17f5e <high_level_init()+0x346>
   17f56:	486e      	ldr	r0, [pc, #440]	; (18110 <high_level_init()+0x4f8>)
   17f58:	f006 fbfe 	bl	1e758 <puts>
   17f5c:	4635      	mov	r5, r6
   17f5e:	4e6d      	ldr	r6, [pc, #436]	; (18114 <high_level_init()+0x4fc>)
   17f60:	6833      	ldr	r3, [r6, #0]
   17f62:	b91b      	cbnz	r3, 17f6c <high_level_init()+0x354>
   17f64:	2001      	movs	r0, #1
   17f66:	f7f9 fb33 	bl	115d0 <operator new(unsigned int)>
   17f6a:	6030      	str	r0, [r6, #0]
   17f6c:	6830      	ldr	r0, [r6, #0]
   17f6e:	f7fd fd2f 	bl	159d0 <IR_Sensor::init()>
   17f72:	f7ff fe39 	bl	17be8 <SingletonTemplate<Light_Sensor>::getInstance()>
   17f76:	f7fd fddb 	bl	15b30 <Light_Sensor::init()>
   17f7a:	f7ff fe27 	bl	17bcc <SingletonTemplate<LED>::getInstance()>
   17f7e:	f7fd fd92 	bl	15aa6 <LED::init()>
   17f82:	f7ff fe3d 	bl	17c00 <SingletonTemplate<Switches>::getInstance()>
   17f86:	f7fd fdd8 	bl	15b3a <Switches::init()>
   17f8a:	f7ff fe1f 	bl	17bcc <SingletonTemplate<LED>::getInstance()>
   17f8e:	2100      	movs	r1, #0
   17f90:	f7fd fd8c 	bl	15aac <LED::setAll(unsigned char)>
   17f94:	b98d      	cbnz	r5, 17fba <high_level_init()+0x3a2>
   17f96:	f7ff fda1 	bl	17adc <hl_print_line()>
   17f9a:	f7ff fe05 	bl	17ba8 <SingletonTemplate<LED_Display>::getInstance()>
   17f9e:	212d      	movs	r1, #45	; 0x2d
   17fa0:	f7fd fd30 	bl	15a04 <LED_Display::setLeftDigit(char)>
   17fa4:	f7ff fe00 	bl	17ba8 <SingletonTemplate<LED_Display>::getInstance()>
   17fa8:	212d      	movs	r1, #45	; 0x2d
   17faa:	f7fd fd37 	bl	15a1c <LED_Display::setRightDigit(char)>
   17fae:	f7ff fe0d 	bl	17bcc <SingletonTemplate<LED>::getInstance()>
   17fb2:	21ff      	movs	r1, #255	; 0xff
   17fb4:	f7fd fd7a 	bl	15aac <LED::setAll(unsigned char)>
   17fb8:	e00c      	b.n	17fd4 <high_level_init()+0x3bc>
   17fba:	f7ff fdf5 	bl	17ba8 <SingletonTemplate<LED_Display>::getInstance()>
   17fbe:	4605      	mov	r5, r0
   17fc0:	f7ff fbb6 	bl	17730 <SingletonTemplate<TemperatureSensor>::getInstance()>
   17fc4:	f7fd fdf2 	bl	15bac <I2C_Temp::getFarenheit()>
   17fc8:	f004 fdae 	bl	1cb28 <__aeabi_f2uiz>
   17fcc:	b2c1      	uxtb	r1, r0
   17fce:	4628      	mov	r0, r5
   17fd0:	f7fd fd4c 	bl	15a6c <LED_Display::setNumber(char)>
   17fd4:	2210      	movs	r2, #16
   17fd6:	2100      	movs	r1, #0
   17fd8:	4620      	mov	r0, r4
   17fda:	f005 f9be 	bl	1d35a <memset>
   17fde:	2300      	movs	r3, #0
   17fe0:	220f      	movs	r2, #15
   17fe2:	4621      	mov	r1, r4
   17fe4:	484c      	ldr	r0, [pc, #304]	; (18118 <high_level_init()+0x500>)
   17fe6:	f7fd fc17 	bl	15818 <Storage::read(char const*, void*, unsigned int, unsigned int)>
   17fea:	b980      	cbnz	r0, 1800e <high_level_init()+0x3f6>
   17fec:	4620      	mov	r0, r4
   17fee:	f004 ff52 	bl	1ce96 <atoi>
   17ff2:	b2c5      	uxtb	r5, r0
   17ff4:	4628      	mov	r0, r5
   17ff6:	f7fa f8fb 	bl	121f0 <mesh_set_node_address>
   17ffa:	4a48      	ldr	r2, [pc, #288]	; (1811c <high_level_init()+0x504>)
   17ffc:	4b48      	ldr	r3, [pc, #288]	; (18120 <high_level_init()+0x508>)
   17ffe:	4629      	mov	r1, r5
   18000:	2800      	cmp	r0, #0
   18002:	bf18      	it	ne
   18004:	4613      	movne	r3, r2
   18006:	4a44      	ldr	r2, [pc, #272]	; (18118 <high_level_init()+0x500>)
   18008:	4846      	ldr	r0, [pc, #280]	; (18124 <high_level_init()+0x50c>)
   1800a:	f006 fb33 	bl	1e674 <iprintf>
   1800e:	f7ff fdeb 	bl	17be8 <SingletonTemplate<Light_Sensor>::getInstance()>
   18012:	f7fd fd8f 	bl	15b34 <Light_Sensor::getRawValue()>
   18016:	4605      	mov	r5, r0
   18018:	2000      	movs	r0, #0
   1801a:	f007 fdff 	bl	1fc1c <time>
   1801e:	4428      	add	r0, r5
   18020:	f006 fba2 	bl	1e768 <srand>
   18024:	f44f 7200 	mov.w	r2, #512	; 0x200
   18028:	2100      	movs	r1, #0
   1802a:	4620      	mov	r0, r4
   1802c:	f005 f995 	bl	1d35a <memset>
   18030:	4620      	mov	r0, r4
   18032:	f003 f985 	bl	1b340 <sys_get_mem_info_str>
   18036:	4621      	mov	r1, r4
   18038:	483b      	ldr	r0, [pc, #236]	; (18128 <high_level_init()+0x510>)
   1803a:	f006 fb1b 	bl	1e674 <iprintf>
   1803e:	f7ff fd4d 	bl	17adc <hl_print_line()>
   18042:	2280      	movs	r2, #128	; 0x80
   18044:	2100      	movs	r1, #0
   18046:	4620      	mov	r0, r4
   18048:	f005 f987 	bl	1d35a <memset>
   1804c:	4620      	mov	r0, r4
   1804e:	f7fc fea7 	bl	14da0 <flash_read_permanent_id>
   18052:	7822      	ldrb	r2, [r4, #0]
   18054:	2aff      	cmp	r2, #255	; 0xff
   18056:	d004      	beq.n	18062 <high_level_init()+0x44a>
   18058:	4621      	mov	r1, r4
   1805a:	4834      	ldr	r0, [pc, #208]	; (1812c <high_level_init()+0x514>)
   1805c:	f006 fb0a 	bl	1e674 <iprintf>
   18060:	e029      	b.n	180b6 <high_level_init()+0x49e>
   18062:	f7ff fdcd 	bl	17c00 <SingletonTemplate<Switches>::getInstance()>
   18066:	f7fd fd6b 	bl	15b40 <Switches::getSwitchValues()>
   1806a:	2809      	cmp	r0, #9
   1806c:	d11d      	bne.n	180aa <high_level_init()+0x492>
   1806e:	4830      	ldr	r0, [pc, #192]	; (18130 <high_level_init()+0x518>)
   18070:	f006 fb72 	bl	1e758 <puts>
   18074:	4621      	mov	r1, r4
   18076:	482f      	ldr	r0, [pc, #188]	; (18134 <high_level_init()+0x51c>)
   18078:	f006 fc82 	bl	1e980 <iscanf>
   1807c:	4621      	mov	r1, r4
   1807e:	482e      	ldr	r0, [pc, #184]	; (18138 <high_level_init()+0x520>)
   18080:	f006 faf8 	bl	1e674 <iprintf>
   18084:	482d      	ldr	r0, [pc, #180]	; (1813c <high_level_init()+0x524>)
   18086:	f006 fb67 	bl	1e758 <puts>
   1808a:	2300      	movs	r3, #0
   1808c:	a903      	add	r1, sp, #12
   1808e:	482c      	ldr	r0, [pc, #176]	; (18140 <high_level_init()+0x528>)
   18090:	9303      	str	r3, [sp, #12]
   18092:	f006 fc75 	bl	1e980 <iscanf>
   18096:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1809a:	2b59      	cmp	r3, #89	; 0x59
   1809c:	d103      	bne.n	180a6 <high_level_init()+0x48e>
   1809e:	4620      	mov	r0, r4
   180a0:	f7fc fe5c 	bl	14d5c <flash_write_permanent_id>
   180a4:	e007      	b.n	180b6 <high_level_init()+0x49e>
   180a6:	4827      	ldr	r0, [pc, #156]	; (18144 <high_level_init()+0x52c>)
   180a8:	e003      	b.n	180b2 <high_level_init()+0x49a>
   180aa:	4827      	ldr	r0, [pc, #156]	; (18148 <high_level_init()+0x530>)
   180ac:	f006 fb54 	bl	1e758 <puts>
   180b0:	4826      	ldr	r0, [pc, #152]	; (1814c <high_level_init()+0x534>)
   180b2:	f006 fb51 	bl	1e758 <puts>
   180b6:	f24f 0308 	movw	r3, #61448	; 0xf008
   180ba:	681d      	ldr	r5, [r3, #0]
   180bc:	f24f 030c 	movw	r3, #61452	; 0xf00c
   180c0:	681c      	ldr	r4, [r3, #0]
   180c2:	f24f 0310 	movw	r3, #61456	; 0xf010
   180c6:	681e      	ldr	r6, [r3, #0]
   180c8:	f44f 4370 	mov.w	r3, #61440	; 0xf000
   180cc:	681a      	ldr	r2, [r3, #0]
   180ce:	f24f 0304 	movw	r3, #61444	; 0xf004
   180d2:	0aad      	lsrs	r5, r5, #10
   180d4:	6819      	ldr	r1, [r3, #0]
   180d6:	0aa4      	lsrs	r4, r4, #10
   180d8:	481d      	ldr	r0, [pc, #116]	; (18150 <high_level_init()+0x538>)
   180da:	f006 facb 	bl	1e674 <iprintf>
   180de:	462a      	mov	r2, r5
   180e0:	4621      	mov	r1, r4
   180e2:	481c      	ldr	r0, [pc, #112]	; (18154 <high_level_init()+0x53c>)
   180e4:	f006 fac6 	bl	1e674 <iprintf>
   180e8:	4631      	mov	r1, r6
   180ea:	481b      	ldr	r0, [pc, #108]	; (18158 <high_level_init()+0x540>)
   180ec:	f006 fac2 	bl	1e674 <iprintf>
   180f0:	f7ff fcf4 	bl	17adc <hl_print_line()>
   180f4:	2001      	movs	r0, #1
   180f6:	f001 fb77 	bl	197e8 <logger_init>
   180fa:	4818      	ldr	r0, [pc, #96]	; (1815c <high_level_init()+0x544>)
   180fc:	f006 fb2c 	bl	1e758 <puts>
   18100:	f7ff fcec 	bl	17adc <hl_print_line()>
   18104:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   18108:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1810a:	bf00      	nop
   1810c:	000254c2 	.word	0x000254c2
   18110:	000254dc 	.word	0x000254dc
   18114:	2007c430 	.word	0x2007c430
   18118:	000254f5 	.word	0x000254f5
   1811c:	0002532d 	.word	0x0002532d
   18120:	00024473 	.word	0x00024473
   18124:	000254fb 	.word	0x000254fb
   18128:	00025d12 	.word	0x00025d12
   1812c:	0002552f 	.word	0x0002552f
   18130:	0002554b 	.word	0x0002554b
   18134:	0002556d 	.word	0x0002556d
   18138:	00025572 	.word	0x00025572
   1813c:	0002558d 	.word	0x0002558d
   18140:	000255d0 	.word	0x000255d0
   18144:	000255d4 	.word	0x000255d4
   18148:	000255ec 	.word	0x000255ec
   1814c:	0002561a 	.word	0x0002561a
   18150:	0002564c 	.word	0x0002564c
   18154:	00025678 	.word	0x00025678
   18158:	000256a5 	.word	0x000256a5
   1815c:	000256c2 	.word	0x000256c2

00018160 <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
   18160:	b510      	push	{r4, lr}
   18162:	4c04      	ldr	r4, [pc, #16]	; (18174 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   18164:	6823      	ldr	r3, [r4, #0]
   18166:	b91b      	cbnz	r3, 18170 <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
   18168:	2001      	movs	r0, #1
   1816a:	f7f9 fa31 	bl	115d0 <operator new(unsigned int)>
   1816e:	6020      	str	r0, [r4, #0]
   18170:	6820      	ldr	r0, [r4, #0]
   18172:	bd10      	pop	{r4, pc}
   18174:	2007c430 	.word	0x2007c430

00018178 <periodicSchedulerTask::~periodicSchedulerTask()>:
_ZN21periodicSchedulerTaskD1Ev():
   18178:	4770      	bx	lr
   1817a:	ffff b510 	vsli.32	d27, d0, #31

0001817c <period_task_1Hz(void*)>:
_Z15period_task_1HzPv():
   1817c:	b510      	push	{r4, lr}
   1817e:	4c06      	ldr	r4, [pc, #24]	; (18198 <period_task_1Hz(void*)+0x1c>)
   18180:	2300      	movs	r3, #0
   18182:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   18186:	4619      	mov	r1, r3
   18188:	6820      	ldr	r0, [r4, #0]
   1818a:	f002 fd66 	bl	1ac5a <xQueueGenericReceive>
   1818e:	b110      	cbz	r0, 18196 <period_task_1Hz(void*)+0x1a>
   18190:	f000 f916 	bl	183c0 <period_1Hz>
   18194:	e7f4      	b.n	18180 <period_task_1Hz(void*)+0x4>
   18196:	bd10      	pop	{r4, pc}
   18198:	2007c43c 	.word	0x2007c43c

0001819c <period_task_10Hz(void*)>:
_Z16period_task_10HzPv():
   1819c:	b510      	push	{r4, lr}
   1819e:	4c06      	ldr	r4, [pc, #24]	; (181b8 <period_task_10Hz(void*)+0x1c>)
   181a0:	2300      	movs	r3, #0
   181a2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   181a6:	4619      	mov	r1, r3
   181a8:	6860      	ldr	r0, [r4, #4]
   181aa:	f002 fd56 	bl	1ac5a <xQueueGenericReceive>
   181ae:	b110      	cbz	r0, 181b6 <period_task_10Hz(void*)+0x1a>
   181b0:	f000 f907 	bl	183c2 <period_10Hz>
   181b4:	e7f4      	b.n	181a0 <period_task_10Hz(void*)+0x4>
   181b6:	bd10      	pop	{r4, pc}
   181b8:	2007c43c 	.word	0x2007c43c

000181bc <period_task_100Hz(void*)>:
_Z17period_task_100HzPv():
   181bc:	b510      	push	{r4, lr}
   181be:	4c06      	ldr	r4, [pc, #24]	; (181d8 <period_task_100Hz(void*)+0x1c>)
   181c0:	2300      	movs	r3, #0
   181c2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   181c6:	4619      	mov	r1, r3
   181c8:	68a0      	ldr	r0, [r4, #8]
   181ca:	f002 fd46 	bl	1ac5a <xQueueGenericReceive>
   181ce:	b110      	cbz	r0, 181d6 <period_task_100Hz(void*)+0x1a>
   181d0:	f000 f8f8 	bl	183c4 <period_100Hz>
   181d4:	e7f4      	b.n	181c0 <period_task_100Hz(void*)+0x4>
   181d6:	bd10      	pop	{r4, pc}
   181d8:	2007c43c 	.word	0x2007c43c

000181dc <period_task_1000Hz(void*)>:
_Z18period_task_1000HzPv():
   181dc:	b510      	push	{r4, lr}
   181de:	4c06      	ldr	r4, [pc, #24]	; (181f8 <period_task_1000Hz(void*)+0x1c>)
   181e0:	2300      	movs	r3, #0
   181e2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   181e6:	4619      	mov	r1, r3
   181e8:	68e0      	ldr	r0, [r4, #12]
   181ea:	f002 fd36 	bl	1ac5a <xQueueGenericReceive>
   181ee:	b110      	cbz	r0, 181f6 <period_task_1000Hz(void*)+0x1a>
   181f0:	f000 f8e9 	bl	183c6 <period_1000Hz>
   181f4:	e7f4      	b.n	181e0 <period_task_1000Hz(void*)+0x4>
   181f6:	bd10      	pop	{r4, pc}
   181f8:	2007c43c 	.word	0x2007c43c

000181fc <periodicSchedulerTask::init()>:
_ZN21periodicSchedulerTask4initEv():
   181fc:	f000 b8dc 	b.w	183b8 <period_init>

00018200 <periodicSchedulerTask::regTlm()>:
_ZN21periodicSchedulerTask6regTlmEv():
   18200:	f000 b8dc 	b.w	183bc <period_reg_tlm>

00018204 <periodicSchedulerTask::~periodicSchedulerTask()>:
_ZN21periodicSchedulerTaskD0Ev():
   18204:	b510      	push	{r4, lr}
   18206:	4604      	mov	r4, r0
   18208:	f7f9 f9e4 	bl	115d4 <operator delete(void*)>
   1820c:	4620      	mov	r0, r4
   1820e:	bd10      	pop	{r4, pc}

00018210 <periodicSchedulerTask::periodicSchedulerTask()>:
_ZN21periodicSchedulerTaskC2Ev():
   18210:	b5f0      	push	{r4, r5, r6, r7, lr}
   18212:	4606      	mov	r6, r0
   18214:	4a2c      	ldr	r2, [pc, #176]	; (182c8 <periodicSchedulerTask::periodicSchedulerTask()+0xb8>)
   18216:	b085      	sub	sp, #20
   18218:	2400      	movs	r4, #0
   1821a:	9400      	str	r4, [sp, #0]
   1821c:	230d      	movs	r3, #13
   1821e:	6812      	ldr	r2, [r2, #0]
   18220:	492a      	ldr	r1, [pc, #168]	; (182cc <periodicSchedulerTask::periodicSchedulerTask()+0xbc>)
   18222:	f000 ff1f 	bl	19064 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   18226:	4b2a      	ldr	r3, [pc, #168]	; (182d0 <periodicSchedulerTask::periodicSchedulerTask()+0xc0>)
   18228:	2501      	movs	r5, #1
   1822a:	6033      	str	r3, [r6, #0]
   1822c:	61f5      	str	r5, [r6, #28]
   1822e:	4621      	mov	r1, r4
   18230:	6234      	str	r4, [r6, #32]
   18232:	2203      	movs	r2, #3
   18234:	4628      	mov	r0, r5
   18236:	f002 fc08 	bl	1aa4a <xQueueGenericCreate>
   1823a:	4f26      	ldr	r7, [pc, #152]	; (182d4 <periodicSchedulerTask::periodicSchedulerTask()+0xc4>)
   1823c:	4621      	mov	r1, r4
   1823e:	6038      	str	r0, [r7, #0]
   18240:	2203      	movs	r2, #3
   18242:	4628      	mov	r0, r5
   18244:	f002 fc01 	bl	1aa4a <xQueueGenericCreate>
   18248:	4621      	mov	r1, r4
   1824a:	6078      	str	r0, [r7, #4]
   1824c:	2203      	movs	r2, #3
   1824e:	4628      	mov	r0, r5
   18250:	f002 fbfb 	bl	1aa4a <xQueueGenericCreate>
   18254:	4621      	mov	r1, r4
   18256:	60b8      	str	r0, [r7, #8]
   18258:	2203      	movs	r2, #3
   1825a:	4628      	mov	r0, r5
   1825c:	f002 fbf5 	bl	1aa4a <xQueueGenericCreate>
   18260:	4b1d      	ldr	r3, [pc, #116]	; (182d8 <periodicSchedulerTask::periodicSchedulerTask()+0xc8>)
   18262:	60f8      	str	r0, [r7, #12]
   18264:	681d      	ldr	r5, [r3, #0]
   18266:	2305      	movs	r3, #5
   18268:	f3c5 058f 	ubfx	r5, r5, #2, #16
   1826c:	9300      	str	r3, [sp, #0]
   1826e:	462a      	mov	r2, r5
   18270:	4623      	mov	r3, r4
   18272:	9403      	str	r4, [sp, #12]
   18274:	9402      	str	r4, [sp, #8]
   18276:	9401      	str	r4, [sp, #4]
   18278:	4918      	ldr	r1, [pc, #96]	; (182dc <periodicSchedulerTask::periodicSchedulerTask()+0xcc>)
   1827a:	4819      	ldr	r0, [pc, #100]	; (182e0 <periodicSchedulerTask::periodicSchedulerTask()+0xd0>)
   1827c:	f001 fda2 	bl	19dc4 <xTaskGenericCreate>
   18280:	2306      	movs	r3, #6
   18282:	9300      	str	r3, [sp, #0]
   18284:	462a      	mov	r2, r5
   18286:	4623      	mov	r3, r4
   18288:	9403      	str	r4, [sp, #12]
   1828a:	9402      	str	r4, [sp, #8]
   1828c:	9401      	str	r4, [sp, #4]
   1828e:	4915      	ldr	r1, [pc, #84]	; (182e4 <periodicSchedulerTask::periodicSchedulerTask()+0xd4>)
   18290:	4815      	ldr	r0, [pc, #84]	; (182e8 <periodicSchedulerTask::periodicSchedulerTask()+0xd8>)
   18292:	f001 fd97 	bl	19dc4 <xTaskGenericCreate>
   18296:	2307      	movs	r3, #7
   18298:	9300      	str	r3, [sp, #0]
   1829a:	462a      	mov	r2, r5
   1829c:	4623      	mov	r3, r4
   1829e:	9403      	str	r4, [sp, #12]
   182a0:	9402      	str	r4, [sp, #8]
   182a2:	9401      	str	r4, [sp, #4]
   182a4:	4911      	ldr	r1, [pc, #68]	; (182ec <periodicSchedulerTask::periodicSchedulerTask()+0xdc>)
   182a6:	4812      	ldr	r0, [pc, #72]	; (182f0 <periodicSchedulerTask::periodicSchedulerTask()+0xe0>)
   182a8:	f001 fd8c 	bl	19dc4 <xTaskGenericCreate>
   182ac:	2308      	movs	r3, #8
   182ae:	9300      	str	r3, [sp, #0]
   182b0:	9403      	str	r4, [sp, #12]
   182b2:	9402      	str	r4, [sp, #8]
   182b4:	9401      	str	r4, [sp, #4]
   182b6:	4623      	mov	r3, r4
   182b8:	462a      	mov	r2, r5
   182ba:	490e      	ldr	r1, [pc, #56]	; (182f4 <periodicSchedulerTask::periodicSchedulerTask()+0xe4>)
   182bc:	480e      	ldr	r0, [pc, #56]	; (182f8 <periodicSchedulerTask::periodicSchedulerTask()+0xe8>)
   182be:	f001 fd81 	bl	19dc4 <xTaskGenericCreate>
   182c2:	4630      	mov	r0, r6
   182c4:	b005      	add	sp, #20
   182c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   182c8:	000257a8 	.word	0x000257a8
   182cc:	000256e8 	.word	0x000256e8
   182d0:	0002578c 	.word	0x0002578c
   182d4:	2007c43c 	.word	0x2007c43c
   182d8:	000257a4 	.word	0x000257a4
   182dc:	000256f3 	.word	0x000256f3
   182e0:	0001817d 	.word	0x0001817d
   182e4:	000256f7 	.word	0x000256f7
   182e8:	0001819d 	.word	0x0001819d
   182ec:	000256fc 	.word	0x000256fc
   182f0:	000181bd 	.word	0x000181bd
   182f4:	00025702 	.word	0x00025702
   182f8:	000181dd 	.word	0x000181dd

000182fc <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)>:
_ZN21periodicSchedulerTask23handlePeriodicSemaphoreEhh():
   182fc:	b570      	push	{r4, r5, r6, lr}
   182fe:	460d      	mov	r5, r1
   18300:	491a      	ldr	r1, [pc, #104]	; (1836c <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x70>)
   18302:	2400      	movs	r4, #0
   18304:	5d4b      	ldrb	r3, [r1, r5]
   18306:	3301      	adds	r3, #1
   18308:	b2db      	uxtb	r3, r3
   1830a:	4293      	cmp	r3, r2
   1830c:	d002      	beq.n	18314 <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x18>
   1830e:	554b      	strb	r3, [r1, r5]
   18310:	4620      	mov	r0, r4
   18312:	bd70      	pop	{r4, r5, r6, pc}
   18314:	4b16      	ldr	r3, [pc, #88]	; (18370 <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x74>)
   18316:	554c      	strb	r4, [r1, r5]
   18318:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
   1831c:	4622      	mov	r2, r4
   1831e:	4623      	mov	r3, r4
   18320:	4621      	mov	r1, r4
   18322:	4630      	mov	r0, r6
   18324:	f002 fc99 	bl	1ac5a <xQueueGenericReceive>
   18328:	4603      	mov	r3, r0
   1832a:	b1b8      	cbz	r0, 1835c <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x60>
   1832c:	4b11      	ldr	r3, [pc, #68]	; (18374 <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x78>)
   1832e:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
   18332:	4628      	mov	r0, r5
   18334:	f006 fa10 	bl	1e758 <puts>
   18338:	4628      	mov	r0, r5
   1833a:	f006 fd0e 	bl	1ed5a <strlen>
   1833e:	4623      	mov	r3, r4
   18340:	4602      	mov	r2, r0
   18342:	4629      	mov	r1, r5
   18344:	480c      	ldr	r0, [pc, #48]	; (18378 <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x7c>)
   18346:	f7fd faab 	bl	158a0 <Storage::append(char const*, void const*, unsigned int, unsigned int)>
   1834a:	4a0c      	ldr	r2, [pc, #48]	; (1837c <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x80>)
   1834c:	4b0c      	ldr	r3, [pc, #48]	; (18380 <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x84>)
   1834e:	649a      	str	r2, [r3, #72]	; 0x48
   18350:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   18354:	22aa      	movs	r2, #170	; 0xaa
   18356:	721a      	strb	r2, [r3, #8]
   18358:	701c      	strb	r4, [r3, #0]
   1835a:	e004      	b.n	18366 <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)+0x6a>
   1835c:	4602      	mov	r2, r0
   1835e:	4601      	mov	r1, r0
   18360:	4630      	mov	r0, r6
   18362:	f002 fba3 	bl	1aaac <xQueueGenericSend>
   18366:	2001      	movs	r0, #1
   18368:	bd70      	pop	{r4, r5, r6, pc}
   1836a:	bf00      	nop
   1836c:	2007c438 	.word	0x2007c438
   18370:	2007c43c 	.word	0x2007c43c
   18374:	000256d8 	.word	0x000256d8
   18378:	00025709 	.word	0x00025709
   1837c:	deadbeef 	.word	0xdeadbeef
   18380:	40024000 	.word	0x40024000

00018384 <periodicSchedulerTask::run(void*)>:
_ZN21periodicSchedulerTask3runEPv():
   18384:	b510      	push	{r4, lr}
   18386:	2201      	movs	r2, #1
   18388:	2103      	movs	r1, #3
   1838a:	4604      	mov	r4, r0
   1838c:	f7ff ffb6 	bl	182fc <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)>
   18390:	b180      	cbz	r0, 183b4 <periodicSchedulerTask::run(void*)+0x30>
   18392:	220a      	movs	r2, #10
   18394:	2102      	movs	r1, #2
   18396:	4620      	mov	r0, r4
   18398:	f7ff ffb0 	bl	182fc <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)>
   1839c:	b150      	cbz	r0, 183b4 <periodicSchedulerTask::run(void*)+0x30>
   1839e:	220a      	movs	r2, #10
   183a0:	2101      	movs	r1, #1
   183a2:	4620      	mov	r0, r4
   183a4:	f7ff ffaa 	bl	182fc <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)>
   183a8:	b120      	cbz	r0, 183b4 <periodicSchedulerTask::run(void*)+0x30>
   183aa:	220a      	movs	r2, #10
   183ac:	2100      	movs	r1, #0
   183ae:	4620      	mov	r0, r4
   183b0:	f7ff ffa4 	bl	182fc <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)>
   183b4:	2001      	movs	r0, #1
   183b6:	bd10      	pop	{r4, pc}

000183b8 <period_init>:
period_init():
   183b8:	2001      	movs	r0, #1
   183ba:	4770      	bx	lr

000183bc <period_reg_tlm>:
period_reg_tlm():
   183bc:	2001      	movs	r0, #1
   183be:	4770      	bx	lr

000183c0 <period_1Hz>:
period_1Hz():
   183c0:	4770      	bx	lr

000183c2 <period_10Hz>:
period_10Hz():
   183c2:	4770      	bx	lr

000183c4 <period_100Hz>:
period_100Hz():
   183c4:	4770      	bx	lr

000183c6 <period_1000Hz>:
period_1000Hz():
   183c6:	4770      	bx	lr

000183c8 <wirelessTask::~wirelessTask()>:
_ZN12wirelessTaskD1Ev():
   183c8:	4770      	bx	lr

000183ca <wirelessTask::run(void*)>:
_ZN12wirelessTask3runEPv():
   183ca:	b508      	push	{r3, lr}
   183cc:	f7f9 faaa 	bl	11924 <wireless_service>
   183d0:	2001      	movs	r0, #1
   183d2:	bd08      	pop	{r3, pc}

000183d4 <wirelessTask::~wirelessTask()>:
_ZN12wirelessTaskD0Ev():
   183d4:	b510      	push	{r4, lr}
   183d6:	4604      	mov	r4, r0
   183d8:	f7f9 f8fc 	bl	115d4 <operator delete(void*)>
   183dc:	4620      	mov	r0, r4
   183de:	bd10      	pop	{r4, pc}

000183e0 <main>:
main():
   183e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
   183e2:	2090      	movs	r0, #144	; 0x90
   183e4:	f7f9 f8f4 	bl	115d0 <operator new(unsigned int)>
   183e8:	4604      	mov	r4, r0
   183ea:	2103      	movs	r1, #3
   183ec:	f7fd fc46 	bl	15c7c <terminalTask::terminalTask(unsigned char)>
   183f0:	4620      	mov	r0, r4
   183f2:	f000 fe07 	bl	19004 <scheduler_add_task(scheduler_task*)>
   183f6:	2034      	movs	r0, #52	; 0x34
   183f8:	f7f9 f8ea 	bl	115d0 <operator new(unsigned int)>
   183fc:	4604      	mov	r4, r0
   183fe:	2300      	movs	r3, #0
   18400:	9300      	str	r3, [sp, #0]
   18402:	f44f 7200 	mov.w	r2, #512	; 0x200
   18406:	2304      	movs	r3, #4
   18408:	492b      	ldr	r1, [pc, #172]	; (184b8 <main+0xd8>)
   1840a:	f000 fe2b 	bl	19064 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1840e:	4b2b      	ldr	r3, [pc, #172]	; (184bc <main+0xdc>)
   18410:	4620      	mov	r0, r4
   18412:	6023      	str	r3, [r4, #0]
   18414:	4c2a      	ldr	r4, [pc, #168]	; (184c0 <main+0xe0>)
   18416:	f000 fdf5 	bl	19004 <scheduler_add_task(scheduler_task*)>
   1841a:	6823      	ldr	r3, [r4, #0]
   1841c:	b933      	cbnz	r3, 1842c <main+0x4c>
   1841e:	202c      	movs	r0, #44	; 0x2c
   18420:	f7f9 f8d6 	bl	115d0 <operator new(unsigned int)>
   18424:	4605      	mov	r5, r0
   18426:	f7f8 fca5 	bl	10d74 <Uart2::Uart2()>
   1842a:	6025      	str	r5, [r4, #0]
   1842c:	6825      	ldr	r5, [r4, #0]
   1842e:	4c25      	ldr	r4, [pc, #148]	; (184c4 <main+0xe4>)
   18430:	2340      	movs	r3, #64	; 0x40
   18432:	2220      	movs	r2, #32
   18434:	f44f 4116 	mov.w	r1, #38400	; 0x9600
   18438:	4628      	mov	r0, r5
   1843a:	f7f8 fc7b 	bl	10d34 <Uart2::init(unsigned int, int, int)>
   1843e:	6823      	ldr	r3, [r4, #0]
   18440:	b933      	cbnz	r3, 18450 <main+0x70>
   18442:	202c      	movs	r0, #44	; 0x2c
   18444:	f7f9 f8c4 	bl	115d0 <operator new(unsigned int)>
   18448:	4606      	mov	r6, r0
   1844a:	f7f8 ff07 	bl	1125c <Uart3::Uart3()>
   1844e:	6026      	str	r6, [r4, #0]
   18450:	6824      	ldr	r4, [r4, #0]
   18452:	2220      	movs	r2, #32
   18454:	f44f 4116 	mov.w	r1, #38400	; 0x9600
   18458:	2340      	movs	r3, #64	; 0x40
   1845a:	4620      	mov	r0, r4
   1845c:	f7f8 fede 	bl	1121c <Uart3::init(unsigned int, int, int)>
   18460:	682b      	ldr	r3, [r5, #0]
   18462:	4628      	mov	r0, r5
   18464:	689b      	ldr	r3, [r3, #8]
   18466:	4798      	blx	r3
   18468:	6823      	ldr	r3, [r4, #0]
   1846a:	4620      	mov	r0, r4
   1846c:	689b      	ldr	r3, [r3, #8]
   1846e:	4798      	blx	r3
   18470:	2034      	movs	r0, #52	; 0x34
   18472:	f7f9 f8ad 	bl	115d0 <operator new(unsigned int)>
   18476:	4604      	mov	r4, r0
   18478:	f7ff feca 	bl	18210 <periodicSchedulerTask::periodicSchedulerTask()>
   1847c:	4620      	mov	r0, r4
   1847e:	f000 fdc1 	bl	19004 <scheduler_add_task(scheduler_task*)>
   18482:	2034      	movs	r0, #52	; 0x34
   18484:	f7f9 f8a4 	bl	115d0 <operator new(unsigned int)>
   18488:	4604      	mov	r4, r0
   1848a:	f000 f82b 	bl	184e4 <ComTask::ComTask()>
   1848e:	4620      	mov	r0, r4
   18490:	f000 fdb8 	bl	19004 <scheduler_add_task(scheduler_task*)>
   18494:	2034      	movs	r0, #52	; 0x34
   18496:	f7f9 f89b 	bl	115d0 <operator new(unsigned int)>
   1849a:	4604      	mov	r4, r0
   1849c:	f000 f964 	bl	18768 <ComTask2::ComTask2()>
   184a0:	4620      	mov	r0, r4
   184a2:	f000 fdaf 	bl	19004 <scheduler_add_task(scheduler_task*)>
   184a6:	2100      	movs	r1, #0
   184a8:	4608      	mov	r0, r1
   184aa:	f000 fdb9 	bl	19020 <scheduler_start(bool, bool)>
   184ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   184b2:	b002      	add	sp, #8
   184b4:	bd70      	pop	{r4, r5, r6, pc}
   184b6:	bf00      	nop
   184b8:	00025380 	.word	0x00025380
   184bc:	000257d0 	.word	0x000257d0
   184c0:	2007c1d4 	.word	0x2007c1d4
   184c4:	2007c1f0 	.word	0x2007c1f0

000184c8 <ComTask2::~ComTask2()>:
_ZN8ComTask2D2Ev():
   184c8:	4770      	bx	lr

000184ca <ComTask::~ComTask()>:
_ZN7ComTaskD2Ev():
   184ca:	4770      	bx	lr

000184cc <ComTask2::~ComTask2()>:
_ZN8ComTask2D0Ev():
   184cc:	b510      	push	{r4, lr}
   184ce:	4604      	mov	r4, r0
   184d0:	f7f9 f880 	bl	115d4 <operator delete(void*)>
   184d4:	4620      	mov	r0, r4
   184d6:	bd10      	pop	{r4, pc}

000184d8 <ComTask::~ComTask()>:
_ZN7ComTaskD0Ev():
   184d8:	b510      	push	{r4, lr}
   184da:	4604      	mov	r4, r0
   184dc:	f7f9 f87a 	bl	115d4 <operator delete(void*)>
   184e0:	4620      	mov	r0, r4
   184e2:	bd10      	pop	{r4, pc}

000184e4 <ComTask::ComTask()>:
_ZN7ComTaskC1Ev():
   184e4:	b513      	push	{r0, r1, r4, lr}
   184e6:	4604      	mov	r4, r0
   184e8:	2300      	movs	r3, #0
   184ea:	9300      	str	r3, [sp, #0]
   184ec:	f44f 62c0 	mov.w	r2, #1536	; 0x600
   184f0:	2301      	movs	r3, #1
   184f2:	4905      	ldr	r1, [pc, #20]	; (18508 <ComTask::ComTask()+0x24>)
   184f4:	f000 fdb6 	bl	19064 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   184f8:	4620      	mov	r0, r4
   184fa:	4b04      	ldr	r3, [pc, #16]	; (1850c <ComTask::ComTask()+0x28>)
   184fc:	6023      	str	r3, [r4, #0]
   184fe:	230a      	movs	r3, #10
   18500:	61e3      	str	r3, [r4, #28]
   18502:	b002      	add	sp, #8
   18504:	bd10      	pop	{r4, pc}
   18506:	bf00      	nop
   18508:	0002591f 	.word	0x0002591f
   1850c:	000257fc 	.word	0x000257fc

00018510 <SingletonTemplate<Uart3>::getInstance()>:
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
   18510:	b538      	push	{r3, r4, r5, lr}
   18512:	4c06      	ldr	r4, [pc, #24]	; (1852c <SingletonTemplate<Uart3>::getInstance()+0x1c>)
   18514:	6823      	ldr	r3, [r4, #0]
   18516:	b933      	cbnz	r3, 18526 <SingletonTemplate<Uart3>::getInstance()+0x16>
   18518:	202c      	movs	r0, #44	; 0x2c
   1851a:	f7f9 f859 	bl	115d0 <operator new(unsigned int)>
   1851e:	4605      	mov	r5, r0
   18520:	f7f8 fe9c 	bl	1125c <Uart3::Uart3()>
   18524:	6025      	str	r5, [r4, #0]
   18526:	6820      	ldr	r0, [r4, #0]
   18528:	bd38      	pop	{r3, r4, r5, pc}
   1852a:	bf00      	nop
   1852c:	2007c1f0 	.word	0x2007c1f0

00018530 <SingletonTemplate<Acceleration_Sensor>::getInstance()>:
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
   18530:	b538      	push	{r3, r4, r5, lr}
   18532:	4c07      	ldr	r4, [pc, #28]	; (18550 <SingletonTemplate<Acceleration_Sensor>::getInstance()+0x20>)
   18534:	6823      	ldr	r3, [r4, #0]
   18536:	b94b      	cbnz	r3, 1854c <SingletonTemplate<Acceleration_Sensor>::getInstance()+0x1c>
   18538:	2008      	movs	r0, #8
   1853a:	f7f9 f849 	bl	115d0 <operator new(unsigned int)>
   1853e:	4605      	mov	r5, r0
   18540:	f7ff f81a 	bl	17578 <SingletonTemplate<I2C2>::getInstance()>
   18544:	2338      	movs	r3, #56	; 0x38
   18546:	6028      	str	r0, [r5, #0]
   18548:	712b      	strb	r3, [r5, #4]
   1854a:	6025      	str	r5, [r4, #0]
   1854c:	6820      	ldr	r0, [r4, #0]
   1854e:	bd38      	pop	{r3, r4, r5, pc}
   18550:	2007c434 	.word	0x2007c434
$d():
   18554:	ffffffff 	.word	0xffffffff

00018558 <ComTask::run(void*)>:
_ZN7ComTask3runEPv():
   18558:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1855c:	4c76      	ldr	r4, [pc, #472]	; (18738 <ComTask::run(void*)+0x1e0>)
   1855e:	6823      	ldr	r3, [r4, #0]
   18560:	b933      	cbnz	r3, 18570 <ComTask::run(void*)+0x18>
   18562:	202c      	movs	r0, #44	; 0x2c
   18564:	f7f9 f834 	bl	115d0 <operator new(unsigned int)>
   18568:	4605      	mov	r5, r0
   1856a:	f7f8 fc03 	bl	10d74 <Uart2::Uart2()>
   1856e:	6025      	str	r5, [r4, #0]
   18570:	6826      	ldr	r6, [r4, #0]
   18572:	f7ff ffcd 	bl	18510 <SingletonTemplate<Uart3>::getInstance()>
   18576:	f7ff ffdb 	bl	18530 <SingletonTemplate<Acceleration_Sensor>::getInstance()>
   1857a:	f7fd f9e0 	bl	1593e <Acceleration_Sensor::getX()>
   1857e:	f004 f909 	bl	1c794 <__aeabi_i2f>
   18582:	496e      	ldr	r1, [pc, #440]	; (1873c <ComTask::run(void*)+0x1e4>)
   18584:	f004 f95a 	bl	1c83c <__aeabi_fmul>
   18588:	f04f 516a 	mov.w	r1, #981467136	; 0x3a800000
   1858c:	f004 f956 	bl	1c83c <__aeabi_fmul>
   18590:	f003 fcc0 	bl	1bf14 <__aeabi_f2d>
   18594:	4f6a      	ldr	r7, [pc, #424]	; (18740 <ComTask::run(void*)+0x1e8>)
   18596:	4605      	mov	r5, r0
   18598:	783b      	ldrb	r3, [r7, #0]
   1859a:	460c      	mov	r4, r1
   1859c:	46b8      	mov	r8, r7
   1859e:	b963      	cbnz	r3, 185ba <ComTask::run(void*)+0x62>
   185a0:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
   185a4:	4b67      	ldr	r3, [pc, #412]	; (18744 <ComTask::run(void*)+0x1ec>)
   185a6:	4628      	mov	r0, r5
   185a8:	f024 4100 	bic.w	r1, r4, #2147483648	; 0x80000000
   185ac:	f003 ff96 	bl	1c4dc <__aeabi_dcmpgt>
   185b0:	2800      	cmp	r0, #0
   185b2:	d035      	beq.n	18620 <ComTask::run(void*)+0xc8>
   185b4:	2301      	movs	r3, #1
   185b6:	703b      	strb	r3, [r7, #0]
   185b8:	e05b      	b.n	18672 <ComTask::run(void*)+0x11a>
   185ba:	4a63      	ldr	r2, [pc, #396]	; (18748 <ComTask::run(void*)+0x1f0>)
   185bc:	7813      	ldrb	r3, [r2, #0]
   185be:	2b31      	cmp	r3, #49	; 0x31
   185c0:	d82e      	bhi.n	18620 <ComTask::run(void*)+0xc8>
   185c2:	3301      	adds	r3, #1
   185c4:	7013      	strb	r3, [r2, #0]
   185c6:	4b61      	ldr	r3, [pc, #388]	; (1874c <ComTask::run(void*)+0x1f4>)
   185c8:	4621      	mov	r1, r4
   185ca:	e9d3 2300 	ldrd	r2, r3, [r3]
   185ce:	4628      	mov	r0, r5
   185d0:	f003 fb40 	bl	1bc54 <__aeabi_dsub>
   185d4:	a350      	add	r3, pc, #320	; (adr r3, 18718 <ComTask::run(void*)+0x1c0>)
   185d6:	e9d3 2300 	ldrd	r2, r3, [r3]
   185da:	f003 fcef 	bl	1bfbc <__aeabi_dmul>
   185de:	a350      	add	r3, pc, #320	; (adr r3, 18720 <ComTask::run(void*)+0x1c8>)
   185e0:	e9d3 2300 	ldrd	r2, r3, [r3]
   185e4:	4c5a      	ldr	r4, [pc, #360]	; (18750 <ComTask::run(void*)+0x1f8>)
   185e6:	4680      	mov	r8, r0
   185e8:	4689      	mov	r9, r1
   185ea:	e9d4 0100 	ldrd	r0, r1, [r4]
   185ee:	f003 fce5 	bl	1bfbc <__aeabi_dmul>
   185f2:	4602      	mov	r2, r0
   185f4:	460b      	mov	r3, r1
   185f6:	4640      	mov	r0, r8
   185f8:	4649      	mov	r1, r9
   185fa:	f003 fb2d 	bl	1bc58 <__adddf3>
   185fe:	a346      	add	r3, pc, #280	; (adr r3, 18718 <ComTask::run(void*)+0x1c0>)
   18600:	e9d3 2300 	ldrd	r2, r3, [r3]
   18604:	e9c4 0100 	strd	r0, r1, [r4]
   18608:	f003 fcd8 	bl	1bfbc <__aeabi_dmul>
   1860c:	4c51      	ldr	r4, [pc, #324]	; (18754 <ComTask::run(void*)+0x1fc>)
   1860e:	4602      	mov	r2, r0
   18610:	460b      	mov	r3, r1
   18612:	e9d4 0100 	ldrd	r0, r1, [r4]
   18616:	f003 fb1f 	bl	1bc58 <__adddf3>
   1861a:	e9c4 0100 	strd	r0, r1, [r4]
   1861e:	e028      	b.n	18672 <ComTask::run(void*)+0x11a>
   18620:	4a49      	ldr	r2, [pc, #292]	; (18748 <ComTask::run(void*)+0x1f0>)
   18622:	4f4a      	ldr	r7, [pc, #296]	; (1874c <ComTask::run(void*)+0x1f4>)
   18624:	7813      	ldrb	r3, [r2, #0]
   18626:	2b31      	cmp	r3, #49	; 0x31
   18628:	d90b      	bls.n	18642 <ComTask::run(void*)+0xea>
   1862a:	4b49      	ldr	r3, [pc, #292]	; (18750 <ComTask::run(void*)+0x1f8>)
   1862c:	2000      	movs	r0, #0
   1862e:	2100      	movs	r1, #0
   18630:	e9c3 0100 	strd	r0, r1, [r3]
   18634:	2300      	movs	r3, #0
   18636:	e9c7 0100 	strd	r0, r1, [r7]
   1863a:	7013      	strb	r3, [r2, #0]
   1863c:	f888 3000 	strb.w	r3, [r8]
   18640:	e017      	b.n	18672 <ComTask::run(void*)+0x11a>
   18642:	a339      	add	r3, pc, #228	; (adr r3, 18728 <ComTask::run(void*)+0x1d0>)
   18644:	e9d3 2300 	ldrd	r2, r3, [r3]
   18648:	e9d7 0100 	ldrd	r0, r1, [r7]
   1864c:	f003 fcb6 	bl	1bfbc <__aeabi_dmul>
   18650:	a333      	add	r3, pc, #204	; (adr r3, 18720 <ComTask::run(void*)+0x1c8>)
   18652:	e9d3 2300 	ldrd	r2, r3, [r3]
   18656:	4680      	mov	r8, r0
   18658:	4689      	mov	r9, r1
   1865a:	4628      	mov	r0, r5
   1865c:	4621      	mov	r1, r4
   1865e:	f003 fcad 	bl	1bfbc <__aeabi_dmul>
   18662:	4602      	mov	r2, r0
   18664:	460b      	mov	r3, r1
   18666:	4640      	mov	r0, r8
   18668:	4649      	mov	r1, r9
   1866a:	f003 faf5 	bl	1bc58 <__adddf3>
   1866e:	e9c7 0100 	strd	r0, r1, [r7]
   18672:	2341      	movs	r3, #65	; 0x41
   18674:	a902      	add	r1, sp, #8
   18676:	f801 3d01 	strb.w	r3, [r1, #-1]!
   1867a:	6833      	ldr	r3, [r6, #0]
   1867c:	2200      	movs	r2, #0
   1867e:	681b      	ldr	r3, [r3, #0]
   18680:	4630      	mov	r0, r6
   18682:	4798      	blx	r3
   18684:	2800      	cmp	r0, #0
   18686:	d040      	beq.n	1870a <ComTask::run(void*)+0x1b2>
   18688:	2201      	movs	r2, #1
   1868a:	f89d 1007 	ldrb.w	r1, [sp, #7]
   1868e:	4832      	ldr	r0, [pc, #200]	; (18758 <ComTask::run(void*)+0x200>)
   18690:	f005 fff0 	bl	1e674 <iprintf>
   18694:	f89d 3007 	ldrb.w	r3, [sp, #7]
   18698:	2b31      	cmp	r3, #49	; 0x31
   1869a:	d336      	bcc.n	1870a <ComTask::run(void*)+0x1b2>
   1869c:	2b34      	cmp	r3, #52	; 0x34
   1869e:	d92c      	bls.n	186fa <ComTask::run(void*)+0x1a2>
   186a0:	2b35      	cmp	r3, #53	; 0x35
   186a2:	d132      	bne.n	1870a <ComTask::run(void*)+0x1b2>
   186a4:	a322      	add	r3, pc, #136	; (adr r3, 18730 <ComTask::run(void*)+0x1d8>)
   186a6:	e9d3 2300 	ldrd	r2, r3, [r3]
   186aa:	492a      	ldr	r1, [pc, #168]	; (18754 <ComTask::run(void*)+0x1fc>)
   186ac:	4c2b      	ldr	r4, [pc, #172]	; (1875c <ComTask::run(void*)+0x204>)
   186ae:	e9d1 0100 	ldrd	r0, r1, [r1]
   186b2:	f003 fc83 	bl	1bfbc <__aeabi_dmul>
   186b6:	4607      	mov	r7, r0
   186b8:	6820      	ldr	r0, [r4, #0]
   186ba:	f021 4500 	bic.w	r5, r1, #2147483648	; 0x80000000
   186be:	f003 fc17 	bl	1bef0 <__aeabi_i2d>
   186c2:	4602      	mov	r2, r0
   186c4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   186c8:	4638      	mov	r0, r7
   186ca:	4629      	mov	r1, r5
   186cc:	f003 fac2 	bl	1bc54 <__aeabi_dsub>
   186d0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   186d4:	4619      	mov	r1, r3
   186d6:	f003 ff0b 	bl	1c4f0 <__aeabi_d2iz>
   186da:	4921      	ldr	r1, [pc, #132]	; (18760 <ComTask::run(void*)+0x208>)
   186dc:	4602      	mov	r2, r0
   186de:	6020      	str	r0, [r4, #0]
   186e0:	4630      	mov	r0, r6
   186e2:	f7f7 fddb 	bl	1029c <CharDev::printf(char const*, ...)>
   186e6:	6821      	ldr	r1, [r4, #0]
   186e8:	481e      	ldr	r0, [pc, #120]	; (18764 <ComTask::run(void*)+0x20c>)
   186ea:	f005 ffc3 	bl	1e674 <iprintf>
   186ee:	f7ff fa5b 	bl	17ba8 <SingletonTemplate<LED_Display>::getInstance()>
   186f2:	7821      	ldrb	r1, [r4, #0]
   186f4:	f7fd f9ba 	bl	15a6c <LED_Display::setNumber(char)>
   186f8:	e007      	b.n	1870a <ComTask::run(void*)+0x1b2>
   186fa:	f7ff fa67 	bl	17bcc <SingletonTemplate<LED>::getInstance()>
   186fe:	f89d 1007 	ldrb.w	r1, [sp, #7]
   18702:	3930      	subs	r1, #48	; 0x30
   18704:	b2c9      	uxtb	r1, r1
   18706:	f7fd f9ff 	bl	15b08 <LED::toggle(unsigned char)>
   1870a:	2001      	movs	r0, #1
   1870c:	b003      	add	sp, #12
   1870e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   18712:	bf00      	nop
   18714:	f3af 8000 	nop.w
   18718:	40000000 	.word	0x40000000
   1871c:	3f847ae1 	.word	0x3f847ae1
   18720:	a0000000 	.word	0xa0000000
   18724:	3fa99999 	.word	0x3fa99999
   18728:	60000000 	.word	0x60000000
   1872c:	3fee6666 	.word	0x3fee6666
   18730:	00000000 	.word	0x00000000
   18734:	40c38800 	.word	0x40c38800
   18738:	2007c1d4 	.word	0x2007c1d4
   1873c:	411ccccd 	.word	0x411ccccd
   18740:	2007c458 	.word	0x2007c458
   18744:	3ff33333 	.word	0x3ff33333
   18748:	2007c478 	.word	0x2007c478
   1874c:	2007c460 	.word	0x2007c460
   18750:	2007c450 	.word	0x2007c450
   18754:	2007c470 	.word	0x2007c470
   18758:	0002597a 	.word	0x0002597a
   1875c:	2007c468 	.word	0x2007c468
   18760:	0002598c 	.word	0x0002598c
   18764:	00025981 	.word	0x00025981

00018768 <ComTask2::ComTask2()>:
_ZN8ComTask2C1Ev():
   18768:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1876a:	4604      	mov	r4, r0
   1876c:	2500      	movs	r5, #0
   1876e:	f44f 62c0 	mov.w	r2, #1536	; 0x600
   18772:	4909      	ldr	r1, [pc, #36]	; (18798 <ComTask2::ComTask2()+0x30>)
   18774:	9500      	str	r5, [sp, #0]
   18776:	2301      	movs	r3, #1
   18778:	f000 fc74 	bl	19064 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1877c:	4b07      	ldr	r3, [pc, #28]	; (1879c <ComTask2::ComTask2()+0x34>)
   1877e:	6023      	str	r3, [r4, #0]
   18780:	f7ff fa12 	bl	17ba8 <SingletonTemplate<LED_Display>::getInstance()>
   18784:	4629      	mov	r1, r5
   18786:	f7fd f971 	bl	15a6c <LED_Display::setNumber(char)>
   1878a:	4620      	mov	r0, r4
   1878c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
   18790:	61e3      	str	r3, [r4, #28]
   18792:	b003      	add	sp, #12
   18794:	bd30      	pop	{r4, r5, pc}
   18796:	bf00      	nop
   18798:	00025990 	.word	0x00025990
   1879c:	00025aa0 	.word	0x00025aa0

000187a0 <ComTask2::run(void*)>:
_ZN8ComTask23runEPv():
   187a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   187a2:	f7ff feb5 	bl	18510 <SingletonTemplate<Uart3>::getInstance()>
   187a6:	2341      	movs	r3, #65	; 0x41
   187a8:	a902      	add	r1, sp, #8
   187aa:	f801 3d01 	strb.w	r3, [r1, #-1]!
   187ae:	6803      	ldr	r3, [r0, #0]
   187b0:	2200      	movs	r2, #0
   187b2:	681b      	ldr	r3, [r3, #0]
   187b4:	4798      	blx	r3
   187b6:	b328      	cbz	r0, 18804 <ComTask2::run(void*)+0x64>
   187b8:	2201      	movs	r2, #1
   187ba:	f89d 1007 	ldrb.w	r1, [sp, #7]
   187be:	4813      	ldr	r0, [pc, #76]	; (1880c <ComTask2::run(void*)+0x6c>)
   187c0:	f005 ff58 	bl	1e674 <iprintf>
   187c4:	f89d 2007 	ldrb.w	r2, [sp, #7]
   187c8:	4c11      	ldr	r4, [pc, #68]	; (18810 <ComTask2::run(void*)+0x70>)
   187ca:	2a0a      	cmp	r2, #10
   187cc:	d115      	bne.n	187fa <ComTask2::run(void*)+0x5a>
   187ce:	4d11      	ldr	r5, [pc, #68]	; (18814 <ComTask2::run(void*)+0x74>)
   187d0:	4911      	ldr	r1, [pc, #68]	; (18818 <ComTask2::run(void*)+0x78>)
   187d2:	462a      	mov	r2, r5
   187d4:	4811      	ldr	r0, [pc, #68]	; (1881c <ComTask2::run(void*)+0x7c>)
   187d6:	f006 fa03 	bl	1ebe0 <siscanf>
   187da:	f7ff f9e5 	bl	17ba8 <SingletonTemplate<LED_Display>::getInstance()>
   187de:	7829      	ldrb	r1, [r5, #0]
   187e0:	f7fd f944 	bl	15a6c <LED_Display::setNumber(char)>
   187e4:	480d      	ldr	r0, [pc, #52]	; (1881c <ComTask2::run(void*)+0x7c>)
   187e6:	f005 ffb7 	bl	1e758 <puts>
   187ea:	22ff      	movs	r2, #255	; 0xff
   187ec:	2100      	movs	r1, #0
   187ee:	480b      	ldr	r0, [pc, #44]	; (1881c <ComTask2::run(void*)+0x7c>)
   187f0:	f004 fdb3 	bl	1d35a <memset>
   187f4:	2300      	movs	r3, #0
   187f6:	7023      	strb	r3, [r4, #0]
   187f8:	e004      	b.n	18804 <ComTask2::run(void*)+0x64>
   187fa:	7823      	ldrb	r3, [r4, #0]
   187fc:	1c59      	adds	r1, r3, #1
   187fe:	7021      	strb	r1, [r4, #0]
   18800:	4906      	ldr	r1, [pc, #24]	; (1881c <ComTask2::run(void*)+0x7c>)
   18802:	54ca      	strb	r2, [r1, r3]
   18804:	2001      	movs	r0, #1
   18806:	b003      	add	sp, #12
   18808:	bd30      	pop	{r4, r5, pc}
   1880a:	bf00      	nop
   1880c:	0002597a 	.word	0x0002597a
   18810:	2007c44c 	.word	0x2007c44c
   18814:	2007c45c 	.word	0x2007c45c
   18818:	000259a5 	.word	0x000259a5
   1881c:	2007c479 	.word	0x2007c479

00018820 <delay_us>:
delay_us():
   18820:	b570      	push	{r4, r5, r6, lr}
   18822:	4606      	mov	r6, r0
   18824:	f002 fd76 	bl	1b314 <sys_get_uptime_us>
   18828:	1984      	adds	r4, r0, r6
   1882a:	f141 0500 	adc.w	r5, r1, #0
   1882e:	f002 fd71 	bl	1b314 <sys_get_uptime_us>
   18832:	42a9      	cmp	r1, r5
   18834:	bf08      	it	eq
   18836:	42a0      	cmpeq	r0, r4
   18838:	d3f9      	bcc.n	1882e <delay_us+0xe>
   1883a:	bd70      	pop	{r4, r5, r6, pc}

0001883c <is_freertos_running>:
is_freertos_running():
   1883c:	b508      	push	{r3, lr}
   1883e:	f001 fee5 	bl	1a60c <xTaskGetSchedulerState>
   18842:	1e83      	subs	r3, r0, #2
   18844:	4258      	negs	r0, r3
   18846:	4158      	adcs	r0, r3
   18848:	bd08      	pop	{r3, pc}

0001884a <delay_ms>:
delay_ms():
   1884a:	b510      	push	{r4, lr}
   1884c:	4604      	mov	r4, r0
   1884e:	f7ff fff5 	bl	1883c <is_freertos_running>
   18852:	b120      	cbz	r0, 1885e <delay_ms+0x14>
   18854:	4620      	mov	r0, r4
   18856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1885a:	f001 bd07 	b.w	1a26c <vTaskDelay>
   1885e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   18862:	4360      	muls	r0, r4
   18864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   18868:	f7ff bfda 	b.w	18820 <delay_us>

0001886c <str::str(char*, int)>:
_ZN3strC2EPci():
   1886c:	b510      	push	{r4, lr}
   1886e:	4604      	mov	r4, r0
   18870:	2301      	movs	r3, #1
   18872:	2a00      	cmp	r2, #0
   18874:	7023      	strb	r3, [r4, #0]
   18876:	f04f 0300 	mov.w	r3, #0
   1887a:	bfd4      	ite	le
   1887c:	461a      	movle	r2, r3
   1887e:	f102 32ff 	addgt.w	r2, r2, #4294967295	; 0xffffffff
   18882:	60a1      	str	r1, [r4, #8]
   18884:	4608      	mov	r0, r1
   18886:	60e3      	str	r3, [r4, #12]
   18888:	6123      	str	r3, [r4, #16]
   1888a:	6062      	str	r2, [r4, #4]
   1888c:	2100      	movs	r1, #0
   1888e:	f004 fd64 	bl	1d35a <memset>
   18892:	4620      	mov	r0, r4
   18894:	bd10      	pop	{r4, pc}

00018896 <str::~str()>:
_ZN3strD1Ev():
   18896:	b538      	push	{r3, r4, r5, lr}
   18898:	4604      	mov	r4, r0
   1889a:	6880      	ldr	r0, [r0, #8]
   1889c:	b118      	cbz	r0, 188a6 <str::~str()+0x10>
   1889e:	7823      	ldrb	r3, [r4, #0]
   188a0:	b90b      	cbnz	r3, 188a6 <str::~str()+0x10>
   188a2:	f004 fd0f 	bl	1d2c4 <free>
   188a6:	68e5      	ldr	r5, [r4, #12]
   188a8:	b12d      	cbz	r5, 188b6 <str::~str()+0x20>
   188aa:	4628      	mov	r0, r5
   188ac:	f7ff fff3 	bl	18896 <str::~str()>
   188b0:	4628      	mov	r0, r5
   188b2:	f7f8 fe8f 	bl	115d4 <operator delete(void*)>
   188b6:	4620      	mov	r0, r4
   188b8:	bd38      	pop	{r3, r4, r5, pc}

000188ba <str::getLen() const>:
_ZNK3str6getLenEv():
   188ba:	6880      	ldr	r0, [r0, #8]
   188bc:	f006 ba4d 	b.w	1ed5a <strlen>

000188c0 <str::getCapacity() const>:
_ZNK3str11getCapacityEv():
   188c0:	6840      	ldr	r0, [r0, #4]
   188c2:	4770      	bx	lr

000188c4 <str::clear()>:
_ZN3str5clearEv():
   188c4:	6883      	ldr	r3, [r0, #8]
   188c6:	2200      	movs	r2, #0
   188c8:	701a      	strb	r2, [r3, #0]
   188ca:	4770      	bx	lr

000188cc <str::scanf(char const*, ...)>:
_ZN3str5scanfEPKcz():
   188cc:	b40e      	push	{r1, r2, r3}
   188ce:	b503      	push	{r0, r1, lr}
   188d0:	aa03      	add	r2, sp, #12
   188d2:	f852 1b04 	ldr.w	r1, [r2], #4
   188d6:	6880      	ldr	r0, [r0, #8]
   188d8:	9201      	str	r2, [sp, #4]
   188da:	f007 fc59 	bl	20190 <vsiscanf>
   188de:	b002      	add	sp, #8
   188e0:	f85d eb04 	ldr.w	lr, [sp], #4
   188e4:	b003      	add	sp, #12
   188e6:	4770      	bx	lr

000188e8 <str::tokenize(char const*, int, ...)>:
_ZN3str8tokenizeEPKciz():
   188e8:	b40c      	push	{r2, r3}
   188ea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   188ec:	2400      	movs	r4, #0
   188ee:	ab08      	add	r3, sp, #32
   188f0:	ad02      	add	r5, sp, #8
   188f2:	f853 7b04 	ldr.w	r7, [r3], #4
   188f6:	f845 4d04 	str.w	r4, [r5, #-4]!
   188fa:	462a      	mov	r2, r5
   188fc:	6880      	ldr	r0, [r0, #8]
   188fe:	460e      	mov	r6, r1
   18900:	9300      	str	r3, [sp, #0]
   18902:	f007 f8f8 	bl	1faf6 <strtok_r>
   18906:	b178      	cbz	r0, 18928 <str::tokenize(char const*, int, ...)+0x40>
   18908:	1b3b      	subs	r3, r7, r4
   1890a:	2b00      	cmp	r3, #0
   1890c:	dd0c      	ble.n	18928 <str::tokenize(char const*, int, ...)+0x40>
   1890e:	9b00      	ldr	r3, [sp, #0]
   18910:	1d1a      	adds	r2, r3, #4
   18912:	681b      	ldr	r3, [r3, #0]
   18914:	9200      	str	r2, [sp, #0]
   18916:	b103      	cbz	r3, 1891a <str::tokenize(char const*, int, ...)+0x32>
   18918:	6018      	str	r0, [r3, #0]
   1891a:	462a      	mov	r2, r5
   1891c:	4631      	mov	r1, r6
   1891e:	2000      	movs	r0, #0
   18920:	f007 f8e9 	bl	1faf6 <strtok_r>
   18924:	3401      	adds	r4, #1
   18926:	e7ee      	b.n	18906 <str::tokenize(char const*, int, ...)+0x1e>
   18928:	4620      	mov	r0, r4
   1892a:	b003      	add	sp, #12
   1892c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   18930:	b002      	add	sp, #8
   18932:	4770      	bx	lr

00018934 <str::compareTo(char const*) const>:
_ZNK3str9compareToEPKc():
   18934:	b508      	push	{r3, lr}
   18936:	460b      	mov	r3, r1
   18938:	6881      	ldr	r1, [r0, #8]
   1893a:	4618      	mov	r0, r3
   1893c:	f006 f9fb 	bl	1ed36 <strcmp>
   18940:	fab0 f080 	clz	r0, r0
   18944:	0940      	lsrs	r0, r0, #5
   18946:	bd08      	pop	{r3, pc}

00018948 <str::compareToIgnoreCase(char const*) const>:
_ZNK3str19compareToIgnoreCaseEPKc():
   18948:	b508      	push	{r3, lr}
   1894a:	6880      	ldr	r0, [r0, #8]
   1894c:	f006 f9b8 	bl	1ecc0 <strcasecmp>
   18950:	fab0 f080 	clz	r0, r0
   18954:	0940      	lsrs	r0, r0, #5
   18956:	bd08      	pop	{r3, pc}

00018958 <str::firstIndexOfIgnoreCase(char const*) const>:
_ZNK3str22firstIndexOfIgnoreCaseEPKc():
   18958:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1895c:	780f      	ldrb	r7, [r1, #0]
   1895e:	468a      	mov	sl, r1
   18960:	b3a7      	cbz	r7, 189cc <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   18962:	6886      	ldr	r6, [r0, #8]
   18964:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   18968:	7833      	ldrb	r3, [r6, #0]
   1896a:	b38b      	cbz	r3, 189d0 <str::firstIndexOfIgnoreCase(char const*) const+0x78>
   1896c:	7833      	ldrb	r3, [r6, #0]
   1896e:	b37b      	cbz	r3, 189d0 <str::firstIndexOfIgnoreCase(char const*) const+0x78>
   18970:	4638      	mov	r0, r7
   18972:	f007 f967 	bl	1fc44 <tolower>
   18976:	4601      	mov	r1, r0
   18978:	4630      	mov	r0, r6
   1897a:	f006 f9ce 	bl	1ed1a <strchr>
   1897e:	b938      	cbnz	r0, 18990 <str::firstIndexOfIgnoreCase(char const*) const+0x38>
   18980:	4638      	mov	r0, r7
   18982:	f007 f96b 	bl	1fc5c <toupper>
   18986:	4601      	mov	r1, r0
   18988:	4630      	mov	r0, r6
   1898a:	f006 f9c6 	bl	1ed1a <strchr>
   1898e:	b1e8      	cbz	r0, 189cc <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   18990:	4604      	mov	r4, r0
   18992:	1b85      	subs	r5, r0, r6
   18994:	f10a 0801 	add.w	r8, sl, #1
   18998:	1c46      	adds	r6, r0, #1
   1899a:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   1899e:	46c1      	mov	r9, r8
   189a0:	b188      	cbz	r0, 189c6 <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
   189a2:	f898 b000 	ldrb.w	fp, [r8]
   189a6:	f108 0801 	add.w	r8, r8, #1
   189aa:	f1bb 0f00 	cmp.w	fp, #0
   189ae:	d00a      	beq.n	189c6 <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
   189b0:	f007 f948 	bl	1fc44 <tolower>
   189b4:	9001      	str	r0, [sp, #4]
   189b6:	4658      	mov	r0, fp
   189b8:	f007 f944 	bl	1fc44 <tolower>
   189bc:	9b01      	ldr	r3, [sp, #4]
   189be:	4283      	cmp	r3, r0
   189c0:	d0eb      	beq.n	1899a <str::firstIndexOfIgnoreCase(char const*) const+0x42>
   189c2:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   189c6:	f899 3000 	ldrb.w	r3, [r9]
   189ca:	e7ce      	b.n	1896a <str::firstIndexOfIgnoreCase(char const*) const+0x12>
   189cc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   189d0:	4628      	mov	r0, r5
   189d2:	b003      	add	sp, #12
   189d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000189d8 <str::containsIgnoreCase(char const*) const>:
_ZNK3str18containsIgnoreCaseEPKc():
   189d8:	b508      	push	{r3, lr}
   189da:	f7ff ffbd 	bl	18958 <str::firstIndexOfIgnoreCase(char const*) const>
   189de:	3001      	adds	r0, #1
   189e0:	bf18      	it	ne
   189e2:	2001      	movne	r0, #1
   189e4:	bd08      	pop	{r3, pc}

000189e6 <str::firstIndexOf(char const*) const>:
_ZNK3str12firstIndexOfEPKc():
   189e6:	b510      	push	{r4, lr}
   189e8:	6884      	ldr	r4, [r0, #8]
   189ea:	4620      	mov	r0, r4
   189ec:	f006 fa1b 	bl	1ee26 <strstr>
   189f0:	b108      	cbz	r0, 189f6 <str::firstIndexOf(char const*) const+0x10>
   189f2:	1b00      	subs	r0, r0, r4
   189f4:	bd10      	pop	{r4, pc}
   189f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   189fa:	bd10      	pop	{r4, pc}

000189fc <str::beginsWith(char const*) const>:
_ZNK3str10beginsWithEPKc():
   189fc:	b570      	push	{r4, r5, r6, lr}
   189fe:	4604      	mov	r4, r0
   18a00:	4608      	mov	r0, r1
   18a02:	460d      	mov	r5, r1
   18a04:	f006 f9a9 	bl	1ed5a <strlen>
   18a08:	4606      	mov	r6, r0
   18a0a:	4620      	mov	r0, r4
   18a0c:	f7ff ff55 	bl	188ba <str::getLen() const>
   18a10:	4286      	cmp	r6, r0
   18a12:	dc08      	bgt.n	18a26 <str::beginsWith(char const*) const+0x2a>
   18a14:	4632      	mov	r2, r6
   18a16:	4629      	mov	r1, r5
   18a18:	68a0      	ldr	r0, [r4, #8]
   18a1a:	f006 f9c9 	bl	1edb0 <strncmp>
   18a1e:	fab0 f080 	clz	r0, r0
   18a22:	0940      	lsrs	r0, r0, #5
   18a24:	bd70      	pop	{r4, r5, r6, pc}
   18a26:	2000      	movs	r0, #0
   18a28:	bd70      	pop	{r4, r5, r6, pc}

00018a2a <str::beginsWithIgnoreCase(char const*) const>:
_ZNK3str20beginsWithIgnoreCaseEPKc():
   18a2a:	b570      	push	{r4, r5, r6, lr}
   18a2c:	4605      	mov	r5, r0
   18a2e:	4608      	mov	r0, r1
   18a30:	460c      	mov	r4, r1
   18a32:	f006 f992 	bl	1ed5a <strlen>
   18a36:	4606      	mov	r6, r0
   18a38:	4628      	mov	r0, r5
   18a3a:	f7ff ff3e 	bl	188ba <str::getLen() const>
   18a3e:	4286      	cmp	r6, r0
   18a40:	dc08      	bgt.n	18a54 <str::beginsWithIgnoreCase(char const*) const+0x2a>
   18a42:	4632      	mov	r2, r6
   18a44:	68a9      	ldr	r1, [r5, #8]
   18a46:	4620      	mov	r0, r4
   18a48:	f006 f990 	bl	1ed6c <strncasecmp>
   18a4c:	fab0 f080 	clz	r0, r0
   18a50:	0940      	lsrs	r0, r0, #5
   18a52:	bd70      	pop	{r4, r5, r6, pc}
   18a54:	2000      	movs	r0, #0
   18a56:	bd70      	pop	{r4, r5, r6, pc}

00018a58 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>:
_ZNK3str29beginsWithWholeWordIgnoreCaseEPKcc():
   18a58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18a5a:	4604      	mov	r4, r0
   18a5c:	4608      	mov	r0, r1
   18a5e:	460e      	mov	r6, r1
   18a60:	4617      	mov	r7, r2
   18a62:	f006 f97a 	bl	1ed5a <strlen>
   18a66:	4605      	mov	r5, r0
   18a68:	4620      	mov	r0, r4
   18a6a:	f7ff ff26 	bl	188ba <str::getLen() const>
   18a6e:	4285      	cmp	r5, r0
   18a70:	dc0c      	bgt.n	18a8c <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x34>
   18a72:	68a3      	ldr	r3, [r4, #8]
   18a74:	4631      	mov	r1, r6
   18a76:	4620      	mov	r0, r4
   18a78:	5d5d      	ldrb	r5, [r3, r5]
   18a7a:	f7ff ffd6 	bl	18a2a <str::beginsWithIgnoreCase(char const*) const>
   18a7e:	b130      	cbz	r0, 18a8e <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
   18a80:	42bd      	cmp	r5, r7
   18a82:	d004      	beq.n	18a8e <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
   18a84:	fab5 f085 	clz	r0, r5
   18a88:	0940      	lsrs	r0, r0, #5
   18a8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   18a8c:	2000      	movs	r0, #0
   18a8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00018a90 <str::eraseFirst(int)>:
_ZN3str10eraseFirstEi():
   18a90:	b538      	push	{r3, r4, r5, lr}
   18a92:	460c      	mov	r4, r1
   18a94:	4605      	mov	r5, r0
   18a96:	f7ff ff10 	bl	188ba <str::getLen() const>
   18a9a:	2c00      	cmp	r4, #0
   18a9c:	4602      	mov	r2, r0
   18a9e:	dd09      	ble.n	18ab4 <str::eraseFirst(int)+0x24>
   18aa0:	42a0      	cmp	r0, r4
   18aa2:	db07      	blt.n	18ab4 <str::eraseFirst(int)+0x24>
   18aa4:	68a8      	ldr	r0, [r5, #8]
   18aa6:	1b12      	subs	r2, r2, r4
   18aa8:	3201      	adds	r2, #1
   18aaa:	1901      	adds	r1, r0, r4
   18aac:	f004 fc3a 	bl	1d324 <memmove>
   18ab0:	2001      	movs	r0, #1
   18ab2:	bd38      	pop	{r3, r4, r5, pc}
   18ab4:	2000      	movs	r0, #0
   18ab6:	bd38      	pop	{r3, r4, r5, pc}

00018ab8 <str::eraseLast(int)>:
_ZN3str9eraseLastEi():
   18ab8:	b538      	push	{r3, r4, r5, lr}
   18aba:	460c      	mov	r4, r1
   18abc:	4605      	mov	r5, r0
   18abe:	f7ff fefc 	bl	188ba <str::getLen() const>
   18ac2:	42a0      	cmp	r0, r4
   18ac4:	bfa4      	itt	ge
   18ac6:	68aa      	ldrge	r2, [r5, #8]
   18ac8:	1b00      	subge	r0, r0, r4
   18aca:	f04f 0300 	mov.w	r3, #0
   18ace:	bfa6      	itte	ge
   18ad0:	5413      	strbge	r3, [r2, r0]
   18ad2:	2001      	movge	r0, #1
   18ad4:	4618      	movlt	r0, r3
   18ad6:	bd38      	pop	{r3, r4, r5, pc}

00018ad8 <str::eraseAfter(int, int)>:
_ZN3str10eraseAfterEii():
   18ad8:	b570      	push	{r4, r5, r6, lr}
   18ada:	460d      	mov	r5, r1
   18adc:	4606      	mov	r6, r0
   18ade:	4614      	mov	r4, r2
   18ae0:	f7ff feeb 	bl	188ba <str::getLen() const>
   18ae4:	2d00      	cmp	r5, #0
   18ae6:	db11      	blt.n	18b0c <str::eraseAfter(int, int)+0x34>
   18ae8:	42a8      	cmp	r0, r5
   18aea:	dd0f      	ble.n	18b0c <str::eraseAfter(int, int)+0x34>
   18aec:	2c00      	cmp	r4, #0
   18aee:	dd0d      	ble.n	18b0c <str::eraseAfter(int, int)+0x34>
   18af0:	1b42      	subs	r2, r0, r5
   18af2:	4294      	cmp	r4, r2
   18af4:	bfa8      	it	ge
   18af6:	4614      	movge	r4, r2
   18af8:	68b0      	ldr	r0, [r6, #8]
   18afa:	1b12      	subs	r2, r2, r4
   18afc:	1961      	adds	r1, r4, r5
   18afe:	4401      	add	r1, r0
   18b00:	3201      	adds	r2, #1
   18b02:	4428      	add	r0, r5
   18b04:	f004 fc0e 	bl	1d324 <memmove>
   18b08:	2001      	movs	r0, #1
   18b0a:	bd70      	pop	{r4, r5, r6, pc}
   18b0c:	2000      	movs	r0, #0
   18b0e:	bd70      	pop	{r4, r5, r6, pc}

00018b10 <str::erase(char const*)>:
_ZN3str5eraseEPKc():
   18b10:	b570      	push	{r4, r5, r6, lr}
   18b12:	4605      	mov	r5, r0
   18b14:	460e      	mov	r6, r1
   18b16:	f7ff ff66 	bl	189e6 <str::firstIndexOf(char const*) const>
   18b1a:	1c43      	adds	r3, r0, #1
   18b1c:	4604      	mov	r4, r0
   18b1e:	d009      	beq.n	18b34 <str::erase(char const*)+0x24>
   18b20:	4630      	mov	r0, r6
   18b22:	f006 f91a 	bl	1ed5a <strlen>
   18b26:	4621      	mov	r1, r4
   18b28:	4602      	mov	r2, r0
   18b2a:	4628      	mov	r0, r5
   18b2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   18b30:	f7ff bfd2 	b.w	18ad8 <str::eraseAfter(int, int)>
   18b34:	2000      	movs	r0, #0
   18b36:	bd70      	pop	{r4, r5, r6, pc}

00018b38 <str::eraseFirstWords(int, char)>:
_ZN3str15eraseFirstWordsEic():
   18b38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18b3a:	6885      	ldr	r5, [r0, #8]
   18b3c:	460f      	mov	r7, r1
   18b3e:	462b      	mov	r3, r5
   18b40:	2400      	movs	r4, #0
   18b42:	1b59      	subs	r1, r3, r5
   18b44:	f813 6b01 	ldrb.w	r6, [r3], #1
   18b48:	b13e      	cbz	r6, 18b5a <str::eraseFirstWords(int, char)+0x22>
   18b4a:	42bc      	cmp	r4, r7
   18b4c:	d003      	beq.n	18b56 <str::eraseFirstWords(int, char)+0x1e>
   18b4e:	4296      	cmp	r6, r2
   18b50:	d1f7      	bne.n	18b42 <str::eraseFirstWords(int, char)+0xa>
   18b52:	3401      	adds	r4, #1
   18b54:	e7f5      	b.n	18b42 <str::eraseFirstWords(int, char)+0xa>
   18b56:	f7ff ff9b 	bl	18a90 <str::eraseFirst(int)>
   18b5a:	1c20      	adds	r0, r4, #0
   18b5c:	bf18      	it	ne
   18b5e:	2001      	movne	r0, #1
   18b60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00018b62 <str::trimStart(char const*)>:
_ZN3str9trimStartEPKc():
   18b62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18b64:	4606      	mov	r6, r0
   18b66:	460d      	mov	r5, r1
   18b68:	f7ff fea7 	bl	188ba <str::getLen() const>
   18b6c:	4607      	mov	r7, r0
   18b6e:	2400      	movs	r4, #0
   18b70:	42bc      	cmp	r4, r7
   18b72:	da0e      	bge.n	18b92 <str::trimStart(char const*)+0x30>
   18b74:	4628      	mov	r0, r5
   18b76:	f006 f8f0 	bl	1ed5a <strlen>
   18b7a:	462b      	mov	r3, r5
   18b7c:	1b5a      	subs	r2, r3, r5
   18b7e:	4282      	cmp	r2, r0
   18b80:	da07      	bge.n	18b92 <str::trimStart(char const*)+0x30>
   18b82:	68b1      	ldr	r1, [r6, #8]
   18b84:	f813 2b01 	ldrb.w	r2, [r3], #1
   18b88:	5d09      	ldrb	r1, [r1, r4]
   18b8a:	4291      	cmp	r1, r2
   18b8c:	d1f6      	bne.n	18b7c <str::trimStart(char const*)+0x1a>
   18b8e:	3401      	adds	r4, #1
   18b90:	e7ee      	b.n	18b70 <str::trimStart(char const*)+0xe>
   18b92:	b12c      	cbz	r4, 18ba0 <str::trimStart(char const*)+0x3e>
   18b94:	4621      	mov	r1, r4
   18b96:	4630      	mov	r0, r6
   18b98:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   18b9c:	f7ff bf78 	b.w	18a90 <str::eraseFirst(int)>
   18ba0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00018ba2 <str::trimEnd(char const*)>:
_ZN3str7trimEndEPKc():
   18ba2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18ba4:	4605      	mov	r5, r0
   18ba6:	4608      	mov	r0, r1
   18ba8:	460c      	mov	r4, r1
   18baa:	f006 f8d6 	bl	1ed5a <strlen>
   18bae:	4607      	mov	r7, r0
   18bb0:	4628      	mov	r0, r5
   18bb2:	f7ff fe82 	bl	188ba <str::getLen() const>
   18bb6:	2600      	movs	r6, #0
   18bb8:	3801      	subs	r0, #1
   18bba:	2800      	cmp	r0, #0
   18bbc:	db0d      	blt.n	18bda <str::trimEnd(char const*)+0x38>
   18bbe:	4623      	mov	r3, r4
   18bc0:	1b1a      	subs	r2, r3, r4
   18bc2:	4297      	cmp	r7, r2
   18bc4:	dd09      	ble.n	18bda <str::trimEnd(char const*)+0x38>
   18bc6:	68aa      	ldr	r2, [r5, #8]
   18bc8:	f813 eb01 	ldrb.w	lr, [r3], #1
   18bcc:	1811      	adds	r1, r2, r0
   18bce:	5c12      	ldrb	r2, [r2, r0]
   18bd0:	4572      	cmp	r2, lr
   18bd2:	d1f5      	bne.n	18bc0 <str::trimEnd(char const*)+0x1e>
   18bd4:	700e      	strb	r6, [r1, #0]
   18bd6:	3801      	subs	r0, #1
   18bd8:	e7ef      	b.n	18bba <str::trimEnd(char const*)+0x18>
   18bda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00018bdc <str::operator==(char const*) const>:
_ZNK3streqEPKc():
   18bdc:	f7ff beaa 	b.w	18934 <str::compareTo(char const*) const>

00018be0 <str::operator()() const>:
_ZNK3strclEv():
   18be0:	6880      	ldr	r0, [r0, #8]
   18be2:	4770      	bx	lr

00018be4 <str::operator int() const>:
_ZNK3strcviEv():
   18be4:	6880      	ldr	r0, [r0, #8]
   18be6:	f004 b956 	b.w	1ce96 <atoi>

00018bea <str::operator[](int)>:
_ZN3strixEi():
   18bea:	b538      	push	{r3, r4, r5, lr}
   18bec:	460c      	mov	r4, r1
   18bee:	4605      	mov	r5, r0
   18bf0:	f7ff fe63 	bl	188ba <str::getLen() const>
   18bf4:	42a0      	cmp	r0, r4
   18bf6:	68a8      	ldr	r0, [r5, #8]
   18bf8:	bfc8      	it	gt
   18bfa:	1900      	addgt	r0, r0, r4
   18bfc:	bd38      	pop	{r3, r4, r5, pc}

00018bfe <str::reAllocateMem(int)>:
_ZN3str13reAllocateMemEi():
   18bfe:	7803      	ldrb	r3, [r0, #0]
   18c00:	b570      	push	{r4, r5, r6, lr}
   18c02:	4605      	mov	r5, r0
   18c04:	b9fb      	cbnz	r3, 18c46 <str::reAllocateMem(int)+0x48>
   18c06:	b109      	cbz	r1, 18c0c <str::reAllocateMem(int)+0xe>
   18c08:	3101      	adds	r1, #1
   18c0a:	e000      	b.n	18c0e <str::reAllocateMem(int)+0x10>
   18c0c:	2104      	movs	r1, #4
   18c0e:	2410      	movs	r4, #16
   18c10:	fb91 f4f4 	sdiv	r4, r1, r4
   18c14:	68ae      	ldr	r6, [r5, #8]
   18c16:	3401      	adds	r4, #1
   18c18:	0124      	lsls	r4, r4, #4
   18c1a:	606c      	str	r4, [r5, #4]
   18c1c:	b94e      	cbnz	r6, 18c32 <str::reAllocateMem(int)+0x34>
   18c1e:	4620      	mov	r0, r4
   18c20:	f004 fb48 	bl	1d2b4 <malloc>
   18c24:	60a8      	str	r0, [r5, #8]
   18c26:	b148      	cbz	r0, 18c3c <str::reAllocateMem(int)+0x3e>
   18c28:	4622      	mov	r2, r4
   18c2a:	4631      	mov	r1, r6
   18c2c:	f004 fb95 	bl	1d35a <memset>
   18c30:	e004      	b.n	18c3c <str::reAllocateMem(int)+0x3e>
   18c32:	1c61      	adds	r1, r4, #1
   18c34:	4630      	mov	r0, r6
   18c36:	f005 fdf9 	bl	1e82c <realloc>
   18c3a:	60a8      	str	r0, [r5, #8]
   18c3c:	68a8      	ldr	r0, [r5, #8]
   18c3e:	3000      	adds	r0, #0
   18c40:	bf18      	it	ne
   18c42:	2001      	movne	r0, #1
   18c44:	bd70      	pop	{r4, r5, r6, pc}
   18c46:	2000      	movs	r0, #0
   18c48:	bd70      	pop	{r4, r5, r6, pc}

00018c4a <str::init(int)>:
_ZN3str4initEi():
   18c4a:	2200      	movs	r2, #0
   18c4c:	7002      	strb	r2, [r0, #0]
   18c4e:	6042      	str	r2, [r0, #4]
   18c50:	6082      	str	r2, [r0, #8]
   18c52:	60c2      	str	r2, [r0, #12]
   18c54:	6102      	str	r2, [r0, #16]
   18c56:	f7ff bfd2 	b.w	18bfe <str::reAllocateMem(int)>

00018c5a <str::str(int)>:
_ZN3strC1Ei():
   18c5a:	b510      	push	{r4, lr}
   18c5c:	4604      	mov	r4, r0
   18c5e:	f7ff fff4 	bl	18c4a <str::init(int)>
   18c62:	4620      	mov	r0, r4
   18c64:	bd10      	pop	{r4, pc}

00018c66 <str::reserve(int)>:
_ZN3str7reserveEi():
   18c66:	6843      	ldr	r3, [r0, #4]
   18c68:	428b      	cmp	r3, r1
   18c6a:	da01      	bge.n	18c70 <str::reserve(int)+0xa>
   18c6c:	f7ff bfc7 	b.w	18bfe <str::reAllocateMem(int)>
   18c70:	2001      	movs	r0, #1
   18c72:	4770      	bx	lr

00018c74 <str::printf(char const*, ...)>:
_ZN3str6printfEPKcz():
   18c74:	b40e      	push	{r1, r2, r3}
   18c76:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
   18c78:	4606      	mov	r6, r0
   18c7a:	ab07      	add	r3, sp, #28
   18c7c:	f853 7b04 	ldr.w	r7, [r3], #4
   18c80:	2400      	movs	r4, #0
   18c82:	9300      	str	r3, [sp, #0]
   18c84:	68b0      	ldr	r0, [r6, #8]
   18c86:	b180      	cbz	r0, 18caa <str::printf(char const*, ...)+0x36>
   18c88:	6875      	ldr	r5, [r6, #4]
   18c8a:	9b00      	ldr	r3, [sp, #0]
   18c8c:	3501      	adds	r5, #1
   18c8e:	463a      	mov	r2, r7
   18c90:	4629      	mov	r1, r5
   18c92:	9301      	str	r3, [sp, #4]
   18c94:	f007 fa4a 	bl	2012c <vsniprintf>
   18c98:	4285      	cmp	r5, r0
   18c9a:	4604      	mov	r4, r0
   18c9c:	dc05      	bgt.n	18caa <str::printf(char const*, ...)+0x36>
   18c9e:	1c41      	adds	r1, r0, #1
   18ca0:	4630      	mov	r0, r6
   18ca2:	f7ff ffe0 	bl	18c66 <str::reserve(int)>
   18ca6:	2800      	cmp	r0, #0
   18ca8:	d1ec      	bne.n	18c84 <str::printf(char const*, ...)+0x10>
   18caa:	4620      	mov	r0, r4
   18cac:	b002      	add	sp, #8
   18cae:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   18cb2:	b003      	add	sp, #12
   18cb4:	4770      	bx	lr

00018cb6 <str::ensureMemoryToInsertNChars(int)>:
_ZN3str26ensureMemoryToInsertNCharsEi():
   18cb6:	b538      	push	{r3, r4, r5, lr}
   18cb8:	4605      	mov	r5, r0
   18cba:	460c      	mov	r4, r1
   18cbc:	f7ff fdfd 	bl	188ba <str::getLen() const>
   18cc0:	686b      	ldr	r3, [r5, #4]
   18cc2:	1821      	adds	r1, r4, r0
   18cc4:	4299      	cmp	r1, r3
   18cc6:	dd05      	ble.n	18cd4 <str::ensureMemoryToInsertNChars(int)+0x1e>
   18cc8:	4628      	mov	r0, r5
   18cca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   18cce:	3120      	adds	r1, #32
   18cd0:	f7ff bf95 	b.w	18bfe <str::reAllocateMem(int)>
   18cd4:	2001      	movs	r0, #1
   18cd6:	bd38      	pop	{r3, r4, r5, pc}

00018cd8 <str::insertAtEnd(char const*)>:
_ZN3str11insertAtEndEPKc():
   18cd8:	b538      	push	{r3, r4, r5, lr}
   18cda:	4604      	mov	r4, r0
   18cdc:	4608      	mov	r0, r1
   18cde:	460d      	mov	r5, r1
   18ce0:	f006 f83b 	bl	1ed5a <strlen>
   18ce4:	4601      	mov	r1, r0
   18ce6:	4620      	mov	r0, r4
   18ce8:	f7ff ffe5 	bl	18cb6 <str::ensureMemoryToInsertNChars(int)>
   18cec:	b120      	cbz	r0, 18cf8 <str::insertAtEnd(char const*)+0x20>
   18cee:	4629      	mov	r1, r5
   18cf0:	68a0      	ldr	r0, [r4, #8]
   18cf2:	f006 f803 	bl	1ecfc <strcat>
   18cf6:	2001      	movs	r0, #1
   18cf8:	bd38      	pop	{r3, r4, r5, pc}

00018cfa <str::operator+=(char)>:
_ZN3strpLEc():
   18cfa:	b507      	push	{r0, r1, r2, lr}
   18cfc:	2300      	movs	r3, #0
   18cfe:	f8ad 3004 	strh.w	r3, [sp, #4]
   18d02:	ab02      	add	r3, sp, #8
   18d04:	f803 1d04 	strb.w	r1, [r3, #-4]!
   18d08:	4619      	mov	r1, r3
   18d0a:	f7ff ffe5 	bl	18cd8 <str::insertAtEnd(char const*)>
   18d0e:	b003      	add	sp, #12
   18d10:	f85d fb04 	ldr.w	pc, [sp], #4

00018d14 <str::copyFrom(char const*)>:
_ZN3str8copyFromEPKc():
   18d14:	b570      	push	{r4, r5, r6, lr}
   18d16:	4604      	mov	r4, r0
   18d18:	4608      	mov	r0, r1
   18d1a:	460d      	mov	r5, r1
   18d1c:	f006 f81d 	bl	1ed5a <strlen>
   18d20:	6863      	ldr	r3, [r4, #4]
   18d22:	4601      	mov	r1, r0
   18d24:	4298      	cmp	r0, r3
   18d26:	dd0d      	ble.n	18d44 <str::copyFrom(char const*)+0x30>
   18d28:	4620      	mov	r0, r4
   18d2a:	f7ff ff68 	bl	18bfe <str::reAllocateMem(int)>
   18d2e:	4606      	mov	r6, r0
   18d30:	b940      	cbnz	r0, 18d44 <str::copyFrom(char const*)+0x30>
   18d32:	6862      	ldr	r2, [r4, #4]
   18d34:	4629      	mov	r1, r5
   18d36:	68a0      	ldr	r0, [r4, #8]
   18d38:	f006 f84f 	bl	1edda <strncpy>
   18d3c:	68a2      	ldr	r2, [r4, #8]
   18d3e:	6863      	ldr	r3, [r4, #4]
   18d40:	54d6      	strb	r6, [r2, r3]
   18d42:	bd70      	pop	{r4, r5, r6, pc}
   18d44:	4629      	mov	r1, r5
   18d46:	68a0      	ldr	r0, [r4, #8]
   18d48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   18d4c:	f005 bffd 	b.w	1ed4a <strcpy>

00018d50 <str::operator=(char const*)>:
_ZN3straSEPKc():
   18d50:	f7ff bfe0 	b.w	18d14 <str::copyFrom(char const*)>

00018d54 <__sputc_r>:
__sputc_r():
   18d54:	6893      	ldr	r3, [r2, #8]
   18d56:	b410      	push	{r4}
   18d58:	3b01      	subs	r3, #1
   18d5a:	2b00      	cmp	r3, #0
   18d5c:	6093      	str	r3, [r2, #8]
   18d5e:	da08      	bge.n	18d72 <__sputc_r+0x1e>
   18d60:	6994      	ldr	r4, [r2, #24]
   18d62:	42a3      	cmp	r3, r4
   18d64:	db02      	blt.n	18d6c <__sputc_r+0x18>
   18d66:	b2cb      	uxtb	r3, r1
   18d68:	2b0a      	cmp	r3, #10
   18d6a:	d102      	bne.n	18d72 <__sputc_r+0x1e>
   18d6c:	bc10      	pop	{r4}
   18d6e:	f007 ba19 	b.w	201a4 <__swbuf_r>
   18d72:	6813      	ldr	r3, [r2, #0]
   18d74:	1c58      	adds	r0, r3, #1
   18d76:	6010      	str	r0, [r2, #0]
   18d78:	7019      	strb	r1, [r3, #0]
   18d7a:	b2c8      	uxtb	r0, r1
   18d7c:	bc10      	pop	{r4}
   18d7e:	4770      	bx	lr

00018d80 <dbg_print(char const*, char const*)>:
_ZL9dbg_printPKcS0_():
   18d80:	4b0a      	ldr	r3, [pc, #40]	; (18dac <dbg_print(char const*, char const*)+0x2c>)
   18d82:	b570      	push	{r4, r5, r6, lr}
   18d84:	781b      	ldrb	r3, [r3, #0]
   18d86:	460d      	mov	r5, r1
   18d88:	b17b      	cbz	r3, 18daa <dbg_print(char const*, char const*)+0x2a>
   18d8a:	4e09      	ldr	r6, [pc, #36]	; (18db0 <dbg_print(char const*, char const*)+0x30>)
   18d8c:	1e44      	subs	r4, r0, #1
   18d8e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   18d92:	b121      	cbz	r1, 18d9e <dbg_print(char const*, char const*)+0x1e>
   18d94:	6830      	ldr	r0, [r6, #0]
   18d96:	6882      	ldr	r2, [r0, #8]
   18d98:	f7ff ffdc 	bl	18d54 <__sputc_r>
   18d9c:	e7f7      	b.n	18d8e <dbg_print(char const*, char const*)+0xe>
   18d9e:	b125      	cbz	r5, 18daa <dbg_print(char const*, char const*)+0x2a>
   18da0:	4628      	mov	r0, r5
   18da2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   18da6:	f005 bcd7 	b.w	1e758 <puts>
   18daa:	bd70      	pop	{r4, r5, r6, pc}
   18dac:	2007c578 	.word	0x2007c578
   18db0:	2007c140 	.word	0x2007c140

00018db4 <printline(char const*, char const*)>:
_ZL9printlinePKcS0_():
   18db4:	b570      	push	{r4, r5, r6, lr}
   18db6:	460c      	mov	r4, r1
   18db8:	4e0b      	ldr	r6, [pc, #44]	; (18de8 <printline(char const*, char const*)+0x34>)
   18dba:	1e45      	subs	r5, r0, #1
   18dbc:	f815 1f01 	ldrb.w	r1, [r5, #1]!
   18dc0:	b121      	cbz	r1, 18dcc <printline(char const*, char const*)+0x18>
   18dc2:	6830      	ldr	r0, [r6, #0]
   18dc4:	6882      	ldr	r2, [r0, #8]
   18dc6:	f7ff ffc5 	bl	18d54 <__sputc_r>
   18dca:	e7f7      	b.n	18dbc <printline(char const*, char const*)+0x8>
   18dcc:	b124      	cbz	r4, 18dd8 <printline(char const*, char const*)+0x24>
   18dce:	4620      	mov	r0, r4
   18dd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   18dd4:	f005 bcc0 	b.w	1e758 <puts>
   18dd8:	4b03      	ldr	r3, [pc, #12]	; (18de8 <printline(char const*, char const*)+0x34>)
   18dda:	210a      	movs	r1, #10
   18ddc:	6818      	ldr	r0, [r3, #0]
   18dde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   18de2:	6882      	ldr	r2, [r0, #8]
   18de4:	f7ff bfb6 	b.w	18d54 <__sputc_r>
   18de8:	2007c140 	.word	0x2007c140

00018dec <scheduler_c_task_private(void*)>:
_Z24scheduler_c_task_privatePv():
   18dec:	4b3e      	ldr	r3, [pc, #248]	; (18ee8 <scheduler_c_task_private(void*)+0xfc>)
   18dee:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   18df2:	681a      	ldr	r2, [r3, #0]
   18df4:	6903      	ldr	r3, [r0, #16]
   18df6:	4604      	mov	r4, r0
   18df8:	429a      	cmp	r2, r3
   18dfa:	d136      	bne.n	18e6a <scheduler_c_task_private(void*)+0x7e>
   18dfc:	2700      	movs	r7, #0
   18dfe:	463d      	mov	r5, r7
   18e00:	2100      	movs	r1, #0
   18e02:	483a      	ldr	r0, [pc, #232]	; (18eec <scheduler_c_task_private(void*)+0x100>)
   18e04:	f7ff ffbc 	bl	18d80 <dbg_print(char const*, char const*)>
   18e08:	4939      	ldr	r1, [pc, #228]	; (18ef0 <scheduler_c_task_private(void*)+0x104>)
   18e0a:	6a60      	ldr	r0, [r4, #36]	; 0x24
   18e0c:	f7ff ffb8 	bl	18d80 <dbg_print(char const*, char const*)>
   18e10:	2100      	movs	r1, #0
   18e12:	4838      	ldr	r0, [pc, #224]	; (18ef4 <scheduler_c_task_private(void*)+0x108>)
   18e14:	f7ff ffb4 	bl	18d80 <dbg_print(char const*, char const*)>
   18e18:	4b37      	ldr	r3, [pc, #220]	; (18ef8 <scheduler_c_task_private(void*)+0x10c>)
   18e1a:	681e      	ldr	r6, [r3, #0]
   18e1c:	b18e      	cbz	r6, 18e42 <scheduler_c_task_private(void*)+0x56>
   18e1e:	f8d6 8000 	ldr.w	r8, [r6]
   18e22:	3701      	adds	r7, #1
   18e24:	f8d8 3000 	ldr.w	r3, [r8]
   18e28:	4640      	mov	r0, r8
   18e2a:	691b      	ldr	r3, [r3, #16]
   18e2c:	6876      	ldr	r6, [r6, #4]
   18e2e:	4798      	blx	r3
   18e30:	2800      	cmp	r0, #0
   18e32:	d1f3      	bne.n	18e1c <scheduler_c_task_private(void*)+0x30>
   18e34:	4931      	ldr	r1, [pc, #196]	; (18efc <scheduler_c_task_private(void*)+0x110>)
   18e36:	f8d8 0024 	ldr.w	r0, [r8, #36]	; 0x24
   18e3a:	f7ff ffbb 	bl	18db4 <printline(char const*, char const*)>
   18e3e:	2501      	movs	r5, #1
   18e40:	e7ec      	b.n	18e1c <scheduler_c_task_private(void*)+0x30>
   18e42:	b90d      	cbnz	r5, 18e48 <scheduler_c_task_private(void*)+0x5c>
   18e44:	4e2e      	ldr	r6, [pc, #184]	; (18f00 <scheduler_c_task_private(void*)+0x114>)
   18e46:	e006      	b.n	18e56 <scheduler_c_task_private(void*)+0x6a>
   18e48:	4631      	mov	r1, r6
   18e4a:	482e      	ldr	r0, [pc, #184]	; (18f04 <scheduler_c_task_private(void*)+0x118>)
   18e4c:	f7ff ffb2 	bl	18db4 <printline(char const*, char const*)>
   18e50:	f001 f8b2 	bl	19fb8 <vTaskEndScheduler>
   18e54:	e009      	b.n	18e6a <scheduler_c_task_private(void*)+0x7e>
   18e56:	42af      	cmp	r7, r5
   18e58:	d007      	beq.n	18e6a <scheduler_c_task_private(void*)+0x7e>
   18e5a:	2300      	movs	r3, #0
   18e5c:	461a      	mov	r2, r3
   18e5e:	4619      	mov	r1, r3
   18e60:	6830      	ldr	r0, [r6, #0]
   18e62:	f001 fe23 	bl	1aaac <xQueueGenericSend>
   18e66:	3501      	adds	r5, #1
   18e68:	e7f5      	b.n	18e56 <scheduler_c_task_private(void*)+0x6a>
   18e6a:	4825      	ldr	r0, [pc, #148]	; (18f00 <scheduler_c_task_private(void*)+0x114>)
   18e6c:	2300      	movs	r3, #0
   18e6e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   18e72:	4619      	mov	r1, r3
   18e74:	6800      	ldr	r0, [r0, #0]
   18e76:	f001 fef0 	bl	1ac5a <xQueueGenericReceive>
   18e7a:	f001 f8b1 	bl	19fe0 <xTaskGetTickCount>
   18e7e:	ae02      	add	r6, sp, #8
   18e80:	f846 0d04 	str.w	r0, [r6, #-4]!
   18e84:	f001 f8ac 	bl	19fe0 <xTaskGetTickCount>
   18e88:	4605      	mov	r5, r0
   18e8a:	6860      	ldr	r0, [r4, #4]
   18e8c:	b118      	cbz	r0, 18e96 <scheduler_c_task_private(void*)+0xaa>
   18e8e:	68e1      	ldr	r1, [r4, #12]
   18e90:	f001 ff99 	bl	1adc6 <xQueueSelectFromSet>
   18e94:	60a0      	str	r0, [r4, #8]
   18e96:	6823      	ldr	r3, [r4, #0]
   18e98:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   18e9a:	695b      	ldr	r3, [r3, #20]
   18e9c:	4620      	mov	r0, r4
   18e9e:	4798      	blx	r3
   18ea0:	4607      	mov	r7, r0
   18ea2:	b930      	cbnz	r0, 18eb2 <scheduler_c_task_private(void*)+0xc6>
   18ea4:	6a60      	ldr	r0, [r4, #36]	; 0x24
   18ea6:	4918      	ldr	r1, [pc, #96]	; (18f08 <scheduler_c_task_private(void*)+0x11c>)
   18ea8:	f7ff ff84 	bl	18db4 <printline(char const*, char const*)>
   18eac:	4638      	mov	r0, r7
   18eae:	f001 faad 	bl	1a40c <vTaskSuspend>
   18eb2:	69a3      	ldr	r3, [r4, #24]
   18eb4:	3301      	adds	r3, #1
   18eb6:	61a3      	str	r3, [r4, #24]
   18eb8:	6a23      	ldr	r3, [r4, #32]
   18eba:	b11b      	cbz	r3, 18ec4 <scheduler_c_task_private(void*)+0xd8>
   18ebc:	f001 f890 	bl	19fe0 <xTaskGetTickCount>
   18ec0:	4285      	cmp	r5, r0
   18ec2:	d306      	bcc.n	18ed2 <scheduler_c_task_private(void*)+0xe6>
   18ec4:	69e1      	ldr	r1, [r4, #28]
   18ec6:	2900      	cmp	r1, #0
   18ec8:	d0df      	beq.n	18e8a <scheduler_c_task_private(void*)+0x9e>
   18eca:	4630      	mov	r0, r6
   18ecc:	f001 f996 	bl	1a1fc <vTaskDelayUntil>
   18ed0:	e7db      	b.n	18e8a <scheduler_c_task_private(void*)+0x9e>
   18ed2:	f001 f885 	bl	19fe0 <xTaskGetTickCount>
   18ed6:	6a25      	ldr	r5, [r4, #32]
   18ed8:	4405      	add	r5, r0
   18eda:	6920      	ldr	r0, [r4, #16]
   18edc:	f001 fb86 	bl	1a5ec <uxTaskGetStackHighWaterMark>
   18ee0:	0080      	lsls	r0, r0, #2
   18ee2:	6160      	str	r0, [r4, #20]
   18ee4:	e7ee      	b.n	18ec4 <scheduler_c_task_private(void*)+0xd8>
   18ee6:	bf00      	nop
   18ee8:	2007c588 	.word	0x2007c588
   18eec:	00025aec 	.word	0x00025aec
   18ef0:	00025af0 	.word	0x00025af0
   18ef4:	00025b1d 	.word	0x00025b1d
   18ef8:	2007c58c 	.word	0x2007c58c
   18efc:	00025b4a 	.word	0x00025b4a
   18f00:	2007c584 	.word	0x2007c584
   18f04:	00025b63 	.word	0x00025b63
   18f08:	00025b8b 	.word	0x00025b8b

00018f0c <scheduler_init_all(bool)>:
_Z18scheduler_init_allb():
   18f0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   18f10:	4e32      	ldr	r6, [pc, #200]	; (18fdc <scheduler_init_all(bool)+0xd0>)
   18f12:	b085      	sub	sp, #20
   18f14:	6831      	ldr	r1, [r6, #0]
   18f16:	b921      	cbnz	r1, 18f22 <scheduler_init_all(bool)+0x16>
   18f18:	4831      	ldr	r0, [pc, #196]	; (18fe0 <scheduler_init_all(bool)+0xd4>)
   18f1a:	f7ff ff4b 	bl	18db4 <printline(char const*, char const*)>
   18f1e:	2001      	movs	r0, #1
   18f20:	e058      	b.n	18fd4 <scheduler_init_all(bool)+0xc8>
   18f22:	f04f 0800 	mov.w	r8, #0
   18f26:	4645      	mov	r5, r8
   18f28:	46c1      	mov	r9, r8
   18f2a:	2100      	movs	r1, #0
   18f2c:	482d      	ldr	r0, [pc, #180]	; (18fe4 <scheduler_init_all(bool)+0xd8>)
   18f2e:	f7ff ff27 	bl	18d80 <dbg_print(char const*, char const*)>
   18f32:	6834      	ldr	r4, [r6, #0]
   18f34:	b1ec      	cbz	r4, 18f72 <scheduler_init_all(bool)+0x66>
   18f36:	6827      	ldr	r7, [r4, #0]
   18f38:	6864      	ldr	r4, [r4, #4]
   18f3a:	f107 0310 	add.w	r3, r7, #16
   18f3e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   18f40:	f8cd 900c 	str.w	r9, [sp, #12]
   18f44:	f8cd 9008 	str.w	r9, [sp, #8]
   18f48:	9301      	str	r3, [sp, #4]
   18f4a:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
   18f4e:	f3c2 028f 	ubfx	r2, r2, #2, #16
   18f52:	9300      	str	r3, [sp, #0]
   18f54:	6a79      	ldr	r1, [r7, #36]	; 0x24
   18f56:	463b      	mov	r3, r7
   18f58:	4823      	ldr	r0, [pc, #140]	; (18fe8 <scheduler_init_all(bool)+0xdc>)
   18f5a:	f108 0801 	add.w	r8, r8, #1
   18f5e:	f000 ff31 	bl	19dc4 <xTaskGenericCreate>
   18f62:	2800      	cmp	r0, #0
   18f64:	d1e6      	bne.n	18f34 <scheduler_init_all(bool)+0x28>
   18f66:	4921      	ldr	r1, [pc, #132]	; (18fec <scheduler_init_all(bool)+0xe0>)
   18f68:	6a78      	ldr	r0, [r7, #36]	; 0x24
   18f6a:	f7ff ff23 	bl	18db4 <printline(char const*, char const*)>
   18f6e:	2501      	movs	r5, #1
   18f70:	e7e0      	b.n	18f34 <scheduler_init_all(bool)+0x28>
   18f72:	4621      	mov	r1, r4
   18f74:	4640      	mov	r0, r8
   18f76:	f001 fd90 	bl	1aa9a <xQueueCreateCountingSemaphore>
   18f7a:	4b1d      	ldr	r3, [pc, #116]	; (18ff0 <scheduler_init_all(bool)+0xe4>)
   18f7c:	6018      	str	r0, [r3, #0]
   18f7e:	b920      	cbnz	r0, 18f8a <scheduler_init_all(bool)+0x7e>
   18f80:	4621      	mov	r1, r4
   18f82:	481c      	ldr	r0, [pc, #112]	; (18ff4 <scheduler_init_all(bool)+0xe8>)
   18f84:	f7ff ff16 	bl	18db4 <printline(char const*, char const*)>
   18f88:	2501      	movs	r5, #1
   18f8a:	2100      	movs	r1, #0
   18f8c:	481a      	ldr	r0, [pc, #104]	; (18ff8 <scheduler_init_all(bool)+0xec>)
   18f8e:	f7ff fef7 	bl	18d80 <dbg_print(char const*, char const*)>
   18f92:	6834      	ldr	r4, [r6, #0]
   18f94:	b16c      	cbz	r4, 18fb2 <scheduler_init_all(bool)+0xa6>
   18f96:	6827      	ldr	r7, [r4, #0]
   18f98:	6864      	ldr	r4, [r4, #4]
   18f9a:	683b      	ldr	r3, [r7, #0]
   18f9c:	4638      	mov	r0, r7
   18f9e:	689b      	ldr	r3, [r3, #8]
   18fa0:	4798      	blx	r3
   18fa2:	2800      	cmp	r0, #0
   18fa4:	d1f6      	bne.n	18f94 <scheduler_init_all(bool)+0x88>
   18fa6:	4915      	ldr	r1, [pc, #84]	; (18ffc <scheduler_init_all(bool)+0xf0>)
   18fa8:	6a78      	ldr	r0, [r7, #36]	; 0x24
   18faa:	f7ff ff03 	bl	18db4 <printline(char const*, char const*)>
   18fae:	2501      	movs	r5, #1
   18fb0:	e7f0      	b.n	18f94 <scheduler_init_all(bool)+0x88>
   18fb2:	4620      	mov	r0, r4
   18fb4:	4b12      	ldr	r3, [pc, #72]	; (19000 <scheduler_init_all(bool)+0xf4>)
   18fb6:	6832      	ldr	r2, [r6, #0]
   18fb8:	6819      	ldr	r1, [r3, #0]
   18fba:	b142      	cbz	r2, 18fce <scheduler_init_all(bool)+0xc2>
   18fbc:	6817      	ldr	r7, [r2, #0]
   18fbe:	6852      	ldr	r2, [r2, #4]
   18fc0:	6afe      	ldr	r6, [r7, #44]	; 0x2c
   18fc2:	42b0      	cmp	r0, r6
   18fc4:	d2f9      	bcs.n	18fba <scheduler_init_all(bool)+0xae>
   18fc6:	6939      	ldr	r1, [r7, #16]
   18fc8:	4630      	mov	r0, r6
   18fca:	2401      	movs	r4, #1
   18fcc:	e7f5      	b.n	18fba <scheduler_init_all(bool)+0xae>
   18fce:	b104      	cbz	r4, 18fd2 <scheduler_init_all(bool)+0xc6>
   18fd0:	6019      	str	r1, [r3, #0]
   18fd2:	4628      	mov	r0, r5
   18fd4:	b005      	add	sp, #20
   18fd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   18fda:	bf00      	nop
   18fdc:	2007c58c 	.word	0x2007c58c
   18fe0:	00025bbb 	.word	0x00025bbb
   18fe4:	00025be9 	.word	0x00025be9
   18fe8:	00018ded 	.word	0x00018ded
   18fec:	00025c00 	.word	0x00025c00
   18ff0:	2007c584 	.word	0x2007c584
   18ff4:	00025c1b 	.word	0x00025c1b
   18ff8:	00025c3e 	.word	0x00025c3e
   18ffc:	00025c59 	.word	0x00025c59
   19000:	2007c588 	.word	0x2007c588

00019004 <scheduler_add_task(scheduler_task*)>:
_Z18scheduler_add_taskP14scheduler_task():
   19004:	b510      	push	{r4, lr}
   19006:	4604      	mov	r4, r0
   19008:	b138      	cbz	r0, 1901a <scheduler_add_task(scheduler_task*)+0x16>
   1900a:	2008      	movs	r0, #8
   1900c:	f7f8 fae0 	bl	115d0 <operator new(unsigned int)>
   19010:	4b02      	ldr	r3, [pc, #8]	; (1901c <scheduler_add_task(scheduler_task*)+0x18>)
   19012:	6004      	str	r4, [r0, #0]
   19014:	681a      	ldr	r2, [r3, #0]
   19016:	6018      	str	r0, [r3, #0]
   19018:	6042      	str	r2, [r0, #4]
   1901a:	bd10      	pop	{r4, pc}
   1901c:	2007c58c 	.word	0x2007c58c

00019020 <scheduler_start(bool, bool)>:
_Z15scheduler_startbb():
   19020:	4b0c      	ldr	r3, [pc, #48]	; (19054 <scheduler_start(bool, bool)+0x34>)
   19022:	b510      	push	{r4, lr}
   19024:	7018      	strb	r0, [r3, #0]
   19026:	4608      	mov	r0, r1
   19028:	f7ff ff70 	bl	18f0c <scheduler_init_all(bool)>
   1902c:	4604      	mov	r4, r0
   1902e:	b950      	cbnz	r0, 19046 <scheduler_start(bool, bool)+0x26>
   19030:	4601      	mov	r1, r0
   19032:	4809      	ldr	r0, [pc, #36]	; (19058 <scheduler_start(bool, bool)+0x38>)
   19034:	f7ff fea4 	bl	18d80 <dbg_print(char const*, char const*)>
   19038:	f001 fb86 	bl	1a748 <vTaskResetRunTimeStats>
   1903c:	f000 ff92 	bl	19f64 <vTaskStartScheduler>
   19040:	4621      	mov	r1, r4
   19042:	4806      	ldr	r0, [pc, #24]	; (1905c <scheduler_start(bool, bool)+0x3c>)
   19044:	e001      	b.n	1904a <scheduler_start(bool, bool)+0x2a>
   19046:	4806      	ldr	r0, [pc, #24]	; (19060 <scheduler_start(bool, bool)+0x40>)
   19048:	2100      	movs	r1, #0
   1904a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1904e:	f7ff beb1 	b.w	18db4 <printline(char const*, char const*)>
   19052:	bf00      	nop
   19054:	2007c578 	.word	0x2007c578
   19058:	00025c6d 	.word	0x00025c6d
   1905c:	00025c88 	.word	0x00025c88
   19060:	00025cac 	.word	0x00025cac

00019064 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>:
_ZN14scheduler_taskC2EPKcmhPv():
   19064:	b570      	push	{r4, r5, r6, lr}
   19066:	4d0b      	ldr	r5, [pc, #44]	; (19094 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)+0x30>)
   19068:	6241      	str	r1, [r0, #36]	; 0x24
   1906a:	6005      	str	r5, [r0, #0]
   1906c:	2500      	movs	r5, #0
   1906e:	6045      	str	r5, [r0, #4]
   19070:	6085      	str	r5, [r0, #8]
   19072:	6105      	str	r5, [r0, #16]
   19074:	6145      	str	r5, [r0, #20]
   19076:	6185      	str	r5, [r0, #24]
   19078:	61c5      	str	r5, [r0, #28]
   1907a:	f64e 2560 	movw	r5, #60000	; 0xea60
   1907e:	9904      	ldr	r1, [sp, #16]
   19080:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
   19084:	60c6      	str	r6, [r0, #12]
   19086:	6205      	str	r5, [r0, #32]
   19088:	6281      	str	r1, [r0, #40]	; 0x28
   1908a:	62c2      	str	r2, [r0, #44]	; 0x2c
   1908c:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
   19090:	bd70      	pop	{r4, r5, r6, pc}
   19092:	bf00      	nop
   19094:	00025ad4 	.word	0x00025ad4

00019098 <scheduler_task::getSharedObject(unsigned char)>:
_ZN14scheduler_task15getSharedObjectEh():
   19098:	4b04      	ldr	r3, [pc, #16]	; (190ac <scheduler_task::getSharedObject(unsigned char)+0x14>)
   1909a:	681a      	ldr	r2, [r3, #0]
   1909c:	4290      	cmp	r0, r2
   1909e:	bf3a      	itte	cc
   190a0:	685b      	ldrcc	r3, [r3, #4]
   190a2:	f853 0020 	ldrcc.w	r0, [r3, r0, lsl #2]
   190a6:	2000      	movcs	r0, #0
   190a8:	4770      	bx	lr
   190aa:	bf00      	nop
   190ac:	2007c57c 	.word	0x2007c57c

000190b0 <c_list_for_each_elm>:
c_list_for_each_elm():
   190b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   190b2:	460d      	mov	r5, r1
   190b4:	4616      	mov	r6, r2
   190b6:	461f      	mov	r7, r3
   190b8:	b908      	cbnz	r0, 190be <c_list_for_each_elm+0xe>
   190ba:	2001      	movs	r0, #1
   190bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   190be:	2900      	cmp	r1, #0
   190c0:	d0fb      	beq.n	190ba <c_list_for_each_elm+0xa>
   190c2:	6804      	ldr	r4, [r0, #0]
   190c4:	2c00      	cmp	r4, #0
   190c6:	d0f8      	beq.n	190ba <c_list_for_each_elm+0xa>
   190c8:	9b06      	ldr	r3, [sp, #24]
   190ca:	463a      	mov	r2, r7
   190cc:	4631      	mov	r1, r6
   190ce:	6820      	ldr	r0, [r4, #0]
   190d0:	47a8      	blx	r5
   190d2:	b108      	cbz	r0, 190d8 <c_list_for_each_elm+0x28>
   190d4:	6864      	ldr	r4, [r4, #4]
   190d6:	e7f5      	b.n	190c4 <c_list_for_each_elm+0x14>
   190d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   190da:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

000190dc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>:
_ZN16CommandProcessor10addHandlerEPFbR3strR7CharDevPvEPKcS8_S4_():
   190dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190e0:	4f1c      	ldr	r7, [pc, #112]	; (19154 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x78>)
   190e2:	4604      	mov	r4, r0
   190e4:	4688      	mov	r8, r1
   190e6:	2b00      	cmp	r3, #0
   190e8:	bf18      	it	ne
   190ea:	461f      	movne	r7, r3
   190ec:	4691      	mov	r9, r2
   190ee:	b372      	cbz	r2, 1914e <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
   190f0:	b369      	cbz	r1, 1914e <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
   190f2:	6843      	ldr	r3, [r0, #4]
   190f4:	6882      	ldr	r2, [r0, #8]
   190f6:	429a      	cmp	r2, r3
   190f8:	d31c      	bcc.n	19134 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
   190fa:	6805      	ldr	r5, [r0, #0]
   190fc:	195d      	adds	r5, r3, r5
   190fe:	d219      	bcs.n	19134 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
   19100:	00a9      	lsls	r1, r5, #2
   19102:	68c0      	ldr	r0, [r0, #12]
   19104:	f005 fb92 	bl	1e82c <realloc>
   19108:	68a6      	ldr	r6, [r4, #8]
   1910a:	60e0      	str	r0, [r4, #12]
   1910c:	ea4f 0a86 	mov.w	sl, r6, lsl #2
   19110:	42b5      	cmp	r5, r6
   19112:	d90e      	bls.n	19132 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x56>
   19114:	2010      	movs	r0, #16
   19116:	f7f8 fa5b 	bl	115d0 <operator new(unsigned int)>
   1911a:	4683      	mov	fp, r0
   1911c:	2210      	movs	r2, #16
   1911e:	2100      	movs	r1, #0
   19120:	f004 f91b 	bl	1d35a <memset>
   19124:	68e3      	ldr	r3, [r4, #12]
   19126:	3601      	adds	r6, #1
   19128:	f843 b00a 	str.w	fp, [r3, sl]
   1912c:	f10a 0a04 	add.w	sl, sl, #4
   19130:	e7ee      	b.n	19110 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x34>
   19132:	6065      	str	r5, [r4, #4]
   19134:	68a3      	ldr	r3, [r4, #8]
   19136:	68e2      	ldr	r2, [r4, #12]
   19138:	1c59      	adds	r1, r3, #1
   1913a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   1913e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19140:	60a1      	str	r1, [r4, #8]
   19142:	f8c3 9000 	str.w	r9, [r3]
   19146:	605f      	str	r7, [r3, #4]
   19148:	f8c3 8008 	str.w	r8, [r3, #8]
   1914c:	60da      	str	r2, [r3, #12]
   1914e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19152:	bf00      	nop
   19154:	000251e4 	.word	0x000251e4

00019158 <CommandProcessor::getRegisteredCommandList(CharDev&)>:
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
   19158:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1915c:	460c      	mov	r4, r1
   1915e:	b091      	sub	sp, #68	; 0x44
   19160:	4681      	mov	r9, r0
   19162:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19166:	491d      	ldr	r1, [pc, #116]	; (191dc <CommandProcessor::getRegisteredCommandList(CharDev&)+0x84>)
   19168:	4620      	mov	r0, r4
   1916a:	f7f7 f84d 	bl	10208 <CharDev::put(char const*, unsigned int)>
   1916e:	2500      	movs	r5, #0
   19170:	f8d9 3008 	ldr.w	r3, [r9, #8]
   19174:	429d      	cmp	r5, r3
   19176:	d227      	bcs.n	191c8 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x70>
   19178:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1917c:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
   19180:	f8d7 8004 	ldr.w	r8, [r7, #4]
   19184:	4640      	mov	r0, r8
   19186:	f005 fde8 	bl	1ed5a <strlen>
   1918a:	2820      	cmp	r0, #32
   1918c:	d914      	bls.n	191b8 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x60>
   1918e:	4643      	mov	r3, r8
   19190:	683a      	ldr	r2, [r7, #0]
   19192:	4913      	ldr	r1, [pc, #76]	; (191e0 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x88>)
   19194:	4668      	mov	r0, sp
   19196:	f005 fcff 	bl	1eb98 <siprintf>
   1919a:	210a      	movs	r1, #10
   1919c:	4668      	mov	r0, sp
   1919e:	466e      	mov	r6, sp
   191a0:	f005 fe2e 	bl	1ee00 <strrchr>
   191a4:	4286      	cmp	r6, r0
   191a6:	d202      	bcs.n	191ae <CommandProcessor::getRegisteredCommandList(CharDev&)+0x56>
   191a8:	490e      	ldr	r1, [pc, #56]	; (191e4 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x8c>)
   191aa:	f005 fdce 	bl	1ed4a <strcpy>
   191ae:	4631      	mov	r1, r6
   191b0:	4620      	mov	r0, r4
   191b2:	f7f7 f873 	bl	1029c <CharDev::printf(char const*, ...)>
   191b6:	e005      	b.n	191c4 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x6c>
   191b8:	4643      	mov	r3, r8
   191ba:	683a      	ldr	r2, [r7, #0]
   191bc:	490a      	ldr	r1, [pc, #40]	; (191e8 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x90>)
   191be:	4620      	mov	r0, r4
   191c0:	f7f7 f86c 	bl	1029c <CharDev::printf(char const*, ...)>
   191c4:	3501      	adds	r5, #1
   191c6:	e7d3      	b.n	19170 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x18>
   191c8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   191cc:	4907      	ldr	r1, [pc, #28]	; (191ec <CommandProcessor::getRegisteredCommandList(CharDev&)+0x94>)
   191ce:	4620      	mov	r0, r4
   191d0:	f7f7 f82e 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   191d4:	b011      	add	sp, #68	; 0x44
   191d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   191da:	bf00      	nop
   191dc:	00025ce2 	.word	0x00025ce2
   191e0:	00025cf6 	.word	0x00025cf6
   191e4:	00025fd5 	.word	0x00025fd5
   191e8:	00025d09 	.word	0x00025d09
   191ec:	00025d15 	.word	0x00025d15

000191f0 <CommandProcessor::getHelpText(str&, CharDev&)>:
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
   191f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   191f4:	4605      	mov	r5, r0
   191f6:	4608      	mov	r0, r1
   191f8:	460f      	mov	r7, r1
   191fa:	4616      	mov	r6, r2
   191fc:	f7ff fb5d 	bl	188ba <str::getLen() const>
   19200:	2800      	cmp	r0, #0
   19202:	dd23      	ble.n	1924c <CommandProcessor::getHelpText(str&, CharDev&)+0x5c>
   19204:	2400      	movs	r4, #0
   19206:	68ab      	ldr	r3, [r5, #8]
   19208:	429c      	cmp	r4, r3
   1920a:	d217      	bcs.n	1923c <CommandProcessor::getHelpText(str&, CharDev&)+0x4c>
   1920c:	68eb      	ldr	r3, [r5, #12]
   1920e:	4638      	mov	r0, r7
   19210:	f853 8024 	ldr.w	r8, [r3, r4, lsl #2]
   19214:	f8d8 1000 	ldr.w	r1, [r8]
   19218:	f7ff fb96 	bl	18948 <str::compareToIgnoreCase(char const*) const>
   1921c:	b160      	cbz	r0, 19238 <CommandProcessor::getHelpText(str&, CharDev&)+0x48>
   1921e:	f8d8 1004 	ldr.w	r1, [r8, #4]
   19222:	b129      	cbz	r1, 19230 <CommandProcessor::getHelpText(str&, CharDev&)+0x40>
   19224:	780a      	ldrb	r2, [r1, #0]
   19226:	4b0c      	ldr	r3, [pc, #48]	; (19258 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   19228:	2a00      	cmp	r2, #0
   1922a:	bf08      	it	eq
   1922c:	4619      	moveq	r1, r3
   1922e:	e000      	b.n	19232 <CommandProcessor::getHelpText(str&, CharDev&)+0x42>
   19230:	4909      	ldr	r1, [pc, #36]	; (19258 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   19232:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19236:	e004      	b.n	19242 <CommandProcessor::getHelpText(str&, CharDev&)+0x52>
   19238:	3401      	adds	r4, #1
   1923a:	e7e4      	b.n	19206 <CommandProcessor::getHelpText(str&, CharDev&)+0x16>
   1923c:	4907      	ldr	r1, [pc, #28]	; (1925c <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   1923e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19242:	4630      	mov	r0, r6
   19244:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   19248:	f7f6 bff2 	b.w	10230 <CharDev::putline(char const*, unsigned int)>
   1924c:	4631      	mov	r1, r6
   1924e:	4628      	mov	r0, r5
   19250:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   19254:	f7ff bf80 	b.w	19158 <CommandProcessor::getRegisteredCommandList(CharDev&)>
   19258:	00025d41 	.word	0x00025d41
   1925c:	00025d65 	.word	0x00025d65

00019260 <CommandProcessor::prepareCmdParam(str&, char const*)>:
_ZN16CommandProcessor15prepareCmdParamER3strPKc():
   19260:	b538      	push	{r3, r4, r5, lr}
   19262:	460d      	mov	r5, r1
   19264:	2400      	movs	r4, #0
   19266:	4628      	mov	r0, r5
   19268:	f7ff fb27 	bl	188ba <str::getLen() const>
   1926c:	4284      	cmp	r4, r0
   1926e:	da08      	bge.n	19282 <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
   19270:	4621      	mov	r1, r4
   19272:	4628      	mov	r0, r5
   19274:	f7ff fcb9 	bl	18bea <str::operator[](int)>
   19278:	7803      	ldrb	r3, [r0, #0]
   1927a:	2b20      	cmp	r3, #32
   1927c:	d001      	beq.n	19282 <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
   1927e:	3401      	adds	r4, #1
   19280:	e7f1      	b.n	19266 <CommandProcessor::prepareCmdParam(str&, char const*)+0x6>
   19282:	4621      	mov	r1, r4
   19284:	4628      	mov	r0, r5
   19286:	f7ff fc03 	bl	18a90 <str::eraseFirst(int)>
   1928a:	4628      	mov	r0, r5
   1928c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   19290:	4901      	ldr	r1, [pc, #4]	; (19298 <CommandProcessor::prepareCmdParam(str&, char const*)+0x38>)
   19292:	f7ff bc66 	b.w	18b62 <str::trimStart(char const*)>
   19296:	bf00      	nop
   19298:	00023dca 	.word	0x00023dca

0001929c <CommandProcessor::handleCommand(str&, CharDev&)>:
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
   1929c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   192a0:	460c      	mov	r4, r1
   192a2:	b090      	sub	sp, #64	; 0x40
   192a4:	494b      	ldr	r1, [pc, #300]	; (193d4 <CommandProcessor::handleCommand(str&, CharDev&)+0x138>)
   192a6:	4606      	mov	r6, r0
   192a8:	4620      	mov	r0, r4
   192aa:	4615      	mov	r5, r2
   192ac:	f7ff fc79 	bl	18ba2 <str::trimEnd(char const*)>
   192b0:	2220      	movs	r2, #32
   192b2:	4949      	ldr	r1, [pc, #292]	; (193d8 <CommandProcessor::handleCommand(str&, CharDev&)+0x13c>)
   192b4:	4620      	mov	r0, r4
   192b6:	f7ff fbcf 	bl	18a58 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   192ba:	b908      	cbnz	r0, 192c0 <CommandProcessor::handleCommand(str&, CharDev&)+0x24>
   192bc:	4607      	mov	r7, r0
   192be:	e015      	b.n	192ec <CommandProcessor::handleCommand(str&, CharDev&)+0x50>
   192c0:	4621      	mov	r1, r4
   192c2:	4630      	mov	r0, r6
   192c4:	4a44      	ldr	r2, [pc, #272]	; (193d8 <CommandProcessor::handleCommand(str&, CharDev&)+0x13c>)
   192c6:	f7ff ffcb 	bl	19260 <CommandProcessor::prepareCmdParam(str&, char const*)>
   192ca:	462a      	mov	r2, r5
   192cc:	4621      	mov	r1, r4
   192ce:	4630      	mov	r0, r6
   192d0:	f7ff ff8e 	bl	191f0 <CommandProcessor::getHelpText(str&, CharDev&)>
   192d4:	e079      	b.n	193ca <CommandProcessor::handleCommand(str&, CharDev&)+0x12e>
   192d6:	68f3      	ldr	r3, [r6, #12]
   192d8:	2220      	movs	r2, #32
   192da:	f853 8027 	ldr.w	r8, [r3, r7, lsl #2]
   192de:	4620      	mov	r0, r4
   192e0:	f8d8 1000 	ldr.w	r1, [r8]
   192e4:	f7ff fbb8 	bl	18a58 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   192e8:	b930      	cbnz	r0, 192f8 <CommandProcessor::handleCommand(str&, CharDev&)+0x5c>
   192ea:	3701      	adds	r7, #1
   192ec:	68b3      	ldr	r3, [r6, #8]
   192ee:	429f      	cmp	r7, r3
   192f0:	d3f1      	bcc.n	192d6 <CommandProcessor::handleCommand(str&, CharDev&)+0x3a>
   192f2:	f04f 0800 	mov.w	r8, #0
   192f6:	e03b      	b.n	19370 <CommandProcessor::handleCommand(str&, CharDev&)+0xd4>
   192f8:	f8d8 2000 	ldr.w	r2, [r8]
   192fc:	4621      	mov	r1, r4
   192fe:	4630      	mov	r0, r6
   19300:	f7ff ffae 	bl	19260 <CommandProcessor::prepareCmdParam(str&, char const*)>
   19304:	f8d8 3008 	ldr.w	r3, [r8, #8]
   19308:	f8d8 200c 	ldr.w	r2, [r8, #12]
   1930c:	4629      	mov	r1, r5
   1930e:	4620      	mov	r0, r4
   19310:	4798      	blx	r3
   19312:	2800      	cmp	r0, #0
   19314:	d159      	bne.n	193ca <CommandProcessor::handleCommand(str&, CharDev&)+0x12e>
   19316:	4628      	mov	r0, r5
   19318:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1931c:	492f      	ldr	r1, [pc, #188]	; (193dc <CommandProcessor::handleCommand(str&, CharDev&)+0x140>)
   1931e:	f7f6 ff87 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   19322:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19326:	f8d8 1004 	ldr.w	r1, [r8, #4]
   1932a:	4628      	mov	r0, r5
   1932c:	f7f6 ff80 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   19330:	e04b      	b.n	193ca <CommandProcessor::handleCommand(str&, CharDev&)+0x12e>
   19332:	68f3      	ldr	r3, [r6, #12]
   19334:	2220      	movs	r2, #32
   19336:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
   1933a:	eb0d 0102 	add.w	r1, sp, r2
   1933e:	a803      	add	r0, sp, #12
   19340:	f7ff fa94 	bl	1886c <str::str(char*, int)>
   19344:	6839      	ldr	r1, [r7, #0]
   19346:	a803      	add	r0, sp, #12
   19348:	f7ff fd02 	bl	18d50 <str::operator=(char const*)>
   1934c:	2300      	movs	r3, #0
   1934e:	aa01      	add	r2, sp, #4
   19350:	4923      	ldr	r1, [pc, #140]	; (193e0 <CommandProcessor::handleCommand(str&, CharDev&)+0x144>)
   19352:	4620      	mov	r0, r4
   19354:	9301      	str	r3, [sp, #4]
   19356:	9302      	str	r3, [sp, #8]
   19358:	f7ff fab8 	bl	188cc <str::scanf(char const*, ...)>
   1935c:	a801      	add	r0, sp, #4
   1935e:	f005 fcfc 	bl	1ed5a <strlen>
   19362:	2801      	cmp	r0, #1
   19364:	d808      	bhi.n	19378 <CommandProcessor::handleCommand(str&, CharDev&)+0xdc>
   19366:	a803      	add	r0, sp, #12
   19368:	f7ff fa95 	bl	18896 <str::~str()>
   1936c:	f108 0801 	add.w	r8, r8, #1
   19370:	68b3      	ldr	r3, [r6, #8]
   19372:	4598      	cmp	r8, r3
   19374:	d3dd      	bcc.n	19332 <CommandProcessor::handleCommand(str&, CharDev&)+0x96>
   19376:	e020      	b.n	193ba <CommandProcessor::handleCommand(str&, CharDev&)+0x11e>
   19378:	a901      	add	r1, sp, #4
   1937a:	a803      	add	r0, sp, #12
   1937c:	f7ff fb55 	bl	18a2a <str::beginsWithIgnoreCase(char const*) const>
   19380:	2800      	cmp	r0, #0
   19382:	d0f0      	beq.n	19366 <CommandProcessor::handleCommand(str&, CharDev&)+0xca>
   19384:	683a      	ldr	r2, [r7, #0]
   19386:	4621      	mov	r1, r4
   19388:	4630      	mov	r0, r6
   1938a:	f7ff ff69 	bl	19260 <CommandProcessor::prepareCmdParam(str&, char const*)>
   1938e:	68bb      	ldr	r3, [r7, #8]
   19390:	68fa      	ldr	r2, [r7, #12]
   19392:	4629      	mov	r1, r5
   19394:	4620      	mov	r0, r4
   19396:	4798      	blx	r3
   19398:	b958      	cbnz	r0, 193b2 <CommandProcessor::handleCommand(str&, CharDev&)+0x116>
   1939a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1939e:	490f      	ldr	r1, [pc, #60]	; (193dc <CommandProcessor::handleCommand(str&, CharDev&)+0x140>)
   193a0:	4628      	mov	r0, r5
   193a2:	f7f6 ff45 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   193a6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   193aa:	6879      	ldr	r1, [r7, #4]
   193ac:	4628      	mov	r0, r5
   193ae:	f7f6 ff3f 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   193b2:	a803      	add	r0, sp, #12
   193b4:	f7ff fa6f 	bl	18896 <str::~str()>
   193b8:	e007      	b.n	193ca <CommandProcessor::handleCommand(str&, CharDev&)+0x12e>
   193ba:	4628      	mov	r0, r5
   193bc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   193c0:	4908      	ldr	r1, [pc, #32]	; (193e4 <CommandProcessor::handleCommand(str&, CharDev&)+0x148>)
   193c2:	f7f6 ff35 	bl	10230 <CharDev::putline(char const*, unsigned int)>
   193c6:	2000      	movs	r0, #0
   193c8:	e000      	b.n	193cc <CommandProcessor::handleCommand(str&, CharDev&)+0x130>
   193ca:	2001      	movs	r0, #1
   193cc:	b010      	add	sp, #64	; 0x40
   193ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   193d2:	bf00      	nop
   193d4:	000234d8 	.word	0x000234d8
   193d8:	0002444e 	.word	0x0002444e
   193dc:	00025d8a 	.word	0x00025d8a
   193e0:	00025daf 	.word	0x00025daf
   193e4:	00025d65 	.word	0x00025d65

000193e8 <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
   193e8:	b513      	push	{r0, r1, r4, lr}
   193ea:	2300      	movs	r3, #0
   193ec:	aa02      	add	r2, sp, #8
   193ee:	f842 3d04 	str.w	r3, [r2, #-4]!
   193f2:	460c      	mov	r4, r1
   193f4:	6800      	ldr	r0, [r0, #0]
   193f6:	4619      	mov	r1, r3
   193f8:	f001 fbf4 	bl	1abe4 <xQueueGenericSendFromISR>
   193fc:	9b01      	ldr	r3, [sp, #4]
   193fe:	b11b      	cbz	r3, 19408 <for_each_recur_alarm_callback+0x20>
   19400:	6823      	ldr	r3, [r4, #0]
   19402:	f043 0301 	orr.w	r3, r3, #1
   19406:	6023      	str	r3, [r4, #0]
   19408:	2001      	movs	r0, #1
   1940a:	b002      	add	sp, #8
   1940c:	bd10      	pop	{r4, pc}

0001940e <for_each_alarm_callback>:
for_each_alarm_callback():
   1940e:	b530      	push	{r4, r5, lr}
   19410:	4604      	mov	r4, r0
   19412:	b085      	sub	sp, #20
   19414:	a801      	add	r0, sp, #4
   19416:	460d      	mov	r5, r1
   19418:	f7f7 fb64 	bl	10ae4 <rtc_gettime>
   1941c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   19420:	7922      	ldrb	r2, [r4, #4]
   19422:	f003 031f 	and.w	r3, r3, #31
   19426:	429a      	cmp	r2, r3
   19428:	d11c      	bne.n	19464 <for_each_alarm_callback+0x56>
   1942a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1942e:	7962      	ldrb	r2, [r4, #5]
   19430:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   19434:	429a      	cmp	r2, r3
   19436:	d115      	bne.n	19464 <for_each_alarm_callback+0x56>
   19438:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1943c:	79a2      	ldrb	r2, [r4, #6]
   1943e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   19442:	429a      	cmp	r2, r3
   19444:	d10e      	bne.n	19464 <for_each_alarm_callback+0x56>
   19446:	6820      	ldr	r0, [r4, #0]
   19448:	2300      	movs	r3, #0
   1944a:	aa04      	add	r2, sp, #16
   1944c:	f842 3d10 	str.w	r3, [r2, #-16]!
   19450:	4619      	mov	r1, r3
   19452:	6800      	ldr	r0, [r0, #0]
   19454:	f001 fbc6 	bl	1abe4 <xQueueGenericSendFromISR>
   19458:	9b00      	ldr	r3, [sp, #0]
   1945a:	b11b      	cbz	r3, 19464 <for_each_alarm_callback+0x56>
   1945c:	682b      	ldr	r3, [r5, #0]
   1945e:	f043 0301 	orr.w	r3, r3, #1
   19462:	602b      	str	r3, [r5, #0]
   19464:	2001      	movs	r0, #1
   19466:	b005      	add	sp, #20
   19468:	bd30      	pop	{r4, r5, pc}
   1946a:	ffff b530 	vsli.32	d27, d16, #31

0001946c <RTC_IRQHandler>:
RTC_IRQHandler():
   1946c:	b530      	push	{r4, r5, lr}
   1946e:	4a22      	ldr	r2, [pc, #136]	; (194f8 <RTC_IRQHandler+0x8c>)
   19470:	b087      	sub	sp, #28
   19472:	7813      	ldrb	r3, [r2, #0]
   19474:	4c21      	ldr	r4, [pc, #132]	; (194fc <RTC_IRQHandler+0x90>)
   19476:	f043 0301 	orr.w	r3, r3, #1
   1947a:	7013      	strb	r3, [r2, #0]
   1947c:	2500      	movs	r5, #0
   1947e:	a803      	add	r0, sp, #12
   19480:	9502      	str	r5, [sp, #8]
   19482:	f7f7 fb2f 	bl	10ae4 <rtc_gettime>
   19486:	462b      	mov	r3, r5
   19488:	9500      	str	r5, [sp, #0]
   1948a:	aa02      	add	r2, sp, #8
   1948c:	491c      	ldr	r1, [pc, #112]	; (19500 <RTC_IRQHandler+0x94>)
   1948e:	6820      	ldr	r0, [r4, #0]
   19490:	f7ff fe0e 	bl	190b0 <c_list_for_each_elm>
   19494:	f89d 300c 	ldrb.w	r3, [sp, #12]
   19498:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   1949c:	d11b      	bne.n	194d6 <RTC_IRQHandler+0x6a>
   1949e:	9300      	str	r3, [sp, #0]
   194a0:	aa02      	add	r2, sp, #8
   194a2:	4917      	ldr	r1, [pc, #92]	; (19500 <RTC_IRQHandler+0x94>)
   194a4:	6860      	ldr	r0, [r4, #4]
   194a6:	f7ff fe03 	bl	190b0 <c_list_for_each_elm>
   194aa:	f89d 300d 	ldrb.w	r3, [sp, #13]
   194ae:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   194b2:	d110      	bne.n	194d6 <RTC_IRQHandler+0x6a>
   194b4:	9300      	str	r3, [sp, #0]
   194b6:	aa02      	add	r2, sp, #8
   194b8:	4911      	ldr	r1, [pc, #68]	; (19500 <RTC_IRQHandler+0x94>)
   194ba:	68a0      	ldr	r0, [r4, #8]
   194bc:	f7ff fdf8 	bl	190b0 <c_list_for_each_elm>
   194c0:	f89d 300e 	ldrb.w	r3, [sp, #14]
   194c4:	f013 031f 	ands.w	r3, r3, #31
   194c8:	d105      	bne.n	194d6 <RTC_IRQHandler+0x6a>
   194ca:	9300      	str	r3, [sp, #0]
   194cc:	aa02      	add	r2, sp, #8
   194ce:	490c      	ldr	r1, [pc, #48]	; (19500 <RTC_IRQHandler+0x94>)
   194d0:	68e0      	ldr	r0, [r4, #12]
   194d2:	f7ff fded 	bl	190b0 <c_list_for_each_elm>
   194d6:	2300      	movs	r3, #0
   194d8:	480a      	ldr	r0, [pc, #40]	; (19504 <RTC_IRQHandler+0x98>)
   194da:	9300      	str	r3, [sp, #0]
   194dc:	aa02      	add	r2, sp, #8
   194de:	490a      	ldr	r1, [pc, #40]	; (19508 <RTC_IRQHandler+0x9c>)
   194e0:	6800      	ldr	r0, [r0, #0]
   194e2:	f7ff fde5 	bl	190b0 <c_list_for_each_elm>
   194e6:	9b02      	ldr	r3, [sp, #8]
   194e8:	b11b      	cbz	r3, 194f2 <RTC_IRQHandler+0x86>
   194ea:	4b08      	ldr	r3, [pc, #32]	; (1950c <RTC_IRQHandler+0xa0>)
   194ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   194f0:	601a      	str	r2, [r3, #0]
   194f2:	b007      	add	sp, #28
   194f4:	bd30      	pop	{r4, r5, pc}
   194f6:	bf00      	nop
   194f8:	40024000 	.word	0x40024000
   194fc:	2007c590 	.word	0x2007c590
   19500:	000193e9 	.word	0x000193e9
   19504:	2007c5a0 	.word	0x2007c5a0
   19508:	0001940f 	.word	0x0001940f
   1950c:	e000ed04 	.word	0xe000ed04

00019510 <u0_dbg_put>:
u0_dbg_put():
   19510:	b510      	push	{r4, lr}
   19512:	4604      	mov	r4, r0
   19514:	f000 fb04 	bl	19b20 <vPortEnterCritical>
   19518:	3c01      	subs	r4, #1
   1951a:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   1951e:	b110      	cbz	r0, 19526 <u0_dbg_put+0x16>
   19520:	f001 ffc4 	bl	1b4ac <uart0_putchar>
   19524:	e7f9      	b.n	1951a <u0_dbg_put+0xa>
   19526:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1952a:	f000 bb0b 	b.w	19b44 <vPortExitCritical>

0001952e <u0_dbg_printf>:
u0_dbg_printf():
   1952e:	b40f      	push	{r0, r1, r2, r3}
   19530:	b570      	push	{r4, r5, r6, lr}
   19532:	b0c2      	sub	sp, #264	; 0x108
   19534:	ac46      	add	r4, sp, #280	; 0x118
   19536:	f854 6b04 	ldr.w	r6, [r4], #4
   1953a:	f44f 7580 	mov.w	r5, #256	; 0x100
   1953e:	462a      	mov	r2, r5
   19540:	2100      	movs	r1, #0
   19542:	a802      	add	r0, sp, #8
   19544:	f003 ff09 	bl	1d35a <memset>
   19548:	4623      	mov	r3, r4
   1954a:	4632      	mov	r2, r6
   1954c:	4629      	mov	r1, r5
   1954e:	a802      	add	r0, sp, #8
   19550:	9401      	str	r4, [sp, #4]
   19552:	f006 fdeb 	bl	2012c <vsniprintf>
   19556:	4604      	mov	r4, r0
   19558:	a802      	add	r0, sp, #8
   1955a:	f7ff ffd9 	bl	19510 <u0_dbg_put>
   1955e:	4620      	mov	r0, r4
   19560:	b042      	add	sp, #264	; 0x108
   19562:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   19566:	b004      	add	sp, #16
   19568:	4770      	bx	lr
   1956a:	ffff b537 	vsli.32	d27, d23, #31

0001956c <logger_get_buffer_ptr>:
logger_get_buffer_ptr():
   1956c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1956e:	2300      	movs	r3, #0
   19570:	ac02      	add	r4, sp, #8
   19572:	f844 3d04 	str.w	r3, [r4, #-4]!
   19576:	4d0c      	ldr	r5, [pc, #48]	; (195a8 <logger_get_buffer_ptr+0x3c>)
   19578:	b910      	cbnz	r0, 19580 <logger_get_buffer_ptr+0x14>
   1957a:	4603      	mov	r3, r0
   1957c:	4602      	mov	r2, r0
   1957e:	e00c      	b.n	1959a <logger_get_buffer_ptr+0x2e>
   19580:	220a      	movs	r2, #10
   19582:	4621      	mov	r1, r4
   19584:	6828      	ldr	r0, [r5, #0]
   19586:	f001 fb68 	bl	1ac5a <xQueueGenericReceive>
   1958a:	4603      	mov	r3, r0
   1958c:	b948      	cbnz	r0, 195a2 <logger_get_buffer_ptr+0x36>
   1958e:	4907      	ldr	r1, [pc, #28]	; (195ac <logger_get_buffer_ptr+0x40>)
   19590:	880a      	ldrh	r2, [r1, #0]
   19592:	3201      	adds	r2, #1
   19594:	800a      	strh	r2, [r1, #0]
   19596:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1959a:	4621      	mov	r1, r4
   1959c:	6828      	ldr	r0, [r5, #0]
   1959e:	f001 fb5c 	bl	1ac5a <xQueueGenericReceive>
   195a2:	9801      	ldr	r0, [sp, #4]
   195a4:	b003      	add	sp, #12
   195a6:	bd30      	pop	{r4, r5, pc}
   195a8:	2007c5c0 	.word	0x2007c5c0
   195ac:	2007c5aa 	.word	0x2007c5aa

000195b0 <logger_write_to_file>:
logger_write_to_file():
   195b0:	b5f0      	push	{r4, r5, r6, r7, lr}
   195b2:	2400      	movs	r4, #0
   195b4:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   195b8:	460d      	mov	r5, r1
   195ba:	4607      	mov	r7, r0
   195bc:	9402      	str	r4, [sp, #8]
   195be:	f001 fea9 	bl	1b314 <sys_get_uptime_us>
   195c2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   195c6:	2300      	movs	r3, #0
   195c8:	f003 face 	bl	1cb68 <__aeabi_uldivmod>
   195cc:	f44f 7209 	mov.w	r2, #548	; 0x224
   195d0:	4606      	mov	r6, r0
   195d2:	4621      	mov	r1, r4
   195d4:	a803      	add	r0, sp, #12
   195d6:	f003 fec0 	bl	1d35a <memset>
   195da:	b1dd      	cbz	r5, 19614 <logger_write_to_file+0x64>
   195dc:	2212      	movs	r2, #18
   195de:	491d      	ldr	r1, [pc, #116]	; (19654 <logger_write_to_file+0xa4>)
   195e0:	a803      	add	r0, sp, #12
   195e2:	f7fa f9a9 	bl	13938 <f_open>
   195e6:	4604      	mov	r4, r0
   195e8:	b980      	cbnz	r0, 1960c <logger_write_to_file+0x5c>
   195ea:	9906      	ldr	r1, [sp, #24]
   195ec:	a803      	add	r0, sp, #12
   195ee:	f7fa fc1e 	bl	13e2e <f_lseek>
   195f2:	4604      	mov	r4, r0
   195f4:	b930      	cbnz	r0, 19604 <logger_write_to_file+0x54>
   195f6:	ab02      	add	r3, sp, #8
   195f8:	462a      	mov	r2, r5
   195fa:	4639      	mov	r1, r7
   195fc:	a803      	add	r0, sp, #12
   195fe:	f7fa faed 	bl	13bdc <f_write>
   19602:	4604      	mov	r4, r0
   19604:	a803      	add	r0, sp, #12
   19606:	f7fa fc00 	bl	13e0a <f_close>
   1960a:	e004      	b.n	19616 <logger_write_to_file+0x66>
   1960c:	4812      	ldr	r0, [pc, #72]	; (19658 <logger_write_to_file+0xa8>)
   1960e:	f005 f831 	bl	1e674 <iprintf>
   19612:	e000      	b.n	19616 <logger_write_to_file+0x66>
   19614:	462c      	mov	r4, r5
   19616:	f001 fe7d 	bl	1b314 <sys_get_uptime_us>
   1961a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1961e:	2300      	movs	r3, #0
   19620:	f003 faa2 	bl	1cb68 <__aeabi_uldivmod>
   19624:	4b0d      	ldr	r3, [pc, #52]	; (1965c <logger_write_to_file+0xac>)
   19626:	1b80      	subs	r0, r0, r6
   19628:	881a      	ldrh	r2, [r3, #0]
   1962a:	4290      	cmp	r0, r2
   1962c:	9a02      	ldr	r2, [sp, #8]
   1962e:	bf88      	it	hi
   19630:	8018      	strhhi	r0, [r3, #0]
   19632:	4295      	cmp	r5, r2
   19634:	bf0c      	ite	eq
   19636:	2601      	moveq	r6, #1
   19638:	2600      	movne	r6, #0
   1963a:	d006      	beq.n	1964a <logger_write_to_file+0x9a>
   1963c:	9b05      	ldr	r3, [sp, #20]
   1963e:	4621      	mov	r1, r4
   19640:	9300      	str	r3, [sp, #0]
   19642:	4807      	ldr	r0, [pc, #28]	; (19660 <logger_write_to_file+0xb0>)
   19644:	462b      	mov	r3, r5
   19646:	f005 f815 	bl	1e674 <iprintf>
   1964a:	4630      	mov	r0, r6
   1964c:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   19650:	bdf0      	pop	{r4, r5, r6, r7, pc}
   19652:	bf00      	nop
   19654:	00025dc4 	.word	0x00025dc4
   19658:	00025dce 	.word	0x00025dce
   1965c:	2007c5a8 	.word	0x2007c5a8
   19660:	00025de2 	.word	0x00025de2

00019664 <logger_task>:
logger_task():
   19664:	4b2f      	ldr	r3, [pc, #188]	; (19724 <logger_task+0xc0>)
   19666:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1966a:	681d      	ldr	r5, [r3, #0]
   1966c:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 1972c <logger_task+0xc8>
   19670:	462e      	mov	r6, r5
   19672:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 19730 <logger_task+0xcc>
   19676:	f505 6880 	add.w	r8, r5, #1024	; 0x400
   1967a:	af02      	add	r7, sp, #8
   1967c:	2300      	movs	r3, #0
   1967e:	f847 3d04 	str.w	r3, [r7, #-4]!
   19682:	f64e 2260 	movw	r2, #60000	; 0xea60
   19686:	4639      	mov	r1, r7
   19688:	f8d9 0000 	ldr.w	r0, [r9]
   1968c:	f001 fae5 	bl	1ac5a <xQueueGenericReceive>
   19690:	b108      	cbz	r0, 19696 <logger_task+0x32>
   19692:	9b01      	ldr	r3, [sp, #4]
   19694:	b92b      	cbnz	r3, 196a2 <logger_task+0x3e>
   19696:	1b71      	subs	r1, r6, r5
   19698:	4628      	mov	r0, r5
   1969a:	f7ff ff89 	bl	195b0 <logger_write_to_file>
   1969e:	462e      	mov	r6, r5
   196a0:	e7eb      	b.n	1967a <logger_task+0x16>
   196a2:	f8d9 0000 	ldr.w	r0, [r9]
   196a6:	f001 fb83 	bl	1adb0 <uxQueueMessagesWaiting>
   196aa:	f8ba 3000 	ldrh.w	r3, [sl]
   196ae:	9c01      	ldr	r4, [sp, #4]
   196b0:	3001      	adds	r0, #1
   196b2:	4298      	cmp	r0, r3
   196b4:	bf88      	it	hi
   196b6:	f8aa 0000 	strhhi.w	r0, [sl]
   196ba:	4620      	mov	r0, r4
   196bc:	f005 fb4d 	bl	1ed5a <strlen>
   196c0:	230a      	movs	r3, #10
   196c2:	5423      	strb	r3, [r4, r0]
   196c4:	f100 0b01 	add.w	fp, r0, #1
   196c8:	9a01      	ldr	r2, [sp, #4]
   196ca:	2100      	movs	r1, #0
   196cc:	eb06 040b 	add.w	r4, r6, fp
   196d0:	f802 100b 	strb.w	r1, [r2, fp]
   196d4:	45a0      	cmp	r8, r4
   196d6:	9901      	ldr	r1, [sp, #4]
   196d8:	d816      	bhi.n	19708 <logger_task+0xa4>
   196da:	ebc6 0208 	rsb	r2, r6, r8
   196de:	4630      	mov	r0, r6
   196e0:	f003 fe15 	bl	1d30e <memcpy>
   196e4:	ebc8 0404 	rsb	r4, r8, r4
   196e8:	f44f 6180 	mov.w	r1, #1024	; 0x400
   196ec:	4628      	mov	r0, r5
   196ee:	f7ff ff5f 	bl	195b0 <logger_write_to_file>
   196f2:	b13c      	cbz	r4, 19704 <logger_task+0xa0>
   196f4:	9901      	ldr	r1, [sp, #4]
   196f6:	ebc4 030b 	rsb	r3, r4, fp
   196fa:	4622      	mov	r2, r4
   196fc:	4419      	add	r1, r3
   196fe:	4628      	mov	r0, r5
   19700:	f003 fe05 	bl	1d30e <memcpy>
   19704:	442c      	add	r4, r5
   19706:	e003      	b.n	19710 <logger_task+0xac>
   19708:	465a      	mov	r2, fp
   1970a:	4630      	mov	r0, r6
   1970c:	f003 fdff 	bl	1d30e <memcpy>
   19710:	4805      	ldr	r0, [pc, #20]	; (19728 <logger_task+0xc4>)
   19712:	2300      	movs	r3, #0
   19714:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19718:	4639      	mov	r1, r7
   1971a:	6800      	ldr	r0, [r0, #0]
   1971c:	f001 f9c6 	bl	1aaac <xQueueGenericSend>
   19720:	4626      	mov	r6, r4
   19722:	e7aa      	b.n	1967a <logger_task+0x16>
   19724:	2007c5bc 	.word	0x2007c5bc
   19728:	2007c5c0 	.word	0x2007c5c0
   1972c:	2007c5a4 	.word	0x2007c5a4
   19730:	2007c5c4 	.word	0x2007c5c4

00019734 <logger_write_log_message>:
logger_write_log_message():
   19734:	b573      	push	{r0, r1, r4, r5, r6, lr}
   19736:	ac02      	add	r4, sp, #8
   19738:	f844 0d04 	str.w	r0, [r4, #-4]!
   1973c:	460d      	mov	r5, r1
   1973e:	b129      	cbz	r1, 1974c <logger_write_log_message+0x18>
   19740:	2300      	movs	r3, #0
   19742:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19746:	4621      	mov	r1, r4
   19748:	480a      	ldr	r0, [pc, #40]	; (19774 <logger_write_log_message+0x40>)
   1974a:	e00e      	b.n	1976a <logger_write_log_message+0x36>
   1974c:	4606      	mov	r6, r0
   1974e:	f005 fb04 	bl	1ed5a <strlen>
   19752:	230a      	movs	r3, #10
   19754:	5433      	strb	r3, [r6, r0]
   19756:	9b01      	ldr	r3, [sp, #4]
   19758:	1c41      	adds	r1, r0, #1
   1975a:	545d      	strb	r5, [r3, r1]
   1975c:	9801      	ldr	r0, [sp, #4]
   1975e:	f7ff ff27 	bl	195b0 <logger_write_to_file>
   19762:	462b      	mov	r3, r5
   19764:	462a      	mov	r2, r5
   19766:	4621      	mov	r1, r4
   19768:	4803      	ldr	r0, [pc, #12]	; (19778 <logger_write_log_message+0x44>)
   1976a:	6800      	ldr	r0, [r0, #0]
   1976c:	f001 f99e 	bl	1aaac <xQueueGenericSend>
   19770:	b002      	add	sp, #8
   19772:	bd70      	pop	{r4, r5, r6, pc}
   19774:	2007c5a4 	.word	0x2007c5a4
   19778:	2007c5c0 	.word	0x2007c5c0

0001977c <logger_send_flush_request>:
logger_send_flush_request():
   1977c:	b507      	push	{r0, r1, r2, lr}
   1977e:	f000 ff45 	bl	1a60c <xTaskGetSchedulerState>
   19782:	2802      	cmp	r0, #2
   19784:	d10c      	bne.n	197a0 <logger_send_flush_request+0x24>
   19786:	4b08      	ldr	r3, [pc, #32]	; (197a8 <logger_send_flush_request+0x2c>)
   19788:	681b      	ldr	r3, [r3, #0]
   1978a:	b14b      	cbz	r3, 197a0 <logger_send_flush_request+0x24>
   1978c:	4807      	ldr	r0, [pc, #28]	; (197ac <logger_send_flush_request+0x30>)
   1978e:	2300      	movs	r3, #0
   19790:	a902      	add	r1, sp, #8
   19792:	f841 3d04 	str.w	r3, [r1, #-4]!
   19796:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1979a:	6800      	ldr	r0, [r0, #0]
   1979c:	f001 f986 	bl	1aaac <xQueueGenericSend>
   197a0:	b003      	add	sp, #12
   197a2:	f85d fb04 	ldr.w	pc, [sp], #4
   197a6:	bf00      	nop
   197a8:	2007c5bc 	.word	0x2007c5bc
   197ac:	2007c5a4 	.word	0x2007c5a4

000197b0 <logger_get_logged_call_count>:
logger_get_logged_call_count():
   197b0:	2803      	cmp	r0, #3
   197b2:	bf9a      	itte	ls
   197b4:	4b02      	ldrls	r3, [pc, #8]	; (197c0 <logger_get_logged_call_count+0x10>)
   197b6:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
   197ba:	2000      	movhi	r0, #0
   197bc:	4770      	bx	lr
   197be:	bf00      	nop
   197c0:	2007c5ac 	.word	0x2007c5ac

000197c4 <logger_get_blocked_call_count>:
logger_get_blocked_call_count():
   197c4:	4b01      	ldr	r3, [pc, #4]	; (197cc <logger_get_blocked_call_count+0x8>)
   197c6:	8818      	ldrh	r0, [r3, #0]
   197c8:	4770      	bx	lr
   197ca:	bf00      	nop
   197cc:	2007c5aa 	.word	0x2007c5aa

000197d0 <logger_get_highest_file_write_time_ms>:
logger_get_highest_file_write_time_ms():
   197d0:	4b01      	ldr	r3, [pc, #4]	; (197d8 <logger_get_highest_file_write_time_ms+0x8>)
   197d2:	8818      	ldrh	r0, [r3, #0]
   197d4:	4770      	bx	lr
   197d6:	bf00      	nop
   197d8:	2007c5a8 	.word	0x2007c5a8

000197dc <logger_get_num_buffers_watermark>:
logger_get_num_buffers_watermark():
   197dc:	4b01      	ldr	r3, [pc, #4]	; (197e4 <logger_get_num_buffers_watermark+0x8>)
   197de:	8818      	ldrh	r0, [r3, #0]
   197e0:	4770      	bx	lr
   197e2:	bf00      	nop
   197e4:	2007c5c4 	.word	0x2007c5c4

000197e8 <logger_init>:
logger_init():
   197e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   197ec:	4d2e      	ldr	r5, [pc, #184]	; (198a8 <logger_init+0xc0>)
   197ee:	b086      	sub	sp, #24
   197f0:	682c      	ldr	r4, [r5, #0]
   197f2:	4680      	mov	r8, r0
   197f4:	2c00      	cmp	r4, #0
   197f6:	d154      	bne.n	198a2 <logger_init+0xba>
   197f8:	f44f 6080 	mov.w	r0, #1024	; 0x400
   197fc:	9405      	str	r4, [sp, #20]
   197fe:	f003 fd59 	bl	1d2b4 <malloc>
   19802:	4e2a      	ldr	r6, [pc, #168]	; (198ac <logger_init+0xc4>)
   19804:	6028      	str	r0, [r5, #0]
   19806:	b940      	cbnz	r0, 1981a <logger_init+0x32>
   19808:	6828      	ldr	r0, [r5, #0]
   1980a:	2800      	cmp	r0, #0
   1980c:	d035      	beq.n	1987a <logger_init+0x92>
   1980e:	f003 fd59 	bl	1d2c4 <free>
   19812:	4b25      	ldr	r3, [pc, #148]	; (198a8 <logger_init+0xc0>)
   19814:	2200      	movs	r2, #0
   19816:	601a      	str	r2, [r3, #0]
   19818:	e02f      	b.n	1987a <logger_init+0x92>
   1981a:	4622      	mov	r2, r4
   1981c:	2104      	movs	r1, #4
   1981e:	200a      	movs	r0, #10
   19820:	f001 f913 	bl	1aa4a <xQueueGenericCreate>
   19824:	4f22      	ldr	r7, [pc, #136]	; (198b0 <logger_init+0xc8>)
   19826:	4622      	mov	r2, r4
   19828:	6038      	str	r0, [r7, #0]
   1982a:	2104      	movs	r1, #4
   1982c:	200a      	movs	r0, #10
   1982e:	f001 f90c 	bl	1aa4a <xQueueGenericCreate>
   19832:	683b      	ldr	r3, [r7, #0]
   19834:	6030      	str	r0, [r6, #0]
   19836:	2b00      	cmp	r3, #0
   19838:	d0e6      	beq.n	19808 <logger_init+0x20>
   1983a:	2800      	cmp	r0, #0
   1983c:	d0e4      	beq.n	19808 <logger_init+0x20>
   1983e:	240a      	movs	r4, #10
   19840:	2096      	movs	r0, #150	; 0x96
   19842:	f003 fd37 	bl	1d2b4 <malloc>
   19846:	9005      	str	r0, [sp, #20]
   19848:	2800      	cmp	r0, #0
   1984a:	d0dd      	beq.n	19808 <logger_init+0x20>
   1984c:	2300      	movs	r3, #0
   1984e:	461a      	mov	r2, r3
   19850:	a905      	add	r1, sp, #20
   19852:	6830      	ldr	r0, [r6, #0]
   19854:	f001 f92a 	bl	1aaac <xQueueGenericSend>
   19858:	3c01      	subs	r4, #1
   1985a:	d1f1      	bne.n	19840 <logger_init+0x58>
   1985c:	9403      	str	r4, [sp, #12]
   1985e:	9402      	str	r4, [sp, #8]
   19860:	9401      	str	r4, [sp, #4]
   19862:	f8cd 8000 	str.w	r8, [sp]
   19866:	4623      	mov	r3, r4
   19868:	f44f 72c0 	mov.w	r2, #384	; 0x180
   1986c:	4911      	ldr	r1, [pc, #68]	; (198b4 <logger_init+0xcc>)
   1986e:	4812      	ldr	r0, [pc, #72]	; (198b8 <logger_init+0xd0>)
   19870:	f000 faa8 	bl	19dc4 <xTaskGenericCreate>
   19874:	2800      	cmp	r0, #0
   19876:	d0c7      	beq.n	19808 <logger_init+0x20>
   19878:	e013      	b.n	198a2 <logger_init+0xba>
   1987a:	6833      	ldr	r3, [r6, #0]
   1987c:	b91b      	cbnz	r3, 19886 <logger_init+0x9e>
   1987e:	480f      	ldr	r0, [pc, #60]	; (198bc <logger_init+0xd4>)
   19880:	f004 ff6a 	bl	1e758 <puts>
   19884:	e00d      	b.n	198a2 <logger_init+0xba>
   19886:	240a      	movs	r4, #10
   19888:	2300      	movs	r3, #0
   1988a:	461a      	mov	r2, r3
   1988c:	a905      	add	r1, sp, #20
   1988e:	6830      	ldr	r0, [r6, #0]
   19890:	f001 f9e3 	bl	1ac5a <xQueueGenericReceive>
   19894:	b110      	cbz	r0, 1989c <logger_init+0xb4>
   19896:	9805      	ldr	r0, [sp, #20]
   19898:	f003 fd14 	bl	1d2c4 <free>
   1989c:	3c01      	subs	r4, #1
   1989e:	d1f3      	bne.n	19888 <logger_init+0xa0>
   198a0:	e7ed      	b.n	1987e <logger_init+0x96>
   198a2:	b006      	add	sp, #24
   198a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   198a8:	2007c5bc 	.word	0x2007c5bc
   198ac:	2007c5c0 	.word	0x2007c5c0
   198b0:	2007c5a4 	.word	0x2007c5a4
   198b4:	00025e15 	.word	0x00025e15
   198b8:	00019665 	.word	0x00019665
   198bc:	00025e1c 	.word	0x00025e1c

000198c0 <logger_set_printf>:
logger_set_printf():
   198c0:	2301      	movs	r3, #1
   198c2:	fa03 f000 	lsl.w	r0, r3, r0
   198c6:	4b04      	ldr	r3, [pc, #16]	; (198d8 <logger_set_printf+0x18>)
   198c8:	781a      	ldrb	r2, [r3, #0]
   198ca:	b109      	cbz	r1, 198d0 <logger_set_printf+0x10>
   198cc:	4310      	orrs	r0, r2
   198ce:	e001      	b.n	198d4 <logger_set_printf+0x14>
   198d0:	ea22 0000 	bic.w	r0, r2, r0
   198d4:	7018      	strb	r0, [r3, #0]
   198d6:	4770      	bx	lr
   198d8:	2007c047 	.word	0x2007c047

000198dc <logger_log>:
logger_log():
   198dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198e0:	469a      	mov	sl, r3
   198e2:	4b44      	ldr	r3, [pc, #272]	; (199f4 <logger_log+0x118>)
   198e4:	b097      	sub	sp, #92	; 0x5c
   198e6:	681b      	ldr	r3, [r3, #0]
   198e8:	4606      	mov	r6, r0
   198ea:	460c      	mov	r4, r1
   198ec:	4615      	mov	r5, r2
   198ee:	2b00      	cmp	r3, #0
   198f0:	d07d      	beq.n	199ee <logger_log+0x112>
   198f2:	a80f      	add	r0, sp, #60	; 0x3c
   198f4:	f7f7 f8f6 	bl	10ae4 <rtc_gettime>
   198f8:	f001 fd0c 	bl	1b314 <sys_get_uptime_us>
   198fc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   19900:	2300      	movs	r3, #0
   19902:	f003 f931 	bl	1cb68 <__aeabi_uldivmod>
   19906:	4681      	mov	r9, r0
   19908:	f000 fe80 	bl	1a60c <xTaskGetSchedulerState>
   1990c:	4b3a      	ldr	r3, [pc, #232]	; (199f8 <logger_log+0x11c>)
   1990e:	1e82      	subs	r2, r0, #2
   19910:	f1d2 0800 	rsbs	r8, r2, #0
   19914:	af16      	add	r7, sp, #88	; 0x58
   19916:	eb48 0802 	adc.w	r8, r8, r2
   1991a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1991c:	e907 000f 	stmdb	r7, {r0, r1, r2, r3}
   19920:	b15c      	cbz	r4, 1993a <logger_log+0x5e>
   19922:	212f      	movs	r1, #47	; 0x2f
   19924:	4620      	mov	r0, r4
   19926:	f005 fa6b 	bl	1ee00 <strrchr>
   1992a:	b920      	cbnz	r0, 19936 <logger_log+0x5a>
   1992c:	215c      	movs	r1, #92	; 0x5c
   1992e:	4620      	mov	r0, r4
   19930:	f005 fa66 	bl	1ee00 <strrchr>
   19934:	b110      	cbz	r0, 1993c <logger_log+0x60>
   19936:	1c44      	adds	r4, r0, #1
   19938:	e000      	b.n	1993c <logger_log+0x60>
   1993a:	4c30      	ldr	r4, [pc, #192]	; (199fc <logger_log+0x120>)
   1993c:	f8df b0bc 	ldr.w	fp, [pc, #188]	; 199fc <logger_log+0x120>
   19940:	4640      	mov	r0, r8
   19942:	2d00      	cmp	r5, #0
   19944:	bf08      	it	eq
   19946:	465d      	moveq	r5, fp
   19948:	f7ff fe10 	bl	1956c <logger_get_buffer_ptr>
   1994c:	f89d 103e 	ldrb.w	r1, [sp, #62]	; 0x3e
   19950:	f895 c000 	ldrb.w	ip, [r5]
   19954:	f001 0e1f 	and.w	lr, r1, #31
   19958:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
   1995c:	f89d 2041 	ldrb.w	r2, [sp, #65]	; 0x41
   19960:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   19964:	910b      	str	r1, [sp, #44]	; 0x2c
   19966:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   1996a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   1996e:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   19972:	910c      	str	r1, [sp, #48]	; 0x30
   19974:	a916      	add	r1, sp, #88	; 0x58
   19976:	eb01 0186 	add.w	r1, r1, r6, lsl #2
   1997a:	f851 1c10 	ldr.w	r1, [r1, #-16]
   1997e:	f003 031f 	and.w	r3, r3, #31
   19982:	910d      	str	r1, [sp, #52]	; 0x34
   19984:	491e      	ldr	r1, [pc, #120]	; (19a00 <logger_log+0x124>)
   19986:	f8cd e000 	str.w	lr, [sp]
   1998a:	f1bc 0f00 	cmp.w	ip, #0
   1998e:	bf08      	it	eq
   19990:	4659      	moveq	r1, fp
   19992:	9107      	str	r1, [sp, #28]
   19994:	990d      	ldr	r1, [sp, #52]	; 0x34
   19996:	f002 020f 	and.w	r2, r2, #15
   1999a:	9104      	str	r1, [sp, #16]
   1999c:	990c      	ldr	r1, [sp, #48]	; 0x30
   1999e:	f8cd a020 	str.w	sl, [sp, #32]
   199a2:	9102      	str	r1, [sp, #8]
   199a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   199a6:	9506      	str	r5, [sp, #24]
   199a8:	9101      	str	r1, [sp, #4]
   199aa:	9405      	str	r4, [sp, #20]
   199ac:	4915      	ldr	r1, [pc, #84]	; (19a04 <logger_log+0x128>)
   199ae:	f8cd 900c 	str.w	r9, [sp, #12]
   199b2:	4607      	mov	r7, r0
   199b4:	f005 f8f0 	bl	1eb98 <siprintf>
   199b8:	ab21      	add	r3, sp, #132	; 0x84
   199ba:	f1c0 0195 	rsb	r1, r0, #149	; 0x95
   199be:	9a20      	ldr	r2, [sp, #128]	; 0x80
   199c0:	4438      	add	r0, r7
   199c2:	930e      	str	r3, [sp, #56]	; 0x38
   199c4:	f006 fbb2 	bl	2012c <vsniprintf>
   199c8:	4a0f      	ldr	r2, [pc, #60]	; (19a08 <logger_log+0x12c>)
   199ca:	4641      	mov	r1, r8
   199cc:	f852 3026 	ldr.w	r3, [r2, r6, lsl #2]
   199d0:	4638      	mov	r0, r7
   199d2:	3301      	adds	r3, #1
   199d4:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
   199d8:	f7ff feac 	bl	19734 <logger_write_log_message>
   199dc:	4b0b      	ldr	r3, [pc, #44]	; (19a0c <logger_log+0x130>)
   199de:	781b      	ldrb	r3, [r3, #0]
   199e0:	fa43 f606 	asr.w	r6, r3, r6
   199e4:	07f3      	lsls	r3, r6, #31
   199e6:	d502      	bpl.n	199ee <logger_log+0x112>
   199e8:	4638      	mov	r0, r7
   199ea:	f004 feb5 	bl	1e758 <puts>
   199ee:	b017      	add	sp, #92	; 0x5c
   199f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199f4:	2007c5bc 	.word	0x2007c5bc
   199f8:	00025db4 	.word	0x00025db4
   199fc:	000251e4 	.word	0x000251e4
   19a00:	00025c18 	.word	0x00025c18
   19a04:	00025e41 	.word	0x00025e41
   19a08:	2007c5ac 	.word	0x2007c5ac
   19a0c:	2007c047 	.word	0x2007c047

00019a10 <logger_log_raw>:
logger_log_raw():
   19a10:	b40f      	push	{r0, r1, r2, r3}
   19a12:	4b0e      	ldr	r3, [pc, #56]	; (19a4c <logger_log_raw+0x3c>)
   19a14:	b537      	push	{r0, r1, r2, r4, r5, lr}
   19a16:	681b      	ldr	r3, [r3, #0]
   19a18:	b193      	cbz	r3, 19a40 <logger_log_raw+0x30>
   19a1a:	f000 fdf7 	bl	1a60c <xTaskGetSchedulerState>
   19a1e:	1e83      	subs	r3, r0, #2
   19a20:	425c      	negs	r4, r3
   19a22:	415c      	adcs	r4, r3
   19a24:	4620      	mov	r0, r4
   19a26:	f7ff fda1 	bl	1956c <logger_get_buffer_ptr>
   19a2a:	4605      	mov	r5, r0
   19a2c:	ab07      	add	r3, sp, #28
   19a2e:	2195      	movs	r1, #149	; 0x95
   19a30:	9a06      	ldr	r2, [sp, #24]
   19a32:	9301      	str	r3, [sp, #4]
   19a34:	f006 fb7a 	bl	2012c <vsniprintf>
   19a38:	4621      	mov	r1, r4
   19a3a:	4628      	mov	r0, r5
   19a3c:	f7ff fe7a 	bl	19734 <logger_write_log_message>
   19a40:	b003      	add	sp, #12
   19a42:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   19a46:	b004      	add	sp, #16
   19a48:	4770      	bx	lr
   19a4a:	bf00      	nop
   19a4c:	2007c5bc 	.word	0x2007c5bc

00019a50 <vConfigureTimerForRunTimeStats>:
vConfigureTimerForRunTimeStats():
   19a50:	b508      	push	{r3, lr}
   19a52:	f001 fc5f 	bl	1b314 <sys_get_uptime_us>
   19a56:	4b02      	ldr	r3, [pc, #8]	; (19a60 <vConfigureTimerForRunTimeStats+0x10>)
   19a58:	e9c3 0100 	strd	r0, r1, [r3]
   19a5c:	bd08      	pop	{r3, pc}
   19a5e:	bf00      	nop
   19a60:	2007c5c8 	.word	0x2007c5c8

00019a64 <uxGetTimerForRunTimeStats>:
uxGetTimerForRunTimeStats():
   19a64:	b508      	push	{r3, lr}
   19a66:	f001 fc55 	bl	1b314 <sys_get_uptime_us>
   19a6a:	4b02      	ldr	r3, [pc, #8]	; (19a74 <uxGetTimerForRunTimeStats+0x10>)
   19a6c:	681b      	ldr	r3, [r3, #0]
   19a6e:	1ac0      	subs	r0, r0, r3
   19a70:	bd08      	pop	{r3, pc}
   19a72:	bf00      	nop
   19a74:	2007c5c8 	.word	0x2007c5c8

00019a78 <resetRunTimeCounter>:
resetRunTimeCounter():
   19a78:	b508      	push	{r3, lr}
   19a7a:	f001 fc4b 	bl	1b314 <sys_get_uptime_us>
   19a7e:	4b02      	ldr	r3, [pc, #8]	; (19a88 <resetRunTimeCounter+0x10>)
   19a80:	e9c3 0100 	strd	r0, r1, [r3]
   19a84:	bd08      	pop	{r3, pc}
   19a86:	bf00      	nop
   19a88:	2007c5c8 	.word	0x2007c5c8

00019a8c <prvPortStartFirstTask>:
prvPortStartFirstTask():
   19a8c:	4806      	ldr	r0, [pc, #24]	; (19aa8 <prvPortStartFirstTask+0x1c>)
   19a8e:	6800      	ldr	r0, [r0, #0]
   19a90:	6800      	ldr	r0, [r0, #0]
   19a92:	f380 8808 	msr	MSP, r0
   19a96:	b662      	cpsie	i
   19a98:	b661      	cpsie	f
   19a9a:	f3bf 8f4f 	dsb	sy
   19a9e:	f3bf 8f6f 	isb	sy
   19aa2:	df00      	svc	0
   19aa4:	bf00      	nop
$d():
   19aa6:	0000      	.short	0x0000
   19aa8:	e000ed08 	.word	0xe000ed08

00019aac <pxPortInitialiseStack>:
pxPortInitialiseStack():
   19aac:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   19ab0:	e900 000a 	stmdb	r0, {r1, r3}
   19ab4:	4b03      	ldr	r3, [pc, #12]	; (19ac4 <pxPortInitialiseStack+0x18>)
   19ab6:	f840 2c20 	str.w	r2, [r0, #-32]
   19aba:	f840 3c0c 	str.w	r3, [r0, #-12]
   19abe:	3840      	subs	r0, #64	; 0x40
   19ac0:	4770      	bx	lr
   19ac2:	bf00      	nop
   19ac4:	00019b19 	.word	0x00019b19

00019ac8 <vPortSVCHandler>:
vPortSVCHandler():
   19ac8:	4b07      	ldr	r3, [pc, #28]	; (19ae8 <pxCurrentTCBConst2>)
   19aca:	6819      	ldr	r1, [r3, #0]
   19acc:	6808      	ldr	r0, [r1, #0]
   19ace:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   19ad2:	f380 8809 	msr	PSP, r0
   19ad6:	f3bf 8f6f 	isb	sy
   19ada:	f04f 0000 	mov.w	r0, #0
   19ade:	f380 8811 	msr	BASEPRI, r0
   19ae2:	f04e 0e0d 	orr.w	lr, lr, #13
   19ae6:	4770      	bx	lr

00019ae8 <pxCurrentTCBConst2>:
   19ae8:	2007c6dc 	.word	0x2007c6dc

00019aec <vPortEndScheduler>:
vPortEndScheduler():
   19aec:	4770      	bx	lr
   19aee:	ffff 4b04 	vtbl.8	d20, {d15-d18}, d4

00019af0 <vPortYield>:
vPortYield():
   19af0:	4b04      	ldr	r3, [pc, #16]	; (19b04 <vPortYield+0x14>)
   19af2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   19af6:	601a      	str	r2, [r3, #0]
   19af8:	f3bf 8f4f 	dsb	sy
   19afc:	f3bf 8f6f 	isb	sy
   19b00:	4770      	bx	lr
   19b02:	bf00      	nop
   19b04:	e000ed04 	.word	0xe000ed04

00019b08 <ulPortSetInterruptMask>:
ulPortSetInterruptMask():
   19b08:	f3ef 8011 	mrs	r0, BASEPRI
   19b0c:	f04f 0110 	mov.w	r1, #16
   19b10:	f381 8811 	msr	BASEPRI, r1
   19b14:	4770      	bx	lr
   19b16:	2000      	movs	r0, #0

00019b18 <prvTaskExitError>:
prvTaskExitError():
   19b18:	b508      	push	{r3, lr}
   19b1a:	f7ff fff5 	bl	19b08 <ulPortSetInterruptMask>
   19b1e:	e7fe      	b.n	19b1e <prvTaskExitError+0x6>

00019b20 <vPortEnterCritical>:
vPortEnterCritical():
   19b20:	b508      	push	{r3, lr}
   19b22:	f7ff fff1 	bl	19b08 <ulPortSetInterruptMask>
   19b26:	4a04      	ldr	r2, [pc, #16]	; (19b38 <vPortEnterCritical+0x18>)
   19b28:	6813      	ldr	r3, [r2, #0]
   19b2a:	3301      	adds	r3, #1
   19b2c:	6013      	str	r3, [r2, #0]
   19b2e:	f3bf 8f4f 	dsb	sy
   19b32:	f3bf 8f6f 	isb	sy
   19b36:	bd08      	pop	{r3, pc}
   19b38:	2007c5d0 	.word	0x2007c5d0

00019b3c <vPortClearInterruptMask>:
vPortClearInterruptMask():
   19b3c:	f380 8811 	msr	BASEPRI, r0
   19b40:	4770      	bx	lr
   19b42:	ffff 4b03 	vtbl.8	d20, {d15-d18}, d3

00019b44 <vPortExitCritical>:
vPortExitCritical():
   19b44:	4b03      	ldr	r3, [pc, #12]	; (19b54 <vPortExitCritical+0x10>)
   19b46:	6818      	ldr	r0, [r3, #0]
   19b48:	3801      	subs	r0, #1
   19b4a:	6018      	str	r0, [r3, #0]
   19b4c:	b908      	cbnz	r0, 19b52 <vPortExitCritical+0xe>
   19b4e:	f7ff bff5 	b.w	19b3c <vPortClearInterruptMask>
   19b52:	4770      	bx	lr
   19b54:	2007c5d0 	.word	0x2007c5d0

00019b58 <xPortPendSVHandler>:
xPortPendSVHandler():
   19b58:	f3ef 8009 	mrs	r0, PSP
   19b5c:	f3bf 8f6f 	isb	sy
   19b60:	4b0d      	ldr	r3, [pc, #52]	; (19b98 <pxCurrentTCBConst>)
   19b62:	681a      	ldr	r2, [r3, #0]
   19b64:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   19b68:	6010      	str	r0, [r2, #0]
   19b6a:	e92d 4008 	stmdb	sp!, {r3, lr}
   19b6e:	f04f 0010 	mov.w	r0, #16
   19b72:	f380 8811 	msr	BASEPRI, r0
   19b76:	f000 fbe9 	bl	1a34c <vTaskSwitchContext>
   19b7a:	f04f 0000 	mov.w	r0, #0
   19b7e:	f380 8811 	msr	BASEPRI, r0
   19b82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   19b86:	6819      	ldr	r1, [r3, #0]
   19b88:	6808      	ldr	r0, [r1, #0]
   19b8a:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   19b8e:	f380 8809 	msr	PSP, r0
   19b92:	f3bf 8f6f 	isb	sy
   19b96:	4770      	bx	lr

00019b98 <pxCurrentTCBConst>:
   19b98:	2007c6dc 	.word	0x2007c6dc

00019b9c <xPortSysTickHandler>:
xPortSysTickHandler():
   19b9c:	b508      	push	{r3, lr}
   19b9e:	f7ff ffb3 	bl	19b08 <ulPortSetInterruptMask>
   19ba2:	f000 fa3b 	bl	1a01c <xTaskIncrementTick>
   19ba6:	b118      	cbz	r0, 19bb0 <xPortSysTickHandler+0x14>
   19ba8:	4b04      	ldr	r3, [pc, #16]	; (19bbc <xPortSysTickHandler+0x20>)
   19baa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   19bae:	601a      	str	r2, [r3, #0]
   19bb0:	2000      	movs	r0, #0
   19bb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   19bb6:	f7ff bfc1 	b.w	19b3c <vPortClearInterruptMask>
   19bba:	bf00      	nop
   19bbc:	e000ed04 	.word	0xe000ed04

00019bc0 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
   19bc0:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   19bc4:	4b02      	ldr	r3, [pc, #8]	; (19bd0 <vPortSetupTimerInterrupt+0x10>)
   19bc6:	601a      	str	r2, [r3, #0]
   19bc8:	2207      	movs	r2, #7
   19bca:	f843 2c04 	str.w	r2, [r3, #-4]
   19bce:	4770      	bx	lr
   19bd0:	e000e014 	.word	0xe000e014

00019bd4 <xPortStartScheduler>:
xPortStartScheduler():
   19bd4:	b508      	push	{r3, lr}
   19bd6:	4b09      	ldr	r3, [pc, #36]	; (19bfc <xPortStartScheduler+0x28>)
   19bd8:	681a      	ldr	r2, [r3, #0]
   19bda:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   19bde:	601a      	str	r2, [r3, #0]
   19be0:	681a      	ldr	r2, [r3, #0]
   19be2:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   19be6:	601a      	str	r2, [r3, #0]
   19be8:	f7ff ffea 	bl	19bc0 <vPortSetupTimerInterrupt>
   19bec:	4b04      	ldr	r3, [pc, #16]	; (19c00 <xPortStartScheduler+0x2c>)
   19bee:	2200      	movs	r2, #0
   19bf0:	601a      	str	r2, [r3, #0]
   19bf2:	f7ff ff4b 	bl	19a8c <prvPortStartFirstTask>
   19bf6:	f7ff ff87 	bl	19b08 <ulPortSetInterruptMask>
   19bfa:	e7fe      	b.n	19bfa <xPortStartScheduler+0x26>
   19bfc:	e000ed20 	.word	0xe000ed20
   19c00:	2007c5d0 	.word	0x2007c5d0

00019c04 <vApplicationIdleHook>:
vApplicationIdleHook():
   19c04:	bf30      	wfi
   19c06:	4770      	bx	lr

00019c08 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
   19c08:	b510      	push	{r4, lr}
   19c0a:	460c      	mov	r4, r1
   19c0c:	4809      	ldr	r0, [pc, #36]	; (19c34 <vApplicationStackOverflowHook+0x2c>)
   19c0e:	f7ff fc7f 	bl	19510 <u0_dbg_put>
   19c12:	4620      	mov	r0, r4
   19c14:	f7ff fc7c 	bl	19510 <u0_dbg_put>
   19c18:	4807      	ldr	r0, [pc, #28]	; (19c38 <vApplicationStackOverflowHook+0x30>)
   19c1a:	f7ff fc79 	bl	19510 <u0_dbg_put>
   19c1e:	4807      	ldr	r0, [pc, #28]	; (19c3c <vApplicationStackOverflowHook+0x34>)
   19c20:	f7fe fdfe 	bl	18820 <delay_us>
   19c24:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   19c28:	22aa      	movs	r2, #170	; 0xaa
   19c2a:	721a      	strb	r2, [r3, #8]
   19c2c:	2200      	movs	r2, #0
   19c2e:	701a      	strb	r2, [r3, #0]
   19c30:	bd10      	pop	{r4, pc}
   19c32:	bf00      	nop
   19c34:	00025e68 	.word	0x00025e68
   19c38:	00025e91 	.word	0x00025e91
   19c3c:	002dc6c0 	.word	0x002dc6c0

00019c40 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
   19c40:	b508      	push	{r3, lr}
   19c42:	4806      	ldr	r0, [pc, #24]	; (19c5c <vApplicationMallocFailedHook+0x1c>)
   19c44:	f7ff fc64 	bl	19510 <u0_dbg_put>
   19c48:	4805      	ldr	r0, [pc, #20]	; (19c60 <vApplicationMallocFailedHook+0x20>)
   19c4a:	f7fe fde9 	bl	18820 <delay_us>
   19c4e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   19c52:	22aa      	movs	r2, #170	; 0xaa
   19c54:	721a      	strb	r2, [r3, #8]
   19c56:	2200      	movs	r2, #0
   19c58:	701a      	strb	r2, [r3, #0]
   19c5a:	bd08      	pop	{r3, pc}
   19c5c:	00025ebd 	.word	0x00025ebd
   19c60:	002dc6c0 	.word	0x002dc6c0

00019c64 <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
   19c64:	6843      	ldr	r3, [r0, #4]
   19c66:	f100 0208 	add.w	r2, r0, #8
   19c6a:	685b      	ldr	r3, [r3, #4]
   19c6c:	b530      	push	{r4, r5, lr}
   19c6e:	4293      	cmp	r3, r2
   19c70:	6043      	str	r3, [r0, #4]
   19c72:	bf08      	it	eq
   19c74:	6853      	ldreq	r3, [r2, #4]
   19c76:	f04f 0500 	mov.w	r5, #0
   19c7a:	bf08      	it	eq
   19c7c:	6043      	streq	r3, [r0, #4]
   19c7e:	6843      	ldr	r3, [r0, #4]
   19c80:	68dc      	ldr	r4, [r3, #12]
   19c82:	685b      	ldr	r3, [r3, #4]
   19c84:	429a      	cmp	r2, r3
   19c86:	bf08      	it	eq
   19c88:	68c3      	ldreq	r3, [r0, #12]
   19c8a:	68d9      	ldr	r1, [r3, #12]
   19c8c:	428c      	cmp	r4, r1
   19c8e:	64cd      	str	r5, [r1, #76]	; 0x4c
   19c90:	d1f7      	bne.n	19c82 <prvResetRunTimeStatsInList+0x1e>
   19c92:	6043      	str	r3, [r0, #4]
   19c94:	bd30      	pop	{r4, r5, pc}
   19c96:	ffff b508 	vabal.u<illegal width 64>	<illegal reg q13.5>, d15, d8

00019c98 <prvIdleTask>:
prvIdleTask():
   19c98:	b508      	push	{r3, lr}
   19c9a:	4c04      	ldr	r4, [pc, #16]	; (19cac <prvIdleTask+0x14>)
   19c9c:	6823      	ldr	r3, [r4, #0]
   19c9e:	2b01      	cmp	r3, #1
   19ca0:	d901      	bls.n	19ca6 <prvIdleTask+0xe>
   19ca2:	f7ff ff25 	bl	19af0 <vPortYield>
   19ca6:	f7ff ffad 	bl	19c04 <vApplicationIdleHook>
   19caa:	e7f7      	b.n	19c9c <prvIdleTask+0x4>
   19cac:	2007c610 	.word	0x2007c610

00019cb0 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
   19cb0:	4a06      	ldr	r2, [pc, #24]	; (19ccc <prvResetNextTaskUnblockTime+0x1c>)
   19cb2:	6813      	ldr	r3, [r2, #0]
   19cb4:	6819      	ldr	r1, [r3, #0]
   19cb6:	4b06      	ldr	r3, [pc, #24]	; (19cd0 <prvResetNextTaskUnblockTime+0x20>)
   19cb8:	b911      	cbnz	r1, 19cc0 <prvResetNextTaskUnblockTime+0x10>
   19cba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19cbe:	e003      	b.n	19cc8 <prvResetNextTaskUnblockTime+0x18>
   19cc0:	6812      	ldr	r2, [r2, #0]
   19cc2:	68d2      	ldr	r2, [r2, #12]
   19cc4:	68d2      	ldr	r2, [r2, #12]
   19cc6:	6852      	ldr	r2, [r2, #4]
   19cc8:	601a      	str	r2, [r3, #0]
   19cca:	4770      	bx	lr
   19ccc:	2007c5dc 	.word	0x2007c5dc
   19cd0:	2007c048 	.word	0x2007c048

00019cd4 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
   19cd4:	4b0e      	ldr	r3, [pc, #56]	; (19d10 <prvAddCurrentTaskToDelayedList+0x3c>)
   19cd6:	b510      	push	{r4, lr}
   19cd8:	681a      	ldr	r2, [r3, #0]
   19cda:	4604      	mov	r4, r0
   19cdc:	6050      	str	r0, [r2, #4]
   19cde:	4a0d      	ldr	r2, [pc, #52]	; (19d14 <prvAddCurrentTaskToDelayedList+0x40>)
   19ce0:	6812      	ldr	r2, [r2, #0]
   19ce2:	4290      	cmp	r0, r2
   19ce4:	d207      	bcs.n	19cf6 <prvAddCurrentTaskToDelayedList+0x22>
   19ce6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   19cea:	4a0b      	ldr	r2, [pc, #44]	; (19d18 <prvAddCurrentTaskToDelayedList+0x44>)
   19cec:	6810      	ldr	r0, [r2, #0]
   19cee:	6819      	ldr	r1, [r3, #0]
   19cf0:	3104      	adds	r1, #4
   19cf2:	f000 bd97 	b.w	1a824 <vListInsert>
   19cf6:	4a09      	ldr	r2, [pc, #36]	; (19d1c <prvAddCurrentTaskToDelayedList+0x48>)
   19cf8:	6810      	ldr	r0, [r2, #0]
   19cfa:	6819      	ldr	r1, [r3, #0]
   19cfc:	3104      	adds	r1, #4
   19cfe:	f000 fd91 	bl	1a824 <vListInsert>
   19d02:	4b07      	ldr	r3, [pc, #28]	; (19d20 <prvAddCurrentTaskToDelayedList+0x4c>)
   19d04:	681a      	ldr	r2, [r3, #0]
   19d06:	4294      	cmp	r4, r2
   19d08:	bf38      	it	cc
   19d0a:	601c      	strcc	r4, [r3, #0]
   19d0c:	bd10      	pop	{r4, pc}
   19d0e:	bf00      	nop
   19d10:	2007c6dc 	.word	0x2007c6dc
   19d14:	2007c6f4 	.word	0x2007c6f4
   19d18:	2007c6f8 	.word	0x2007c6f8
   19d1c:	2007c5dc 	.word	0x2007c5dc
   19d20:	2007c048 	.word	0x2007c048

00019d24 <prvListTaskWithinSingleList>:
prvListTaskWithinSingleList():
   19d24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   19d28:	680c      	ldr	r4, [r1, #0]
   19d2a:	2c00      	cmp	r4, #0
   19d2c:	d047      	beq.n	19dbe <prvListTaskWithinSingleList+0x9a>
   19d2e:	684b      	ldr	r3, [r1, #4]
   19d30:	f101 0708 	add.w	r7, r1, #8
   19d34:	685c      	ldr	r4, [r3, #4]
   19d36:	f04f 0802 	mov.w	r8, #2
   19d3a:	42bc      	cmp	r4, r7
   19d3c:	bf08      	it	eq
   19d3e:	687b      	ldreq	r3, [r7, #4]
   19d40:	604c      	str	r4, [r1, #4]
   19d42:	bf08      	it	eq
   19d44:	604b      	streq	r3, [r1, #4]
   19d46:	684b      	ldr	r3, [r1, #4]
   19d48:	f8d3 c00c 	ldr.w	ip, [r3, #12]
   19d4c:	f100 031c 	add.w	r3, r0, #28
   19d50:	2000      	movs	r0, #0
   19d52:	684c      	ldr	r4, [r1, #4]
   19d54:	6864      	ldr	r4, [r4, #4]
   19d56:	42a7      	cmp	r7, r4
   19d58:	604c      	str	r4, [r1, #4]
   19d5a:	bf04      	itt	eq
   19d5c:	68cc      	ldreq	r4, [r1, #12]
   19d5e:	604c      	streq	r4, [r1, #4]
   19d60:	684c      	ldr	r4, [r1, #4]
   19d62:	2a03      	cmp	r2, #3
   19d64:	68e4      	ldr	r4, [r4, #12]
   19d66:	f104 0534 	add.w	r5, r4, #52	; 0x34
   19d6a:	f843 5c18 	str.w	r5, [r3, #-24]
   19d6e:	6be5      	ldr	r5, [r4, #60]	; 0x3c
   19d70:	f843 4c1c 	str.w	r4, [r3, #-28]
   19d74:	f843 5c14 	str.w	r5, [r3, #-20]
   19d78:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
   19d7a:	f803 2c10 	strb.w	r2, [r3, #-16]
   19d7e:	f843 5c0c 	str.w	r5, [r3, #-12]
   19d82:	d103      	bne.n	19d8c <prvListTaskWithinSingleList+0x68>
   19d84:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   19d86:	b10d      	cbz	r5, 19d8c <prvListTaskWithinSingleList+0x68>
   19d88:	f803 8c10 	strb.w	r8, [r3, #-16]
   19d8c:	6c65      	ldr	r5, [r4, #68]	; 0x44
   19d8e:	f843 5c08 	str.w	r5, [r3, #-8]
   19d92:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
   19d94:	f8d4 e030 	ldr.w	lr, [r4, #48]	; 0x30
   19d98:	f843 5c04 	str.w	r5, [r3, #-4]
   19d9c:	4676      	mov	r6, lr
   19d9e:	ebce 0506 	rsb	r5, lr, r6
   19da2:	f816 9b01 	ldrb.w	r9, [r6], #1
   19da6:	f1b9 0fa5 	cmp.w	r9, #165	; 0xa5
   19daa:	d0f8      	beq.n	19d9e <prvListTaskWithinSingleList+0x7a>
   19dac:	08ad      	lsrs	r5, r5, #2
   19dae:	45a4      	cmp	ip, r4
   19db0:	f823 5b20 	strh.w	r5, [r3], #32
   19db4:	f100 0001 	add.w	r0, r0, #1
   19db8:	d1cb      	bne.n	19d52 <prvListTaskWithinSingleList+0x2e>
   19dba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   19dbe:	4620      	mov	r0, r4
   19dc0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00019dc4 <xTaskGenericCreate>:
xTaskGenericCreate():
   19dc4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19dc8:	4681      	mov	r9, r0
   19dca:	2050      	movs	r0, #80	; 0x50
   19dcc:	460e      	mov	r6, r1
   19dce:	4615      	mov	r5, r2
   19dd0:	469a      	mov	sl, r3
   19dd2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   19dd4:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   19dd8:	f000 fdee 	bl	1a9b8 <pvPortMalloc>
   19ddc:	4604      	mov	r4, r0
   19dde:	2800      	cmp	r0, #0
   19de0:	f000 80a4 	beq.w	19f2c <xTaskGenericCreate+0x168>
   19de4:	f1bb 0f00 	cmp.w	fp, #0
   19de8:	d103      	bne.n	19df2 <xTaskGenericCreate+0x2e>
   19dea:	00a8      	lsls	r0, r5, #2
   19dec:	f000 fde4 	bl	1a9b8 <pvPortMalloc>
   19df0:	e000      	b.n	19df4 <xTaskGenericCreate+0x30>
   19df2:	4658      	mov	r0, fp
   19df4:	6320      	str	r0, [r4, #48]	; 0x30
   19df6:	b918      	cbnz	r0, 19e00 <xTaskGenericCreate+0x3c>
   19df8:	4620      	mov	r0, r4
   19dfa:	f000 fdec 	bl	1a9d6 <vPortFree>
   19dfe:	e095      	b.n	19f2c <xTaskGenericCreate+0x168>
   19e00:	00ad      	lsls	r5, r5, #2
   19e02:	462a      	mov	r2, r5
   19e04:	21a5      	movs	r1, #165	; 0xa5
   19e06:	f003 faa8 	bl	1d35a <memset>
   19e0a:	6b23      	ldr	r3, [r4, #48]	; 0x30
   19e0c:	3d04      	subs	r5, #4
   19e0e:	441d      	add	r5, r3
   19e10:	f025 0507 	bic.w	r5, r5, #7
   19e14:	1e73      	subs	r3, r6, #1
   19e16:	f104 0233 	add.w	r2, r4, #51	; 0x33
   19e1a:	3607      	adds	r6, #7
   19e1c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   19e20:	f802 1f01 	strb.w	r1, [r2, #1]!
   19e24:	7819      	ldrb	r1, [r3, #0]
   19e26:	b109      	cbz	r1, 19e2c <xTaskGenericCreate+0x68>
   19e28:	429e      	cmp	r6, r3
   19e2a:	d1f7      	bne.n	19e1c <xTaskGenericCreate+0x58>
   19e2c:	46bb      	mov	fp, r7
   19e2e:	2f09      	cmp	r7, #9
   19e30:	bf28      	it	cs
   19e32:	f04f 0b09 	movcs.w	fp, #9
   19e36:	f04f 0800 	mov.w	r8, #0
   19e3a:	1d26      	adds	r6, r4, #4
   19e3c:	4630      	mov	r0, r6
   19e3e:	f884 803b 	strb.w	r8, [r4, #59]	; 0x3b
   19e42:	f8c4 b02c 	str.w	fp, [r4, #44]	; 0x2c
   19e46:	f8c4 b044 	str.w	fp, [r4, #68]	; 0x44
   19e4a:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
   19e4e:	f000 fcda 	bl	1a806 <vListInitialiseItem>
   19e52:	f104 0018 	add.w	r0, r4, #24
   19e56:	f000 fcd6 	bl	1a806 <vListInitialiseItem>
   19e5a:	f1cb 030a 	rsb	r3, fp, #10
   19e5e:	61a3      	str	r3, [r4, #24]
   19e60:	6124      	str	r4, [r4, #16]
   19e62:	6264      	str	r4, [r4, #36]	; 0x24
   19e64:	f8c4 804c 	str.w	r8, [r4, #76]	; 0x4c
   19e68:	4652      	mov	r2, sl
   19e6a:	4649      	mov	r1, r9
   19e6c:	4628      	mov	r0, r5
   19e6e:	f7ff fe1d 	bl	19aac <pxPortInitialiseStack>
   19e72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   19e74:	6020      	str	r0, [r4, #0]
   19e76:	b103      	cbz	r3, 19e7a <xTaskGenericCreate+0xb6>
   19e78:	601c      	str	r4, [r3, #0]
   19e7a:	f7ff fe51 	bl	19b20 <vPortEnterCritical>
   19e7e:	4a2d      	ldr	r2, [pc, #180]	; (19f34 <xTaskGenericCreate+0x170>)
   19e80:	4d2d      	ldr	r5, [pc, #180]	; (19f38 <xTaskGenericCreate+0x174>)
   19e82:	6813      	ldr	r3, [r2, #0]
   19e84:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 19f58 <xTaskGenericCreate+0x194>
   19e88:	3301      	adds	r3, #1
   19e8a:	6013      	str	r3, [r2, #0]
   19e8c:	682b      	ldr	r3, [r5, #0]
   19e8e:	bb23      	cbnz	r3, 19eda <xTaskGenericCreate+0x116>
   19e90:	602c      	str	r4, [r5, #0]
   19e92:	6812      	ldr	r2, [r2, #0]
   19e94:	2a01      	cmp	r2, #1
   19e96:	d128      	bne.n	19eea <xTaskGenericCreate+0x126>
   19e98:	4698      	mov	r8, r3
   19e9a:	eb09 0008 	add.w	r0, r9, r8
   19e9e:	f108 0814 	add.w	r8, r8, #20
   19ea2:	f000 fca5 	bl	1a7f0 <vListInitialise>
   19ea6:	f1b8 0fc8 	cmp.w	r8, #200	; 0xc8
   19eaa:	d1f6      	bne.n	19e9a <xTaskGenericCreate+0xd6>
   19eac:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 19f5c <xTaskGenericCreate+0x198>
   19eb0:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 19f60 <xTaskGenericCreate+0x19c>
   19eb4:	4650      	mov	r0, sl
   19eb6:	f000 fc9b 	bl	1a7f0 <vListInitialise>
   19eba:	4640      	mov	r0, r8
   19ebc:	f000 fc98 	bl	1a7f0 <vListInitialise>
   19ec0:	481e      	ldr	r0, [pc, #120]	; (19f3c <xTaskGenericCreate+0x178>)
   19ec2:	f000 fc95 	bl	1a7f0 <vListInitialise>
   19ec6:	481e      	ldr	r0, [pc, #120]	; (19f40 <xTaskGenericCreate+0x17c>)
   19ec8:	f000 fc92 	bl	1a7f0 <vListInitialise>
   19ecc:	4b1d      	ldr	r3, [pc, #116]	; (19f44 <xTaskGenericCreate+0x180>)
   19ece:	f8c3 a000 	str.w	sl, [r3]
   19ed2:	4b1d      	ldr	r3, [pc, #116]	; (19f48 <xTaskGenericCreate+0x184>)
   19ed4:	f8c3 8000 	str.w	r8, [r3]
   19ed8:	e007      	b.n	19eea <xTaskGenericCreate+0x126>
   19eda:	4b1c      	ldr	r3, [pc, #112]	; (19f4c <xTaskGenericCreate+0x188>)
   19edc:	681b      	ldr	r3, [r3, #0]
   19ede:	b923      	cbnz	r3, 19eea <xTaskGenericCreate+0x126>
   19ee0:	682b      	ldr	r3, [r5, #0]
   19ee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19ee4:	429f      	cmp	r7, r3
   19ee6:	bf28      	it	cs
   19ee8:	602c      	strcs	r4, [r5, #0]
   19eea:	4a19      	ldr	r2, [pc, #100]	; (19f50 <xTaskGenericCreate+0x18c>)
   19eec:	4919      	ldr	r1, [pc, #100]	; (19f54 <xTaskGenericCreate+0x190>)
   19eee:	6813      	ldr	r3, [r2, #0]
   19ef0:	3301      	adds	r3, #1
   19ef2:	6013      	str	r3, [r2, #0]
   19ef4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19ef6:	63e3      	str	r3, [r4, #60]	; 0x3c
   19ef8:	680b      	ldr	r3, [r1, #0]
   19efa:	2401      	movs	r4, #1
   19efc:	fa04 f002 	lsl.w	r0, r4, r2
   19f00:	4303      	orrs	r3, r0
   19f02:	2014      	movs	r0, #20
   19f04:	600b      	str	r3, [r1, #0]
   19f06:	fb00 9002 	mla	r0, r0, r2, r9
   19f0a:	4631      	mov	r1, r6
   19f0c:	f000 fc7e 	bl	1a80c <vListInsertEnd>
   19f10:	f7ff fe18 	bl	19b44 <vPortExitCritical>
   19f14:	4b0d      	ldr	r3, [pc, #52]	; (19f4c <xTaskGenericCreate+0x188>)
   19f16:	681b      	ldr	r3, [r3, #0]
   19f18:	b12b      	cbz	r3, 19f26 <xTaskGenericCreate+0x162>
   19f1a:	682b      	ldr	r3, [r5, #0]
   19f1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19f1e:	429f      	cmp	r7, r3
   19f20:	d901      	bls.n	19f26 <xTaskGenericCreate+0x162>
   19f22:	f7ff fde5 	bl	19af0 <vPortYield>
   19f26:	4620      	mov	r0, r4
   19f28:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   19f30:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f34:	2007c700 	.word	0x2007c700
   19f38:	2007c6dc 	.word	0x2007c6dc
   19f3c:	2007c6e0 	.word	0x2007c6e0
   19f40:	2007c708 	.word	0x2007c708
   19f44:	2007c5dc 	.word	0x2007c5dc
   19f48:	2007c6f8 	.word	0x2007c6f8
   19f4c:	2007c5e0 	.word	0x2007c5e0
   19f50:	2007c6fc 	.word	0x2007c6fc
   19f54:	2007c71c 	.word	0x2007c71c
   19f58:	2007c610 	.word	0x2007c610
   19f5c:	2007c5e4 	.word	0x2007c5e4
   19f60:	2007c5f8 	.word	0x2007c5f8

00019f64 <vTaskStartScheduler>:
vTaskStartScheduler():
   19f64:	b530      	push	{r4, r5, lr}
   19f66:	4b0f      	ldr	r3, [pc, #60]	; (19fa4 <vTaskStartScheduler+0x40>)
   19f68:	b085      	sub	sp, #20
   19f6a:	2400      	movs	r4, #0
   19f6c:	9301      	str	r3, [sp, #4]
   19f6e:	9403      	str	r4, [sp, #12]
   19f70:	9402      	str	r4, [sp, #8]
   19f72:	9400      	str	r4, [sp, #0]
   19f74:	4623      	mov	r3, r4
   19f76:	2280      	movs	r2, #128	; 0x80
   19f78:	490b      	ldr	r1, [pc, #44]	; (19fa8 <vTaskStartScheduler+0x44>)
   19f7a:	480c      	ldr	r0, [pc, #48]	; (19fac <vTaskStartScheduler+0x48>)
   19f7c:	f7ff ff22 	bl	19dc4 <xTaskGenericCreate>
   19f80:	2801      	cmp	r0, #1
   19f82:	4605      	mov	r5, r0
   19f84:	d10c      	bne.n	19fa0 <vTaskStartScheduler+0x3c>
   19f86:	f7ff fdbf 	bl	19b08 <ulPortSetInterruptMask>
   19f8a:	4b09      	ldr	r3, [pc, #36]	; (19fb0 <vTaskStartScheduler+0x4c>)
   19f8c:	601d      	str	r5, [r3, #0]
   19f8e:	4b09      	ldr	r3, [pc, #36]	; (19fb4 <vTaskStartScheduler+0x50>)
   19f90:	601c      	str	r4, [r3, #0]
   19f92:	f7ff fd5d 	bl	19a50 <vConfigureTimerForRunTimeStats>
   19f96:	b005      	add	sp, #20
   19f98:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   19f9c:	f7ff be1a 	b.w	19bd4 <xPortStartScheduler>
   19fa0:	b005      	add	sp, #20
   19fa2:	bd30      	pop	{r4, r5, pc}
   19fa4:	2007c704 	.word	0x2007c704
   19fa8:	00025f07 	.word	0x00025f07
   19fac:	00019c99 	.word	0x00019c99
   19fb0:	2007c5e0 	.word	0x2007c5e0
   19fb4:	2007c6f4 	.word	0x2007c6f4

00019fb8 <vTaskEndScheduler>:
vTaskEndScheduler():
   19fb8:	b508      	push	{r3, lr}
   19fba:	f7ff fda5 	bl	19b08 <ulPortSetInterruptMask>
   19fbe:	4b03      	ldr	r3, [pc, #12]	; (19fcc <vTaskEndScheduler+0x14>)
   19fc0:	2200      	movs	r2, #0
   19fc2:	601a      	str	r2, [r3, #0]
   19fc4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   19fc8:	f7ff bd90 	b.w	19aec <vPortEndScheduler>
   19fcc:	2007c5e0 	.word	0x2007c5e0

00019fd0 <vTaskSuspendAll>:
vTaskSuspendAll():
   19fd0:	4a02      	ldr	r2, [pc, #8]	; (19fdc <vTaskSuspendAll+0xc>)
   19fd2:	6813      	ldr	r3, [r2, #0]
   19fd4:	3301      	adds	r3, #1
   19fd6:	6013      	str	r3, [r2, #0]
   19fd8:	4770      	bx	lr
   19fda:	bf00      	nop
   19fdc:	2007c6d8 	.word	0x2007c6d8

00019fe0 <xTaskGetTickCount>:
xTaskGetTickCount():
   19fe0:	b510      	push	{r4, lr}
   19fe2:	f7ff fd9d 	bl	19b20 <vPortEnterCritical>
   19fe6:	4b03      	ldr	r3, [pc, #12]	; (19ff4 <xTaskGetTickCount+0x14>)
   19fe8:	681c      	ldr	r4, [r3, #0]
   19fea:	f7ff fdab 	bl	19b44 <vPortExitCritical>
   19fee:	4620      	mov	r0, r4
   19ff0:	bd10      	pop	{r4, pc}
   19ff2:	bf00      	nop
   19ff4:	2007c6f4 	.word	0x2007c6f4

00019ff8 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
   19ff8:	b510      	push	{r4, lr}
   19ffa:	f7ff fd85 	bl	19b08 <ulPortSetInterruptMask>
   19ffe:	4b03      	ldr	r3, [pc, #12]	; (1a00c <xTaskGetTickCountFromISR+0x14>)
   1a000:	681c      	ldr	r4, [r3, #0]
   1a002:	f7ff fd9b 	bl	19b3c <vPortClearInterruptMask>
   1a006:	4620      	mov	r0, r4
   1a008:	bd10      	pop	{r4, pc}
   1a00a:	bf00      	nop
   1a00c:	2007c6f4 	.word	0x2007c6f4

0001a010 <uxTaskGetNumberOfTasks>:
uxTaskGetNumberOfTasks():
   1a010:	4b01      	ldr	r3, [pc, #4]	; (1a018 <uxTaskGetNumberOfTasks+0x8>)
   1a012:	6818      	ldr	r0, [r3, #0]
   1a014:	4770      	bx	lr
   1a016:	bf00      	nop
   1a018:	2007c700 	.word	0x2007c700

0001a01c <xTaskIncrementTick>:
xTaskIncrementTick():
   1a01c:	4b3a      	ldr	r3, [pc, #232]	; (1a108 <xTaskIncrementTick+0xec>)
   1a01e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a022:	681b      	ldr	r3, [r3, #0]
   1a024:	2b00      	cmp	r3, #0
   1a026:	d130      	bne.n	1a08a <xTaskIncrementTick+0x6e>
   1a028:	4b38      	ldr	r3, [pc, #224]	; (1a10c <xTaskIncrementTick+0xf0>)
   1a02a:	681a      	ldr	r2, [r3, #0]
   1a02c:	3201      	adds	r2, #1
   1a02e:	601a      	str	r2, [r3, #0]
   1a030:	681d      	ldr	r5, [r3, #0]
   1a032:	b95d      	cbnz	r5, 1a04c <xTaskIncrementTick+0x30>
   1a034:	4a36      	ldr	r2, [pc, #216]	; (1a110 <xTaskIncrementTick+0xf4>)
   1a036:	4b37      	ldr	r3, [pc, #220]	; (1a114 <xTaskIncrementTick+0xf8>)
   1a038:	6811      	ldr	r1, [r2, #0]
   1a03a:	6818      	ldr	r0, [r3, #0]
   1a03c:	6010      	str	r0, [r2, #0]
   1a03e:	4a36      	ldr	r2, [pc, #216]	; (1a118 <xTaskIncrementTick+0xfc>)
   1a040:	6019      	str	r1, [r3, #0]
   1a042:	6813      	ldr	r3, [r2, #0]
   1a044:	3301      	adds	r3, #1
   1a046:	6013      	str	r3, [r2, #0]
   1a048:	f7ff fe32 	bl	19cb0 <prvResetNextTaskUnblockTime>
   1a04c:	4c33      	ldr	r4, [pc, #204]	; (1a11c <xTaskIncrementTick+0x100>)
   1a04e:	f04f 0b00 	mov.w	fp, #0
   1a052:	6823      	ldr	r3, [r4, #0]
   1a054:	9401      	str	r4, [sp, #4]
   1a056:	429d      	cmp	r5, r3
   1a058:	4e31      	ldr	r6, [pc, #196]	; (1a120 <xTaskIncrementTick+0x104>)
   1a05a:	4f32      	ldr	r7, [pc, #200]	; (1a124 <xTaskIncrementTick+0x108>)
   1a05c:	d30b      	bcc.n	1a076 <xTaskIncrementTick+0x5a>
   1a05e:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 1a110 <xTaskIncrementTick+0xf4>
   1a062:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 1a130 <xTaskIncrementTick+0x114>
   1a066:	f8d8 2000 	ldr.w	r2, [r8]
   1a06a:	6812      	ldr	r2, [r2, #0]
   1a06c:	b9a2      	cbnz	r2, 1a098 <xTaskIncrementTick+0x7c>
   1a06e:	9b01      	ldr	r3, [sp, #4]
   1a070:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a074:	601a      	str	r2, [r3, #0]
   1a076:	683a      	ldr	r2, [r7, #0]
   1a078:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   1a07a:	2214      	movs	r2, #20
   1a07c:	434a      	muls	r2, r1
   1a07e:	58b2      	ldr	r2, [r6, r2]
   1a080:	2a02      	cmp	r2, #2
   1a082:	bf28      	it	cs
   1a084:	f04f 0b01 	movcs.w	fp, #1
   1a088:	e034      	b.n	1a0f4 <xTaskIncrementTick+0xd8>
   1a08a:	4a27      	ldr	r2, [pc, #156]	; (1a128 <xTaskIncrementTick+0x10c>)
   1a08c:	f04f 0b00 	mov.w	fp, #0
   1a090:	6813      	ldr	r3, [r2, #0]
   1a092:	3301      	adds	r3, #1
   1a094:	6013      	str	r3, [r2, #0]
   1a096:	e02d      	b.n	1a0f4 <xTaskIncrementTick+0xd8>
   1a098:	f8d8 2000 	ldr.w	r2, [r8]
   1a09c:	68d2      	ldr	r2, [r2, #12]
   1a09e:	68d4      	ldr	r4, [r2, #12]
   1a0a0:	6861      	ldr	r1, [r4, #4]
   1a0a2:	428d      	cmp	r5, r1
   1a0a4:	d202      	bcs.n	1a0ac <xTaskIncrementTick+0x90>
   1a0a6:	9b01      	ldr	r3, [sp, #4]
   1a0a8:	6019      	str	r1, [r3, #0]
   1a0aa:	e7e4      	b.n	1a076 <xTaskIncrementTick+0x5a>
   1a0ac:	f104 0a04 	add.w	sl, r4, #4
   1a0b0:	4650      	mov	r0, sl
   1a0b2:	f000 fbcf 	bl	1a854 <uxListRemove>
   1a0b6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   1a0b8:	b119      	cbz	r1, 1a0c2 <xTaskIncrementTick+0xa6>
   1a0ba:	f104 0018 	add.w	r0, r4, #24
   1a0be:	f000 fbc9 	bl	1a854 <uxListRemove>
   1a0c2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   1a0c4:	f8d9 1000 	ldr.w	r1, [r9]
   1a0c8:	2301      	movs	r3, #1
   1a0ca:	fa03 fe00 	lsl.w	lr, r3, r0
   1a0ce:	ea4e 0101 	orr.w	r1, lr, r1
   1a0d2:	f04f 0e14 	mov.w	lr, #20
   1a0d6:	f8c9 1000 	str.w	r1, [r9]
   1a0da:	fb0e 6000 	mla	r0, lr, r0, r6
   1a0de:	4651      	mov	r1, sl
   1a0e0:	f000 fb94 	bl	1a80c <vListInsertEnd>
   1a0e4:	6838      	ldr	r0, [r7, #0]
   1a0e6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
   1a0e8:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
   1a0ea:	4291      	cmp	r1, r2
   1a0ec:	bf28      	it	cs
   1a0ee:	f04f 0b01 	movcs.w	fp, #1
   1a0f2:	e7b8      	b.n	1a066 <xTaskIncrementTick+0x4a>
   1a0f4:	4a0d      	ldr	r2, [pc, #52]	; (1a12c <xTaskIncrementTick+0x110>)
   1a0f6:	6812      	ldr	r2, [r2, #0]
   1a0f8:	2a00      	cmp	r2, #0
   1a0fa:	bf18      	it	ne
   1a0fc:	f04f 0b01 	movne.w	fp, #1
   1a100:	4658      	mov	r0, fp
   1a102:	b003      	add	sp, #12
   1a104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a108:	2007c6d8 	.word	0x2007c6d8
   1a10c:	2007c6f4 	.word	0x2007c6f4
   1a110:	2007c5dc 	.word	0x2007c5dc
   1a114:	2007c6f8 	.word	0x2007c6f8
   1a118:	2007c5d8 	.word	0x2007c5d8
   1a11c:	2007c048 	.word	0x2007c048
   1a120:	2007c610 	.word	0x2007c610
   1a124:	2007c6dc 	.word	0x2007c6dc
   1a128:	2007c60c 	.word	0x2007c60c
   1a12c:	2007c720 	.word	0x2007c720
   1a130:	2007c71c 	.word	0x2007c71c

0001a134 <xTaskResumeAll>:
xTaskResumeAll():
   1a134:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1a138:	f7ff fcf2 	bl	19b20 <vPortEnterCritical>
   1a13c:	4b27      	ldr	r3, [pc, #156]	; (1a1dc <xTaskResumeAll+0xa8>)
   1a13e:	681a      	ldr	r2, [r3, #0]
   1a140:	3a01      	subs	r2, #1
   1a142:	601a      	str	r2, [r3, #0]
   1a144:	681b      	ldr	r3, [r3, #0]
   1a146:	b10b      	cbz	r3, 1a14c <xTaskResumeAll+0x18>
   1a148:	2400      	movs	r4, #0
   1a14a:	e041      	b.n	1a1d0 <xTaskResumeAll+0x9c>
   1a14c:	4b24      	ldr	r3, [pc, #144]	; (1a1e0 <xTaskResumeAll+0xac>)
   1a14e:	681b      	ldr	r3, [r3, #0]
   1a150:	2b00      	cmp	r3, #0
   1a152:	d0f9      	beq.n	1a148 <xTaskResumeAll+0x14>
   1a154:	4d23      	ldr	r5, [pc, #140]	; (1a1e4 <xTaskResumeAll+0xb0>)
   1a156:	4e24      	ldr	r6, [pc, #144]	; (1a1e8 <xTaskResumeAll+0xb4>)
   1a158:	f8df 809c 	ldr.w	r8, [pc, #156]	; 1a1f8 <xTaskResumeAll+0xc4>
   1a15c:	682b      	ldr	r3, [r5, #0]
   1a15e:	b303      	cbz	r3, 1a1a2 <xTaskResumeAll+0x6e>
   1a160:	68eb      	ldr	r3, [r5, #12]
   1a162:	2701      	movs	r7, #1
   1a164:	68dc      	ldr	r4, [r3, #12]
   1a166:	f104 0904 	add.w	r9, r4, #4
   1a16a:	f104 0018 	add.w	r0, r4, #24
   1a16e:	f000 fb71 	bl	1a854 <uxListRemove>
   1a172:	4648      	mov	r0, r9
   1a174:	f000 fb6e 	bl	1a854 <uxListRemove>
   1a178:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1a17a:	6833      	ldr	r3, [r6, #0]
   1a17c:	fa07 f102 	lsl.w	r1, r7, r2
   1a180:	2014      	movs	r0, #20
   1a182:	430b      	orrs	r3, r1
   1a184:	fb00 8002 	mla	r0, r0, r2, r8
   1a188:	4649      	mov	r1, r9
   1a18a:	6033      	str	r3, [r6, #0]
   1a18c:	f000 fb3e 	bl	1a80c <vListInsertEnd>
   1a190:	4b16      	ldr	r3, [pc, #88]	; (1a1ec <xTaskResumeAll+0xb8>)
   1a192:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1a194:	681b      	ldr	r3, [r3, #0]
   1a196:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1a198:	429a      	cmp	r2, r3
   1a19a:	d3df      	bcc.n	1a15c <xTaskResumeAll+0x28>
   1a19c:	4b14      	ldr	r3, [pc, #80]	; (1a1f0 <xTaskResumeAll+0xbc>)
   1a19e:	601f      	str	r7, [r3, #0]
   1a1a0:	e7da      	b.n	1a158 <xTaskResumeAll+0x24>
   1a1a2:	4c14      	ldr	r4, [pc, #80]	; (1a1f4 <xTaskResumeAll+0xc0>)
   1a1a4:	6823      	ldr	r3, [r4, #0]
   1a1a6:	b933      	cbnz	r3, 1a1b6 <xTaskResumeAll+0x82>
   1a1a8:	4b11      	ldr	r3, [pc, #68]	; (1a1f0 <xTaskResumeAll+0xbc>)
   1a1aa:	681c      	ldr	r4, [r3, #0]
   1a1ac:	2c01      	cmp	r4, #1
   1a1ae:	d1cb      	bne.n	1a148 <xTaskResumeAll+0x14>
   1a1b0:	f7ff fc9e 	bl	19af0 <vPortYield>
   1a1b4:	e00c      	b.n	1a1d0 <xTaskResumeAll+0x9c>
   1a1b6:	4d0e      	ldr	r5, [pc, #56]	; (1a1f0 <xTaskResumeAll+0xbc>)
   1a1b8:	2601      	movs	r6, #1
   1a1ba:	6823      	ldr	r3, [r4, #0]
   1a1bc:	2b00      	cmp	r3, #0
   1a1be:	d0f3      	beq.n	1a1a8 <xTaskResumeAll+0x74>
   1a1c0:	f7ff ff2c 	bl	1a01c <xTaskIncrementTick>
   1a1c4:	b100      	cbz	r0, 1a1c8 <xTaskResumeAll+0x94>
   1a1c6:	602e      	str	r6, [r5, #0]
   1a1c8:	6823      	ldr	r3, [r4, #0]
   1a1ca:	3b01      	subs	r3, #1
   1a1cc:	6023      	str	r3, [r4, #0]
   1a1ce:	e7f4      	b.n	1a1ba <xTaskResumeAll+0x86>
   1a1d0:	f7ff fcb8 	bl	19b44 <vPortExitCritical>
   1a1d4:	4620      	mov	r0, r4
   1a1d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1a1da:	bf00      	nop
   1a1dc:	2007c6d8 	.word	0x2007c6d8
   1a1e0:	2007c700 	.word	0x2007c700
   1a1e4:	2007c6e0 	.word	0x2007c6e0
   1a1e8:	2007c71c 	.word	0x2007c71c
   1a1ec:	2007c6dc 	.word	0x2007c6dc
   1a1f0:	2007c720 	.word	0x2007c720
   1a1f4:	2007c60c 	.word	0x2007c60c
   1a1f8:	2007c610 	.word	0x2007c610

0001a1fc <vTaskDelayUntil>:
vTaskDelayUntil():
   1a1fc:	b538      	push	{r3, r4, r5, lr}
   1a1fe:	f7ff fee7 	bl	19fd0 <vTaskSuspendAll>
   1a202:	4b17      	ldr	r3, [pc, #92]	; (1a260 <vTaskDelayUntil+0x64>)
   1a204:	6802      	ldr	r2, [r0, #0]
   1a206:	681b      	ldr	r3, [r3, #0]
   1a208:	1854      	adds	r4, r2, r1
   1a20a:	4293      	cmp	r3, r2
   1a20c:	d202      	bcs.n	1a214 <vTaskDelayUntil+0x18>
   1a20e:	42a2      	cmp	r2, r4
   1a210:	d907      	bls.n	1a222 <vTaskDelayUntil+0x26>
   1a212:	e001      	b.n	1a218 <vTaskDelayUntil+0x1c>
   1a214:	42a2      	cmp	r2, r4
   1a216:	d806      	bhi.n	1a226 <vTaskDelayUntil+0x2a>
   1a218:	42a3      	cmp	r3, r4
   1a21a:	bf2c      	ite	cs
   1a21c:	2300      	movcs	r3, #0
   1a21e:	2301      	movcc	r3, #1
   1a220:	e002      	b.n	1a228 <vTaskDelayUntil+0x2c>
   1a222:	2300      	movs	r3, #0
   1a224:	e000      	b.n	1a228 <vTaskDelayUntil+0x2c>
   1a226:	2301      	movs	r3, #1
   1a228:	6004      	str	r4, [r0, #0]
   1a22a:	b18b      	cbz	r3, 1a250 <vTaskDelayUntil+0x54>
   1a22c:	4d0d      	ldr	r5, [pc, #52]	; (1a264 <vTaskDelayUntil+0x68>)
   1a22e:	6828      	ldr	r0, [r5, #0]
   1a230:	3004      	adds	r0, #4
   1a232:	f000 fb0f 	bl	1a854 <uxListRemove>
   1a236:	b940      	cbnz	r0, 1a24a <vTaskDelayUntil+0x4e>
   1a238:	682b      	ldr	r3, [r5, #0]
   1a23a:	490b      	ldr	r1, [pc, #44]	; (1a268 <vTaskDelayUntil+0x6c>)
   1a23c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
   1a23e:	680a      	ldr	r2, [r1, #0]
   1a240:	2301      	movs	r3, #1
   1a242:	4083      	lsls	r3, r0
   1a244:	ea22 0303 	bic.w	r3, r2, r3
   1a248:	600b      	str	r3, [r1, #0]
   1a24a:	4620      	mov	r0, r4
   1a24c:	f7ff fd42 	bl	19cd4 <prvAddCurrentTaskToDelayedList>
   1a250:	f7ff ff70 	bl	1a134 <xTaskResumeAll>
   1a254:	b918      	cbnz	r0, 1a25e <vTaskDelayUntil+0x62>
   1a256:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a25a:	f7ff bc49 	b.w	19af0 <vPortYield>
   1a25e:	bd38      	pop	{r3, r4, r5, pc}
   1a260:	2007c6f4 	.word	0x2007c6f4
   1a264:	2007c6dc 	.word	0x2007c6dc
   1a268:	2007c71c 	.word	0x2007c71c

0001a26c <vTaskDelay>:
vTaskDelay():
   1a26c:	b538      	push	{r3, r4, r5, lr}
   1a26e:	b918      	cbnz	r0, 1a278 <vTaskDelay+0xc>
   1a270:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a274:	f7ff bc3c 	b.w	19af0 <vPortYield>
   1a278:	f7ff feaa 	bl	19fd0 <vTaskSuspendAll>
   1a27c:	4b0c      	ldr	r3, [pc, #48]	; (1a2b0 <vTaskDelay+0x44>)
   1a27e:	4d0d      	ldr	r5, [pc, #52]	; (1a2b4 <vTaskDelay+0x48>)
   1a280:	681b      	ldr	r3, [r3, #0]
   1a282:	18c4      	adds	r4, r0, r3
   1a284:	6828      	ldr	r0, [r5, #0]
   1a286:	3004      	adds	r0, #4
   1a288:	f000 fae4 	bl	1a854 <uxListRemove>
   1a28c:	b940      	cbnz	r0, 1a2a0 <vTaskDelay+0x34>
   1a28e:	682b      	ldr	r3, [r5, #0]
   1a290:	4909      	ldr	r1, [pc, #36]	; (1a2b8 <vTaskDelay+0x4c>)
   1a292:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
   1a294:	680a      	ldr	r2, [r1, #0]
   1a296:	2301      	movs	r3, #1
   1a298:	4083      	lsls	r3, r0
   1a29a:	ea22 0303 	bic.w	r3, r2, r3
   1a29e:	600b      	str	r3, [r1, #0]
   1a2a0:	4620      	mov	r0, r4
   1a2a2:	f7ff fd17 	bl	19cd4 <prvAddCurrentTaskToDelayedList>
   1a2a6:	f7ff ff45 	bl	1a134 <xTaskResumeAll>
   1a2aa:	2800      	cmp	r0, #0
   1a2ac:	d0e0      	beq.n	1a270 <vTaskDelay+0x4>
   1a2ae:	bd38      	pop	{r3, r4, r5, pc}
   1a2b0:	2007c6f4 	.word	0x2007c6f4
   1a2b4:	2007c6dc 	.word	0x2007c6dc
   1a2b8:	2007c71c 	.word	0x2007c71c

0001a2bc <uxTaskGetSystemState>:
uxTaskGetSystemState():
   1a2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a2c0:	4606      	mov	r6, r0
   1a2c2:	4617      	mov	r7, r2
   1a2c4:	f7ff fe84 	bl	19fd0 <vTaskSuspendAll>
   1a2c8:	4b1b      	ldr	r3, [pc, #108]	; (1a338 <uxTaskGetSystemState+0x7c>)
   1a2ca:	681b      	ldr	r3, [r3, #0]
   1a2cc:	428b      	cmp	r3, r1
   1a2ce:	d82c      	bhi.n	1a32a <uxTaskGetSystemState+0x6e>
   1a2d0:	2500      	movs	r5, #0
   1a2d2:	462c      	mov	r4, r5
   1a2d4:	f8df 8070 	ldr.w	r8, [pc, #112]	; 1a348 <uxTaskGetSystemState+0x8c>
   1a2d8:	f105 01b4 	add.w	r1, r5, #180	; 0xb4
   1a2dc:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1a2e0:	2201      	movs	r2, #1
   1a2e2:	4441      	add	r1, r8
   1a2e4:	f7ff fd1e 	bl	19d24 <prvListTaskWithinSingleList>
   1a2e8:	3d14      	subs	r5, #20
   1a2ea:	f115 0fc8 	cmn.w	r5, #200	; 0xc8
   1a2ee:	4404      	add	r4, r0
   1a2f0:	d1f2      	bne.n	1a2d8 <uxTaskGetSystemState+0x1c>
   1a2f2:	4b12      	ldr	r3, [pc, #72]	; (1a33c <uxTaskGetSystemState+0x80>)
   1a2f4:	2202      	movs	r2, #2
   1a2f6:	6819      	ldr	r1, [r3, #0]
   1a2f8:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1a2fc:	f7ff fd12 	bl	19d24 <prvListTaskWithinSingleList>
   1a300:	4b0f      	ldr	r3, [pc, #60]	; (1a340 <uxTaskGetSystemState+0x84>)
   1a302:	4404      	add	r4, r0
   1a304:	6819      	ldr	r1, [r3, #0]
   1a306:	2202      	movs	r2, #2
   1a308:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1a30c:	f7ff fd0a 	bl	19d24 <prvListTaskWithinSingleList>
   1a310:	4404      	add	r4, r0
   1a312:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1a316:	2203      	movs	r2, #3
   1a318:	490a      	ldr	r1, [pc, #40]	; (1a344 <uxTaskGetSystemState+0x88>)
   1a31a:	f7ff fd03 	bl	19d24 <prvListTaskWithinSingleList>
   1a31e:	4404      	add	r4, r0
   1a320:	b127      	cbz	r7, 1a32c <uxTaskGetSystemState+0x70>
   1a322:	f7ff fb9f 	bl	19a64 <uxGetTimerForRunTimeStats>
   1a326:	6038      	str	r0, [r7, #0]
   1a328:	e000      	b.n	1a32c <uxTaskGetSystemState+0x70>
   1a32a:	2400      	movs	r4, #0
   1a32c:	f7ff ff02 	bl	1a134 <xTaskResumeAll>
   1a330:	4620      	mov	r0, r4
   1a332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a336:	bf00      	nop
   1a338:	2007c700 	.word	0x2007c700
   1a33c:	2007c5dc 	.word	0x2007c5dc
   1a340:	2007c6f8 	.word	0x2007c6f8
   1a344:	2007c708 	.word	0x2007c708
   1a348:	2007c610 	.word	0x2007c610

0001a34c <vTaskSwitchContext>:
vTaskSwitchContext():
   1a34c:	4b27      	ldr	r3, [pc, #156]	; (1a3ec <vTaskSwitchContext+0xa0>)
   1a34e:	b570      	push	{r4, r5, r6, lr}
   1a350:	681a      	ldr	r2, [r3, #0]
   1a352:	4b27      	ldr	r3, [pc, #156]	; (1a3f0 <vTaskSwitchContext+0xa4>)
   1a354:	b112      	cbz	r2, 1a35c <vTaskSwitchContext+0x10>
   1a356:	2201      	movs	r2, #1
   1a358:	601a      	str	r2, [r3, #0]
   1a35a:	bd70      	pop	{r4, r5, r6, pc}
   1a35c:	601a      	str	r2, [r3, #0]
   1a35e:	f7ff fb81 	bl	19a64 <uxGetTimerForRunTimeStats>
   1a362:	4a24      	ldr	r2, [pc, #144]	; (1a3f4 <vTaskSwitchContext+0xa8>)
   1a364:	4c24      	ldr	r4, [pc, #144]	; (1a3f8 <vTaskSwitchContext+0xac>)
   1a366:	6815      	ldr	r5, [r2, #0]
   1a368:	42a8      	cmp	r0, r5
   1a36a:	d904      	bls.n	1a376 <vTaskSwitchContext+0x2a>
   1a36c:	6821      	ldr	r1, [r4, #0]
   1a36e:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   1a370:	1b5b      	subs	r3, r3, r5
   1a372:	4403      	add	r3, r0
   1a374:	64cb      	str	r3, [r1, #76]	; 0x4c
   1a376:	6821      	ldr	r1, [r4, #0]
   1a378:	6010      	str	r0, [r2, #0]
   1a37a:	6822      	ldr	r2, [r4, #0]
   1a37c:	6809      	ldr	r1, [r1, #0]
   1a37e:	6b12      	ldr	r2, [r2, #48]	; 0x30
   1a380:	4b1d      	ldr	r3, [pc, #116]	; (1a3f8 <vTaskSwitchContext+0xac>)
   1a382:	4291      	cmp	r1, r2
   1a384:	d804      	bhi.n	1a390 <vTaskSwitchContext+0x44>
   1a386:	6818      	ldr	r0, [r3, #0]
   1a388:	6819      	ldr	r1, [r3, #0]
   1a38a:	3134      	adds	r1, #52	; 0x34
   1a38c:	f7ff fc3c 	bl	19c08 <vApplicationStackOverflowHook>
   1a390:	6823      	ldr	r3, [r4, #0]
   1a392:	2214      	movs	r2, #20
   1a394:	4919      	ldr	r1, [pc, #100]	; (1a3fc <vTaskSwitchContext+0xb0>)
   1a396:	6b18      	ldr	r0, [r3, #48]	; 0x30
   1a398:	4d17      	ldr	r5, [pc, #92]	; (1a3f8 <vTaskSwitchContext+0xac>)
   1a39a:	f002 ffa9 	bl	1d2f0 <memcmp>
   1a39e:	b120      	cbz	r0, 1a3aa <vTaskSwitchContext+0x5e>
   1a3a0:	6828      	ldr	r0, [r5, #0]
   1a3a2:	6829      	ldr	r1, [r5, #0]
   1a3a4:	3134      	adds	r1, #52	; 0x34
   1a3a6:	f7ff fc2f 	bl	19c08 <vApplicationStackOverflowHook>
   1a3aa:	4b15      	ldr	r3, [pc, #84]	; (1a400 <vTaskSwitchContext+0xb4>)
   1a3ac:	681b      	ldr	r3, [r3, #0]
   1a3ae:	fab3 f383 	clz	r3, r3
   1a3b2:	b2db      	uxtb	r3, r3
   1a3b4:	f1c3 031f 	rsb	r3, r3, #31
   1a3b8:	2014      	movs	r0, #20
   1a3ba:	fb00 f203 	mul.w	r2, r0, r3
   1a3be:	4911      	ldr	r1, [pc, #68]	; (1a404 <vTaskSwitchContext+0xb8>)
   1a3c0:	188d      	adds	r5, r1, r2
   1a3c2:	686e      	ldr	r6, [r5, #4]
   1a3c4:	3208      	adds	r2, #8
   1a3c6:	6876      	ldr	r6, [r6, #4]
   1a3c8:	440a      	add	r2, r1
   1a3ca:	4296      	cmp	r6, r2
   1a3cc:	fb00 1303 	mla	r3, r0, r3, r1
   1a3d0:	bf08      	it	eq
   1a3d2:	6872      	ldreq	r2, [r6, #4]
   1a3d4:	606e      	str	r6, [r5, #4]
   1a3d6:	bf08      	it	eq
   1a3d8:	606a      	streq	r2, [r5, #4]
   1a3da:	685b      	ldr	r3, [r3, #4]
   1a3dc:	68db      	ldr	r3, [r3, #12]
   1a3de:	6023      	str	r3, [r4, #0]
   1a3e0:	6823      	ldr	r3, [r4, #0]
   1a3e2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   1a3e4:	4b08      	ldr	r3, [pc, #32]	; (1a408 <vTaskSwitchContext+0xbc>)
   1a3e6:	645a      	str	r2, [r3, #68]	; 0x44
   1a3e8:	bd70      	pop	{r4, r5, r6, pc}
   1a3ea:	bf00      	nop
   1a3ec:	2007c6d8 	.word	0x2007c6d8
   1a3f0:	2007c720 	.word	0x2007c720
   1a3f4:	2007c5d4 	.word	0x2007c5d4
   1a3f8:	2007c6dc 	.word	0x2007c6dc
   1a3fc:	00025ef3 	.word	0x00025ef3
   1a400:	2007c71c 	.word	0x2007c71c
   1a404:	2007c610 	.word	0x2007c610
   1a408:	40024000 	.word	0x40024000

0001a40c <vTaskSuspend>:
vTaskSuspend():
   1a40c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a40e:	4604      	mov	r4, r0
   1a410:	4d21      	ldr	r5, [pc, #132]	; (1a498 <vTaskSuspend+0x8c>)
   1a412:	f7ff fb85 	bl	19b20 <vPortEnterCritical>
   1a416:	b904      	cbnz	r4, 1a41a <vTaskSuspend+0xe>
   1a418:	682c      	ldr	r4, [r5, #0]
   1a41a:	1d26      	adds	r6, r4, #4
   1a41c:	4630      	mov	r0, r6
   1a41e:	f000 fa19 	bl	1a854 <uxListRemove>
   1a422:	b960      	cbnz	r0, 1a43e <vTaskSuspend+0x32>
   1a424:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   1a426:	2214      	movs	r2, #20
   1a428:	4342      	muls	r2, r0
   1a42a:	4b1c      	ldr	r3, [pc, #112]	; (1a49c <vTaskSuspend+0x90>)
   1a42c:	589b      	ldr	r3, [r3, r2]
   1a42e:	b933      	cbnz	r3, 1a43e <vTaskSuspend+0x32>
   1a430:	491b      	ldr	r1, [pc, #108]	; (1a4a0 <vTaskSuspend+0x94>)
   1a432:	2301      	movs	r3, #1
   1a434:	680a      	ldr	r2, [r1, #0]
   1a436:	4083      	lsls	r3, r0
   1a438:	ea22 0303 	bic.w	r3, r2, r3
   1a43c:	600b      	str	r3, [r1, #0]
   1a43e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1a440:	b11b      	cbz	r3, 1a44a <vTaskSuspend+0x3e>
   1a442:	f104 0018 	add.w	r0, r4, #24
   1a446:	f000 fa05 	bl	1a854 <uxListRemove>
   1a44a:	4f16      	ldr	r7, [pc, #88]	; (1a4a4 <vTaskSuspend+0x98>)
   1a44c:	4631      	mov	r1, r6
   1a44e:	4638      	mov	r0, r7
   1a450:	f000 f9dc 	bl	1a80c <vListInsertEnd>
   1a454:	f7ff fb76 	bl	19b44 <vPortExitCritical>
   1a458:	682b      	ldr	r3, [r5, #0]
   1a45a:	429c      	cmp	r4, r3
   1a45c:	4b12      	ldr	r3, [pc, #72]	; (1a4a8 <vTaskSuspend+0x9c>)
   1a45e:	681b      	ldr	r3, [r3, #0]
   1a460:	d110      	bne.n	1a484 <vTaskSuspend+0x78>
   1a462:	b11b      	cbz	r3, 1a46c <vTaskSuspend+0x60>
   1a464:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1a468:	f7ff bb42 	b.w	19af0 <vPortYield>
   1a46c:	4a0f      	ldr	r2, [pc, #60]	; (1a4ac <vTaskSuspend+0xa0>)
   1a46e:	6839      	ldr	r1, [r7, #0]
   1a470:	6812      	ldr	r2, [r2, #0]
   1a472:	4291      	cmp	r1, r2
   1a474:	d102      	bne.n	1a47c <vTaskSuspend+0x70>
   1a476:	4a08      	ldr	r2, [pc, #32]	; (1a498 <vTaskSuspend+0x8c>)
   1a478:	6013      	str	r3, [r2, #0]
   1a47a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a47c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1a480:	f7ff bf64 	b.w	1a34c <vTaskSwitchContext>
   1a484:	b13b      	cbz	r3, 1a496 <vTaskSuspend+0x8a>
   1a486:	f7ff fb4b 	bl	19b20 <vPortEnterCritical>
   1a48a:	f7ff fc11 	bl	19cb0 <prvResetNextTaskUnblockTime>
   1a48e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1a492:	f7ff bb57 	b.w	19b44 <vPortExitCritical>
   1a496:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a498:	2007c6dc 	.word	0x2007c6dc
   1a49c:	2007c610 	.word	0x2007c610
   1a4a0:	2007c71c 	.word	0x2007c71c
   1a4a4:	2007c708 	.word	0x2007c708
   1a4a8:	2007c5e0 	.word	0x2007c5e0
   1a4ac:	2007c700 	.word	0x2007c700

0001a4b0 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
   1a4b0:	b538      	push	{r3, r4, r5, lr}
   1a4b2:	4c12      	ldr	r4, [pc, #72]	; (1a4fc <vTaskPlaceOnEventList+0x4c>)
   1a4b4:	460d      	mov	r5, r1
   1a4b6:	6821      	ldr	r1, [r4, #0]
   1a4b8:	3118      	adds	r1, #24
   1a4ba:	f000 f9b3 	bl	1a824 <vListInsert>
   1a4be:	6820      	ldr	r0, [r4, #0]
   1a4c0:	3004      	adds	r0, #4
   1a4c2:	f000 f9c7 	bl	1a854 <uxListRemove>
   1a4c6:	b940      	cbnz	r0, 1a4da <vTaskPlaceOnEventList+0x2a>
   1a4c8:	6823      	ldr	r3, [r4, #0]
   1a4ca:	490d      	ldr	r1, [pc, #52]	; (1a500 <vTaskPlaceOnEventList+0x50>)
   1a4cc:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
   1a4ce:	680a      	ldr	r2, [r1, #0]
   1a4d0:	2301      	movs	r3, #1
   1a4d2:	4083      	lsls	r3, r0
   1a4d4:	ea22 0303 	bic.w	r3, r2, r3
   1a4d8:	600b      	str	r3, [r1, #0]
   1a4da:	1c6b      	adds	r3, r5, #1
   1a4dc:	d106      	bne.n	1a4ec <vTaskPlaceOnEventList+0x3c>
   1a4de:	6821      	ldr	r1, [r4, #0]
   1a4e0:	4808      	ldr	r0, [pc, #32]	; (1a504 <vTaskPlaceOnEventList+0x54>)
   1a4e2:	3104      	adds	r1, #4
   1a4e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a4e8:	f000 b990 	b.w	1a80c <vListInsertEnd>
   1a4ec:	4b06      	ldr	r3, [pc, #24]	; (1a508 <vTaskPlaceOnEventList+0x58>)
   1a4ee:	6818      	ldr	r0, [r3, #0]
   1a4f0:	4428      	add	r0, r5
   1a4f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a4f6:	f7ff bbed 	b.w	19cd4 <prvAddCurrentTaskToDelayedList>
   1a4fa:	bf00      	nop
   1a4fc:	2007c6dc 	.word	0x2007c6dc
   1a500:	2007c71c 	.word	0x2007c71c
   1a504:	2007c708 	.word	0x2007c708
   1a508:	2007c6f4 	.word	0x2007c6f4

0001a50c <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
   1a50c:	68c3      	ldr	r3, [r0, #12]
   1a50e:	b570      	push	{r4, r5, r6, lr}
   1a510:	68dc      	ldr	r4, [r3, #12]
   1a512:	f104 0518 	add.w	r5, r4, #24
   1a516:	4628      	mov	r0, r5
   1a518:	f000 f99c 	bl	1a854 <uxListRemove>
   1a51c:	4b11      	ldr	r3, [pc, #68]	; (1a564 <xTaskRemoveFromEventList+0x58>)
   1a51e:	681b      	ldr	r3, [r3, #0]
   1a520:	b983      	cbnz	r3, 1a544 <xTaskRemoveFromEventList+0x38>
   1a522:	1d26      	adds	r6, r4, #4
   1a524:	4630      	mov	r0, r6
   1a526:	f000 f995 	bl	1a854 <uxListRemove>
   1a52a:	490f      	ldr	r1, [pc, #60]	; (1a568 <xTaskRemoveFromEventList+0x5c>)
   1a52c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
   1a52e:	680a      	ldr	r2, [r1, #0]
   1a530:	2301      	movs	r3, #1
   1a532:	40ab      	lsls	r3, r5
   1a534:	4313      	orrs	r3, r2
   1a536:	600b      	str	r3, [r1, #0]
   1a538:	4b0c      	ldr	r3, [pc, #48]	; (1a56c <xTaskRemoveFromEventList+0x60>)
   1a53a:	2014      	movs	r0, #20
   1a53c:	4631      	mov	r1, r6
   1a53e:	fb00 3005 	mla	r0, r0, r5, r3
   1a542:	e001      	b.n	1a548 <xTaskRemoveFromEventList+0x3c>
   1a544:	4629      	mov	r1, r5
   1a546:	480a      	ldr	r0, [pc, #40]	; (1a570 <xTaskRemoveFromEventList+0x64>)
   1a548:	f000 f960 	bl	1a80c <vListInsertEnd>
   1a54c:	4b09      	ldr	r3, [pc, #36]	; (1a574 <xTaskRemoveFromEventList+0x68>)
   1a54e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1a550:	681b      	ldr	r3, [r3, #0]
   1a552:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1a554:	429a      	cmp	r2, r3
   1a556:	bf83      	ittte	hi
   1a558:	4b07      	ldrhi	r3, [pc, #28]	; (1a578 <xTaskRemoveFromEventList+0x6c>)
   1a55a:	2001      	movhi	r0, #1
   1a55c:	6018      	strhi	r0, [r3, #0]
   1a55e:	2000      	movls	r0, #0
   1a560:	bd70      	pop	{r4, r5, r6, pc}
   1a562:	bf00      	nop
   1a564:	2007c6d8 	.word	0x2007c6d8
   1a568:	2007c71c 	.word	0x2007c71c
   1a56c:	2007c610 	.word	0x2007c610
   1a570:	2007c6e0 	.word	0x2007c6e0
   1a574:	2007c6dc 	.word	0x2007c6dc
   1a578:	2007c720 	.word	0x2007c720

0001a57c <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
   1a57c:	4b03      	ldr	r3, [pc, #12]	; (1a58c <vTaskSetTimeOutState+0x10>)
   1a57e:	681b      	ldr	r3, [r3, #0]
   1a580:	6003      	str	r3, [r0, #0]
   1a582:	4b03      	ldr	r3, [pc, #12]	; (1a590 <vTaskSetTimeOutState+0x14>)
   1a584:	681b      	ldr	r3, [r3, #0]
   1a586:	6043      	str	r3, [r0, #4]
   1a588:	4770      	bx	lr
   1a58a:	bf00      	nop
   1a58c:	2007c5d8 	.word	0x2007c5d8
   1a590:	2007c6f4 	.word	0x2007c6f4

0001a594 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
   1a594:	b538      	push	{r3, r4, r5, lr}
   1a596:	460d      	mov	r5, r1
   1a598:	4604      	mov	r4, r0
   1a59a:	f7ff fac1 	bl	19b20 <vPortEnterCritical>
   1a59e:	4b0e      	ldr	r3, [pc, #56]	; (1a5d8 <xTaskCheckForTimeOut+0x44>)
   1a5a0:	6818      	ldr	r0, [r3, #0]
   1a5a2:	682b      	ldr	r3, [r5, #0]
   1a5a4:	1c5a      	adds	r2, r3, #1
   1a5a6:	d010      	beq.n	1a5ca <xTaskCheckForTimeOut+0x36>
   1a5a8:	4a0c      	ldr	r2, [pc, #48]	; (1a5dc <xTaskCheckForTimeOut+0x48>)
   1a5aa:	6821      	ldr	r1, [r4, #0]
   1a5ac:	6812      	ldr	r2, [r2, #0]
   1a5ae:	4291      	cmp	r1, r2
   1a5b0:	6862      	ldr	r2, [r4, #4]
   1a5b2:	d001      	beq.n	1a5b8 <xTaskCheckForTimeOut+0x24>
   1a5b4:	4290      	cmp	r0, r2
   1a5b6:	d20a      	bcs.n	1a5ce <xTaskCheckForTimeOut+0x3a>
   1a5b8:	1a81      	subs	r1, r0, r2
   1a5ba:	428b      	cmp	r3, r1
   1a5bc:	d907      	bls.n	1a5ce <xTaskCheckForTimeOut+0x3a>
   1a5be:	1a12      	subs	r2, r2, r0
   1a5c0:	4413      	add	r3, r2
   1a5c2:	602b      	str	r3, [r5, #0]
   1a5c4:	4620      	mov	r0, r4
   1a5c6:	f7ff ffd9 	bl	1a57c <vTaskSetTimeOutState>
   1a5ca:	2400      	movs	r4, #0
   1a5cc:	e000      	b.n	1a5d0 <xTaskCheckForTimeOut+0x3c>
   1a5ce:	2401      	movs	r4, #1
   1a5d0:	f7ff fab8 	bl	19b44 <vPortExitCritical>
   1a5d4:	4620      	mov	r0, r4
   1a5d6:	bd38      	pop	{r3, r4, r5, pc}
   1a5d8:	2007c6f4 	.word	0x2007c6f4
   1a5dc:	2007c5d8 	.word	0x2007c5d8

0001a5e0 <vTaskMissedYield>:
vTaskMissedYield():
   1a5e0:	4b01      	ldr	r3, [pc, #4]	; (1a5e8 <vTaskMissedYield+0x8>)
   1a5e2:	2201      	movs	r2, #1
   1a5e4:	601a      	str	r2, [r3, #0]
   1a5e6:	4770      	bx	lr
   1a5e8:	2007c720 	.word	0x2007c720

0001a5ec <uxTaskGetStackHighWaterMark>:
uxTaskGetStackHighWaterMark():
   1a5ec:	b908      	cbnz	r0, 1a5f2 <uxTaskGetStackHighWaterMark+0x6>
   1a5ee:	4b06      	ldr	r3, [pc, #24]	; (1a608 <uxTaskGetStackHighWaterMark+0x1c>)
   1a5f0:	6818      	ldr	r0, [r3, #0]
   1a5f2:	6b02      	ldr	r2, [r0, #48]	; 0x30
   1a5f4:	4613      	mov	r3, r2
   1a5f6:	1a98      	subs	r0, r3, r2
   1a5f8:	f813 1b01 	ldrb.w	r1, [r3], #1
   1a5fc:	29a5      	cmp	r1, #165	; 0xa5
   1a5fe:	d0fa      	beq.n	1a5f6 <uxTaskGetStackHighWaterMark+0xa>
   1a600:	f3c0 008f 	ubfx	r0, r0, #2, #16
   1a604:	4770      	bx	lr
   1a606:	bf00      	nop
   1a608:	2007c6dc 	.word	0x2007c6dc

0001a60c <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
   1a60c:	4b05      	ldr	r3, [pc, #20]	; (1a624 <xTaskGetSchedulerState+0x18>)
   1a60e:	681b      	ldr	r3, [r3, #0]
   1a610:	b133      	cbz	r3, 1a620 <xTaskGetSchedulerState+0x14>
   1a612:	4b05      	ldr	r3, [pc, #20]	; (1a628 <xTaskGetSchedulerState+0x1c>)
   1a614:	681b      	ldr	r3, [r3, #0]
   1a616:	2b00      	cmp	r3, #0
   1a618:	bf0c      	ite	eq
   1a61a:	2002      	moveq	r0, #2
   1a61c:	2000      	movne	r0, #0
   1a61e:	4770      	bx	lr
   1a620:	2001      	movs	r0, #1
   1a622:	4770      	bx	lr
   1a624:	2007c5e0 	.word	0x2007c5e0
   1a628:	2007c6d8 	.word	0x2007c6d8

0001a62c <vTaskPriorityInherit>:
vTaskPriorityInherit():
   1a62c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a630:	4604      	mov	r4, r0
   1a632:	2800      	cmp	r0, #0
   1a634:	d03b      	beq.n	1a6ae <vTaskPriorityInherit+0x82>
   1a636:	4d1f      	ldr	r5, [pc, #124]	; (1a6b4 <vTaskPriorityInherit+0x88>)
   1a638:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   1a63a:	682a      	ldr	r2, [r5, #0]
   1a63c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1a63e:	4293      	cmp	r3, r2
   1a640:	d235      	bcs.n	1a6ae <vTaskPriorityInherit+0x82>
   1a642:	6982      	ldr	r2, [r0, #24]
   1a644:	4e1c      	ldr	r6, [pc, #112]	; (1a6b8 <vTaskPriorityInherit+0x8c>)
   1a646:	2a00      	cmp	r2, #0
   1a648:	bfa8      	it	ge
   1a64a:	682a      	ldrge	r2, [r5, #0]
   1a64c:	f04f 0714 	mov.w	r7, #20
   1a650:	bfa8      	it	ge
   1a652:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   1a654:	fb07 6303 	mla	r3, r7, r3, r6
   1a658:	bfa4      	itt	ge
   1a65a:	f1c2 020a 	rsbge	r2, r2, #10
   1a65e:	6182      	strge	r2, [r0, #24]
   1a660:	6942      	ldr	r2, [r0, #20]
   1a662:	429a      	cmp	r2, r3
   1a664:	d120      	bne.n	1a6a8 <vTaskPriorityInherit+0x7c>
   1a666:	f100 0804 	add.w	r8, r0, #4
   1a66a:	4640      	mov	r0, r8
   1a66c:	f000 f8f2 	bl	1a854 <uxListRemove>
   1a670:	4b12      	ldr	r3, [pc, #72]	; (1a6bc <vTaskPriorityInherit+0x90>)
   1a672:	b948      	cbnz	r0, 1a688 <vTaskPriorityInherit+0x5c>
   1a674:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   1a676:	4347      	muls	r7, r0
   1a678:	59f2      	ldr	r2, [r6, r7]
   1a67a:	b92a      	cbnz	r2, 1a688 <vTaskPriorityInherit+0x5c>
   1a67c:	6819      	ldr	r1, [r3, #0]
   1a67e:	2201      	movs	r2, #1
   1a680:	4082      	lsls	r2, r0
   1a682:	ea21 0202 	bic.w	r2, r1, r2
   1a686:	601a      	str	r2, [r3, #0]
   1a688:	682a      	ldr	r2, [r5, #0]
   1a68a:	2001      	movs	r0, #1
   1a68c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1a68e:	4641      	mov	r1, r8
   1a690:	62e2      	str	r2, [r4, #44]	; 0x2c
   1a692:	681c      	ldr	r4, [r3, #0]
   1a694:	4090      	lsls	r0, r2
   1a696:	4320      	orrs	r0, r4
   1a698:	6018      	str	r0, [r3, #0]
   1a69a:	2014      	movs	r0, #20
   1a69c:	fb00 6002 	mla	r0, r0, r2, r6
   1a6a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1a6a4:	f000 b8b2 	b.w	1a80c <vListInsertEnd>
   1a6a8:	682b      	ldr	r3, [r5, #0]
   1a6aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1a6ac:	62c3      	str	r3, [r0, #44]	; 0x2c
   1a6ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a6b2:	bf00      	nop
   1a6b4:	2007c6dc 	.word	0x2007c6dc
   1a6b8:	2007c610 	.word	0x2007c610
   1a6bc:	2007c71c 	.word	0x2007c71c

0001a6c0 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
   1a6c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a6c2:	4604      	mov	r4, r0
   1a6c4:	b908      	cbnz	r0, 1a6ca <xTaskPriorityDisinherit+0xa>
   1a6c6:	2000      	movs	r0, #0
   1a6c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a6ca:	6c83      	ldr	r3, [r0, #72]	; 0x48
   1a6cc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   1a6ce:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1a6d0:	3b01      	subs	r3, #1
   1a6d2:	4291      	cmp	r1, r2
   1a6d4:	6483      	str	r3, [r0, #72]	; 0x48
   1a6d6:	d0f6      	beq.n	1a6c6 <xTaskPriorityDisinherit+0x6>
   1a6d8:	2b00      	cmp	r3, #0
   1a6da:	d1f4      	bne.n	1a6c6 <xTaskPriorityDisinherit+0x6>
   1a6dc:	1d05      	adds	r5, r0, #4
   1a6de:	4628      	mov	r0, r5
   1a6e0:	f000 f8b8 	bl	1a854 <uxListRemove>
   1a6e4:	4e10      	ldr	r6, [pc, #64]	; (1a728 <xTaskPriorityDisinherit+0x68>)
   1a6e6:	4a11      	ldr	r2, [pc, #68]	; (1a72c <xTaskPriorityDisinherit+0x6c>)
   1a6e8:	b950      	cbnz	r0, 1a700 <xTaskPriorityDisinherit+0x40>
   1a6ea:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   1a6ec:	2114      	movs	r1, #20
   1a6ee:	4379      	muls	r1, r7
   1a6f0:	5873      	ldr	r3, [r6, r1]
   1a6f2:	b92b      	cbnz	r3, 1a700 <xTaskPriorityDisinherit+0x40>
   1a6f4:	6810      	ldr	r0, [r2, #0]
   1a6f6:	2301      	movs	r3, #1
   1a6f8:	40bb      	lsls	r3, r7
   1a6fa:	ea20 0303 	bic.w	r3, r0, r3
   1a6fe:	6013      	str	r3, [r2, #0]
   1a700:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1a702:	6810      	ldr	r0, [r2, #0]
   1a704:	f1c3 010a 	rsb	r1, r3, #10
   1a708:	62e3      	str	r3, [r4, #44]	; 0x2c
   1a70a:	61a1      	str	r1, [r4, #24]
   1a70c:	2401      	movs	r4, #1
   1a70e:	fa04 f103 	lsl.w	r1, r4, r3
   1a712:	4308      	orrs	r0, r1
   1a714:	6010      	str	r0, [r2, #0]
   1a716:	2014      	movs	r0, #20
   1a718:	fb00 6003 	mla	r0, r0, r3, r6
   1a71c:	4629      	mov	r1, r5
   1a71e:	f000 f875 	bl	1a80c <vListInsertEnd>
   1a722:	4620      	mov	r0, r4
   1a724:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a726:	bf00      	nop
   1a728:	2007c610 	.word	0x2007c610
   1a72c:	2007c71c 	.word	0x2007c71c

0001a730 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
   1a730:	4b04      	ldr	r3, [pc, #16]	; (1a744 <pvTaskIncrementMutexHeldCount+0x14>)
   1a732:	681a      	ldr	r2, [r3, #0]
   1a734:	b11a      	cbz	r2, 1a73e <pvTaskIncrementMutexHeldCount+0xe>
   1a736:	6819      	ldr	r1, [r3, #0]
   1a738:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   1a73a:	3201      	adds	r2, #1
   1a73c:	648a      	str	r2, [r1, #72]	; 0x48
   1a73e:	6818      	ldr	r0, [r3, #0]
   1a740:	4770      	bx	lr
   1a742:	bf00      	nop
   1a744:	2007c6dc 	.word	0x2007c6dc

0001a748 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
   1a748:	b538      	push	{r3, r4, r5, lr}
   1a74a:	f7ff fc41 	bl	19fd0 <vTaskSuspendAll>
   1a74e:	4d15      	ldr	r5, [pc, #84]	; (1a7a4 <vTaskResetRunTimeStats+0x5c>)
   1a750:	2400      	movs	r4, #0
   1a752:	192b      	adds	r3, r5, r4
   1a754:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
   1a758:	b123      	cbz	r3, 1a764 <vTaskResetRunTimeStats+0x1c>
   1a75a:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
   1a75e:	4428      	add	r0, r5
   1a760:	f7ff fa80 	bl	19c64 <prvResetRunTimeStatsInList>
   1a764:	3c14      	subs	r4, #20
   1a766:	f114 0fc8 	cmn.w	r4, #200	; 0xc8
   1a76a:	d1f2      	bne.n	1a752 <vTaskResetRunTimeStats+0xa>
   1a76c:	4b0e      	ldr	r3, [pc, #56]	; (1a7a8 <vTaskResetRunTimeStats+0x60>)
   1a76e:	681a      	ldr	r2, [r3, #0]
   1a770:	6812      	ldr	r2, [r2, #0]
   1a772:	b112      	cbz	r2, 1a77a <vTaskResetRunTimeStats+0x32>
   1a774:	6818      	ldr	r0, [r3, #0]
   1a776:	f7ff fa75 	bl	19c64 <prvResetRunTimeStatsInList>
   1a77a:	4b0c      	ldr	r3, [pc, #48]	; (1a7ac <vTaskResetRunTimeStats+0x64>)
   1a77c:	681a      	ldr	r2, [r3, #0]
   1a77e:	6812      	ldr	r2, [r2, #0]
   1a780:	b112      	cbz	r2, 1a788 <vTaskResetRunTimeStats+0x40>
   1a782:	6818      	ldr	r0, [r3, #0]
   1a784:	f7ff fa6e 	bl	19c64 <prvResetRunTimeStatsInList>
   1a788:	4809      	ldr	r0, [pc, #36]	; (1a7b0 <vTaskResetRunTimeStats+0x68>)
   1a78a:	6803      	ldr	r3, [r0, #0]
   1a78c:	b10b      	cbz	r3, 1a792 <vTaskResetRunTimeStats+0x4a>
   1a78e:	f7ff fa69 	bl	19c64 <prvResetRunTimeStatsInList>
   1a792:	4b08      	ldr	r3, [pc, #32]	; (1a7b4 <vTaskResetRunTimeStats+0x6c>)
   1a794:	2200      	movs	r2, #0
   1a796:	601a      	str	r2, [r3, #0]
   1a798:	f7ff f96e 	bl	19a78 <resetRunTimeCounter>
   1a79c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a7a0:	f7ff bcc8 	b.w	1a134 <xTaskResumeAll>
   1a7a4:	2007c610 	.word	0x2007c610
   1a7a8:	2007c5dc 	.word	0x2007c5dc
   1a7ac:	2007c6f8 	.word	0x2007c6f8
   1a7b0:	2007c708 	.word	0x2007c708
   1a7b4:	2007c5d4 	.word	0x2007c5d4

0001a7b8 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
   1a7b8:	b510      	push	{r4, lr}
   1a7ba:	f7ff f953 	bl	19a64 <uxGetTimerForRunTimeStats>
   1a7be:	4b06      	ldr	r3, [pc, #24]	; (1a7d8 <vRunTimeStatIsrEntry+0x20>)
   1a7c0:	4a06      	ldr	r2, [pc, #24]	; (1a7dc <vRunTimeStatIsrEntry+0x24>)
   1a7c2:	6819      	ldr	r1, [r3, #0]
   1a7c4:	b129      	cbz	r1, 1a7d2 <vRunTimeStatIsrEntry+0x1a>
   1a7c6:	6819      	ldr	r1, [r3, #0]
   1a7c8:	6814      	ldr	r4, [r2, #0]
   1a7ca:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   1a7cc:	1b1b      	subs	r3, r3, r4
   1a7ce:	4403      	add	r3, r0
   1a7d0:	64cb      	str	r3, [r1, #76]	; 0x4c
   1a7d2:	6010      	str	r0, [r2, #0]
   1a7d4:	bd10      	pop	{r4, pc}
   1a7d6:	bf00      	nop
   1a7d8:	2007c6dc 	.word	0x2007c6dc
   1a7dc:	2007c5d4 	.word	0x2007c5d4

0001a7e0 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
   1a7e0:	b508      	push	{r3, lr}
   1a7e2:	f7ff f93f 	bl	19a64 <uxGetTimerForRunTimeStats>
   1a7e6:	4b01      	ldr	r3, [pc, #4]	; (1a7ec <vRunTimeStatIsrExit+0xc>)
   1a7e8:	6018      	str	r0, [r3, #0]
   1a7ea:	bd08      	pop	{r3, pc}
   1a7ec:	2007c5d4 	.word	0x2007c5d4

0001a7f0 <vListInitialise>:
vListInitialise():
   1a7f0:	f100 0308 	add.w	r3, r0, #8
   1a7f4:	6043      	str	r3, [r0, #4]
   1a7f6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a7fa:	60c3      	str	r3, [r0, #12]
   1a7fc:	6103      	str	r3, [r0, #16]
   1a7fe:	2300      	movs	r3, #0
   1a800:	6082      	str	r2, [r0, #8]
   1a802:	6003      	str	r3, [r0, #0]
   1a804:	4770      	bx	lr

0001a806 <vListInitialiseItem>:
vListInitialiseItem():
   1a806:	2300      	movs	r3, #0
   1a808:	6103      	str	r3, [r0, #16]
   1a80a:	4770      	bx	lr

0001a80c <vListInsertEnd>:
vListInsertEnd():
   1a80c:	6843      	ldr	r3, [r0, #4]
   1a80e:	689a      	ldr	r2, [r3, #8]
   1a810:	604b      	str	r3, [r1, #4]
   1a812:	608a      	str	r2, [r1, #8]
   1a814:	689a      	ldr	r2, [r3, #8]
   1a816:	6051      	str	r1, [r2, #4]
   1a818:	6099      	str	r1, [r3, #8]
   1a81a:	6803      	ldr	r3, [r0, #0]
   1a81c:	6108      	str	r0, [r1, #16]
   1a81e:	3301      	adds	r3, #1
   1a820:	6003      	str	r3, [r0, #0]
   1a822:	4770      	bx	lr

0001a824 <vListInsert>:
vListInsert():
   1a824:	680a      	ldr	r2, [r1, #0]
   1a826:	b530      	push	{r4, r5, lr}
   1a828:	1c53      	adds	r3, r2, #1
   1a82a:	d101      	bne.n	1a830 <vListInsert+0xc>
   1a82c:	6903      	ldr	r3, [r0, #16]
   1a82e:	e007      	b.n	1a840 <vListInsert+0x1c>
   1a830:	f100 0308 	add.w	r3, r0, #8
   1a834:	685c      	ldr	r4, [r3, #4]
   1a836:	6825      	ldr	r5, [r4, #0]
   1a838:	42aa      	cmp	r2, r5
   1a83a:	d301      	bcc.n	1a840 <vListInsert+0x1c>
   1a83c:	4623      	mov	r3, r4
   1a83e:	e7f9      	b.n	1a834 <vListInsert+0x10>
   1a840:	685a      	ldr	r2, [r3, #4]
   1a842:	604a      	str	r2, [r1, #4]
   1a844:	6091      	str	r1, [r2, #8]
   1a846:	608b      	str	r3, [r1, #8]
   1a848:	6059      	str	r1, [r3, #4]
   1a84a:	6803      	ldr	r3, [r0, #0]
   1a84c:	6108      	str	r0, [r1, #16]
   1a84e:	3301      	adds	r3, #1
   1a850:	6003      	str	r3, [r0, #0]
   1a852:	bd30      	pop	{r4, r5, pc}

0001a854 <uxListRemove>:
uxListRemove():
   1a854:	6841      	ldr	r1, [r0, #4]
   1a856:	6882      	ldr	r2, [r0, #8]
   1a858:	6903      	ldr	r3, [r0, #16]
   1a85a:	608a      	str	r2, [r1, #8]
   1a85c:	6882      	ldr	r2, [r0, #8]
   1a85e:	6051      	str	r1, [r2, #4]
   1a860:	6859      	ldr	r1, [r3, #4]
   1a862:	4288      	cmp	r0, r1
   1a864:	bf08      	it	eq
   1a866:	605a      	streq	r2, [r3, #4]
   1a868:	2200      	movs	r2, #0
   1a86a:	6102      	str	r2, [r0, #16]
   1a86c:	6818      	ldr	r0, [r3, #0]
   1a86e:	3801      	subs	r0, #1
   1a870:	6018      	str	r0, [r3, #0]
   1a872:	4770      	bx	lr

0001a874 <prvCopyDataToQueue>:
prvCopyDataToQueue():
   1a874:	b538      	push	{r3, r4, r5, lr}
   1a876:	4615      	mov	r5, r2
   1a878:	6c02      	ldr	r2, [r0, #64]	; 0x40
   1a87a:	4604      	mov	r4, r0
   1a87c:	b932      	cbnz	r2, 1a88c <prvCopyDataToQueue+0x18>
   1a87e:	6805      	ldr	r5, [r0, #0]
   1a880:	bb45      	cbnz	r5, 1a8d4 <prvCopyDataToQueue+0x60>
   1a882:	6840      	ldr	r0, [r0, #4]
   1a884:	f7ff ff1c 	bl	1a6c0 <xTaskPriorityDisinherit>
   1a888:	6065      	str	r5, [r4, #4]
   1a88a:	e024      	b.n	1a8d6 <prvCopyDataToQueue+0x62>
   1a88c:	b96d      	cbnz	r5, 1a8aa <prvCopyDataToQueue+0x36>
   1a88e:	6880      	ldr	r0, [r0, #8]
   1a890:	f002 fd3d 	bl	1d30e <memcpy>
   1a894:	68a2      	ldr	r2, [r4, #8]
   1a896:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1a898:	4413      	add	r3, r2
   1a89a:	6862      	ldr	r2, [r4, #4]
   1a89c:	60a3      	str	r3, [r4, #8]
   1a89e:	4293      	cmp	r3, r2
   1a8a0:	d318      	bcc.n	1a8d4 <prvCopyDataToQueue+0x60>
   1a8a2:	6823      	ldr	r3, [r4, #0]
   1a8a4:	4628      	mov	r0, r5
   1a8a6:	60a3      	str	r3, [r4, #8]
   1a8a8:	e015      	b.n	1a8d6 <prvCopyDataToQueue+0x62>
   1a8aa:	68c0      	ldr	r0, [r0, #12]
   1a8ac:	f002 fd2f 	bl	1d30e <memcpy>
   1a8b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1a8b2:	68e2      	ldr	r2, [r4, #12]
   1a8b4:	425b      	negs	r3, r3
   1a8b6:	6821      	ldr	r1, [r4, #0]
   1a8b8:	441a      	add	r2, r3
   1a8ba:	428a      	cmp	r2, r1
   1a8bc:	60e2      	str	r2, [r4, #12]
   1a8be:	bf3e      	ittt	cc
   1a8c0:	6862      	ldrcc	r2, [r4, #4]
   1a8c2:	189b      	addcc	r3, r3, r2
   1a8c4:	60e3      	strcc	r3, [r4, #12]
   1a8c6:	2d02      	cmp	r5, #2
   1a8c8:	d104      	bne.n	1a8d4 <prvCopyDataToQueue+0x60>
   1a8ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a8cc:	b113      	cbz	r3, 1a8d4 <prvCopyDataToQueue+0x60>
   1a8ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a8d0:	3b01      	subs	r3, #1
   1a8d2:	63a3      	str	r3, [r4, #56]	; 0x38
   1a8d4:	2000      	movs	r0, #0
   1a8d6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a8d8:	3301      	adds	r3, #1
   1a8da:	63a3      	str	r3, [r4, #56]	; 0x38
   1a8dc:	bd38      	pop	{r3, r4, r5, pc}

0001a8de <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
   1a8de:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1a8e0:	6d44      	ldr	r4, [r0, #84]	; 0x54
   1a8e2:	460a      	mov	r2, r1
   1a8e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1a8e6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1a8e8:	9001      	str	r0, [sp, #4]
   1a8ea:	4299      	cmp	r1, r3
   1a8ec:	d20e      	bcs.n	1a90c <prvNotifyQueueSetContainer+0x2e>
   1a8ee:	a901      	add	r1, sp, #4
   1a8f0:	4620      	mov	r0, r4
   1a8f2:	f7ff ffbf 	bl	1a874 <prvCopyDataToQueue>
   1a8f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1a8f8:	4605      	mov	r5, r0
   1a8fa:	b143      	cbz	r3, 1a90e <prvNotifyQueueSetContainer+0x30>
   1a8fc:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1a900:	f7ff fe04 	bl	1a50c <xTaskRemoveFromEventList>
   1a904:	2800      	cmp	r0, #0
   1a906:	bf18      	it	ne
   1a908:	2501      	movne	r5, #1
   1a90a:	e000      	b.n	1a90e <prvNotifyQueueSetContainer+0x30>
   1a90c:	2500      	movs	r5, #0
   1a90e:	4628      	mov	r0, r5
   1a910:	b003      	add	sp, #12
   1a912:	bd30      	pop	{r4, r5, pc}

0001a914 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
   1a914:	4603      	mov	r3, r0
   1a916:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   1a918:	b410      	push	{r4}
   1a91a:	4608      	mov	r0, r1
   1a91c:	b162      	cbz	r2, 1a938 <prvCopyDataFromQueue+0x24>
   1a91e:	68d9      	ldr	r1, [r3, #12]
   1a920:	685c      	ldr	r4, [r3, #4]
   1a922:	4411      	add	r1, r2
   1a924:	42a1      	cmp	r1, r4
   1a926:	60d9      	str	r1, [r3, #12]
   1a928:	bf28      	it	cs
   1a92a:	6819      	ldrcs	r1, [r3, #0]
   1a92c:	bc10      	pop	{r4}
   1a92e:	bf28      	it	cs
   1a930:	60d9      	strcs	r1, [r3, #12]
   1a932:	68d9      	ldr	r1, [r3, #12]
   1a934:	f002 bceb 	b.w	1d30e <memcpy>
   1a938:	bc10      	pop	{r4}
   1a93a:	4770      	bx	lr

0001a93c <prvUnlockQueue>:
prvUnlockQueue():
   1a93c:	b538      	push	{r3, r4, r5, lr}
   1a93e:	4604      	mov	r4, r0
   1a940:	f7ff f8ee 	bl	19b20 <vPortEnterCritical>
   1a944:	f104 0524 	add.w	r5, r4, #36	; 0x24
   1a948:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1a94a:	2b00      	cmp	r3, #0
   1a94c:	dd15      	ble.n	1a97a <prvUnlockQueue+0x3e>
   1a94e:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1a950:	b143      	cbz	r3, 1a964 <prvUnlockQueue+0x28>
   1a952:	2100      	movs	r1, #0
   1a954:	4620      	mov	r0, r4
   1a956:	f7ff ffc2 	bl	1a8de <prvNotifyQueueSetContainer>
   1a95a:	2801      	cmp	r0, #1
   1a95c:	d109      	bne.n	1a972 <prvUnlockQueue+0x36>
   1a95e:	f7ff fe3f 	bl	1a5e0 <vTaskMissedYield>
   1a962:	e006      	b.n	1a972 <prvUnlockQueue+0x36>
   1a964:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1a966:	b143      	cbz	r3, 1a97a <prvUnlockQueue+0x3e>
   1a968:	4628      	mov	r0, r5
   1a96a:	f7ff fdcf 	bl	1a50c <xTaskRemoveFromEventList>
   1a96e:	2800      	cmp	r0, #0
   1a970:	d1f5      	bne.n	1a95e <prvUnlockQueue+0x22>
   1a972:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1a974:	3b01      	subs	r3, #1
   1a976:	64a3      	str	r3, [r4, #72]	; 0x48
   1a978:	e7e6      	b.n	1a948 <prvUnlockQueue+0xc>
   1a97a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1a97e:	64a3      	str	r3, [r4, #72]	; 0x48
   1a980:	f7ff f8e0 	bl	19b44 <vPortExitCritical>
   1a984:	f7ff f8cc 	bl	19b20 <vPortEnterCritical>
   1a988:	f104 0510 	add.w	r5, r4, #16
   1a98c:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1a98e:	2b00      	cmp	r3, #0
   1a990:	dd0b      	ble.n	1a9aa <prvUnlockQueue+0x6e>
   1a992:	6923      	ldr	r3, [r4, #16]
   1a994:	b14b      	cbz	r3, 1a9aa <prvUnlockQueue+0x6e>
   1a996:	4628      	mov	r0, r5
   1a998:	f7ff fdb8 	bl	1a50c <xTaskRemoveFromEventList>
   1a99c:	b108      	cbz	r0, 1a9a2 <prvUnlockQueue+0x66>
   1a99e:	f7ff fe1f 	bl	1a5e0 <vTaskMissedYield>
   1a9a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1a9a4:	3b01      	subs	r3, #1
   1a9a6:	6463      	str	r3, [r4, #68]	; 0x44
   1a9a8:	e7f0      	b.n	1a98c <prvUnlockQueue+0x50>
   1a9aa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1a9ae:	6463      	str	r3, [r4, #68]	; 0x44
   1a9b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a9b4:	f7ff b8c6 	b.w	19b44 <vPortExitCritical>

0001a9b8 <pvPortMalloc>:
pvPortMalloc():
   1a9b8:	b510      	push	{r4, lr}
   1a9ba:	4604      	mov	r4, r0
   1a9bc:	f7ff fb08 	bl	19fd0 <vTaskSuspendAll>
   1a9c0:	4620      	mov	r0, r4
   1a9c2:	f002 fc77 	bl	1d2b4 <malloc>
   1a9c6:	4604      	mov	r4, r0
   1a9c8:	f7ff fbb4 	bl	1a134 <xTaskResumeAll>
   1a9cc:	b90c      	cbnz	r4, 1a9d2 <pvPortMalloc+0x1a>
   1a9ce:	f7ff f937 	bl	19c40 <vApplicationMallocFailedHook>
   1a9d2:	4620      	mov	r0, r4
   1a9d4:	bd10      	pop	{r4, pc}

0001a9d6 <vPortFree>:
vPortFree():
   1a9d6:	b510      	push	{r4, lr}
   1a9d8:	4604      	mov	r4, r0
   1a9da:	b140      	cbz	r0, 1a9ee <vPortFree+0x18>
   1a9dc:	f7ff faf8 	bl	19fd0 <vTaskSuspendAll>
   1a9e0:	4620      	mov	r0, r4
   1a9e2:	f002 fc6f 	bl	1d2c4 <free>
   1a9e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a9ea:	f7ff bba3 	b.w	1a134 <xTaskResumeAll>
   1a9ee:	bd10      	pop	{r4, pc}

0001a9f0 <xQueueGenericReset>:
xQueueGenericReset():
   1a9f0:	b538      	push	{r3, r4, r5, lr}
   1a9f2:	4604      	mov	r4, r0
   1a9f4:	460d      	mov	r5, r1
   1a9f6:	f7ff f893 	bl	19b20 <vPortEnterCritical>
   1a9fa:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1a9fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1a9fe:	6822      	ldr	r2, [r4, #0]
   1aa00:	4343      	muls	r3, r0
   1aa02:	18d1      	adds	r1, r2, r3
   1aa04:	1a1b      	subs	r3, r3, r0
   1aa06:	4413      	add	r3, r2
   1aa08:	6061      	str	r1, [r4, #4]
   1aa0a:	60e3      	str	r3, [r4, #12]
   1aa0c:	2100      	movs	r1, #0
   1aa0e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1aa12:	63a1      	str	r1, [r4, #56]	; 0x38
   1aa14:	60a2      	str	r2, [r4, #8]
   1aa16:	6463      	str	r3, [r4, #68]	; 0x44
   1aa18:	64a3      	str	r3, [r4, #72]	; 0x48
   1aa1a:	b955      	cbnz	r5, 1aa32 <xQueueGenericReset+0x42>
   1aa1c:	6923      	ldr	r3, [r4, #16]
   1aa1e:	b183      	cbz	r3, 1aa42 <xQueueGenericReset+0x52>
   1aa20:	f104 0010 	add.w	r0, r4, #16
   1aa24:	f7ff fd72 	bl	1a50c <xTaskRemoveFromEventList>
   1aa28:	2801      	cmp	r0, #1
   1aa2a:	d10a      	bne.n	1aa42 <xQueueGenericReset+0x52>
   1aa2c:	f7ff f860 	bl	19af0 <vPortYield>
   1aa30:	e007      	b.n	1aa42 <xQueueGenericReset+0x52>
   1aa32:	f104 0010 	add.w	r0, r4, #16
   1aa36:	f7ff fedb 	bl	1a7f0 <vListInitialise>
   1aa3a:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1aa3e:	f7ff fed7 	bl	1a7f0 <vListInitialise>
   1aa42:	f7ff f87f 	bl	19b44 <vPortExitCritical>
   1aa46:	2001      	movs	r0, #1
   1aa48:	bd38      	pop	{r3, r4, r5, pc}

0001aa4a <xQueueGenericCreate>:
xQueueGenericCreate():
   1aa4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1aa4e:	460f      	mov	r7, r1
   1aa50:	4690      	mov	r8, r2
   1aa52:	4606      	mov	r6, r0
   1aa54:	b908      	cbnz	r0, 1aa5a <xQueueGenericCreate+0x10>
   1aa56:	2400      	movs	r4, #0
   1aa58:	e01c      	b.n	1aa94 <xQueueGenericCreate+0x4a>
   1aa5a:	2058      	movs	r0, #88	; 0x58
   1aa5c:	f7ff ffac 	bl	1a9b8 <pvPortMalloc>
   1aa60:	4604      	mov	r4, r0
   1aa62:	2800      	cmp	r0, #0
   1aa64:	d0f7      	beq.n	1aa56 <xQueueGenericCreate+0xc>
   1aa66:	fb07 f006 	mul.w	r0, r7, r6
   1aa6a:	3001      	adds	r0, #1
   1aa6c:	f7ff ffa4 	bl	1a9b8 <pvPortMalloc>
   1aa70:	4605      	mov	r5, r0
   1aa72:	6020      	str	r0, [r4, #0]
   1aa74:	b150      	cbz	r0, 1aa8c <xQueueGenericCreate+0x42>
   1aa76:	63e6      	str	r6, [r4, #60]	; 0x3c
   1aa78:	6427      	str	r7, [r4, #64]	; 0x40
   1aa7a:	2101      	movs	r1, #1
   1aa7c:	4620      	mov	r0, r4
   1aa7e:	f7ff ffb7 	bl	1a9f0 <xQueueGenericReset>
   1aa82:	2300      	movs	r3, #0
   1aa84:	f884 8050 	strb.w	r8, [r4, #80]	; 0x50
   1aa88:	6563      	str	r3, [r4, #84]	; 0x54
   1aa8a:	e003      	b.n	1aa94 <xQueueGenericCreate+0x4a>
   1aa8c:	4620      	mov	r0, r4
   1aa8e:	f7ff ffa2 	bl	1a9d6 <vPortFree>
   1aa92:	462c      	mov	r4, r5
   1aa94:	4620      	mov	r0, r4
   1aa96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001aa9a <xQueueCreateCountingSemaphore>:
xQueueCreateCountingSemaphore():
   1aa9a:	b510      	push	{r4, lr}
   1aa9c:	2202      	movs	r2, #2
   1aa9e:	460c      	mov	r4, r1
   1aaa0:	2100      	movs	r1, #0
   1aaa2:	f7ff ffd2 	bl	1aa4a <xQueueGenericCreate>
   1aaa6:	b100      	cbz	r0, 1aaaa <xQueueCreateCountingSemaphore+0x10>
   1aaa8:	6384      	str	r4, [r0, #56]	; 0x38
   1aaaa:	bd10      	pop	{r4, pc}

0001aaac <xQueueGenericSend>:
xQueueGenericSend():
   1aaac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1aab0:	2700      	movs	r7, #0
   1aab2:	4604      	mov	r4, r0
   1aab4:	4689      	mov	r9, r1
   1aab6:	461e      	mov	r6, r3
   1aab8:	46b8      	mov	r8, r7
   1aaba:	b085      	sub	sp, #20
   1aabc:	9201      	str	r2, [sp, #4]
   1aabe:	f7ff f82f 	bl	19b20 <vPortEnterCritical>
   1aac2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   1aac4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1aac6:	429a      	cmp	r2, r3
   1aac8:	d301      	bcc.n	1aace <xQueueGenericSend+0x22>
   1aaca:	2e02      	cmp	r6, #2
   1aacc:	d11c      	bne.n	1ab08 <xQueueGenericSend+0x5c>
   1aace:	4632      	mov	r2, r6
   1aad0:	4649      	mov	r1, r9
   1aad2:	4620      	mov	r0, r4
   1aad4:	f7ff fece 	bl	1a874 <prvCopyDataToQueue>
   1aad8:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1aada:	b143      	cbz	r3, 1aaee <xQueueGenericSend+0x42>
   1aadc:	4631      	mov	r1, r6
   1aade:	4620      	mov	r0, r4
   1aae0:	f7ff fefd 	bl	1a8de <prvNotifyQueueSetContainer>
   1aae4:	2801      	cmp	r0, #1
   1aae6:	d10b      	bne.n	1ab00 <xQueueGenericSend+0x54>
   1aae8:	f7ff f802 	bl	19af0 <vPortYield>
   1aaec:	e008      	b.n	1ab00 <xQueueGenericSend+0x54>
   1aaee:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1aaf0:	b123      	cbz	r3, 1aafc <xQueueGenericSend+0x50>
   1aaf2:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1aaf6:	f7ff fd09 	bl	1a50c <xTaskRemoveFromEventList>
   1aafa:	e7f3      	b.n	1aae4 <xQueueGenericSend+0x38>
   1aafc:	2800      	cmp	r0, #0
   1aafe:	d1f3      	bne.n	1aae8 <xQueueGenericSend+0x3c>
   1ab00:	f7ff f820 	bl	19b44 <vPortExitCritical>
   1ab04:	2001      	movs	r0, #1
   1ab06:	e044      	b.n	1ab92 <xQueueGenericSend+0xe6>
   1ab08:	9d01      	ldr	r5, [sp, #4]
   1ab0a:	b91d      	cbnz	r5, 1ab14 <xQueueGenericSend+0x68>
   1ab0c:	f7ff f81a 	bl	19b44 <vPortExitCritical>
   1ab10:	4628      	mov	r0, r5
   1ab12:	e03e      	b.n	1ab92 <xQueueGenericSend+0xe6>
   1ab14:	b917      	cbnz	r7, 1ab1c <xQueueGenericSend+0x70>
   1ab16:	a802      	add	r0, sp, #8
   1ab18:	f7ff fd30 	bl	1a57c <vTaskSetTimeOutState>
   1ab1c:	f7ff f812 	bl	19b44 <vPortExitCritical>
   1ab20:	f7ff fa56 	bl	19fd0 <vTaskSuspendAll>
   1ab24:	f7fe fffc 	bl	19b20 <vPortEnterCritical>
   1ab28:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1ab2a:	3301      	adds	r3, #1
   1ab2c:	bf08      	it	eq
   1ab2e:	f8c4 8044 	streq.w	r8, [r4, #68]	; 0x44
   1ab32:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ab34:	3301      	adds	r3, #1
   1ab36:	bf08      	it	eq
   1ab38:	f8c4 8048 	streq.w	r8, [r4, #72]	; 0x48
   1ab3c:	f7ff f802 	bl	19b44 <vPortExitCritical>
   1ab40:	a901      	add	r1, sp, #4
   1ab42:	a802      	add	r0, sp, #8
   1ab44:	f7ff fd26 	bl	1a594 <xTaskCheckForTimeOut>
   1ab48:	b9e8      	cbnz	r0, 1ab86 <xQueueGenericSend+0xda>
   1ab4a:	f7fe ffe9 	bl	19b20 <vPortEnterCritical>
   1ab4e:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   1ab50:	6be5      	ldr	r5, [r4, #60]	; 0x3c
   1ab52:	f7fe fff7 	bl	19b44 <vPortExitCritical>
   1ab56:	42af      	cmp	r7, r5
   1ab58:	d10f      	bne.n	1ab7a <xQueueGenericSend+0xce>
   1ab5a:	9901      	ldr	r1, [sp, #4]
   1ab5c:	f104 0010 	add.w	r0, r4, #16
   1ab60:	f7ff fca6 	bl	1a4b0 <vTaskPlaceOnEventList>
   1ab64:	4620      	mov	r0, r4
   1ab66:	f7ff fee9 	bl	1a93c <prvUnlockQueue>
   1ab6a:	f7ff fae3 	bl	1a134 <xTaskResumeAll>
   1ab6e:	b108      	cbz	r0, 1ab74 <xQueueGenericSend+0xc8>
   1ab70:	2701      	movs	r7, #1
   1ab72:	e7a4      	b.n	1aabe <xQueueGenericSend+0x12>
   1ab74:	f7fe ffbc 	bl	19af0 <vPortYield>
   1ab78:	e7fa      	b.n	1ab70 <xQueueGenericSend+0xc4>
   1ab7a:	4620      	mov	r0, r4
   1ab7c:	f7ff fede 	bl	1a93c <prvUnlockQueue>
   1ab80:	f7ff fad8 	bl	1a134 <xTaskResumeAll>
   1ab84:	e7f4      	b.n	1ab70 <xQueueGenericSend+0xc4>
   1ab86:	4620      	mov	r0, r4
   1ab88:	f7ff fed8 	bl	1a93c <prvUnlockQueue>
   1ab8c:	f7ff fad2 	bl	1a134 <xTaskResumeAll>
   1ab90:	2000      	movs	r0, #0
   1ab92:	b005      	add	sp, #20
   1ab94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0001ab98 <xQueueCreateMutex>:
xQueueCreateMutex():
   1ab98:	b570      	push	{r4, r5, r6, lr}
   1ab9a:	4606      	mov	r6, r0
   1ab9c:	2058      	movs	r0, #88	; 0x58
   1ab9e:	f7ff ff0b 	bl	1a9b8 <pvPortMalloc>
   1aba2:	4604      	mov	r4, r0
   1aba4:	b1e0      	cbz	r0, 1abe0 <xQueueCreateMutex+0x48>
   1aba6:	2301      	movs	r3, #1
   1aba8:	2500      	movs	r5, #0
   1abaa:	63c3      	str	r3, [r0, #60]	; 0x3c
   1abac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1abb0:	6385      	str	r5, [r0, #56]	; 0x38
   1abb2:	6045      	str	r5, [r0, #4]
   1abb4:	6443      	str	r3, [r0, #68]	; 0x44
   1abb6:	6005      	str	r5, [r0, #0]
   1abb8:	6483      	str	r3, [r0, #72]	; 0x48
   1abba:	6085      	str	r5, [r0, #8]
   1abbc:	60c5      	str	r5, [r0, #12]
   1abbe:	6405      	str	r5, [r0, #64]	; 0x40
   1abc0:	f880 6050 	strb.w	r6, [r0, #80]	; 0x50
   1abc4:	6545      	str	r5, [r0, #84]	; 0x54
   1abc6:	3010      	adds	r0, #16
   1abc8:	f7ff fe12 	bl	1a7f0 <vListInitialise>
   1abcc:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1abd0:	f7ff fe0e 	bl	1a7f0 <vListInitialise>
   1abd4:	462b      	mov	r3, r5
   1abd6:	462a      	mov	r2, r5
   1abd8:	4629      	mov	r1, r5
   1abda:	4620      	mov	r0, r4
   1abdc:	f7ff ff66 	bl	1aaac <xQueueGenericSend>
   1abe0:	4620      	mov	r0, r4
   1abe2:	bd70      	pop	{r4, r5, r6, pc}

0001abe4 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
   1abe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1abe8:	4604      	mov	r4, r0
   1abea:	4615      	mov	r5, r2
   1abec:	461e      	mov	r6, r3
   1abee:	4688      	mov	r8, r1
   1abf0:	f7fe ff8a 	bl	19b08 <ulPortSetInterruptMask>
   1abf4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   1abf6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1abf8:	4607      	mov	r7, r0
   1abfa:	429a      	cmp	r2, r3
   1abfc:	d301      	bcc.n	1ac02 <xQueueGenericSendFromISR+0x1e>
   1abfe:	2e02      	cmp	r6, #2
   1ac00:	d124      	bne.n	1ac4c <xQueueGenericSendFromISR+0x68>
   1ac02:	4632      	mov	r2, r6
   1ac04:	4641      	mov	r1, r8
   1ac06:	4620      	mov	r0, r4
   1ac08:	f7ff fe34 	bl	1a874 <prvCopyDataToQueue>
   1ac0c:	b110      	cbz	r0, 1ac14 <xQueueGenericSendFromISR+0x30>
   1ac0e:	b10d      	cbz	r5, 1ac14 <xQueueGenericSendFromISR+0x30>
   1ac10:	2301      	movs	r3, #1
   1ac12:	602b      	str	r3, [r5, #0]
   1ac14:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ac16:	3301      	adds	r3, #1
   1ac18:	d113      	bne.n	1ac42 <xQueueGenericSendFromISR+0x5e>
   1ac1a:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1ac1c:	b133      	cbz	r3, 1ac2c <xQueueGenericSendFromISR+0x48>
   1ac1e:	4631      	mov	r1, r6
   1ac20:	4620      	mov	r0, r4
   1ac22:	f7ff fe5c 	bl	1a8de <prvNotifyQueueSetContainer>
   1ac26:	2801      	cmp	r0, #1
   1ac28:	d10e      	bne.n	1ac48 <xQueueGenericSendFromISR+0x64>
   1ac2a:	e006      	b.n	1ac3a <xQueueGenericSendFromISR+0x56>
   1ac2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1ac2e:	b15b      	cbz	r3, 1ac48 <xQueueGenericSendFromISR+0x64>
   1ac30:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ac34:	f7ff fc6a 	bl	1a50c <xTaskRemoveFromEventList>
   1ac38:	b130      	cbz	r0, 1ac48 <xQueueGenericSendFromISR+0x64>
   1ac3a:	b12d      	cbz	r5, 1ac48 <xQueueGenericSendFromISR+0x64>
   1ac3c:	2401      	movs	r4, #1
   1ac3e:	602c      	str	r4, [r5, #0]
   1ac40:	e005      	b.n	1ac4e <xQueueGenericSendFromISR+0x6a>
   1ac42:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ac44:	3301      	adds	r3, #1
   1ac46:	64a3      	str	r3, [r4, #72]	; 0x48
   1ac48:	2401      	movs	r4, #1
   1ac4a:	e000      	b.n	1ac4e <xQueueGenericSendFromISR+0x6a>
   1ac4c:	2400      	movs	r4, #0
   1ac4e:	4638      	mov	r0, r7
   1ac50:	f7fe ff74 	bl	19b3c <vPortClearInterruptMask>
   1ac54:	4620      	mov	r0, r4
   1ac56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001ac5a <xQueueGenericReceive>:
xQueueGenericReceive():
   1ac5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ac5e:	2600      	movs	r6, #0
   1ac60:	4604      	mov	r4, r0
   1ac62:	4688      	mov	r8, r1
   1ac64:	4699      	mov	r9, r3
   1ac66:	4637      	mov	r7, r6
   1ac68:	b085      	sub	sp, #20
   1ac6a:	9201      	str	r2, [sp, #4]
   1ac6c:	f7fe ff58 	bl	19b20 <vPortEnterCritical>
   1ac70:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1ac72:	b33b      	cbz	r3, 1acc4 <xQueueGenericReceive+0x6a>
   1ac74:	4641      	mov	r1, r8
   1ac76:	4620      	mov	r0, r4
   1ac78:	68e5      	ldr	r5, [r4, #12]
   1ac7a:	f7ff fe4b 	bl	1a914 <prvCopyDataFromQueue>
   1ac7e:	f1b9 0f00 	cmp.w	r9, #0
   1ac82:	d112      	bne.n	1acaa <xQueueGenericReceive+0x50>
   1ac84:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1ac86:	3b01      	subs	r3, #1
   1ac88:	63a3      	str	r3, [r4, #56]	; 0x38
   1ac8a:	6823      	ldr	r3, [r4, #0]
   1ac8c:	b913      	cbnz	r3, 1ac94 <xQueueGenericReceive+0x3a>
   1ac8e:	f7ff fd4f 	bl	1a730 <pvTaskIncrementMutexHeldCount>
   1ac92:	6060      	str	r0, [r4, #4]
   1ac94:	6923      	ldr	r3, [r4, #16]
   1ac96:	b18b      	cbz	r3, 1acbc <xQueueGenericReceive+0x62>
   1ac98:	f104 0010 	add.w	r0, r4, #16
   1ac9c:	f7ff fc36 	bl	1a50c <xTaskRemoveFromEventList>
   1aca0:	2801      	cmp	r0, #1
   1aca2:	d10b      	bne.n	1acbc <xQueueGenericReceive+0x62>
   1aca4:	f7fe ff24 	bl	19af0 <vPortYield>
   1aca8:	e008      	b.n	1acbc <xQueueGenericReceive+0x62>
   1acaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1acac:	60e5      	str	r5, [r4, #12]
   1acae:	b12b      	cbz	r3, 1acbc <xQueueGenericReceive+0x62>
   1acb0:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1acb4:	f7ff fc2a 	bl	1a50c <xTaskRemoveFromEventList>
   1acb8:	2800      	cmp	r0, #0
   1acba:	d1f3      	bne.n	1aca4 <xQueueGenericReceive+0x4a>
   1acbc:	f7fe ff42 	bl	19b44 <vPortExitCritical>
   1acc0:	2001      	movs	r0, #1
   1acc2:	e049      	b.n	1ad58 <xQueueGenericReceive+0xfe>
   1acc4:	9d01      	ldr	r5, [sp, #4]
   1acc6:	b91d      	cbnz	r5, 1acd0 <xQueueGenericReceive+0x76>
   1acc8:	f7fe ff3c 	bl	19b44 <vPortExitCritical>
   1accc:	4628      	mov	r0, r5
   1acce:	e043      	b.n	1ad58 <xQueueGenericReceive+0xfe>
   1acd0:	b916      	cbnz	r6, 1acd8 <xQueueGenericReceive+0x7e>
   1acd2:	a802      	add	r0, sp, #8
   1acd4:	f7ff fc52 	bl	1a57c <vTaskSetTimeOutState>
   1acd8:	f7fe ff34 	bl	19b44 <vPortExitCritical>
   1acdc:	f7ff f978 	bl	19fd0 <vTaskSuspendAll>
   1ace0:	f7fe ff1e 	bl	19b20 <vPortEnterCritical>
   1ace4:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1ace6:	3301      	adds	r3, #1
   1ace8:	bf08      	it	eq
   1acea:	6467      	streq	r7, [r4, #68]	; 0x44
   1acec:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1acee:	3301      	adds	r3, #1
   1acf0:	bf08      	it	eq
   1acf2:	64a7      	streq	r7, [r4, #72]	; 0x48
   1acf4:	f7fe ff26 	bl	19b44 <vPortExitCritical>
   1acf8:	a901      	add	r1, sp, #4
   1acfa:	a802      	add	r0, sp, #8
   1acfc:	f7ff fc4a 	bl	1a594 <xTaskCheckForTimeOut>
   1ad00:	bb20      	cbnz	r0, 1ad4c <xQueueGenericReceive+0xf2>
   1ad02:	f7fe ff0d 	bl	19b20 <vPortEnterCritical>
   1ad06:	6ba5      	ldr	r5, [r4, #56]	; 0x38
   1ad08:	f7fe ff1c 	bl	19b44 <vPortExitCritical>
   1ad0c:	b9c5      	cbnz	r5, 1ad40 <xQueueGenericReceive+0xe6>
   1ad0e:	6823      	ldr	r3, [r4, #0]
   1ad10:	b933      	cbnz	r3, 1ad20 <xQueueGenericReceive+0xc6>
   1ad12:	f7fe ff05 	bl	19b20 <vPortEnterCritical>
   1ad16:	6860      	ldr	r0, [r4, #4]
   1ad18:	f7ff fc88 	bl	1a62c <vTaskPriorityInherit>
   1ad1c:	f7fe ff12 	bl	19b44 <vPortExitCritical>
   1ad20:	9901      	ldr	r1, [sp, #4]
   1ad22:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ad26:	f7ff fbc3 	bl	1a4b0 <vTaskPlaceOnEventList>
   1ad2a:	4620      	mov	r0, r4
   1ad2c:	f7ff fe06 	bl	1a93c <prvUnlockQueue>
   1ad30:	f7ff fa00 	bl	1a134 <xTaskResumeAll>
   1ad34:	b108      	cbz	r0, 1ad3a <xQueueGenericReceive+0xe0>
   1ad36:	2601      	movs	r6, #1
   1ad38:	e798      	b.n	1ac6c <xQueueGenericReceive+0x12>
   1ad3a:	f7fe fed9 	bl	19af0 <vPortYield>
   1ad3e:	e7fa      	b.n	1ad36 <xQueueGenericReceive+0xdc>
   1ad40:	4620      	mov	r0, r4
   1ad42:	f7ff fdfb 	bl	1a93c <prvUnlockQueue>
   1ad46:	f7ff f9f5 	bl	1a134 <xTaskResumeAll>
   1ad4a:	e7f4      	b.n	1ad36 <xQueueGenericReceive+0xdc>
   1ad4c:	4620      	mov	r0, r4
   1ad4e:	f7ff fdf5 	bl	1a93c <prvUnlockQueue>
   1ad52:	f7ff f9ef 	bl	1a134 <xTaskResumeAll>
   1ad56:	2000      	movs	r0, #0
   1ad58:	b005      	add	sp, #20
   1ad5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0001ad5e <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
   1ad5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ad62:	4605      	mov	r5, r0
   1ad64:	4688      	mov	r8, r1
   1ad66:	4617      	mov	r7, r2
   1ad68:	f7fe fece 	bl	19b08 <ulPortSetInterruptMask>
   1ad6c:	6bac      	ldr	r4, [r5, #56]	; 0x38
   1ad6e:	4606      	mov	r6, r0
   1ad70:	b1c4      	cbz	r4, 1ada4 <xQueueReceiveFromISR+0x46>
   1ad72:	4641      	mov	r1, r8
   1ad74:	4628      	mov	r0, r5
   1ad76:	f7ff fdcd 	bl	1a914 <prvCopyDataFromQueue>
   1ad7a:	6bab      	ldr	r3, [r5, #56]	; 0x38
   1ad7c:	3b01      	subs	r3, #1
   1ad7e:	63ab      	str	r3, [r5, #56]	; 0x38
   1ad80:	6c6b      	ldr	r3, [r5, #68]	; 0x44
   1ad82:	3301      	adds	r3, #1
   1ad84:	d10a      	bne.n	1ad9c <xQueueReceiveFromISR+0x3e>
   1ad86:	692b      	ldr	r3, [r5, #16]
   1ad88:	b15b      	cbz	r3, 1ada2 <xQueueReceiveFromISR+0x44>
   1ad8a:	f105 0010 	add.w	r0, r5, #16
   1ad8e:	f7ff fbbd 	bl	1a50c <xTaskRemoveFromEventList>
   1ad92:	b130      	cbz	r0, 1ada2 <xQueueReceiveFromISR+0x44>
   1ad94:	b12f      	cbz	r7, 1ada2 <xQueueReceiveFromISR+0x44>
   1ad96:	2401      	movs	r4, #1
   1ad98:	603c      	str	r4, [r7, #0]
   1ad9a:	e003      	b.n	1ada4 <xQueueReceiveFromISR+0x46>
   1ad9c:	6c6b      	ldr	r3, [r5, #68]	; 0x44
   1ad9e:	3301      	adds	r3, #1
   1ada0:	646b      	str	r3, [r5, #68]	; 0x44
   1ada2:	2401      	movs	r4, #1
   1ada4:	4630      	mov	r0, r6
   1ada6:	f7fe fec9 	bl	19b3c <vPortClearInterruptMask>
   1adaa:	4620      	mov	r0, r4
   1adac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001adb0 <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
   1adb0:	b510      	push	{r4, lr}
   1adb2:	4604      	mov	r4, r0
   1adb4:	f7fe feb4 	bl	19b20 <vPortEnterCritical>
   1adb8:	6ba4      	ldr	r4, [r4, #56]	; 0x38
   1adba:	f7fe fec3 	bl	19b44 <vPortExitCritical>
   1adbe:	4620      	mov	r0, r4
   1adc0:	bd10      	pop	{r4, pc}

0001adc2 <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
   1adc2:	6b80      	ldr	r0, [r0, #56]	; 0x38
   1adc4:	4770      	bx	lr

0001adc6 <xQueueSelectFromSet>:
xQueueSelectFromSet():
   1adc6:	b513      	push	{r0, r1, r4, lr}
   1adc8:	2300      	movs	r3, #0
   1adca:	ac02      	add	r4, sp, #8
   1adcc:	f844 3d04 	str.w	r3, [r4, #-4]!
   1add0:	460a      	mov	r2, r1
   1add2:	4621      	mov	r1, r4
   1add4:	f7ff ff41 	bl	1ac5a <xQueueGenericReceive>
   1add8:	9801      	ldr	r0, [sp, #4]
   1adda:	b002      	add	sp, #8
   1addc:	bd10      	pop	{r4, pc}

0001adde <__set_PSP>:
__set_PSP():
   1adde:	f380 8809 	msr	PSP, r0
   1ade2:	4770      	bx	lr

0001ade4 <__set_MSP>:
__set_MSP():
   1ade4:	f380 8808 	msr	MSP, r0
   1ade8:	4770      	bx	lr

0001adea <__set_BASEPRI>:
__set_BASEPRI():
   1adea:	f380 8811 	msr	BASEPRI, r0
   1adee:	4770      	bx	lr

0001adf0 <isr_forwarder_routine>:
isr_forwarder_routine():
   1adf0:	b508      	push	{r3, lr}
   1adf2:	f7ff fce1 	bl	1a7b8 <vRunTimeStatIsrEntry>
   1adf6:	4b09      	ldr	r3, [pc, #36]	; (1ae1c <isr_forwarder_routine+0x2c>)
   1adf8:	4a09      	ldr	r2, [pc, #36]	; (1ae20 <isr_forwarder_routine+0x30>)
   1adfa:	7819      	ldrb	r1, [r3, #0]
   1adfc:	4b09      	ldr	r3, [pc, #36]	; (1ae24 <isr_forwarder_routine+0x34>)
   1adfe:	3910      	subs	r1, #16
   1ae00:	b2c9      	uxtb	r1, r1
   1ae02:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   1ae06:	4293      	cmp	r3, r2
   1ae08:	d103      	bne.n	1ae12 <isr_forwarder_routine+0x22>
   1ae0a:	4807      	ldr	r0, [pc, #28]	; (1ae28 <isr_forwarder_routine+0x38>)
   1ae0c:	f7fe fb8f 	bl	1952e <u0_dbg_printf>
   1ae10:	e7fe      	b.n	1ae10 <isr_forwarder_routine+0x20>
   1ae12:	4798      	blx	r3
   1ae14:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1ae18:	f7ff bce2 	b.w	1a7e0 <vRunTimeStatIsrExit>
   1ae1c:	e000ed04 	.word	0xe000ed04
   1ae20:	00010149 	.word	0x00010149
   1ae24:	2007c04c 	.word	0x2007c04c
   1ae28:	00025f0c 	.word	0x00025f0c

0001ae2c <isr_hard_fault_handler>:
isr_hard_fault_handler():
   1ae2c:	6803      	ldr	r3, [r0, #0]
   1ae2e:	b088      	sub	sp, #32
   1ae30:	9300      	str	r3, [sp, #0]
   1ae32:	6843      	ldr	r3, [r0, #4]
   1ae34:	4a11      	ldr	r2, [pc, #68]	; (1ae7c <isr_hard_fault_handler+0x50>)
   1ae36:	9301      	str	r3, [sp, #4]
   1ae38:	6883      	ldr	r3, [r0, #8]
   1ae3a:	9302      	str	r3, [sp, #8]
   1ae3c:	68c3      	ldr	r3, [r0, #12]
   1ae3e:	9303      	str	r3, [sp, #12]
   1ae40:	6903      	ldr	r3, [r0, #16]
   1ae42:	9304      	str	r3, [sp, #16]
   1ae44:	6943      	ldr	r3, [r0, #20]
   1ae46:	9305      	str	r3, [sp, #20]
   1ae48:	6983      	ldr	r3, [r0, #24]
   1ae4a:	9306      	str	r3, [sp, #24]
   1ae4c:	69c3      	ldr	r3, [r0, #28]
   1ae4e:	9307      	str	r3, [sp, #28]
   1ae50:	4b0b      	ldr	r3, [pc, #44]	; (1ae80 <isr_hard_fault_handler+0x54>)
   1ae52:	649a      	str	r2, [r3, #72]	; 0x48
   1ae54:	9a06      	ldr	r2, [sp, #24]
   1ae56:	64da      	str	r2, [r3, #76]	; 0x4c
   1ae58:	9a05      	ldr	r2, [sp, #20]
   1ae5a:	3a01      	subs	r2, #1
   1ae5c:	651a      	str	r2, [r3, #80]	; 0x50
   1ae5e:	9a07      	ldr	r2, [sp, #28]
   1ae60:	655a      	str	r2, [r3, #84]	; 0x54
   1ae62:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1ae66:	22aa      	movs	r2, #170	; 0xaa
   1ae68:	721a      	strb	r2, [r3, #8]
   1ae6a:	2200      	movs	r2, #0
   1ae6c:	701a      	strb	r2, [r3, #0]
   1ae6e:	9b00      	ldr	r3, [sp, #0]
   1ae70:	9b01      	ldr	r3, [sp, #4]
   1ae72:	9b02      	ldr	r3, [sp, #8]
   1ae74:	9b03      	ldr	r3, [sp, #12]
   1ae76:	9b04      	ldr	r3, [sp, #16]
   1ae78:	b008      	add	sp, #32
   1ae7a:	4770      	bx	lr
   1ae7c:	deadbeef 	.word	0xdeadbeef
   1ae80:	40024000 	.word	0x40024000

0001ae84 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
   1ae84:	4b03      	ldr	r3, [pc, #12]	; (1ae94 <sys_clock_pll0_feed()+0x10>)
   1ae86:	22aa      	movs	r2, #170	; 0xaa
   1ae88:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   1ae8c:	2255      	movs	r2, #85	; 0x55
   1ae8e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   1ae92:	4770      	bx	lr
   1ae94:	400fc000 	.word	0x400fc000

0001ae98 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
   1ae98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae9c:	2400      	movs	r4, #0
   1ae9e:	600c      	str	r4, [r1, #0]
   1aea0:	6014      	str	r4, [r2, #0]
   1aea2:	601c      	str	r4, [r3, #0]
   1aea4:	f240 14ff 	movw	r4, #511	; 0x1ff
   1aea8:	f8df a060 	ldr.w	sl, [pc, #96]	; 1af0c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   1aeac:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
   1aeb0:	fb04 5b05 	mla	fp, r4, r5, r5
   1aeb4:	2600      	movs	r6, #0
   1aeb6:	f106 0c01 	add.w	ip, r6, #1
   1aeba:	fbbb f8fc 	udiv	r8, fp, ip
   1aebe:	4f12      	ldr	r7, [pc, #72]	; (1af08 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   1aec0:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   1aec4:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   1aec8:	42bd      	cmp	r5, r7
   1aeca:	d903      	bls.n	1aed4 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x3c>
   1aecc:	4666      	mov	r6, ip
   1aece:	2e20      	cmp	r6, #32
   1aed0:	d1f1      	bne.n	1aeb6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
   1aed2:	e013      	b.n	1aefc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x64>
   1aed4:	2503      	movs	r5, #3
   1aed6:	f105 0901 	add.w	r9, r5, #1
   1aeda:	fbb8 fef9 	udiv	lr, r8, r9
   1aede:	45d6      	cmp	lr, sl
   1aee0:	d904      	bls.n	1aeec <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x54>
   1aee2:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   1aee6:	464d      	mov	r5, r9
   1aee8:	d1f5      	bne.n	1aed6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x3e>
   1aeea:	e7ef      	b.n	1aecc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
   1aeec:	4586      	cmp	lr, r0
   1aeee:	600c      	str	r4, [r1, #0]
   1aef0:	6016      	str	r6, [r2, #0]
   1aef2:	601d      	str	r5, [r3, #0]
   1aef4:	d1f5      	bne.n	1aee2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4a>
   1aef6:	2001      	movs	r0, #1
   1aef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aefc:	3c01      	subs	r4, #1
   1aefe:	2c05      	cmp	r4, #5
   1af00:	d1d4      	bne.n	1aeac <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
   1af02:	2000      	movs	r0, #0
   1af04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af08:	00043238 	.word	0x00043238
   1af0c:	000186a0 	.word	0x000186a0

0001af10 <sys_clock_configure()>:
_Z19sys_clock_configurev():
   1af10:	b530      	push	{r4, r5, lr}
   1af12:	492b      	ldr	r1, [pc, #172]	; (1afc0 <sys_clock_configure()+0xb0>)
   1af14:	b085      	sub	sp, #20
   1af16:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   1af1a:	2400      	movs	r4, #0
   1af1c:	f023 0302 	bic.w	r3, r3, #2
   1af20:	ad04      	add	r5, sp, #16
   1af22:	f845 4d04 	str.w	r4, [r5, #-4]!
   1af26:	9401      	str	r4, [sp, #4]
   1af28:	9402      	str	r4, [sp, #8]
   1af2a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
   1af2e:	f7ff ffa9 	bl	1ae84 <sys_clock_pll0_feed()>
   1af32:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   1af36:	f023 0301 	bic.w	r3, r3, #1
   1af3a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
   1af3e:	f7ff ffa1 	bl	1ae84 <sys_clock_pll0_feed()>
   1af42:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
   1af46:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
   1af4a:	f7ff ff9b 	bl	1ae84 <sys_clock_pll0_feed()>
   1af4e:	462b      	mov	r3, r5
   1af50:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
   1af54:	aa02      	add	r2, sp, #8
   1af56:	a901      	add	r1, sp, #4
   1af58:	f64b 3080 	movw	r0, #48000	; 0xbb80
   1af5c:	f7ff ff9c 	bl	1ae98 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   1af60:	b930      	cbnz	r0, 1af70 <sys_clock_configure()+0x60>
   1af62:	462b      	mov	r3, r5
   1af64:	aa02      	add	r2, sp, #8
   1af66:	a901      	add	r1, sp, #4
   1af68:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   1af6c:	f7ff ff94 	bl	1ae98 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   1af70:	9b01      	ldr	r3, [sp, #4]
   1af72:	4913      	ldr	r1, [pc, #76]	; (1afc0 <sys_clock_configure()+0xb0>)
   1af74:	f363 040f 	bfi	r4, r3, #0, #16
   1af78:	9b02      	ldr	r3, [sp, #8]
   1af7a:	f363 4417 	bfi	r4, r3, #16, #8
   1af7e:	2300      	movs	r3, #0
   1af80:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
   1af84:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
   1af88:	f7ff ff7c 	bl	1ae84 <sys_clock_pll0_feed()>
   1af8c:	2301      	movs	r3, #1
   1af8e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
   1af92:	f7ff ff77 	bl	1ae84 <sys_clock_pll0_feed()>
   1af96:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   1af9a:	4809      	ldr	r0, [pc, #36]	; (1afc0 <sys_clock_configure()+0xb0>)
   1af9c:	015b      	lsls	r3, r3, #5
   1af9e:	d5fa      	bpl.n	1af96 <sys_clock_configure()+0x86>
   1afa0:	9b03      	ldr	r3, [sp, #12]
   1afa2:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
   1afa6:	2303      	movs	r3, #3
   1afa8:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
   1afac:	f7ff ff6a 	bl	1ae84 <sys_clock_pll0_feed()>
   1afb0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
   1afb4:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   1afb8:	d0fa      	beq.n	1afb0 <sys_clock_configure()+0xa0>
   1afba:	b005      	add	sp, #20
   1afbc:	bd30      	pop	{r4, r5, pc}
   1afbe:	bf00      	nop
   1afc0:	400fc000 	.word	0x400fc000

0001afc4 <sys_get_cpu_clock>:
sys_get_cpu_clock():
   1afc4:	4a23      	ldr	r2, [pc, #140]	; (1b054 <sys_get_cpu_clock+0x90>)
   1afc6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   1afca:	f3c3 6301 	ubfx	r3, r3, #24, #2
   1afce:	2b03      	cmp	r3, #3
   1afd0:	f8d2 310c 	ldr.w	r3, [r2, #268]	; 0x10c
   1afd4:	f003 0303 	and.w	r3, r3, #3
   1afd8:	d12a      	bne.n	1b030 <sys_get_cpu_clock+0x6c>
   1afda:	2b01      	cmp	r3, #1
   1afdc:	d00b      	beq.n	1aff6 <sys_get_cpu_clock+0x32>
   1afde:	2b02      	cmp	r3, #2
   1afe0:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   1afe4:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
   1afe8:	f8d2 0104 	ldr.w	r0, [r2, #260]	; 0x104
   1afec:	d014      	beq.n	1b018 <sys_get_cpu_clock+0x54>
   1afee:	f3c3 020e 	ubfx	r2, r3, #0, #15
   1aff2:	4b19      	ldr	r3, [pc, #100]	; (1b058 <sys_get_cpu_clock+0x94>)
   1aff4:	e008      	b.n	1b008 <sys_get_cpu_clock+0x44>
   1aff6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   1affa:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
   1affe:	f8d2 0104 	ldr.w	r0, [r2, #260]	; 0x104
   1b002:	f3c3 020e 	ubfx	r2, r3, #0, #15
   1b006:	4b15      	ldr	r3, [pc, #84]	; (1b05c <sys_get_cpu_clock+0x98>)
   1b008:	fb02 3303 	mla	r3, r2, r3, r3
   1b00c:	f3c1 4207 	ubfx	r2, r1, #16, #8
   1b010:	3201      	adds	r2, #1
   1b012:	fbb3 f3f2 	udiv	r3, r3, r2
   1b016:	e008      	b.n	1b02a <sys_get_cpu_clock+0x66>
   1b018:	f3c3 030e 	ubfx	r3, r3, #0, #15
   1b01c:	3301      	adds	r3, #1
   1b01e:	041a      	lsls	r2, r3, #16
   1b020:	f3c1 4307 	ubfx	r3, r1, #16, #8
   1b024:	3301      	adds	r3, #1
   1b026:	fbb2 f3f3 	udiv	r3, r2, r3
   1b02a:	b2c0      	uxtb	r0, r0
   1b02c:	3001      	adds	r0, #1
   1b02e:	e00e      	b.n	1b04e <sys_get_cpu_clock+0x8a>
   1b030:	f8d2 0104 	ldr.w	r0, [r2, #260]	; 0x104
   1b034:	2b01      	cmp	r3, #1
   1b036:	b2c0      	uxtb	r0, r0
   1b038:	f100 0001 	add.w	r0, r0, #1
   1b03c:	d003      	beq.n	1b046 <sys_get_cpu_clock+0x82>
   1b03e:	2b02      	cmp	r3, #2
   1b040:	d003      	beq.n	1b04a <sys_get_cpu_clock+0x86>
   1b042:	4b07      	ldr	r3, [pc, #28]	; (1b060 <sys_get_cpu_clock+0x9c>)
   1b044:	e003      	b.n	1b04e <sys_get_cpu_clock+0x8a>
   1b046:	4b07      	ldr	r3, [pc, #28]	; (1b064 <sys_get_cpu_clock+0xa0>)
   1b048:	e001      	b.n	1b04e <sys_get_cpu_clock+0x8a>
   1b04a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1b04e:	fbb3 f0f0 	udiv	r0, r3, r0
   1b052:	4770      	bx	lr
   1b054:	400fc000 	.word	0x400fc000
   1b058:	007a1200 	.word	0x007a1200
   1b05c:	016e3600 	.word	0x016e3600
   1b060:	003d0900 	.word	0x003d0900
   1b064:	00b71b00 	.word	0x00b71b00

0001b068 <sys_get_boot_type>:
sys_get_boot_type():
   1b068:	4b01      	ldr	r3, [pc, #4]	; (1b070 <sys_get_boot_type+0x8>)
   1b06a:	7818      	ldrb	r0, [r3, #0]
   1b06c:	4770      	bx	lr
   1b06e:	bf00      	nop
   1b070:	2007c724 	.word	0x2007c724

0001b074 <sys_get_boot_time>:
sys_get_boot_time():
   1b074:	4903      	ldr	r1, [pc, #12]	; (1b084 <sys_get_boot_time+0x10>)
   1b076:	680b      	ldr	r3, [r1, #0]
   1b078:	6003      	str	r3, [r0, #0]
   1b07a:	684b      	ldr	r3, [r1, #4]
   1b07c:	6043      	str	r3, [r0, #4]
   1b07e:	688b      	ldr	r3, [r1, #8]
   1b080:	6083      	str	r3, [r0, #8]
   1b082:	4770      	bx	lr
   1b084:	2007c725 	.word	0x2007c725

0001b088 <low_level_init()>:
_Z14low_level_initv():
   1b088:	b530      	push	{r4, r5, lr}
   1b08a:	b085      	sub	sp, #20
   1b08c:	f7f5 fd86 	bl	10b9c <rtc_init>
   1b090:	4668      	mov	r0, sp
   1b092:	f7f5 fd27 	bl	10ae4 <rtc_gettime>
   1b096:	4c7a      	ldr	r4, [pc, #488]	; (1b280 <low_level_init()+0x1f8>)
   1b098:	9b00      	ldr	r3, [sp, #0]
   1b09a:	6023      	str	r3, [r4, #0]
   1b09c:	9b01      	ldr	r3, [sp, #4]
   1b09e:	6063      	str	r3, [r4, #4]
   1b0a0:	9b02      	ldr	r3, [sp, #8]
   1b0a2:	60a3      	str	r3, [r4, #8]
   1b0a4:	f7ff ff34 	bl	1af10 <sys_clock_configure()>
   1b0a8:	f7ff ff8c 	bl	1afc4 <sys_get_cpu_clock>
   1b0ac:	4b75      	ldr	r3, [pc, #468]	; (1b284 <low_level_init()+0x1fc>)
   1b0ae:	fbb0 f0f3 	udiv	r0, r0, r3
   1b0b2:	283c      	cmp	r0, #60	; 0x3c
   1b0b4:	4b74      	ldr	r3, [pc, #464]	; (1b288 <low_level_init()+0x200>)
   1b0b6:	d805      	bhi.n	1b0c4 <low_level_init()+0x3c>
   1b0b8:	2829      	cmp	r0, #41	; 0x29
   1b0ba:	d20d      	bcs.n	1b0d8 <low_level_init()+0x50>
   1b0bc:	2814      	cmp	r0, #20
   1b0be:	d808      	bhi.n	1b0d2 <low_level_init()+0x4a>
   1b0c0:	223a      	movs	r2, #58	; 0x3a
   1b0c2:	e011      	b.n	1b0e8 <low_level_init()+0x60>
   1b0c4:	2850      	cmp	r0, #80	; 0x50
   1b0c6:	d90a      	bls.n	1b0de <low_level_init()+0x56>
   1b0c8:	2864      	cmp	r0, #100	; 0x64
   1b0ca:	d80b      	bhi.n	1b0e4 <low_level_init()+0x5c>
   1b0cc:	f244 023a 	movw	r2, #16442	; 0x403a
   1b0d0:	e00a      	b.n	1b0e8 <low_level_init()+0x60>
   1b0d2:	f241 023a 	movw	r2, #4154	; 0x103a
   1b0d6:	e007      	b.n	1b0e8 <low_level_init()+0x60>
   1b0d8:	f242 023a 	movw	r2, #8250	; 0x203a
   1b0dc:	e004      	b.n	1b0e8 <low_level_init()+0x60>
   1b0de:	f243 023a 	movw	r2, #12346	; 0x303a
   1b0e2:	e001      	b.n	1b0e8 <low_level_init()+0x60>
   1b0e4:	f245 023a 	movw	r2, #20538	; 0x503a
   1b0e8:	4968      	ldr	r1, [pc, #416]	; (1b28c <low_level_init()+0x204>)
   1b0ea:	601a      	str	r2, [r3, #0]
   1b0ec:	2308      	movs	r3, #8
   1b0ee:	760b      	strb	r3, [r1, #24]
   1b0f0:	764b      	strb	r3, [r1, #25]
   1b0f2:	768b      	strb	r3, [r1, #26]
   1b0f4:	f881 3020 	strb.w	r3, [r1, #32]
   1b0f8:	4b65      	ldr	r3, [pc, #404]	; (1b290 <low_level_init()+0x208>)
   1b0fa:	2298      	movs	r2, #152	; 0x98
   1b0fc:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1b100:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1b104:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   1b108:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   1b10c:	2290      	movs	r2, #144	; 0x90
   1b10e:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   1b112:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   1b116:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   1b11a:	2270      	movs	r2, #112	; 0x70
   1b11c:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1b120:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1b124:	2258      	movs	r2, #88	; 0x58
   1b126:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   1b12a:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   1b12e:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   1b132:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   1b136:	2278      	movs	r2, #120	; 0x78
   1b138:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   1b13c:	22a0      	movs	r2, #160	; 0xa0
   1b13e:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   1b142:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   1b146:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   1b14a:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   1b14e:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   1b152:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   1b156:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   1b15a:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   1b15e:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   1b162:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   1b166:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   1b16a:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   1b16e:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   1b172:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   1b176:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   1b17a:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   1b17e:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   1b182:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   1b186:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   1b18a:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   1b18e:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
   1b192:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
   1b196:	68ca      	ldr	r2, [r1, #12]
   1b198:	2000      	movs	r0, #0
   1b19a:	4013      	ands	r3, r2
   1b19c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   1b1a0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1b1a4:	60cb      	str	r3, [r1, #12]
   1b1a6:	f7ff fe20 	bl	1adea <__set_BASEPRI>
   1b1aa:	b661      	cpsie	f
   1b1ac:	b662      	cpsie	i
   1b1ae:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   1b1b2:	f000 f93f 	bl	1b434 <uart0_init>
   1b1b6:	4c37      	ldr	r4, [pc, #220]	; (1b294 <low_level_init()+0x20c>)
   1b1b8:	4837      	ldr	r0, [pc, #220]	; (1b298 <low_level_init()+0x210>)
   1b1ba:	f7f6 f96b 	bl	11494 <sys_set_outchar_func>
   1b1be:	4837      	ldr	r0, [pc, #220]	; (1b29c <low_level_init()+0x214>)
   1b1c0:	f7f6 f96e 	bl	114a0 <sys_set_inchar_func>
   1b1c4:	6820      	ldr	r0, [r4, #0]
   1b1c6:	2300      	movs	r3, #0
   1b1c8:	4619      	mov	r1, r3
   1b1ca:	2202      	movs	r2, #2
   1b1cc:	6880      	ldr	r0, [r0, #8]
   1b1ce:	f003 fbef 	bl	1e9b0 <setvbuf>
   1b1d2:	6820      	ldr	r0, [r4, #0]
   1b1d4:	2300      	movs	r3, #0
   1b1d6:	2202      	movs	r2, #2
   1b1d8:	4619      	mov	r1, r3
   1b1da:	6840      	ldr	r0, [r0, #4]
   1b1dc:	f003 fbe8 	bl	1e9b0 <setvbuf>
   1b1e0:	f7f6 f9a2 	bl	11528 <syscalls_init>
   1b1e4:	4a2e      	ldr	r2, [pc, #184]	; (1b2a0 <low_level_init()+0x218>)
   1b1e6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1b1ea:	605a      	str	r2, [r3, #4]
   1b1ec:	2203      	movs	r2, #3
   1b1ee:	701a      	strb	r2, [r3, #0]
   1b1f0:	22aa      	movs	r2, #170	; 0xaa
   1b1f2:	721a      	strb	r2, [r3, #8]
   1b1f4:	4c24      	ldr	r4, [pc, #144]	; (1b288 <low_level_init()+0x200>)
   1b1f6:	2255      	movs	r2, #85	; 0x55
   1b1f8:	721a      	strb	r2, [r3, #8]
   1b1fa:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1b1fe:	4d29      	ldr	r5, [pc, #164]	; (1b2a4 <low_level_init()+0x21c>)
   1b200:	f013 0f01 	tst.w	r3, #1
   1b204:	d009      	beq.n	1b21a <low_level_init()+0x192>
   1b206:	4828      	ldr	r0, [pc, #160]	; (1b2a8 <low_level_init()+0x220>)
   1b208:	f000 f95c 	bl	1b4c4 <uart0_puts>
   1b20c:	2301      	movs	r3, #1
   1b20e:	702b      	strb	r3, [r5, #0]
   1b210:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1b214:	f043 0301 	orr.w	r3, r3, #1
   1b218:	e00c      	b.n	1b234 <low_level_init()+0x1ac>
   1b21a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1b21e:	079b      	lsls	r3, r3, #30
   1b220:	d50b      	bpl.n	1b23a <low_level_init()+0x1b2>
   1b222:	4822      	ldr	r0, [pc, #136]	; (1b2ac <low_level_init()+0x224>)
   1b224:	f000 f94e 	bl	1b4c4 <uart0_puts>
   1b228:	2302      	movs	r3, #2
   1b22a:	702b      	strb	r3, [r5, #0]
   1b22c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1b230:	f043 0302 	orr.w	r3, r3, #2
   1b234:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   1b238:	e01f      	b.n	1b27a <low_level_init()+0x1f2>
   1b23a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1b23e:	f013 0304 	ands.w	r3, r3, #4
   1b242:	d019      	beq.n	1b278 <low_level_init()+0x1f0>
   1b244:	4b1a      	ldr	r3, [pc, #104]	; (1b2b0 <low_level_init()+0x228>)
   1b246:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   1b248:	4b1a      	ldr	r3, [pc, #104]	; (1b2b4 <low_level_init()+0x22c>)
   1b24a:	429a      	cmp	r2, r3
   1b24c:	d105      	bne.n	1b25a <low_level_init()+0x1d2>
   1b24e:	2305      	movs	r3, #5
   1b250:	4819      	ldr	r0, [pc, #100]	; (1b2b8 <low_level_init()+0x230>)
   1b252:	702b      	strb	r3, [r5, #0]
   1b254:	f000 f936 	bl	1b4c4 <uart0_puts>
   1b258:	e00a      	b.n	1b270 <low_level_init()+0x1e8>
   1b25a:	2304      	movs	r3, #4
   1b25c:	4817      	ldr	r0, [pc, #92]	; (1b2bc <low_level_init()+0x234>)
   1b25e:	702b      	strb	r3, [r5, #0]
   1b260:	f000 f930 	bl	1b4c4 <uart0_puts>
   1b264:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1b268:	f043 0304 	orr.w	r3, r3, #4
   1b26c:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   1b270:	4b0f      	ldr	r3, [pc, #60]	; (1b2b0 <low_level_init()+0x228>)
   1b272:	2200      	movs	r2, #0
   1b274:	649a      	str	r2, [r3, #72]	; 0x48
   1b276:	e000      	b.n	1b27a <low_level_init()+0x1f2>
   1b278:	702b      	strb	r3, [r5, #0]
   1b27a:	b005      	add	sp, #20
   1b27c:	bd30      	pop	{r4, r5, pc}
   1b27e:	bf00      	nop
   1b280:	2007c725 	.word	0x2007c725
   1b284:	000f4240 	.word	0x000f4240
   1b288:	400fc000 	.word	0x400fc000
   1b28c:	e000ed00 	.word	0xe000ed00
   1b290:	e000e100 	.word	0xe000e100
   1b294:	2007c140 	.word	0x2007c140
   1b298:	0001b4ad 	.word	0x0001b4ad
   1b29c:	0001b495 	.word	0x0001b495
   1b2a0:	002dc6c0 	.word	0x002dc6c0
   1b2a4:	2007c724 	.word	0x2007c724
   1b2a8:	00025fbc 	.word	0x00025fbc
   1b2ac:	00025fff 	.word	0x00025fff
   1b2b0:	40024000 	.word	0x40024000
   1b2b4:	deadbeef 	.word	0xdeadbeef
   1b2b8:	00025fd9 	.word	0x00025fd9
   1b2bc:	00025ff6 	.word	0x00025ff6

0001b2c0 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
   1b2c0:	b510      	push	{r4, lr}
   1b2c2:	4b10      	ldr	r3, [pc, #64]	; (1b304 <lpc_sys_setup_system_timer+0x44>)
   1b2c4:	4c10      	ldr	r4, [pc, #64]	; (1b308 <lpc_sys_setup_system_timer+0x48>)
   1b2c6:	2101      	movs	r1, #1
   1b2c8:	4608      	mov	r0, r1
   1b2ca:	6023      	str	r3, [r4, #0]
   1b2cc:	f7f5 fcf6 	bl	10cbc <lpc_timer_enable>
   1b2d0:	6823      	ldr	r3, [r4, #0]
   1b2d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b2d6:	619a      	str	r2, [r3, #24]
   1b2d8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b2dc:	61da      	str	r2, [r3, #28]
   1b2de:	2200      	movs	r2, #0
   1b2e0:	621a      	str	r2, [r3, #32]
   1b2e2:	4a0a      	ldr	r2, [pc, #40]	; (1b30c <lpc_sys_setup_system_timer+0x4c>)
   1b2e4:	625a      	str	r2, [r3, #36]	; 0x24
   1b2e6:	f240 2209 	movw	r2, #521	; 0x209
   1b2ea:	615a      	str	r2, [r3, #20]
   1b2ec:	695a      	ldr	r2, [r3, #20]
   1b2ee:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1b2f2:	615a      	str	r2, [r3, #20]
   1b2f4:	4b06      	ldr	r3, [pc, #24]	; (1b310 <lpc_sys_setup_system_timer+0x50>)
   1b2f6:	2204      	movs	r2, #4
   1b2f8:	601a      	str	r2, [r3, #0]
   1b2fa:	2218      	movs	r2, #24
   1b2fc:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   1b300:	bd10      	pop	{r4, pc}
   1b302:	bf00      	nop
   1b304:	40008000 	.word	0x40008000
   1b308:	2007c734 	.word	0x2007c734
   1b30c:	0016e360 	.word	0x0016e360
   1b310:	e000e100 	.word	0xe000e100

0001b314 <sys_get_uptime_us>:
sys_get_uptime_us():
   1b314:	4b08      	ldr	r3, [pc, #32]	; (1b338 <sys_get_uptime_us+0x24>)
   1b316:	b510      	push	{r4, lr}
   1b318:	681b      	ldr	r3, [r3, #0]
   1b31a:	4c08      	ldr	r4, [pc, #32]	; (1b33c <sys_get_uptime_us+0x28>)
   1b31c:	689a      	ldr	r2, [r3, #8]
   1b31e:	8821      	ldrh	r1, [r4, #0]
   1b320:	6898      	ldr	r0, [r3, #8]
   1b322:	b289      	uxth	r1, r1
   1b324:	4282      	cmp	r2, r0
   1b326:	d8f9      	bhi.n	1b31c <sys_get_uptime_us+0x8>
   1b328:	460b      	mov	r3, r1
   1b32a:	2200      	movs	r2, #0
   1b32c:	ea42 0200 	orr.w	r2, r2, r0
   1b330:	4610      	mov	r0, r2
   1b332:	4619      	mov	r1, r3
   1b334:	bd10      	pop	{r4, pc}
   1b336:	bf00      	nop
   1b338:	2007c734 	.word	0x2007c734
   1b33c:	2007c732 	.word	0x2007c732

0001b340 <sys_get_mem_info_str>:
sys_get_mem_info_str():
   1b340:	b510      	push	{r4, lr}
   1b342:	4604      	mov	r4, r0
   1b344:	b08e      	sub	sp, #56	; 0x38
   1b346:	a806      	add	r0, sp, #24
   1b348:	f7f6 f948 	bl	115dc <sys_get_mem_info>
   1b34c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b34e:	9a06      	ldr	r2, [sp, #24]
   1b350:	9305      	str	r3, [sp, #20]
   1b352:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1b354:	4907      	ldr	r1, [pc, #28]	; (1b374 <sys_get_mem_info_str+0x34>)
   1b356:	9304      	str	r3, [sp, #16]
   1b358:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1b35a:	4620      	mov	r0, r4
   1b35c:	9303      	str	r3, [sp, #12]
   1b35e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b360:	9302      	str	r3, [sp, #8]
   1b362:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1b364:	9301      	str	r3, [sp, #4]
   1b366:	9b08      	ldr	r3, [sp, #32]
   1b368:	9300      	str	r3, [sp, #0]
   1b36a:	9b07      	ldr	r3, [sp, #28]
   1b36c:	f003 fc14 	bl	1eb98 <siprintf>
   1b370:	b00e      	add	sp, #56	; 0x38
   1b372:	bd10      	pop	{r4, pc}
   1b374:	00026019 	.word	0x00026019

0001b378 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
   1b378:	b538      	push	{r3, r4, r5, lr}
   1b37a:	4c2b      	ldr	r4, [pc, #172]	; (1b428 <TIMER1_IRQHandler+0xb0>)
   1b37c:	6823      	ldr	r3, [r4, #0]
   1b37e:	4625      	mov	r5, r4
   1b380:	681a      	ldr	r2, [r3, #0]
   1b382:	f012 0f10 	tst.w	r2, #16
   1b386:	d00e      	beq.n	1b3a6 <TIMER1_IRQHandler+0x2e>
   1b388:	2210      	movs	r2, #16
   1b38a:	601a      	str	r2, [r3, #0]
   1b38c:	f7fc fee8 	bl	18160 <SingletonTemplate<IR_Sensor>::getInstance()>
   1b390:	6823      	ldr	r3, [r4, #0]
   1b392:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   1b394:	f7fa fadc 	bl	15950 <IR_Sensor::storeIrCode(unsigned long)>
   1b398:	6822      	ldr	r2, [r4, #0]
   1b39a:	6893      	ldr	r3, [r2, #8]
   1b39c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   1b3a0:	3310      	adds	r3, #16
   1b3a2:	6213      	str	r3, [r2, #32]
   1b3a4:	bd38      	pop	{r3, r4, r5, pc}
   1b3a6:	0754      	lsls	r4, r2, #29
   1b3a8:	d507      	bpl.n	1b3ba <TIMER1_IRQHandler+0x42>
   1b3aa:	2204      	movs	r2, #4
   1b3ac:	601a      	str	r2, [r3, #0]
   1b3ae:	f7fc fed7 	bl	18160 <SingletonTemplate<IR_Sensor>::getInstance()>
   1b3b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b3b6:	f7fa bad9 	b.w	1596c <IR_Sensor::decodeIrCode()>
   1b3ba:	07d0      	lsls	r0, r2, #31
   1b3bc:	d507      	bpl.n	1b3ce <TIMER1_IRQHandler+0x56>
   1b3be:	2201      	movs	r2, #1
   1b3c0:	601a      	str	r2, [r3, #0]
   1b3c2:	4a1a      	ldr	r2, [pc, #104]	; (1b42c <TIMER1_IRQHandler+0xb4>)
   1b3c4:	8813      	ldrh	r3, [r2, #0]
   1b3c6:	3301      	adds	r3, #1
   1b3c8:	b29b      	uxth	r3, r3
   1b3ca:	8013      	strh	r3, [r2, #0]
   1b3cc:	bd38      	pop	{r3, r4, r5, pc}
   1b3ce:	0791      	lsls	r1, r2, #30
   1b3d0:	d515      	bpl.n	1b3fe <TIMER1_IRQHandler+0x86>
   1b3d2:	2202      	movs	r2, #2
   1b3d4:	601a      	str	r2, [r3, #0]
   1b3d6:	f7ff f919 	bl	1a60c <xTaskGetSchedulerState>
   1b3da:	2802      	cmp	r0, #2
   1b3dc:	d002      	beq.n	1b3e4 <TIMER1_IRQHandler+0x6c>
   1b3de:	f7f6 faa1 	bl	11924 <wireless_service>
   1b3e2:	e004      	b.n	1b3ee <TIMER1_IRQHandler+0x76>
   1b3e4:	682a      	ldr	r2, [r5, #0]
   1b3e6:	6953      	ldr	r3, [r2, #20]
   1b3e8:	f023 0308 	bic.w	r3, r3, #8
   1b3ec:	6153      	str	r3, [r2, #20]
   1b3ee:	682a      	ldr	r2, [r5, #0]
   1b3f0:	6891      	ldr	r1, [r2, #8]
   1b3f2:	69d3      	ldr	r3, [r2, #28]
   1b3f4:	440b      	add	r3, r1
   1b3f6:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   1b3fa:	61d3      	str	r3, [r2, #28]
   1b3fc:	bd38      	pop	{r3, r4, r5, pc}
   1b3fe:	0712      	lsls	r2, r2, #28
   1b400:	d50e      	bpl.n	1b420 <TIMER1_IRQHandler+0xa8>
   1b402:	2208      	movs	r2, #8
   1b404:	601a      	str	r2, [r3, #0]
   1b406:	21aa      	movs	r1, #170	; 0xaa
   1b408:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   1b40c:	7211      	strb	r1, [r2, #8]
   1b40e:	2155      	movs	r1, #85	; 0x55
   1b410:	7211      	strb	r1, [r2, #8]
   1b412:	689a      	ldr	r2, [r3, #8]
   1b414:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   1b418:	f502 7258 	add.w	r2, r2, #864	; 0x360
   1b41c:	625a      	str	r2, [r3, #36]	; 0x24
   1b41e:	bd38      	pop	{r3, r4, r5, pc}
   1b420:	4803      	ldr	r0, [pc, #12]	; (1b430 <TIMER1_IRQHandler+0xb8>)
   1b422:	f003 f999 	bl	1e758 <puts>
   1b426:	e7fe      	b.n	1b426 <TIMER1_IRQHandler+0xae>
   1b428:	2007c734 	.word	0x2007c734
   1b42c:	2007c732 	.word	0x2007c732
   1b430:	000260de 	.word	0x000260de

0001b434 <uart0_init>:
uart0_init():
   1b434:	b510      	push	{r4, lr}
   1b436:	4604      	mov	r4, r0
   1b438:	f7ff fdc4 	bl	1afc4 <sys_get_cpu_clock>
   1b43c:	0124      	lsls	r4, r4, #4
   1b43e:	fbb0 f0f4 	udiv	r0, r0, r4
   1b442:	f000 fd45 	bl	1bed0 <__aeabi_ui2d>
   1b446:	2200      	movs	r2, #0
   1b448:	4b10      	ldr	r3, [pc, #64]	; (1b48c <uart0_init+0x58>)
   1b44a:	f000 fc05 	bl	1bc58 <__adddf3>
   1b44e:	f001 f877 	bl	1c540 <__aeabi_d2uiz>
   1b452:	2101      	movs	r1, #1
   1b454:	b284      	uxth	r4, r0
   1b456:	2003      	movs	r0, #3
   1b458:	f000 f842 	bl	1b4e0 <lpc_pconp>
   1b45c:	2101      	movs	r1, #1
   1b45e:	2003      	movs	r0, #3
   1b460:	f000 f856 	bl	1b510 <lpc_pclk>
   1b464:	4b0a      	ldr	r3, [pc, #40]	; (1b490 <uart0_init+0x5c>)
   1b466:	681a      	ldr	r2, [r3, #0]
   1b468:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   1b46c:	601a      	str	r2, [r3, #0]
   1b46e:	681a      	ldr	r2, [r3, #0]
   1b470:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   1b474:	601a      	str	r2, [r3, #0]
   1b476:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   1b47a:	2280      	movs	r2, #128	; 0x80
   1b47c:	731a      	strb	r2, [r3, #12]
   1b47e:	0a22      	lsrs	r2, r4, #8
   1b480:	711a      	strb	r2, [r3, #4]
   1b482:	b2e4      	uxtb	r4, r4
   1b484:	2203      	movs	r2, #3
   1b486:	701c      	strb	r4, [r3, #0]
   1b488:	731a      	strb	r2, [r3, #12]
   1b48a:	bd10      	pop	{r4, pc}
   1b48c:	3fe00000 	.word	0x3fe00000
   1b490:	4002c000 	.word	0x4002c000

0001b494 <uart0_getchar>:
uart0_getchar():
   1b494:	4a03      	ldr	r2, [pc, #12]	; (1b4a4 <uart0_getchar+0x10>)
   1b496:	6813      	ldr	r3, [r2, #0]
   1b498:	07db      	lsls	r3, r3, #31
   1b49a:	d5fc      	bpl.n	1b496 <uart0_getchar+0x2>
   1b49c:	4b02      	ldr	r3, [pc, #8]	; (1b4a8 <uart0_getchar+0x14>)
   1b49e:	7818      	ldrb	r0, [r3, #0]
   1b4a0:	4770      	bx	lr
   1b4a2:	bf00      	nop
   1b4a4:	4000c014 	.word	0x4000c014
   1b4a8:	4000c000 	.word	0x4000c000

0001b4ac <uart0_putchar>:
uart0_putchar():
   1b4ac:	4b03      	ldr	r3, [pc, #12]	; (1b4bc <uart0_putchar+0x10>)
   1b4ae:	4a04      	ldr	r2, [pc, #16]	; (1b4c0 <uart0_putchar+0x14>)
   1b4b0:	7018      	strb	r0, [r3, #0]
   1b4b2:	6813      	ldr	r3, [r2, #0]
   1b4b4:	065b      	lsls	r3, r3, #25
   1b4b6:	d5fc      	bpl.n	1b4b2 <uart0_putchar+0x6>
   1b4b8:	2001      	movs	r0, #1
   1b4ba:	4770      	bx	lr
   1b4bc:	4000c000 	.word	0x4000c000
   1b4c0:	4000c014 	.word	0x4000c014

0001b4c4 <uart0_puts>:
uart0_puts():
   1b4c4:	b508      	push	{r3, lr}
   1b4c6:	1e41      	subs	r1, r0, #1
   1b4c8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   1b4cc:	b110      	cbz	r0, 1b4d4 <uart0_puts+0x10>
   1b4ce:	f7ff ffed 	bl	1b4ac <uart0_putchar>
   1b4d2:	e7f9      	b.n	1b4c8 <uart0_puts+0x4>
   1b4d4:	200a      	movs	r0, #10
   1b4d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1b4da:	f7ff bfe7 	b.w	1b4ac <uart0_putchar>
   1b4de:	ffff b538 	vsli.32	d27, d24, #31

0001b4e0 <lpc_pconp>:
lpc_pconp():
   1b4e0:	b538      	push	{r3, r4, r5, lr}
   1b4e2:	4604      	mov	r4, r0
   1b4e4:	460d      	mov	r5, r1
   1b4e6:	f7fe fb1b 	bl	19b20 <vPortEnterCritical>
   1b4ea:	4a08      	ldr	r2, [pc, #32]	; (1b50c <lpc_pconp+0x2c>)
   1b4ec:	2301      	movs	r3, #1
   1b4ee:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   1b4f2:	40a3      	lsls	r3, r4
   1b4f4:	b10d      	cbz	r5, 1b4fa <lpc_pconp+0x1a>
   1b4f6:	430b      	orrs	r3, r1
   1b4f8:	e001      	b.n	1b4fe <lpc_pconp+0x1e>
   1b4fa:	ea21 0303 	bic.w	r3, r1, r3
   1b4fe:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
   1b502:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b506:	f7fe bb1d 	b.w	19b44 <vPortExitCritical>
   1b50a:	bf00      	nop
   1b50c:	400fc000 	.word	0x400fc000

0001b510 <lpc_pclk>:
lpc_pclk():
   1b510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b514:	ea4f 0840 	mov.w	r8, r0, lsl #1
   1b518:	460e      	mov	r6, r1
   1b51a:	f7fe fb01 	bl	19b20 <vPortEnterCritical>
   1b51e:	4642      	mov	r2, r8
   1b520:	2003      	movs	r0, #3
   1b522:	2100      	movs	r1, #0
   1b524:	f000 fb86 	bl	1bc34 <__aeabi_llsl>
   1b528:	4f0a      	ldr	r7, [pc, #40]	; (1b554 <lpc_pclk+0x44>)
   1b52a:	4642      	mov	r2, r8
   1b52c:	e9d7 4500 	ldrd	r4, r5, [r7]
   1b530:	ea24 0400 	bic.w	r4, r4, r0
   1b534:	ea25 0501 	bic.w	r5, r5, r1
   1b538:	f006 0003 	and.w	r0, r6, #3
   1b53c:	2100      	movs	r1, #0
   1b53e:	f000 fb79 	bl	1bc34 <__aeabi_llsl>
   1b542:	4320      	orrs	r0, r4
   1b544:	4329      	orrs	r1, r5
   1b546:	e9c7 0100 	strd	r0, r1, [r7]
   1b54a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b54e:	f7fe baf9 	b.w	19b44 <vPortExitCritical>
   1b552:	bf00      	nop
   1b554:	400fc1a8 	.word	0x400fc1a8

0001b558 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD2Ev():
   1b558:	b510      	push	{r4, lr}
   1b55a:	4604      	mov	r4, r0
   1b55c:	4b02      	ldr	r3, [pc, #8]	; (1b568 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1b55e:	6003      	str	r3, [r0, #0]
   1b560:	f000 faf4 	bl	1bb4c <__cxxabiv1::__class_type_info::~__class_type_info()>
   1b564:	4620      	mov	r0, r4
   1b566:	bd10      	pop	{r4, pc}
   1b568:	00026108 	.word	0x00026108

0001b56c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   1b56c:	b510      	push	{r4, lr}
   1b56e:	4604      	mov	r4, r0
   1b570:	f7ff fff2 	bl	1b558 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   1b574:	4620      	mov	r0, r4
   1b576:	f7f6 f82d 	bl	115d4 <operator delete(void*)>
   1b57a:	4620      	mov	r0, r4
   1b57c:	bd10      	pop	{r4, pc}

0001b57e <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1b57e:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b582:	460e      	mov	r6, r1
   1b584:	4619      	mov	r1, r3
   1b586:	4683      	mov	fp, r0
   1b588:	4617      	mov	r7, r2
   1b58a:	4699      	mov	r9, r3
   1b58c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1b58e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   1b592:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   1b596:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   1b598:	f000 faa2 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1b59c:	b178      	cbz	r0, 1b5be <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
   1b59e:	2e00      	cmp	r6, #0
   1b5a0:	602c      	str	r4, [r5, #0]
   1b5a2:	712f      	strb	r7, [r5, #4]
   1b5a4:	db06      	blt.n	1b5b4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1b5a6:	4434      	add	r4, r6
   1b5a8:	45a0      	cmp	r8, r4
   1b5aa:	bf0c      	ite	eq
   1b5ac:	2406      	moveq	r4, #6
   1b5ae:	2401      	movne	r4, #1
   1b5b0:	71ac      	strb	r4, [r5, #6]
   1b5b2:	e01e      	b.n	1b5f2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   1b5b4:	3602      	adds	r6, #2
   1b5b6:	d11c      	bne.n	1b5f2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   1b5b8:	2301      	movs	r3, #1
   1b5ba:	71ab      	strb	r3, [r5, #6]
   1b5bc:	e019      	b.n	1b5f2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   1b5be:	4544      	cmp	r4, r8
   1b5c0:	d104      	bne.n	1b5cc <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x4e>
   1b5c2:	4651      	mov	r1, sl
   1b5c4:	4658      	mov	r0, fp
   1b5c6:	f000 fa8b 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1b5ca:	b988      	cbnz	r0, 1b5f0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x72>
   1b5cc:	f8db 0008 	ldr.w	r0, [fp, #8]
   1b5d0:	463a      	mov	r2, r7
   1b5d2:	6803      	ldr	r3, [r0, #0]
   1b5d4:	950d      	str	r5, [sp, #52]	; 0x34
   1b5d6:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   1b5da:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   1b5de:	940a      	str	r4, [sp, #40]	; 0x28
   1b5e0:	69dc      	ldr	r4, [r3, #28]
   1b5e2:	4631      	mov	r1, r6
   1b5e4:	464b      	mov	r3, r9
   1b5e6:	46a4      	mov	ip, r4
   1b5e8:	b001      	add	sp, #4
   1b5ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5ee:	4760      	bx	ip
   1b5f0:	716f      	strb	r7, [r5, #5]
   1b5f2:	2000      	movs	r0, #0
   1b5f4:	b001      	add	sp, #4
   1b5f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b5fa <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1b5fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b5fe:	9e06      	ldr	r6, [sp, #24]
   1b600:	4680      	mov	r8, r0
   1b602:	4296      	cmp	r6, r2
   1b604:	460f      	mov	r7, r1
   1b606:	4614      	mov	r4, r2
   1b608:	461d      	mov	r5, r3
   1b60a:	d103      	bne.n	1b614 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   1b60c:	4619      	mov	r1, r3
   1b60e:	f000 fa67 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1b612:	b958      	cbnz	r0, 1b62c <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   1b614:	f8d8 0008 	ldr.w	r0, [r8, #8]
   1b618:	4622      	mov	r2, r4
   1b61a:	6803      	ldr	r3, [r0, #0]
   1b61c:	9606      	str	r6, [sp, #24]
   1b61e:	6a1e      	ldr	r6, [r3, #32]
   1b620:	4639      	mov	r1, r7
   1b622:	462b      	mov	r3, r5
   1b624:	46b4      	mov	ip, r6
   1b626:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b62a:	4760      	bx	ip
   1b62c:	2006      	movs	r0, #6
   1b62e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b632 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1b632:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b636:	4604      	mov	r4, r0
   1b638:	460d      	mov	r5, r1
   1b63a:	4616      	mov	r6, r2
   1b63c:	461f      	mov	r7, r3
   1b63e:	f000 fa98 	bl	1bb72 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1b642:	b948      	cbnz	r0, 1b658 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   1b644:	68a0      	ldr	r0, [r4, #8]
   1b646:	4632      	mov	r2, r6
   1b648:	6803      	ldr	r3, [r0, #0]
   1b64a:	4629      	mov	r1, r5
   1b64c:	699c      	ldr	r4, [r3, #24]
   1b64e:	463b      	mov	r3, r7
   1b650:	46a4      	mov	ip, r4
   1b652:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b656:	4760      	bx	ip
   1b658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b65c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD1Ev():
   1b65c:	b510      	push	{r4, lr}
   1b65e:	4604      	mov	r4, r0
   1b660:	4b02      	ldr	r3, [pc, #8]	; (1b66c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   1b662:	6003      	str	r3, [r0, #0]
   1b664:	f000 fa72 	bl	1bb4c <__cxxabiv1::__class_type_info::~__class_type_info()>
   1b668:	4620      	mov	r0, r4
   1b66a:	bd10      	pop	{r4, pc}
   1b66c:	0002619c 	.word	0x0002619c

0001b670 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   1b670:	b510      	push	{r4, lr}
   1b672:	4604      	mov	r4, r0
   1b674:	f7ff fff2 	bl	1b65c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   1b678:	4620      	mov	r0, r4
   1b67a:	f7f5 ffab 	bl	115d4 <operator delete(void*)>
   1b67e:	4620      	mov	r0, r4
   1b680:	bd10      	pop	{r4, pc}

0001b682 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1b682:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b686:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   1b68a:	4604      	mov	r4, r0
   1b68c:	454a      	cmp	r2, r9
   1b68e:	460f      	mov	r7, r1
   1b690:	4616      	mov	r6, r2
   1b692:	4698      	mov	r8, r3
   1b694:	d105      	bne.n	1b6a2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
   1b696:	4619      	mov	r1, r3
   1b698:	f000 fa22 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1b69c:	b108      	cbz	r0, 1b6a2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
   1b69e:	2006      	movs	r0, #6
   1b6a0:	e026      	b.n	1b6f0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6e>
   1b6a2:	68e5      	ldr	r5, [r4, #12]
   1b6a4:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1b6a8:	b30d      	cbz	r5, 1b6ee <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1b6aa:	68e3      	ldr	r3, [r4, #12]
   1b6ac:	079a      	lsls	r2, r3, #30
   1b6ae:	d402      	bmi.n	1b6b6 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x34>
   1b6b0:	3d01      	subs	r5, #1
   1b6b2:	3c08      	subs	r4, #8
   1b6b4:	e7f8      	b.n	1b6a8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   1b6b6:	f013 0a01 	ands.w	sl, r3, #1
   1b6ba:	ea4f 2223 	mov.w	r2, r3, asr #8
   1b6be:	d003      	beq.n	1b6c8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x46>
   1b6c0:	1cfb      	adds	r3, r7, #3
   1b6c2:	d0f5      	beq.n	1b6b0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2e>
   1b6c4:	6833      	ldr	r3, [r6, #0]
   1b6c6:	589a      	ldr	r2, [r3, r2]
   1b6c8:	68a0      	ldr	r0, [r4, #8]
   1b6ca:	4432      	add	r2, r6
   1b6cc:	6803      	ldr	r3, [r0, #0]
   1b6ce:	f8cd 9000 	str.w	r9, [sp]
   1b6d2:	f8d3 b020 	ldr.w	fp, [r3, #32]
   1b6d6:	4639      	mov	r1, r7
   1b6d8:	4643      	mov	r3, r8
   1b6da:	47d8      	blx	fp
   1b6dc:	2803      	cmp	r0, #3
   1b6de:	d9e7      	bls.n	1b6b0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2e>
   1b6e0:	f1ba 0f00 	cmp.w	sl, #0
   1b6e4:	d004      	beq.n	1b6f0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6e>
   1b6e6:	f040 0001 	orr.w	r0, r0, #1
   1b6ea:	b2c0      	uxtb	r0, r0
   1b6ec:	e000      	b.n	1b6f0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6e>
   1b6ee:	2001      	movs	r0, #1
   1b6f0:	b003      	add	sp, #12
   1b6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b6f6 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   1b6f6:	b4f0      	push	{r4, r5, r6, r7}
   1b6f8:	1e0d      	subs	r5, r1, #0
   1b6fa:	9c04      	ldr	r4, [sp, #16]
   1b6fc:	db05      	blt.n	1b70a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x14>
   1b6fe:	1950      	adds	r0, r2, r5
   1b700:	4284      	cmp	r4, r0
   1b702:	bf14      	ite	ne
   1b704:	2001      	movne	r0, #1
   1b706:	2006      	moveq	r0, #6
   1b708:	e008      	b.n	1b71c <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   1b70a:	3502      	adds	r5, #2
   1b70c:	d005      	beq.n	1b71a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1b70e:	6805      	ldr	r5, [r0, #0]
   1b710:	9404      	str	r4, [sp, #16]
   1b712:	6a2c      	ldr	r4, [r5, #32]
   1b714:	46a4      	mov	ip, r4
   1b716:	bcf0      	pop	{r4, r5, r6, r7}
   1b718:	4760      	bx	ip
   1b71a:	2001      	movs	r0, #1
   1b71c:	bcf0      	pop	{r4, r5, r6, r7}
   1b71e:	4770      	bx	lr

0001b720 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1b720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b724:	b091      	sub	sp, #68	; 0x44
   1b726:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   1b728:	9307      	str	r3, [sp, #28]
   1b72a:	68a3      	ldr	r3, [r4, #8]
   1b72c:	4688      	mov	r8, r1
   1b72e:	06d9      	lsls	r1, r3, #27
   1b730:	bf48      	it	mi
   1b732:	6883      	ldrmi	r3, [r0, #8]
   1b734:	9206      	str	r2, [sp, #24]
   1b736:	bf48      	it	mi
   1b738:	60a3      	strmi	r3, [r4, #8]
   1b73a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1b73c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1b73e:	4682      	mov	sl, r0
   1b740:	4293      	cmp	r3, r2
   1b742:	d108      	bne.n	1b756 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1b744:	991b      	ldr	r1, [sp, #108]	; 0x6c
   1b746:	f000 f9cb 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1b74a:	b120      	cbz	r0, 1b756 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1b74c:	f89d 3018 	ldrb.w	r3, [sp, #24]
   1b750:	7163      	strb	r3, [r4, #5]
   1b752:	2700      	movs	r7, #0
   1b754:	e127      	b.n	1b9a6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x286>
   1b756:	9907      	ldr	r1, [sp, #28]
   1b758:	4650      	mov	r0, sl
   1b75a:	f000 f9c1 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1b75e:	4607      	mov	r7, r0
   1b760:	b1c8      	cbz	r0, 1b796 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x76>
   1b762:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1b764:	f1b8 0f00 	cmp.w	r8, #0
   1b768:	6023      	str	r3, [r4, #0]
   1b76a:	f89d 3018 	ldrb.w	r3, [sp, #24]
   1b76e:	7123      	strb	r3, [r4, #4]
   1b770:	db0b      	blt.n	1b78a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x6a>
   1b772:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1b774:	4498      	add	r8, r3
   1b776:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1b778:	4543      	cmp	r3, r8
   1b77a:	bf0c      	ite	eq
   1b77c:	f04f 0806 	moveq.w	r8, #6
   1b780:	f04f 0801 	movne.w	r8, #1
   1b784:	f884 8006 	strb.w	r8, [r4, #6]
   1b788:	e7e3      	b.n	1b752 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1b78a:	f118 0f02 	cmn.w	r8, #2
   1b78e:	d1e0      	bne.n	1b752 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1b790:	2301      	movs	r3, #1
   1b792:	71a3      	strb	r3, [r4, #6]
   1b794:	e7dd      	b.n	1b752 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1b796:	f04f 0900 	mov.w	r9, #0
   1b79a:	46cb      	mov	fp, r9
   1b79c:	f1b8 0f00 	cmp.w	r8, #0
   1b7a0:	bfa9      	itett	ge
   1b7a2:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   1b7a4:	9708      	strlt	r7, [sp, #32]
   1b7a6:	ebc8 0303 	rsbge	r3, r8, r3
   1b7aa:	9308      	strge	r3, [sp, #32]
   1b7ac:	2301      	movs	r3, #1
   1b7ae:	9309      	str	r3, [sp, #36]	; 0x24
   1b7b0:	9b06      	ldr	r3, [sp, #24]
   1b7b2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   1b7b6:	f043 0301 	orr.w	r3, r3, #1
   1b7ba:	930b      	str	r3, [sp, #44]	; 0x2c
   1b7bc:	f8da 300c 	ldr.w	r3, [sl, #12]
   1b7c0:	eb0a 02c3 	add.w	r2, sl, r3, lsl #3
   1b7c4:	9204      	str	r2, [sp, #16]
   1b7c6:	9305      	str	r3, [sp, #20]
   1b7c8:	9b05      	ldr	r3, [sp, #20]
   1b7ca:	2b00      	cmp	r3, #0
   1b7cc:	f000 80a3 	beq.w	1b916 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1f6>
   1b7d0:	9b04      	ldr	r3, [sp, #16]
   1b7d2:	68a5      	ldr	r5, [r4, #8]
   1b7d4:	68db      	ldr	r3, [r3, #12]
   1b7d6:	950f      	str	r5, [sp, #60]	; 0x3c
   1b7d8:	07da      	lsls	r2, r3, #31
   1b7da:	bf48      	it	mi
   1b7dc:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   1b7de:	ea4f 2123 	mov.w	r1, r3, asr #8
   1b7e2:	bf48      	it	mi
   1b7e4:	6800      	ldrmi	r0, [r0, #0]
   1b7e6:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   1b7ea:	bf48      	it	mi
   1b7ec:	5841      	ldrmi	r1, [r0, r1]
   1b7ee:	981a      	ldr	r0, [sp, #104]	; 0x68
   1b7f0:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   1b7f4:	4401      	add	r1, r0
   1b7f6:	9808      	ldr	r0, [sp, #32]
   1b7f8:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   1b7fc:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   1b800:	bf4c      	ite	mi
   1b802:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   1b804:	9a06      	ldrpl	r2, [sp, #24]
   1b806:	b130      	cbz	r0, 1b816 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xf6>
   1b808:	4288      	cmp	r0, r1
   1b80a:	9e09      	ldr	r6, [sp, #36]	; 0x24
   1b80c:	bf2c      	ite	cs
   1b80e:	2000      	movcs	r0, #0
   1b810:	2001      	movcc	r0, #1
   1b812:	42b0      	cmp	r0, r6
   1b814:	d078      	beq.n	1b908 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e8>
   1b816:	079b      	lsls	r3, r3, #30
   1b818:	d40d      	bmi.n	1b836 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x116>
   1b81a:	f118 0f02 	cmn.w	r8, #2
   1b81e:	d108      	bne.n	1b832 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x112>
   1b820:	07ae      	lsls	r6, r5, #30
   1b822:	d106      	bne.n	1b832 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x112>
   1b824:	9b05      	ldr	r3, [sp, #20]
   1b826:	3b01      	subs	r3, #1
   1b828:	9305      	str	r3, [sp, #20]
   1b82a:	9b04      	ldr	r3, [sp, #16]
   1b82c:	3b08      	subs	r3, #8
   1b82e:	9304      	str	r3, [sp, #16]
   1b830:	e7ca      	b.n	1b7c8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xa8>
   1b832:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   1b836:	9b04      	ldr	r3, [sp, #16]
   1b838:	ad0d      	add	r5, sp, #52	; 0x34
   1b83a:	6898      	ldr	r0, [r3, #8]
   1b83c:	6803      	ldr	r3, [r0, #0]
   1b83e:	9503      	str	r5, [sp, #12]
   1b840:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   1b842:	9502      	str	r5, [sp, #8]
   1b844:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1b846:	e88d 0022 	stmia.w	sp, {r1, r5}
   1b84a:	4641      	mov	r1, r8
   1b84c:	69dd      	ldr	r5, [r3, #28]
   1b84e:	9b07      	ldr	r3, [sp, #28]
   1b850:	47a8      	blx	r5
   1b852:	7961      	ldrb	r1, [r4, #5]
   1b854:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   1b858:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   1b85c:	4311      	orrs	r1, r2
   1b85e:	2d06      	cmp	r5, #6
   1b860:	4603      	mov	r3, r0
   1b862:	7161      	strb	r1, [r4, #5]
   1b864:	d001      	beq.n	1b86a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x14a>
   1b866:	2d02      	cmp	r5, #2
   1b868:	d106      	bne.n	1b878 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x158>
   1b86a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b86c:	71a5      	strb	r5, [r4, #6]
   1b86e:	6023      	str	r3, [r4, #0]
   1b870:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   1b874:	7123      	strb	r3, [r4, #4]
   1b876:	e04a      	b.n	1b90e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ee>
   1b878:	6822      	ldr	r2, [r4, #0]
   1b87a:	f1b9 0f00 	cmp.w	r9, #0
   1b87e:	d10e      	bne.n	1b89e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17e>
   1b880:	b96a      	cbnz	r2, 1b89e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17e>
   1b882:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1b884:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   1b888:	6022      	str	r2, [r4, #0]
   1b88a:	7125      	strb	r5, [r4, #4]
   1b88c:	2a00      	cmp	r2, #0
   1b88e:	d036      	beq.n	1b8fe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1de>
   1b890:	2900      	cmp	r1, #0
   1b892:	d034      	beq.n	1b8fe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1de>
   1b894:	f8da 2008 	ldr.w	r2, [sl, #8]
   1b898:	07d5      	lsls	r5, r2, #31
   1b89a:	d430      	bmi.n	1b8fe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1de>
   1b89c:	e037      	b.n	1b90e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ee>
   1b89e:	b152      	cbz	r2, 1b8b6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x196>
   1b8a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b8a2:	429a      	cmp	r2, r3
   1b8a4:	d105      	bne.n	1b8b2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   1b8a6:	7922      	ldrb	r2, [r4, #4]
   1b8a8:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   1b8ac:	4313      	orrs	r3, r2
   1b8ae:	7123      	strb	r3, [r4, #4]
   1b8b0:	e024      	b.n	1b8fc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1dc>
   1b8b2:	b92b      	cbnz	r3, 1b8c0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1a0>
   1b8b4:	b920      	cbnz	r0, 1b8c0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1a0>
   1b8b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b8b8:	b303      	cbz	r3, 1b8fc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1dc>
   1b8ba:	f1b9 0f00 	cmp.w	r9, #0
   1b8be:	d01d      	beq.n	1b8fc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1dc>
   1b8c0:	2903      	cmp	r1, #3
   1b8c2:	79a6      	ldrb	r6, [r4, #6]
   1b8c4:	d904      	bls.n	1b8d0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b0>
   1b8c6:	07c8      	lsls	r0, r1, #31
   1b8c8:	d553      	bpl.n	1b972 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x252>
   1b8ca:	68a3      	ldr	r3, [r4, #8]
   1b8cc:	0799      	lsls	r1, r3, #30
   1b8ce:	d550      	bpl.n	1b972 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x252>
   1b8d0:	b356      	cbz	r6, 1b928 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x208>
   1b8d2:	b395      	cbz	r5, 1b93a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21a>
   1b8d4:	ea85 0306 	eor.w	r3, r5, r6
   1b8d8:	b2db      	uxtb	r3, r3
   1b8da:	2b03      	cmp	r3, #3
   1b8dc:	d93a      	bls.n	1b954 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x234>
   1b8de:	2d03      	cmp	r5, #3
   1b8e0:	d907      	bls.n	1b8f2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d2>
   1b8e2:	462e      	mov	r6, r5
   1b8e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1b8e6:	f04f 0900 	mov.w	r9, #0
   1b8ea:	6023      	str	r3, [r4, #0]
   1b8ec:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   1b8f0:	7123      	strb	r3, [r4, #4]
   1b8f2:	07b2      	lsls	r2, r6, #30
   1b8f4:	71a6      	strb	r6, [r4, #6]
   1b8f6:	d456      	bmi.n	1b9a6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x286>
   1b8f8:	07f3      	lsls	r3, r6, #31
   1b8fa:	d554      	bpl.n	1b9a6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x286>
   1b8fc:	464b      	mov	r3, r9
   1b8fe:	7962      	ldrb	r2, [r4, #5]
   1b900:	2a04      	cmp	r2, #4
   1b902:	d006      	beq.n	1b912 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1f2>
   1b904:	4699      	mov	r9, r3
   1b906:	e78d      	b.n	1b824 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x104>
   1b908:	2301      	movs	r3, #1
   1b90a:	930a      	str	r3, [sp, #40]	; 0x28
   1b90c:	e78a      	b.n	1b824 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x104>
   1b90e:	4607      	mov	r7, r0
   1b910:	e049      	b.n	1b9a6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x286>
   1b912:	461f      	mov	r7, r3
   1b914:	e047      	b.n	1b9a6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x286>
   1b916:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1b918:	b123      	cbz	r3, 1b924 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x204>
   1b91a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1b91c:	b113      	cbz	r3, 1b924 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x204>
   1b91e:	9b05      	ldr	r3, [sp, #20]
   1b920:	9309      	str	r3, [sp, #36]	; 0x24
   1b922:	e74b      	b.n	1b7bc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x9c>
   1b924:	464f      	mov	r7, r9
   1b926:	e03e      	b.n	1b9a6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x286>
   1b928:	2d03      	cmp	r5, #3
   1b92a:	d929      	bls.n	1b980 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x260>
   1b92c:	07eb      	lsls	r3, r5, #31
   1b92e:	d50d      	bpl.n	1b94c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22c>
   1b930:	f8da 3008 	ldr.w	r3, [sl, #8]
   1b934:	079e      	lsls	r6, r3, #30
   1b936:	d509      	bpl.n	1b94c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22c>
   1b938:	e022      	b.n	1b980 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x260>
   1b93a:	2e03      	cmp	r6, #3
   1b93c:	d929      	bls.n	1b992 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x272>
   1b93e:	07f0      	lsls	r0, r6, #31
   1b940:	d506      	bpl.n	1b950 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x230>
   1b942:	f8da 3008 	ldr.w	r3, [sl, #8]
   1b946:	0799      	lsls	r1, r3, #30
   1b948:	d423      	bmi.n	1b992 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x272>
   1b94a:	e001      	b.n	1b950 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x230>
   1b94c:	2601      	movs	r6, #1
   1b94e:	e7c1      	b.n	1b8d4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b4>
   1b950:	2501      	movs	r5, #1
   1b952:	e7bf      	b.n	1b8d4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b4>
   1b954:	4035      	ands	r5, r6
   1b956:	b2ed      	uxtb	r5, r5
   1b958:	2d03      	cmp	r5, #3
   1b95a:	d905      	bls.n	1b968 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x248>
   1b95c:	2300      	movs	r3, #0
   1b95e:	6023      	str	r3, [r4, #0]
   1b960:	2302      	movs	r3, #2
   1b962:	71a3      	strb	r3, [r4, #6]
   1b964:	2701      	movs	r7, #1
   1b966:	e01e      	b.n	1b9a6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x286>
   1b968:	2301      	movs	r3, #1
   1b96a:	f8c4 b000 	str.w	fp, [r4]
   1b96e:	71a3      	strb	r3, [r4, #6]
   1b970:	e7c5      	b.n	1b8fe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1de>
   1b972:	2e00      	cmp	r6, #0
   1b974:	bf08      	it	eq
   1b976:	2601      	moveq	r6, #1
   1b978:	2d00      	cmp	r5, #0
   1b97a:	bf08      	it	eq
   1b97c:	2501      	moveq	r5, #1
   1b97e:	e7a9      	b.n	1b8d4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b4>
   1b980:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1b982:	4641      	mov	r1, r8
   1b984:	9300      	str	r3, [sp, #0]
   1b986:	9807      	ldr	r0, [sp, #28]
   1b988:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1b98a:	f7ff feb4 	bl	1b6f6 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1b98e:	4606      	mov	r6, r0
   1b990:	e79f      	b.n	1b8d2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b2>
   1b992:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1b994:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1b996:	9300      	str	r3, [sp, #0]
   1b998:	4641      	mov	r1, r8
   1b99a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1b99c:	9807      	ldr	r0, [sp, #28]
   1b99e:	f7ff feaa 	bl	1b6f6 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1b9a2:	4605      	mov	r5, r0
   1b9a4:	e796      	b.n	1b8d4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b4>
   1b9a6:	4638      	mov	r0, r7
   1b9a8:	b011      	add	sp, #68	; 0x44
   1b9aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b9ae <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1b9ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9b2:	b089      	sub	sp, #36	; 0x24
   1b9b4:	4680      	mov	r8, r0
   1b9b6:	9102      	str	r1, [sp, #8]
   1b9b8:	4692      	mov	sl, r2
   1b9ba:	461c      	mov	r4, r3
   1b9bc:	f000 f8d9 	bl	1bb72 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1b9c0:	4605      	mov	r5, r0
   1b9c2:	2800      	cmp	r0, #0
   1b9c4:	f040 8085 	bne.w	1bad2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x124>
   1b9c8:	f8d4 9008 	ldr.w	r9, [r4, #8]
   1b9cc:	f8d8 600c 	ldr.w	r6, [r8, #12]
   1b9d0:	f019 0f10 	tst.w	r9, #16
   1b9d4:	bf18      	it	ne
   1b9d6:	f8d8 9008 	ldrne.w	r9, [r8, #8]
   1b9da:	eb08 07c6 	add.w	r7, r8, r6, lsl #3
   1b9de:	f009 0301 	and.w	r3, r9, #1
   1b9e2:	f04f 0b00 	mov.w	fp, #0
   1b9e6:	9303      	str	r3, [sp, #12]
   1b9e8:	2e00      	cmp	r6, #0
   1b9ea:	d05f      	beq.n	1baac <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfe>
   1b9ec:	68fa      	ldr	r2, [r7, #12]
   1b9ee:	f8cd b010 	str.w	fp, [sp, #16]
   1b9f2:	f002 0301 	and.w	r3, r2, #1
   1b9f6:	9300      	str	r3, [sp, #0]
   1b9f8:	f012 0302 	ands.w	r3, r2, #2
   1b9fc:	f88d b014 	strb.w	fp, [sp, #20]
   1ba00:	f8cd 9018 	str.w	r9, [sp, #24]
   1ba04:	f8cd b01c 	str.w	fp, [sp, #28]
   1ba08:	9301      	str	r3, [sp, #4]
   1ba0a:	d104      	bne.n	1ba16 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x68>
   1ba0c:	9b03      	ldr	r3, [sp, #12]
   1ba0e:	b913      	cbnz	r3, 1ba16 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x68>
   1ba10:	3e01      	subs	r6, #1
   1ba12:	3f08      	subs	r7, #8
   1ba14:	e7e8      	b.n	1b9e8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x3a>
   1ba16:	f1ba 0f00 	cmp.w	sl, #0
   1ba1a:	d007      	beq.n	1ba2c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x7e>
   1ba1c:	9b00      	ldr	r3, [sp, #0]
   1ba1e:	1212      	asrs	r2, r2, #8
   1ba20:	b113      	cbz	r3, 1ba28 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x7a>
   1ba22:	f8da 3000 	ldr.w	r3, [sl]
   1ba26:	589a      	ldr	r2, [r3, r2]
   1ba28:	4452      	add	r2, sl
   1ba2a:	e000      	b.n	1ba2e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x80>
   1ba2c:	4652      	mov	r2, sl
   1ba2e:	68b8      	ldr	r0, [r7, #8]
   1ba30:	9902      	ldr	r1, [sp, #8]
   1ba32:	6803      	ldr	r3, [r0, #0]
   1ba34:	699d      	ldr	r5, [r3, #24]
   1ba36:	ab04      	add	r3, sp, #16
   1ba38:	47a8      	blx	r5
   1ba3a:	4605      	mov	r5, r0
   1ba3c:	2800      	cmp	r0, #0
   1ba3e:	d0e7      	beq.n	1ba10 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x62>
   1ba40:	9b07      	ldr	r3, [sp, #28]
   1ba42:	2b08      	cmp	r3, #8
   1ba44:	d103      	bne.n	1ba4e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa0>
   1ba46:	9b00      	ldr	r3, [sp, #0]
   1ba48:	b10b      	cbz	r3, 1ba4e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa0>
   1ba4a:	68bb      	ldr	r3, [r7, #8]
   1ba4c:	9307      	str	r3, [sp, #28]
   1ba4e:	f89d 3014 	ldrb.w	r3, [sp, #20]
   1ba52:	2b03      	cmp	r3, #3
   1ba54:	d901      	bls.n	1ba5a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xac>
   1ba56:	9a01      	ldr	r2, [sp, #4]
   1ba58:	b36a      	cbz	r2, 1bab6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x108>
   1ba5a:	68e1      	ldr	r1, [r4, #12]
   1ba5c:	b9a9      	cbnz	r1, 1ba8a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   1ba5e:	ab04      	add	r3, sp, #16
   1ba60:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1ba62:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   1ba66:	7923      	ldrb	r3, [r4, #4]
   1ba68:	2b03      	cmp	r3, #3
   1ba6a:	d932      	bls.n	1bad2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x124>
   1ba6c:	079a      	lsls	r2, r3, #30
   1ba6e:	d504      	bpl.n	1ba7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   1ba70:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1ba74:	f013 0f01 	tst.w	r3, #1
   1ba78:	e005      	b.n	1ba86 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd8>
   1ba7a:	07db      	lsls	r3, r3, #31
   1ba7c:	d529      	bpl.n	1bad2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x124>
   1ba7e:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1ba82:	f013 0f02 	tst.w	r3, #2
   1ba86:	d1c3      	bne.n	1ba10 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x62>
   1ba88:	e023      	b.n	1bad2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x124>
   1ba8a:	6823      	ldr	r3, [r4, #0]
   1ba8c:	9a04      	ldr	r2, [sp, #16]
   1ba8e:	4293      	cmp	r3, r2
   1ba90:	d002      	beq.n	1ba98 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xea>
   1ba92:	2300      	movs	r3, #0
   1ba94:	6023      	str	r3, [r4, #0]
   1ba96:	e013      	b.n	1bac0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1ba98:	b9ab      	cbnz	r3, 1bac6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x118>
   1ba9a:	9807      	ldr	r0, [sp, #28]
   1ba9c:	2808      	cmp	r0, #8
   1ba9e:	d00f      	beq.n	1bac0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1baa0:	2908      	cmp	r1, #8
   1baa2:	d00d      	beq.n	1bac0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1baa4:	f000 f81c 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1baa8:	b968      	cbnz	r0, 1bac6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x118>
   1baaa:	e009      	b.n	1bac0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1baac:	7925      	ldrb	r5, [r4, #4]
   1baae:	3500      	adds	r5, #0
   1bab0:	bf18      	it	ne
   1bab2:	2501      	movne	r5, #1
   1bab4:	e00d      	b.n	1bad2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x124>
   1bab6:	f023 0302 	bic.w	r3, r3, #2
   1baba:	f88d 3014 	strb.w	r3, [sp, #20]
   1babe:	e7cc      	b.n	1ba5a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xac>
   1bac0:	2302      	movs	r3, #2
   1bac2:	7123      	strb	r3, [r4, #4]
   1bac4:	e005      	b.n	1bad2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x124>
   1bac6:	7922      	ldrb	r2, [r4, #4]
   1bac8:	f89d 3014 	ldrb.w	r3, [sp, #20]
   1bacc:	4313      	orrs	r3, r2
   1bace:	7123      	strb	r3, [r4, #4]
   1bad0:	e79e      	b.n	1ba10 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x62>
   1bad2:	4628      	mov	r0, r5
   1bad4:	b009      	add	sp, #36	; 0x24
   1bad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bada <std::type_info::~type_info()>:
_ZNSt9type_infoD1Ev():
   1bada:	4770      	bx	lr

0001badc <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info15__is_function_pEv():
   1badc:	2000      	movs	r0, #0
   1bade:	4770      	bx	lr

0001bae0 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   1bae0:	4281      	cmp	r1, r0
   1bae2:	b508      	push	{r3, lr}
   1bae4:	d00e      	beq.n	1bb04 <std::type_info::operator==(std::type_info const&) const+0x24>
   1bae6:	6840      	ldr	r0, [r0, #4]
   1bae8:	7803      	ldrb	r3, [r0, #0]
   1baea:	2b2a      	cmp	r3, #42	; 0x2a
   1baec:	d00c      	beq.n	1bb08 <std::type_info::operator==(std::type_info const&) const+0x28>
   1baee:	6849      	ldr	r1, [r1, #4]
   1baf0:	780b      	ldrb	r3, [r1, #0]
   1baf2:	2b2a      	cmp	r3, #42	; 0x2a
   1baf4:	bf08      	it	eq
   1baf6:	3101      	addeq	r1, #1
   1baf8:	f003 f91d 	bl	1ed36 <strcmp>
   1bafc:	fab0 f080 	clz	r0, r0
   1bb00:	0940      	lsrs	r0, r0, #5
   1bb02:	bd08      	pop	{r3, pc}
   1bb04:	2001      	movs	r0, #1
   1bb06:	bd08      	pop	{r3, pc}
   1bb08:	2000      	movs	r0, #0
   1bb0a:	bd08      	pop	{r3, pc}

0001bb0c <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   1bb0c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1bb0e:	2310      	movs	r3, #16
   1bb10:	9302      	str	r3, [sp, #8]
   1bb12:	6803      	ldr	r3, [r0, #0]
   1bb14:	2400      	movs	r4, #0
   1bb16:	4615      	mov	r5, r2
   1bb18:	699e      	ldr	r6, [r3, #24]
   1bb1a:	9400      	str	r4, [sp, #0]
   1bb1c:	466b      	mov	r3, sp
   1bb1e:	f88d 4004 	strb.w	r4, [sp, #4]
   1bb22:	9403      	str	r4, [sp, #12]
   1bb24:	6812      	ldr	r2, [r2, #0]
   1bb26:	47b0      	blx	r6
   1bb28:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1bb2c:	f003 0306 	and.w	r3, r3, #6
   1bb30:	2b06      	cmp	r3, #6
   1bb32:	bf11      	iteee	ne
   1bb34:	4620      	movne	r0, r4
   1bb36:	9b00      	ldreq	r3, [sp, #0]
   1bb38:	2001      	moveq	r0, #1
   1bb3a:	602b      	streq	r3, [r5, #0]
   1bb3c:	b004      	add	sp, #16
   1bb3e:	bd70      	pop	{r4, r5, r6, pc}

0001bb40 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   1bb40:	9800      	ldr	r0, [sp, #0]
   1bb42:	4290      	cmp	r0, r2
   1bb44:	bf0c      	ite	eq
   1bb46:	2006      	moveq	r0, #6
   1bb48:	2001      	movne	r0, #1
   1bb4a:	4770      	bx	lr

0001bb4c <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD1Ev():
   1bb4c:	b510      	push	{r4, lr}
   1bb4e:	4604      	mov	r4, r0
   1bb50:	4b02      	ldr	r3, [pc, #8]	; (1bb5c <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1bb52:	6003      	str	r3, [r0, #0]
   1bb54:	f7ff ffc1 	bl	1bada <std::type_info::~type_info()>
   1bb58:	4620      	mov	r0, r4
   1bb5a:	bd10      	pop	{r4, pc}
   1bb5c:	000261e0 	.word	0x000261e0

0001bb60 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   1bb60:	b510      	push	{r4, lr}
   1bb62:	4604      	mov	r4, r0
   1bb64:	f7ff fff2 	bl	1bb4c <__cxxabiv1::__class_type_info::~__class_type_info()>
   1bb68:	4620      	mov	r0, r4
   1bb6a:	f7f5 fd33 	bl	115d4 <operator delete(void*)>
   1bb6e:	4620      	mov	r0, r4
   1bb70:	bd10      	pop	{r4, pc}

0001bb72 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   1bb72:	b538      	push	{r3, r4, r5, lr}
   1bb74:	4615      	mov	r5, r2
   1bb76:	461c      	mov	r4, r3
   1bb78:	f7ff ffb2 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1bb7c:	b120      	cbz	r0, 1bb88 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   1bb7e:	2308      	movs	r3, #8
   1bb80:	60e3      	str	r3, [r4, #12]
   1bb82:	2306      	movs	r3, #6
   1bb84:	6025      	str	r5, [r4, #0]
   1bb86:	7123      	strb	r3, [r4, #4]
   1bb88:	bd38      	pop	{r3, r4, r5, pc}

0001bb8a <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   1bb8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1bb8e:	9e06      	ldr	r6, [sp, #24]
   1bb90:	4698      	mov	r8, r3
   1bb92:	9b08      	ldr	r3, [sp, #32]
   1bb94:	4607      	mov	r7, r0
   1bb96:	429e      	cmp	r6, r3
   1bb98:	4615      	mov	r5, r2
   1bb9a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   1bb9c:	d103      	bne.n	1bba6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   1bb9e:	9907      	ldr	r1, [sp, #28]
   1bba0:	f7ff ff9e 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1bba4:	b948      	cbnz	r0, 1bbba <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   1bba6:	4641      	mov	r1, r8
   1bba8:	4638      	mov	r0, r7
   1bbaa:	f7ff ff99 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1bbae:	b128      	cbz	r0, 1bbbc <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1bbb0:	2301      	movs	r3, #1
   1bbb2:	6026      	str	r6, [r4, #0]
   1bbb4:	7125      	strb	r5, [r4, #4]
   1bbb6:	71a3      	strb	r3, [r4, #6]
   1bbb8:	e000      	b.n	1bbbc <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1bbba:	7165      	strb	r5, [r4, #5]
   1bbbc:	2000      	movs	r0, #0
   1bbbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001bbc2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   1bbc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1bbc6:	4605      	mov	r5, r0
   1bbc8:	460c      	mov	r4, r1
   1bbca:	4616      	mov	r6, r2
   1bbcc:	461f      	mov	r7, r3
   1bbce:	f7ff ff87 	bl	1bae0 <std::type_info::operator==(std::type_info const&) const>
   1bbd2:	b948      	cbnz	r0, 1bbe8 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1bbd4:	2f03      	cmp	r7, #3
   1bbd6:	d807      	bhi.n	1bbe8 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1bbd8:	6823      	ldr	r3, [r4, #0]
   1bbda:	4632      	mov	r2, r6
   1bbdc:	4629      	mov	r1, r5
   1bbde:	4620      	mov	r0, r4
   1bbe0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1bbe4:	695b      	ldr	r3, [r3, #20]
   1bbe6:	4718      	bx	r3
   1bbe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001bbec <__cxa_guard_acquire>:
__cxa_guard_acquire():
   1bbec:	6803      	ldr	r3, [r0, #0]
   1bbee:	07db      	lsls	r3, r3, #31
   1bbf0:	d406      	bmi.n	1bc00 <__cxa_guard_acquire+0x14>
   1bbf2:	7843      	ldrb	r3, [r0, #1]
   1bbf4:	b103      	cbz	r3, 1bbf8 <__cxa_guard_acquire+0xc>
   1bbf6:	deff      	udf	#255	; 0xff
   1bbf8:	2301      	movs	r3, #1
   1bbfa:	7043      	strb	r3, [r0, #1]
   1bbfc:	4618      	mov	r0, r3
   1bbfe:	4770      	bx	lr
   1bc00:	2000      	movs	r0, #0
   1bc02:	4770      	bx	lr

0001bc04 <__cxa_guard_release>:
__cxa_guard_release():
   1bc04:	2301      	movs	r3, #1
   1bc06:	6003      	str	r3, [r0, #0]
   1bc08:	4770      	bx	lr

0001bc0a <__cxa_pure_virtual>:
__cxa_pure_virtual():
   1bc0a:	b508      	push	{r3, lr}
   1bc0c:	f000 f80c 	bl	1bc28 <std::terminate()>

0001bc10 <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   1bc10:	b508      	push	{r3, lr}
   1bc12:	4780      	blx	r0
   1bc14:	f001 f938 	bl	1ce88 <abort>

0001bc18 <std::get_terminate()>:
_ZSt13get_terminatev():
   1bc18:	4b02      	ldr	r3, [pc, #8]	; (1bc24 <std::get_terminate()+0xc>)
   1bc1a:	6818      	ldr	r0, [r3, #0]
   1bc1c:	f3bf 8f5f 	dmb	sy
   1bc20:	4770      	bx	lr
   1bc22:	bf00      	nop
   1bc24:	2007c0d8 	.word	0x2007c0d8

0001bc28 <std::terminate()>:
_ZSt9terminatev():
   1bc28:	b508      	push	{r3, lr}
   1bc2a:	f7ff fff5 	bl	1bc18 <std::get_terminate()>
   1bc2e:	f7ff ffef 	bl	1bc10 <__cxxabiv1::__terminate(void (*)())>
   1bc32:	ffff 4091 	vshr.u64	d20, d1, #1

0001bc34 <__aeabi_llsl>:
__ashldi3():
   1bc34:	4091      	lsls	r1, r2
   1bc36:	1c03      	adds	r3, r0, #0
   1bc38:	4090      	lsls	r0, r2
   1bc3a:	469c      	mov	ip, r3
   1bc3c:	3a20      	subs	r2, #32
   1bc3e:	4093      	lsls	r3, r2
   1bc40:	4319      	orrs	r1, r3
   1bc42:	4252      	negs	r2, r2
   1bc44:	4663      	mov	r3, ip
   1bc46:	40d3      	lsrs	r3, r2
   1bc48:	4319      	orrs	r1, r3
   1bc4a:	4770      	bx	lr

0001bc4c <__aeabi_drsub>:
$t():
   1bc4c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   1bc50:	e002      	b.n	1bc58 <__adddf3>
   1bc52:	bf00      	nop

0001bc54 <__aeabi_dsub>:
__aeabi_dsub():
   1bc54:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001bc58 <__adddf3>:
   1bc58:	b530      	push	{r4, r5, lr}
   1bc5a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   1bc5e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   1bc62:	ea94 0f05 	teq	r4, r5
   1bc66:	bf08      	it	eq
   1bc68:	ea90 0f02 	teqeq	r0, r2
   1bc6c:	bf1f      	itttt	ne
   1bc6e:	ea54 0c00 	orrsne.w	ip, r4, r0
   1bc72:	ea55 0c02 	orrsne.w	ip, r5, r2
   1bc76:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1bc7a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1bc7e:	f000 80e2 	beq.w	1be46 <__adddf3+0x1ee>
   1bc82:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1bc86:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1bc8a:	bfb8      	it	lt
   1bc8c:	426d      	neglt	r5, r5
   1bc8e:	dd0c      	ble.n	1bcaa <__adddf3+0x52>
   1bc90:	442c      	add	r4, r5
   1bc92:	ea80 0202 	eor.w	r2, r0, r2
   1bc96:	ea81 0303 	eor.w	r3, r1, r3
   1bc9a:	ea82 0000 	eor.w	r0, r2, r0
   1bc9e:	ea83 0101 	eor.w	r1, r3, r1
   1bca2:	ea80 0202 	eor.w	r2, r0, r2
   1bca6:	ea81 0303 	eor.w	r3, r1, r3
   1bcaa:	2d36      	cmp	r5, #54	; 0x36
   1bcac:	bf88      	it	hi
   1bcae:	bd30      	pophi	{r4, r5, pc}
   1bcb0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1bcb4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1bcb8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   1bcbc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   1bcc0:	d002      	beq.n	1bcc8 <__adddf3+0x70>
   1bcc2:	4240      	negs	r0, r0
   1bcc4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1bcc8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   1bccc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1bcd0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   1bcd4:	d002      	beq.n	1bcdc <__adddf3+0x84>
   1bcd6:	4252      	negs	r2, r2
   1bcd8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1bcdc:	ea94 0f05 	teq	r4, r5
   1bce0:	f000 80a7 	beq.w	1be32 <__adddf3+0x1da>
   1bce4:	f1a4 0401 	sub.w	r4, r4, #1
   1bce8:	f1d5 0e20 	rsbs	lr, r5, #32
   1bcec:	db0d      	blt.n	1bd0a <__adddf3+0xb2>
   1bcee:	fa02 fc0e 	lsl.w	ip, r2, lr
   1bcf2:	fa22 f205 	lsr.w	r2, r2, r5
   1bcf6:	1880      	adds	r0, r0, r2
   1bcf8:	f141 0100 	adc.w	r1, r1, #0
   1bcfc:	fa03 f20e 	lsl.w	r2, r3, lr
   1bd00:	1880      	adds	r0, r0, r2
   1bd02:	fa43 f305 	asr.w	r3, r3, r5
   1bd06:	4159      	adcs	r1, r3
   1bd08:	e00e      	b.n	1bd28 <__adddf3+0xd0>
   1bd0a:	f1a5 0520 	sub.w	r5, r5, #32
   1bd0e:	f10e 0e20 	add.w	lr, lr, #32
   1bd12:	2a01      	cmp	r2, #1
   1bd14:	fa03 fc0e 	lsl.w	ip, r3, lr
   1bd18:	bf28      	it	cs
   1bd1a:	f04c 0c02 	orrcs.w	ip, ip, #2
   1bd1e:	fa43 f305 	asr.w	r3, r3, r5
   1bd22:	18c0      	adds	r0, r0, r3
   1bd24:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   1bd28:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1bd2c:	d507      	bpl.n	1bd3e <__adddf3+0xe6>
   1bd2e:	f04f 0e00 	mov.w	lr, #0
   1bd32:	f1dc 0c00 	rsbs	ip, ip, #0
   1bd36:	eb7e 0000 	sbcs.w	r0, lr, r0
   1bd3a:	eb6e 0101 	sbc.w	r1, lr, r1
   1bd3e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1bd42:	d31b      	bcc.n	1bd7c <__adddf3+0x124>
   1bd44:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   1bd48:	d30c      	bcc.n	1bd64 <__adddf3+0x10c>
   1bd4a:	0849      	lsrs	r1, r1, #1
   1bd4c:	ea5f 0030 	movs.w	r0, r0, rrx
   1bd50:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1bd54:	f104 0401 	add.w	r4, r4, #1
   1bd58:	ea4f 5244 	mov.w	r2, r4, lsl #21
   1bd5c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   1bd60:	f080 809a 	bcs.w	1be98 <__adddf3+0x240>
   1bd64:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1bd68:	bf08      	it	eq
   1bd6a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1bd6e:	f150 0000 	adcs.w	r0, r0, #0
   1bd72:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1bd76:	ea41 0105 	orr.w	r1, r1, r5
   1bd7a:	bd30      	pop	{r4, r5, pc}
   1bd7c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   1bd80:	4140      	adcs	r0, r0
   1bd82:	eb41 0101 	adc.w	r1, r1, r1
   1bd86:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1bd8a:	f1a4 0401 	sub.w	r4, r4, #1
   1bd8e:	d1e9      	bne.n	1bd64 <__adddf3+0x10c>
   1bd90:	f091 0f00 	teq	r1, #0
   1bd94:	bf04      	itt	eq
   1bd96:	4601      	moveq	r1, r0
   1bd98:	2000      	moveq	r0, #0
   1bd9a:	fab1 f381 	clz	r3, r1
   1bd9e:	bf08      	it	eq
   1bda0:	3320      	addeq	r3, #32
   1bda2:	f1a3 030b 	sub.w	r3, r3, #11
   1bda6:	f1b3 0220 	subs.w	r2, r3, #32
   1bdaa:	da0c      	bge.n	1bdc6 <__adddf3+0x16e>
   1bdac:	320c      	adds	r2, #12
   1bdae:	dd08      	ble.n	1bdc2 <__adddf3+0x16a>
   1bdb0:	f102 0c14 	add.w	ip, r2, #20
   1bdb4:	f1c2 020c 	rsb	r2, r2, #12
   1bdb8:	fa01 f00c 	lsl.w	r0, r1, ip
   1bdbc:	fa21 f102 	lsr.w	r1, r1, r2
   1bdc0:	e00c      	b.n	1bddc <__adddf3+0x184>
   1bdc2:	f102 0214 	add.w	r2, r2, #20
   1bdc6:	bfd8      	it	le
   1bdc8:	f1c2 0c20 	rsble	ip, r2, #32
   1bdcc:	fa01 f102 	lsl.w	r1, r1, r2
   1bdd0:	fa20 fc0c 	lsr.w	ip, r0, ip
   1bdd4:	bfdc      	itt	le
   1bdd6:	ea41 010c 	orrle.w	r1, r1, ip
   1bdda:	4090      	lslle	r0, r2
   1bddc:	1ae4      	subs	r4, r4, r3
   1bdde:	bfa2      	ittt	ge
   1bde0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   1bde4:	4329      	orrge	r1, r5
   1bde6:	bd30      	popge	{r4, r5, pc}
   1bde8:	ea6f 0404 	mvn.w	r4, r4
   1bdec:	3c1f      	subs	r4, #31
   1bdee:	da1c      	bge.n	1be2a <__adddf3+0x1d2>
   1bdf0:	340c      	adds	r4, #12
   1bdf2:	dc0e      	bgt.n	1be12 <__adddf3+0x1ba>
   1bdf4:	f104 0414 	add.w	r4, r4, #20
   1bdf8:	f1c4 0220 	rsb	r2, r4, #32
   1bdfc:	fa20 f004 	lsr.w	r0, r0, r4
   1be00:	fa01 f302 	lsl.w	r3, r1, r2
   1be04:	ea40 0003 	orr.w	r0, r0, r3
   1be08:	fa21 f304 	lsr.w	r3, r1, r4
   1be0c:	ea45 0103 	orr.w	r1, r5, r3
   1be10:	bd30      	pop	{r4, r5, pc}
   1be12:	f1c4 040c 	rsb	r4, r4, #12
   1be16:	f1c4 0220 	rsb	r2, r4, #32
   1be1a:	fa20 f002 	lsr.w	r0, r0, r2
   1be1e:	fa01 f304 	lsl.w	r3, r1, r4
   1be22:	ea40 0003 	orr.w	r0, r0, r3
   1be26:	4629      	mov	r1, r5
   1be28:	bd30      	pop	{r4, r5, pc}
   1be2a:	fa21 f004 	lsr.w	r0, r1, r4
   1be2e:	4629      	mov	r1, r5
   1be30:	bd30      	pop	{r4, r5, pc}
   1be32:	f094 0f00 	teq	r4, #0
   1be36:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   1be3a:	bf06      	itte	eq
   1be3c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   1be40:	3401      	addeq	r4, #1
   1be42:	3d01      	subne	r5, #1
   1be44:	e74e      	b.n	1bce4 <__adddf3+0x8c>
   1be46:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1be4a:	bf18      	it	ne
   1be4c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1be50:	d029      	beq.n	1bea6 <__adddf3+0x24e>
   1be52:	ea94 0f05 	teq	r4, r5
   1be56:	bf08      	it	eq
   1be58:	ea90 0f02 	teqeq	r0, r2
   1be5c:	d005      	beq.n	1be6a <__adddf3+0x212>
   1be5e:	ea54 0c00 	orrs.w	ip, r4, r0
   1be62:	bf04      	itt	eq
   1be64:	4619      	moveq	r1, r3
   1be66:	4610      	moveq	r0, r2
   1be68:	bd30      	pop	{r4, r5, pc}
   1be6a:	ea91 0f03 	teq	r1, r3
   1be6e:	bf1e      	ittt	ne
   1be70:	2100      	movne	r1, #0
   1be72:	2000      	movne	r0, #0
   1be74:	bd30      	popne	{r4, r5, pc}
   1be76:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   1be7a:	d105      	bne.n	1be88 <__adddf3+0x230>
   1be7c:	0040      	lsls	r0, r0, #1
   1be7e:	4149      	adcs	r1, r1
   1be80:	bf28      	it	cs
   1be82:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1be86:	bd30      	pop	{r4, r5, pc}
   1be88:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   1be8c:	bf3c      	itt	cc
   1be8e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   1be92:	bd30      	popcc	{r4, r5, pc}
   1be94:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1be98:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   1be9c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1bea0:	f04f 0000 	mov.w	r0, #0
   1bea4:	bd30      	pop	{r4, r5, pc}
   1bea6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1beaa:	bf1a      	itte	ne
   1beac:	4619      	movne	r1, r3
   1beae:	4610      	movne	r0, r2
   1beb0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   1beb4:	bf1c      	itt	ne
   1beb6:	460b      	movne	r3, r1
   1beb8:	4602      	movne	r2, r0
   1beba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1bebe:	bf06      	itte	eq
   1bec0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   1bec4:	ea91 0f03 	teqeq	r1, r3
   1bec8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   1becc:	bd30      	pop	{r4, r5, pc}
__adddf3():
   1bece:	bf00      	nop

0001bed0 <__aeabi_ui2d>:
__aeabi_ui2d():
   1bed0:	f090 0f00 	teq	r0, #0
   1bed4:	bf04      	itt	eq
   1bed6:	2100      	moveq	r1, #0
   1bed8:	4770      	bxeq	lr
   1beda:	b530      	push	{r4, r5, lr}
   1bedc:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1bee0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1bee4:	f04f 0500 	mov.w	r5, #0
   1bee8:	f04f 0100 	mov.w	r1, #0
   1beec:	e750      	b.n	1bd90 <__adddf3+0x138>
   1beee:	bf00      	nop

0001bef0 <__aeabi_i2d>:
__floatsidf():
   1bef0:	f090 0f00 	teq	r0, #0
   1bef4:	bf04      	itt	eq
   1bef6:	2100      	moveq	r1, #0
   1bef8:	4770      	bxeq	lr
   1befa:	b530      	push	{r4, r5, lr}
   1befc:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1bf00:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1bf04:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   1bf08:	bf48      	it	mi
   1bf0a:	4240      	negmi	r0, r0
   1bf0c:	f04f 0100 	mov.w	r1, #0
   1bf10:	e73e      	b.n	1bd90 <__adddf3+0x138>
   1bf12:	bf00      	nop

0001bf14 <__aeabi_f2d>:
__extendsfdf2():
   1bf14:	0042      	lsls	r2, r0, #1
   1bf16:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1bf1a:	ea4f 0131 	mov.w	r1, r1, rrx
   1bf1e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   1bf22:	bf1f      	itttt	ne
   1bf24:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   1bf28:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1bf2c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   1bf30:	4770      	bxne	lr
   1bf32:	f092 0f00 	teq	r2, #0
   1bf36:	bf14      	ite	ne
   1bf38:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1bf3c:	4770      	bxeq	lr
   1bf3e:	b530      	push	{r4, r5, lr}
   1bf40:	f44f 7460 	mov.w	r4, #896	; 0x380
   1bf44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1bf48:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1bf4c:	e720      	b.n	1bd90 <__adddf3+0x138>
   1bf4e:	bf00      	nop

0001bf50 <__aeabi_ul2d>:
__aeabi_ul2d():
   1bf50:	ea50 0201 	orrs.w	r2, r0, r1
   1bf54:	bf08      	it	eq
   1bf56:	4770      	bxeq	lr
   1bf58:	b530      	push	{r4, r5, lr}
   1bf5a:	f04f 0500 	mov.w	r5, #0
   1bf5e:	e00a      	b.n	1bf76 <__aeabi_l2d+0x16>

0001bf60 <__aeabi_l2d>:
   1bf60:	ea50 0201 	orrs.w	r2, r0, r1
   1bf64:	bf08      	it	eq
   1bf66:	4770      	bxeq	lr
   1bf68:	b530      	push	{r4, r5, lr}
   1bf6a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   1bf6e:	d502      	bpl.n	1bf76 <__aeabi_l2d+0x16>
   1bf70:	4240      	negs	r0, r0
   1bf72:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1bf76:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1bf7a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1bf7e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1bf82:	f43f aedc 	beq.w	1bd3e <__adddf3+0xe6>
   1bf86:	f04f 0203 	mov.w	r2, #3
   1bf8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1bf8e:	bf18      	it	ne
   1bf90:	3203      	addne	r2, #3
   1bf92:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1bf96:	bf18      	it	ne
   1bf98:	3203      	addne	r2, #3
   1bf9a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   1bf9e:	f1c2 0320 	rsb	r3, r2, #32
   1bfa2:	fa00 fc03 	lsl.w	ip, r0, r3
   1bfa6:	fa20 f002 	lsr.w	r0, r0, r2
   1bfaa:	fa01 fe03 	lsl.w	lr, r1, r3
   1bfae:	ea40 000e 	orr.w	r0, r0, lr
   1bfb2:	fa21 f102 	lsr.w	r1, r1, r2
   1bfb6:	4414      	add	r4, r2
   1bfb8:	e6c1      	b.n	1bd3e <__adddf3+0xe6>
__floatdidf():
   1bfba:	bf00      	nop

0001bfbc <__aeabi_dmul>:
__aeabi_dmul():
   1bfbc:	b570      	push	{r4, r5, r6, lr}
   1bfbe:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1bfc2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1bfc6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1bfca:	bf1d      	ittte	ne
   1bfcc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1bfd0:	ea94 0f0c 	teqne	r4, ip
   1bfd4:	ea95 0f0c 	teqne	r5, ip
   1bfd8:	f000 f8de 	bleq	1c198 <__aeabi_dmul+0x1dc>
   1bfdc:	442c      	add	r4, r5
   1bfde:	ea81 0603 	eor.w	r6, r1, r3
   1bfe2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1bfe6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1bfea:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1bfee:	bf18      	it	ne
   1bff0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1bff4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1bff8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1bffc:	d038      	beq.n	1c070 <__aeabi_dmul+0xb4>
   1bffe:	fba0 ce02 	umull	ip, lr, r0, r2
   1c002:	f04f 0500 	mov.w	r5, #0
   1c006:	fbe1 e502 	umlal	lr, r5, r1, r2
   1c00a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   1c00e:	fbe0 e503 	umlal	lr, r5, r0, r3
   1c012:	f04f 0600 	mov.w	r6, #0
   1c016:	fbe1 5603 	umlal	r5, r6, r1, r3
   1c01a:	f09c 0f00 	teq	ip, #0
   1c01e:	bf18      	it	ne
   1c020:	f04e 0e01 	orrne.w	lr, lr, #1
   1c024:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   1c028:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   1c02c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   1c030:	d204      	bcs.n	1c03c <__aeabi_dmul+0x80>
   1c032:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   1c036:	416d      	adcs	r5, r5
   1c038:	eb46 0606 	adc.w	r6, r6, r6
   1c03c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   1c040:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   1c044:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   1c048:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   1c04c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   1c050:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1c054:	bf88      	it	hi
   1c056:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1c05a:	d81e      	bhi.n	1c09a <__aeabi_dmul+0xde>
   1c05c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   1c060:	bf08      	it	eq
   1c062:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   1c066:	f150 0000 	adcs.w	r0, r0, #0
   1c06a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1c06e:	bd70      	pop	{r4, r5, r6, pc}
   1c070:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   1c074:	ea46 0101 	orr.w	r1, r6, r1
   1c078:	ea40 0002 	orr.w	r0, r0, r2
   1c07c:	ea81 0103 	eor.w	r1, r1, r3
   1c080:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1c084:	bfc2      	ittt	gt
   1c086:	ebd4 050c 	rsbsgt	r5, r4, ip
   1c08a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1c08e:	bd70      	popgt	{r4, r5, r6, pc}
   1c090:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1c094:	f04f 0e00 	mov.w	lr, #0
   1c098:	3c01      	subs	r4, #1
   1c09a:	f300 80ab 	bgt.w	1c1f4 <__aeabi_dmul+0x238>
   1c09e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1c0a2:	bfde      	ittt	le
   1c0a4:	2000      	movle	r0, #0
   1c0a6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1c0aa:	bd70      	pople	{r4, r5, r6, pc}
   1c0ac:	f1c4 0400 	rsb	r4, r4, #0
   1c0b0:	3c20      	subs	r4, #32
   1c0b2:	da35      	bge.n	1c120 <__aeabi_dmul+0x164>
   1c0b4:	340c      	adds	r4, #12
   1c0b6:	dc1b      	bgt.n	1c0f0 <__aeabi_dmul+0x134>
   1c0b8:	f104 0414 	add.w	r4, r4, #20
   1c0bc:	f1c4 0520 	rsb	r5, r4, #32
   1c0c0:	fa00 f305 	lsl.w	r3, r0, r5
   1c0c4:	fa20 f004 	lsr.w	r0, r0, r4
   1c0c8:	fa01 f205 	lsl.w	r2, r1, r5
   1c0cc:	ea40 0002 	orr.w	r0, r0, r2
   1c0d0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   1c0d4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1c0d8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1c0dc:	fa21 f604 	lsr.w	r6, r1, r4
   1c0e0:	eb42 0106 	adc.w	r1, r2, r6
   1c0e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1c0e8:	bf08      	it	eq
   1c0ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1c0ee:	bd70      	pop	{r4, r5, r6, pc}
   1c0f0:	f1c4 040c 	rsb	r4, r4, #12
   1c0f4:	f1c4 0520 	rsb	r5, r4, #32
   1c0f8:	fa00 f304 	lsl.w	r3, r0, r4
   1c0fc:	fa20 f005 	lsr.w	r0, r0, r5
   1c100:	fa01 f204 	lsl.w	r2, r1, r4
   1c104:	ea40 0002 	orr.w	r0, r0, r2
   1c108:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1c10c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1c110:	f141 0100 	adc.w	r1, r1, #0
   1c114:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1c118:	bf08      	it	eq
   1c11a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1c11e:	bd70      	pop	{r4, r5, r6, pc}
   1c120:	f1c4 0520 	rsb	r5, r4, #32
   1c124:	fa00 f205 	lsl.w	r2, r0, r5
   1c128:	ea4e 0e02 	orr.w	lr, lr, r2
   1c12c:	fa20 f304 	lsr.w	r3, r0, r4
   1c130:	fa01 f205 	lsl.w	r2, r1, r5
   1c134:	ea43 0302 	orr.w	r3, r3, r2
   1c138:	fa21 f004 	lsr.w	r0, r1, r4
   1c13c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1c140:	fa21 f204 	lsr.w	r2, r1, r4
   1c144:	ea20 0002 	bic.w	r0, r0, r2
   1c148:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   1c14c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1c150:	bf08      	it	eq
   1c152:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1c156:	bd70      	pop	{r4, r5, r6, pc}
   1c158:	f094 0f00 	teq	r4, #0
   1c15c:	d10f      	bne.n	1c17e <__aeabi_dmul+0x1c2>
   1c15e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   1c162:	0040      	lsls	r0, r0, #1
   1c164:	eb41 0101 	adc.w	r1, r1, r1
   1c168:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1c16c:	bf08      	it	eq
   1c16e:	3c01      	subeq	r4, #1
   1c170:	d0f7      	beq.n	1c162 <__aeabi_dmul+0x1a6>
   1c172:	ea41 0106 	orr.w	r1, r1, r6
   1c176:	f095 0f00 	teq	r5, #0
   1c17a:	bf18      	it	ne
   1c17c:	4770      	bxne	lr
   1c17e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1c182:	0052      	lsls	r2, r2, #1
   1c184:	eb43 0303 	adc.w	r3, r3, r3
   1c188:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   1c18c:	bf08      	it	eq
   1c18e:	3d01      	subeq	r5, #1
   1c190:	d0f7      	beq.n	1c182 <__aeabi_dmul+0x1c6>
   1c192:	ea43 0306 	orr.w	r3, r3, r6
   1c196:	4770      	bx	lr
   1c198:	ea94 0f0c 	teq	r4, ip
   1c19c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1c1a0:	bf18      	it	ne
   1c1a2:	ea95 0f0c 	teqne	r5, ip
   1c1a6:	d00c      	beq.n	1c1c2 <__aeabi_dmul+0x206>
   1c1a8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1c1ac:	bf18      	it	ne
   1c1ae:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1c1b2:	d1d1      	bne.n	1c158 <__aeabi_dmul+0x19c>
   1c1b4:	ea81 0103 	eor.w	r1, r1, r3
   1c1b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1c1bc:	f04f 0000 	mov.w	r0, #0
   1c1c0:	bd70      	pop	{r4, r5, r6, pc}
   1c1c2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1c1c6:	bf06      	itte	eq
   1c1c8:	4610      	moveq	r0, r2
   1c1ca:	4619      	moveq	r1, r3
   1c1cc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1c1d0:	d019      	beq.n	1c206 <__aeabi_dmul+0x24a>
   1c1d2:	ea94 0f0c 	teq	r4, ip
   1c1d6:	d102      	bne.n	1c1de <__aeabi_dmul+0x222>
   1c1d8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   1c1dc:	d113      	bne.n	1c206 <__aeabi_dmul+0x24a>
   1c1de:	ea95 0f0c 	teq	r5, ip
   1c1e2:	d105      	bne.n	1c1f0 <__aeabi_dmul+0x234>
   1c1e4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   1c1e8:	bf1c      	itt	ne
   1c1ea:	4610      	movne	r0, r2
   1c1ec:	4619      	movne	r1, r3
   1c1ee:	d10a      	bne.n	1c206 <__aeabi_dmul+0x24a>
   1c1f0:	ea81 0103 	eor.w	r1, r1, r3
   1c1f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1c1f8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1c1fc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1c200:	f04f 0000 	mov.w	r0, #0
   1c204:	bd70      	pop	{r4, r5, r6, pc}
   1c206:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1c20a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   1c20e:	bd70      	pop	{r4, r5, r6, pc}

0001c210 <__aeabi_ddiv>:
__aeabi_ddiv():
   1c210:	b570      	push	{r4, r5, r6, lr}
   1c212:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1c216:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1c21a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1c21e:	bf1d      	ittte	ne
   1c220:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1c224:	ea94 0f0c 	teqne	r4, ip
   1c228:	ea95 0f0c 	teqne	r5, ip
   1c22c:	f000 f8a7 	bleq	1c37e <__aeabi_ddiv+0x16e>
   1c230:	eba4 0405 	sub.w	r4, r4, r5
   1c234:	ea81 0e03 	eor.w	lr, r1, r3
   1c238:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1c23c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1c240:	f000 8088 	beq.w	1c354 <__aeabi_ddiv+0x144>
   1c244:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1c248:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   1c24c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   1c250:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   1c254:	ea4f 2202 	mov.w	r2, r2, lsl #8
   1c258:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   1c25c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   1c260:	ea4f 2600 	mov.w	r6, r0, lsl #8
   1c264:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   1c268:	429d      	cmp	r5, r3
   1c26a:	bf08      	it	eq
   1c26c:	4296      	cmpeq	r6, r2
   1c26e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   1c272:	f504 7440 	add.w	r4, r4, #768	; 0x300
   1c276:	d202      	bcs.n	1c27e <__aeabi_ddiv+0x6e>
   1c278:	085b      	lsrs	r3, r3, #1
   1c27a:	ea4f 0232 	mov.w	r2, r2, rrx
   1c27e:	1ab6      	subs	r6, r6, r2
   1c280:	eb65 0503 	sbc.w	r5, r5, r3
   1c284:	085b      	lsrs	r3, r3, #1
   1c286:	ea4f 0232 	mov.w	r2, r2, rrx
   1c28a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   1c28e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1c292:	ebb6 0e02 	subs.w	lr, r6, r2
   1c296:	eb75 0e03 	sbcs.w	lr, r5, r3
   1c29a:	bf22      	ittt	cs
   1c29c:	1ab6      	subcs	r6, r6, r2
   1c29e:	4675      	movcs	r5, lr
   1c2a0:	ea40 000c 	orrcs.w	r0, r0, ip
   1c2a4:	085b      	lsrs	r3, r3, #1
   1c2a6:	ea4f 0232 	mov.w	r2, r2, rrx
   1c2aa:	ebb6 0e02 	subs.w	lr, r6, r2
   1c2ae:	eb75 0e03 	sbcs.w	lr, r5, r3
   1c2b2:	bf22      	ittt	cs
   1c2b4:	1ab6      	subcs	r6, r6, r2
   1c2b6:	4675      	movcs	r5, lr
   1c2b8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1c2bc:	085b      	lsrs	r3, r3, #1
   1c2be:	ea4f 0232 	mov.w	r2, r2, rrx
   1c2c2:	ebb6 0e02 	subs.w	lr, r6, r2
   1c2c6:	eb75 0e03 	sbcs.w	lr, r5, r3
   1c2ca:	bf22      	ittt	cs
   1c2cc:	1ab6      	subcs	r6, r6, r2
   1c2ce:	4675      	movcs	r5, lr
   1c2d0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1c2d4:	085b      	lsrs	r3, r3, #1
   1c2d6:	ea4f 0232 	mov.w	r2, r2, rrx
   1c2da:	ebb6 0e02 	subs.w	lr, r6, r2
   1c2de:	eb75 0e03 	sbcs.w	lr, r5, r3
   1c2e2:	bf22      	ittt	cs
   1c2e4:	1ab6      	subcs	r6, r6, r2
   1c2e6:	4675      	movcs	r5, lr
   1c2e8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1c2ec:	ea55 0e06 	orrs.w	lr, r5, r6
   1c2f0:	d018      	beq.n	1c324 <__aeabi_ddiv+0x114>
   1c2f2:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1c2f6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   1c2fa:	ea4f 1606 	mov.w	r6, r6, lsl #4
   1c2fe:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1c302:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1c306:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   1c30a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   1c30e:	d1c0      	bne.n	1c292 <__aeabi_ddiv+0x82>
   1c310:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1c314:	d10b      	bne.n	1c32e <__aeabi_ddiv+0x11e>
   1c316:	ea41 0100 	orr.w	r1, r1, r0
   1c31a:	f04f 0000 	mov.w	r0, #0
   1c31e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   1c322:	e7b6      	b.n	1c292 <__aeabi_ddiv+0x82>
   1c324:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1c328:	bf04      	itt	eq
   1c32a:	4301      	orreq	r1, r0
   1c32c:	2000      	moveq	r0, #0
   1c32e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1c332:	bf88      	it	hi
   1c334:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1c338:	f63f aeaf 	bhi.w	1c09a <__aeabi_dmul+0xde>
   1c33c:	ebb5 0c03 	subs.w	ip, r5, r3
   1c340:	bf04      	itt	eq
   1c342:	ebb6 0c02 	subseq.w	ip, r6, r2
   1c346:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1c34a:	f150 0000 	adcs.w	r0, r0, #0
   1c34e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1c352:	bd70      	pop	{r4, r5, r6, pc}
   1c354:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   1c358:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   1c35c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   1c360:	bfc2      	ittt	gt
   1c362:	ebd4 050c 	rsbsgt	r5, r4, ip
   1c366:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1c36a:	bd70      	popgt	{r4, r5, r6, pc}
   1c36c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1c370:	f04f 0e00 	mov.w	lr, #0
   1c374:	3c01      	subs	r4, #1
   1c376:	e690      	b.n	1c09a <__aeabi_dmul+0xde>
   1c378:	ea45 0e06 	orr.w	lr, r5, r6
   1c37c:	e68d      	b.n	1c09a <__aeabi_dmul+0xde>
   1c37e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1c382:	ea94 0f0c 	teq	r4, ip
   1c386:	bf08      	it	eq
   1c388:	ea95 0f0c 	teqeq	r5, ip
   1c38c:	f43f af3b 	beq.w	1c206 <__aeabi_dmul+0x24a>
   1c390:	ea94 0f0c 	teq	r4, ip
   1c394:	d10a      	bne.n	1c3ac <__aeabi_ddiv+0x19c>
   1c396:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1c39a:	f47f af34 	bne.w	1c206 <__aeabi_dmul+0x24a>
   1c39e:	ea95 0f0c 	teq	r5, ip
   1c3a2:	f47f af25 	bne.w	1c1f0 <__aeabi_dmul+0x234>
   1c3a6:	4610      	mov	r0, r2
   1c3a8:	4619      	mov	r1, r3
   1c3aa:	e72c      	b.n	1c206 <__aeabi_dmul+0x24a>
   1c3ac:	ea95 0f0c 	teq	r5, ip
   1c3b0:	d106      	bne.n	1c3c0 <__aeabi_ddiv+0x1b0>
   1c3b2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1c3b6:	f43f aefd 	beq.w	1c1b4 <__aeabi_dmul+0x1f8>
   1c3ba:	4610      	mov	r0, r2
   1c3bc:	4619      	mov	r1, r3
   1c3be:	e722      	b.n	1c206 <__aeabi_dmul+0x24a>
   1c3c0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1c3c4:	bf18      	it	ne
   1c3c6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1c3ca:	f47f aec5 	bne.w	1c158 <__aeabi_dmul+0x19c>
   1c3ce:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1c3d2:	f47f af0d 	bne.w	1c1f0 <__aeabi_dmul+0x234>
   1c3d6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1c3da:	f47f aeeb 	bne.w	1c1b4 <__aeabi_dmul+0x1f8>
   1c3de:	e712      	b.n	1c206 <__aeabi_dmul+0x24a>

0001c3e0 <__gedf2>:
__gtdf2():
   1c3e0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   1c3e4:	e006      	b.n	1c3f4 <__cmpdf2+0x4>
   1c3e6:	bf00      	nop

0001c3e8 <__ledf2>:
   1c3e8:	f04f 0c01 	mov.w	ip, #1
   1c3ec:	e002      	b.n	1c3f4 <__cmpdf2+0x4>
   1c3ee:	bf00      	nop

0001c3f0 <__cmpdf2>:
   1c3f0:	f04f 0c01 	mov.w	ip, #1
   1c3f4:	f84d cd04 	str.w	ip, [sp, #-4]!
   1c3f8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1c3fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1c400:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1c404:	bf18      	it	ne
   1c406:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   1c40a:	d01b      	beq.n	1c444 <__cmpdf2+0x54>
   1c40c:	b001      	add	sp, #4
   1c40e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   1c412:	bf0c      	ite	eq
   1c414:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   1c418:	ea91 0f03 	teqne	r1, r3
   1c41c:	bf02      	ittt	eq
   1c41e:	ea90 0f02 	teqeq	r0, r2
   1c422:	2000      	moveq	r0, #0
   1c424:	4770      	bxeq	lr
   1c426:	f110 0f00 	cmn.w	r0, #0
   1c42a:	ea91 0f03 	teq	r1, r3
   1c42e:	bf58      	it	pl
   1c430:	4299      	cmppl	r1, r3
   1c432:	bf08      	it	eq
   1c434:	4290      	cmpeq	r0, r2
   1c436:	bf2c      	ite	cs
   1c438:	17d8      	asrcs	r0, r3, #31
   1c43a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   1c43e:	f040 0001 	orr.w	r0, r0, #1
   1c442:	4770      	bx	lr
   1c444:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1c448:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1c44c:	d102      	bne.n	1c454 <__cmpdf2+0x64>
   1c44e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   1c452:	d107      	bne.n	1c464 <__cmpdf2+0x74>
   1c454:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1c458:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1c45c:	d1d6      	bne.n	1c40c <__cmpdf2+0x1c>
   1c45e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   1c462:	d0d3      	beq.n	1c40c <__cmpdf2+0x1c>
   1c464:	f85d 0b04 	ldr.w	r0, [sp], #4
   1c468:	4770      	bx	lr
__cmpdf2():
   1c46a:	bf00      	nop

0001c46c <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   1c46c:	4684      	mov	ip, r0
   1c46e:	4610      	mov	r0, r2
   1c470:	4662      	mov	r2, ip
   1c472:	468c      	mov	ip, r1
   1c474:	4619      	mov	r1, r3
   1c476:	4663      	mov	r3, ip
   1c478:	e000      	b.n	1c47c <__aeabi_cdcmpeq>
   1c47a:	bf00      	nop

0001c47c <__aeabi_cdcmpeq>:
   1c47c:	b501      	push	{r0, lr}
   1c47e:	f7ff ffb7 	bl	1c3f0 <__cmpdf2>
   1c482:	2800      	cmp	r0, #0
   1c484:	bf48      	it	mi
   1c486:	f110 0f00 	cmnmi.w	r0, #0
   1c48a:	bd01      	pop	{r0, pc}

0001c48c <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   1c48c:	f84d ed08 	str.w	lr, [sp, #-8]!
   1c490:	f7ff fff4 	bl	1c47c <__aeabi_cdcmpeq>
   1c494:	bf0c      	ite	eq
   1c496:	2001      	moveq	r0, #1
   1c498:	2000      	movne	r0, #0
   1c49a:	f85d fb08 	ldr.w	pc, [sp], #8
   1c49e:	bf00      	nop

0001c4a0 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   1c4a0:	f84d ed08 	str.w	lr, [sp, #-8]!
   1c4a4:	f7ff ffea 	bl	1c47c <__aeabi_cdcmpeq>
   1c4a8:	bf34      	ite	cc
   1c4aa:	2001      	movcc	r0, #1
   1c4ac:	2000      	movcs	r0, #0
   1c4ae:	f85d fb08 	ldr.w	pc, [sp], #8
   1c4b2:	bf00      	nop

0001c4b4 <__aeabi_dcmple>:
__aeabi_dcmple():
   1c4b4:	f84d ed08 	str.w	lr, [sp, #-8]!
   1c4b8:	f7ff ffe0 	bl	1c47c <__aeabi_cdcmpeq>
   1c4bc:	bf94      	ite	ls
   1c4be:	2001      	movls	r0, #1
   1c4c0:	2000      	movhi	r0, #0
   1c4c2:	f85d fb08 	ldr.w	pc, [sp], #8
   1c4c6:	bf00      	nop

0001c4c8 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   1c4c8:	f84d ed08 	str.w	lr, [sp, #-8]!
   1c4cc:	f7ff ffce 	bl	1c46c <__aeabi_cdrcmple>
   1c4d0:	bf94      	ite	ls
   1c4d2:	2001      	movls	r0, #1
   1c4d4:	2000      	movhi	r0, #0
   1c4d6:	f85d fb08 	ldr.w	pc, [sp], #8
   1c4da:	bf00      	nop

0001c4dc <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   1c4dc:	f84d ed08 	str.w	lr, [sp, #-8]!
   1c4e0:	f7ff ffc4 	bl	1c46c <__aeabi_cdrcmple>
   1c4e4:	bf34      	ite	cc
   1c4e6:	2001      	movcc	r0, #1
   1c4e8:	2000      	movcs	r0, #0
   1c4ea:	f85d fb08 	ldr.w	pc, [sp], #8
   1c4ee:	bf00      	nop

0001c4f0 <__aeabi_d2iz>:
__fixdfsi():
   1c4f0:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1c4f4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1c4f8:	d215      	bcs.n	1c526 <__aeabi_d2iz+0x36>
   1c4fa:	d511      	bpl.n	1c520 <__aeabi_d2iz+0x30>
   1c4fc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1c500:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1c504:	d912      	bls.n	1c52c <__aeabi_d2iz+0x3c>
   1c506:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1c50a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1c50e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1c512:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1c516:	fa23 f002 	lsr.w	r0, r3, r2
   1c51a:	bf18      	it	ne
   1c51c:	4240      	negne	r0, r0
   1c51e:	4770      	bx	lr
   1c520:	f04f 0000 	mov.w	r0, #0
   1c524:	4770      	bx	lr
   1c526:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1c52a:	d105      	bne.n	1c538 <__aeabi_d2iz+0x48>
   1c52c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   1c530:	bf08      	it	eq
   1c532:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1c536:	4770      	bx	lr
   1c538:	f04f 0000 	mov.w	r0, #0
   1c53c:	4770      	bx	lr
   1c53e:	bf00      	nop

0001c540 <__aeabi_d2uiz>:
__fixunsdfsi():
   1c540:	004a      	lsls	r2, r1, #1
   1c542:	d211      	bcs.n	1c568 <__aeabi_d2uiz+0x28>
   1c544:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1c548:	d211      	bcs.n	1c56e <__aeabi_d2uiz+0x2e>
   1c54a:	d50d      	bpl.n	1c568 <__aeabi_d2uiz+0x28>
   1c54c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1c550:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1c554:	d40e      	bmi.n	1c574 <__aeabi_d2uiz+0x34>
   1c556:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1c55a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1c55e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1c562:	fa23 f002 	lsr.w	r0, r3, r2
   1c566:	4770      	bx	lr
   1c568:	f04f 0000 	mov.w	r0, #0
   1c56c:	4770      	bx	lr
   1c56e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1c572:	d102      	bne.n	1c57a <__aeabi_d2uiz+0x3a>
   1c574:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c578:	4770      	bx	lr
   1c57a:	f04f 0000 	mov.w	r0, #0
   1c57e:	4770      	bx	lr

0001c580 <__aeabi_d2f>:
__aeabi_d2f():
   1c580:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1c584:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1c588:	bf24      	itt	cs
   1c58a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   1c58e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   1c592:	d90d      	bls.n	1c5b0 <__aeabi_d2f+0x30>
   1c594:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1c598:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   1c59c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   1c5a0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1c5a4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   1c5a8:	bf08      	it	eq
   1c5aa:	f020 0001 	biceq.w	r0, r0, #1
   1c5ae:	4770      	bx	lr
   1c5b0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1c5b4:	d121      	bne.n	1c5fa <__aeabi_d2f+0x7a>
   1c5b6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1c5ba:	bfbc      	itt	lt
   1c5bc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1c5c0:	4770      	bxlt	lr
   1c5c2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1c5c6:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1c5ca:	f1c2 0218 	rsb	r2, r2, #24
   1c5ce:	f1c2 0c20 	rsb	ip, r2, #32
   1c5d2:	fa10 f30c 	lsls.w	r3, r0, ip
   1c5d6:	fa20 f002 	lsr.w	r0, r0, r2
   1c5da:	bf18      	it	ne
   1c5dc:	f040 0001 	orrne.w	r0, r0, #1
   1c5e0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1c5e4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1c5e8:	fa03 fc0c 	lsl.w	ip, r3, ip
   1c5ec:	ea40 000c 	orr.w	r0, r0, ip
   1c5f0:	fa23 f302 	lsr.w	r3, r3, r2
   1c5f4:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1c5f8:	e7cc      	b.n	1c594 <__aeabi_d2f+0x14>
   1c5fa:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1c5fe:	d107      	bne.n	1c610 <__aeabi_d2f+0x90>
   1c600:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1c604:	bf1e      	ittt	ne
   1c606:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1c60a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1c60e:	4770      	bxne	lr
   1c610:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   1c614:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1c618:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1c61c:	4770      	bx	lr
   1c61e:	bf00      	nop

0001c620 <__aeabi_frsub>:
__aeabi_frsub():
   1c620:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   1c624:	e002      	b.n	1c62c <__addsf3>
   1c626:	bf00      	nop

0001c628 <__aeabi_fsub>:
   1c628:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0001c62c <__addsf3>:
   1c62c:	0042      	lsls	r2, r0, #1
   1c62e:	bf1f      	itttt	ne
   1c630:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   1c634:	ea92 0f03 	teqne	r2, r3
   1c638:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   1c63c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1c640:	d06a      	beq.n	1c718 <__addsf3+0xec>
   1c642:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1c646:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1c64a:	bfc1      	itttt	gt
   1c64c:	18d2      	addgt	r2, r2, r3
   1c64e:	4041      	eorgt	r1, r0
   1c650:	4048      	eorgt	r0, r1
   1c652:	4041      	eorgt	r1, r0
   1c654:	bfb8      	it	lt
   1c656:	425b      	neglt	r3, r3
   1c658:	2b19      	cmp	r3, #25
   1c65a:	bf88      	it	hi
   1c65c:	4770      	bxhi	lr
   1c65e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1c662:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1c666:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   1c66a:	bf18      	it	ne
   1c66c:	4240      	negne	r0, r0
   1c66e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1c672:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   1c676:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   1c67a:	bf18      	it	ne
   1c67c:	4249      	negne	r1, r1
   1c67e:	ea92 0f03 	teq	r2, r3
   1c682:	d03f      	beq.n	1c704 <__addsf3+0xd8>
   1c684:	f1a2 0201 	sub.w	r2, r2, #1
   1c688:	fa41 fc03 	asr.w	ip, r1, r3
   1c68c:	eb10 000c 	adds.w	r0, r0, ip
   1c690:	f1c3 0320 	rsb	r3, r3, #32
   1c694:	fa01 f103 	lsl.w	r1, r1, r3
   1c698:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1c69c:	d502      	bpl.n	1c6a4 <__addsf3+0x78>
   1c69e:	4249      	negs	r1, r1
   1c6a0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   1c6a4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   1c6a8:	d313      	bcc.n	1c6d2 <__addsf3+0xa6>
   1c6aa:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   1c6ae:	d306      	bcc.n	1c6be <__addsf3+0x92>
   1c6b0:	0840      	lsrs	r0, r0, #1
   1c6b2:	ea4f 0131 	mov.w	r1, r1, rrx
   1c6b6:	f102 0201 	add.w	r2, r2, #1
   1c6ba:	2afe      	cmp	r2, #254	; 0xfe
   1c6bc:	d251      	bcs.n	1c762 <__addsf3+0x136>
   1c6be:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1c6c2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1c6c6:	bf08      	it	eq
   1c6c8:	f020 0001 	biceq.w	r0, r0, #1
   1c6cc:	ea40 0003 	orr.w	r0, r0, r3
   1c6d0:	4770      	bx	lr
   1c6d2:	0049      	lsls	r1, r1, #1
   1c6d4:	eb40 0000 	adc.w	r0, r0, r0
   1c6d8:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   1c6dc:	f1a2 0201 	sub.w	r2, r2, #1
   1c6e0:	d1ed      	bne.n	1c6be <__addsf3+0x92>
   1c6e2:	fab0 fc80 	clz	ip, r0
   1c6e6:	f1ac 0c08 	sub.w	ip, ip, #8
   1c6ea:	ebb2 020c 	subs.w	r2, r2, ip
   1c6ee:	fa00 f00c 	lsl.w	r0, r0, ip
   1c6f2:	bfaa      	itet	ge
   1c6f4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1c6f8:	4252      	neglt	r2, r2
   1c6fa:	4318      	orrge	r0, r3
   1c6fc:	bfbc      	itt	lt
   1c6fe:	40d0      	lsrlt	r0, r2
   1c700:	4318      	orrlt	r0, r3
   1c702:	4770      	bx	lr
   1c704:	f092 0f00 	teq	r2, #0
   1c708:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   1c70c:	bf06      	itte	eq
   1c70e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1c712:	3201      	addeq	r2, #1
   1c714:	3b01      	subne	r3, #1
   1c716:	e7b5      	b.n	1c684 <__addsf3+0x58>
   1c718:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1c71c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1c720:	bf18      	it	ne
   1c722:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1c726:	d021      	beq.n	1c76c <__addsf3+0x140>
   1c728:	ea92 0f03 	teq	r2, r3
   1c72c:	d004      	beq.n	1c738 <__addsf3+0x10c>
   1c72e:	f092 0f00 	teq	r2, #0
   1c732:	bf08      	it	eq
   1c734:	4608      	moveq	r0, r1
   1c736:	4770      	bx	lr
   1c738:	ea90 0f01 	teq	r0, r1
   1c73c:	bf1c      	itt	ne
   1c73e:	2000      	movne	r0, #0
   1c740:	4770      	bxne	lr
   1c742:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1c746:	d104      	bne.n	1c752 <__addsf3+0x126>
   1c748:	0040      	lsls	r0, r0, #1
   1c74a:	bf28      	it	cs
   1c74c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   1c750:	4770      	bx	lr
   1c752:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   1c756:	bf3c      	itt	cc
   1c758:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   1c75c:	4770      	bxcc	lr
   1c75e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1c762:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   1c766:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1c76a:	4770      	bx	lr
   1c76c:	ea7f 6222 	mvns.w	r2, r2, asr #24
   1c770:	bf16      	itet	ne
   1c772:	4608      	movne	r0, r1
   1c774:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   1c778:	4601      	movne	r1, r0
   1c77a:	0242      	lsls	r2, r0, #9
   1c77c:	bf06      	itte	eq
   1c77e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   1c782:	ea90 0f01 	teqeq	r0, r1
   1c786:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   1c78a:	4770      	bx	lr

0001c78c <__aeabi_ui2f>:
__aeabi_ui2f():
   1c78c:	f04f 0300 	mov.w	r3, #0
   1c790:	e004      	b.n	1c79c <__aeabi_i2f+0x8>
   1c792:	bf00      	nop

0001c794 <__aeabi_i2f>:
   1c794:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   1c798:	bf48      	it	mi
   1c79a:	4240      	negmi	r0, r0
   1c79c:	ea5f 0c00 	movs.w	ip, r0
   1c7a0:	bf08      	it	eq
   1c7a2:	4770      	bxeq	lr
   1c7a4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   1c7a8:	4601      	mov	r1, r0
   1c7aa:	f04f 0000 	mov.w	r0, #0
   1c7ae:	e01c      	b.n	1c7ea <__aeabi_l2f+0x2a>

0001c7b0 <__aeabi_ul2f>:
__floatundisf():
   1c7b0:	ea50 0201 	orrs.w	r2, r0, r1
   1c7b4:	bf08      	it	eq
   1c7b6:	4770      	bxeq	lr
   1c7b8:	f04f 0300 	mov.w	r3, #0
   1c7bc:	e00a      	b.n	1c7d4 <__aeabi_l2f+0x14>
   1c7be:	bf00      	nop

0001c7c0 <__aeabi_l2f>:
   1c7c0:	ea50 0201 	orrs.w	r2, r0, r1
   1c7c4:	bf08      	it	eq
   1c7c6:	4770      	bxeq	lr
   1c7c8:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   1c7cc:	d502      	bpl.n	1c7d4 <__aeabi_l2f+0x14>
   1c7ce:	4240      	negs	r0, r0
   1c7d0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1c7d4:	ea5f 0c01 	movs.w	ip, r1
   1c7d8:	bf02      	ittt	eq
   1c7da:	4684      	moveq	ip, r0
   1c7dc:	4601      	moveq	r1, r0
   1c7de:	2000      	moveq	r0, #0
   1c7e0:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   1c7e4:	bf08      	it	eq
   1c7e6:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   1c7ea:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   1c7ee:	fabc f28c 	clz	r2, ip
   1c7f2:	3a08      	subs	r2, #8
   1c7f4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1c7f8:	db10      	blt.n	1c81c <__aeabi_l2f+0x5c>
   1c7fa:	fa01 fc02 	lsl.w	ip, r1, r2
   1c7fe:	4463      	add	r3, ip
   1c800:	fa00 fc02 	lsl.w	ip, r0, r2
   1c804:	f1c2 0220 	rsb	r2, r2, #32
   1c808:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1c80c:	fa20 f202 	lsr.w	r2, r0, r2
   1c810:	eb43 0002 	adc.w	r0, r3, r2
   1c814:	bf08      	it	eq
   1c816:	f020 0001 	biceq.w	r0, r0, #1
   1c81a:	4770      	bx	lr
   1c81c:	f102 0220 	add.w	r2, r2, #32
   1c820:	fa01 fc02 	lsl.w	ip, r1, r2
   1c824:	f1c2 0220 	rsb	r2, r2, #32
   1c828:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   1c82c:	fa21 f202 	lsr.w	r2, r1, r2
   1c830:	eb43 0002 	adc.w	r0, r3, r2
   1c834:	bf08      	it	eq
   1c836:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1c83a:	4770      	bx	lr

0001c83c <__aeabi_fmul>:
__mulsf3():
   1c83c:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1c840:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1c844:	bf1e      	ittt	ne
   1c846:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1c84a:	ea92 0f0c 	teqne	r2, ip
   1c84e:	ea93 0f0c 	teqne	r3, ip
   1c852:	d06f      	beq.n	1c934 <__aeabi_fmul+0xf8>
   1c854:	441a      	add	r2, r3
   1c856:	ea80 0c01 	eor.w	ip, r0, r1
   1c85a:	0240      	lsls	r0, r0, #9
   1c85c:	bf18      	it	ne
   1c85e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   1c862:	d01e      	beq.n	1c8a2 <__aeabi_fmul+0x66>
   1c864:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   1c868:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   1c86c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   1c870:	fba0 3101 	umull	r3, r1, r0, r1
   1c874:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1c878:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   1c87c:	bf3e      	ittt	cc
   1c87e:	0049      	lslcc	r1, r1, #1
   1c880:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   1c884:	005b      	lslcc	r3, r3, #1
   1c886:	ea40 0001 	orr.w	r0, r0, r1
   1c88a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1c88e:	2afd      	cmp	r2, #253	; 0xfd
   1c890:	d81d      	bhi.n	1c8ce <__aeabi_fmul+0x92>
   1c892:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   1c896:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1c89a:	bf08      	it	eq
   1c89c:	f020 0001 	biceq.w	r0, r0, #1
   1c8a0:	4770      	bx	lr
   1c8a2:	f090 0f00 	teq	r0, #0
   1c8a6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1c8aa:	bf08      	it	eq
   1c8ac:	0249      	lsleq	r1, r1, #9
   1c8ae:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1c8b2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1c8b6:	3a7f      	subs	r2, #127	; 0x7f
   1c8b8:	bfc2      	ittt	gt
   1c8ba:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1c8be:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1c8c2:	4770      	bxgt	lr
   1c8c4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1c8c8:	f04f 0300 	mov.w	r3, #0
   1c8cc:	3a01      	subs	r2, #1
   1c8ce:	dc5d      	bgt.n	1c98c <__aeabi_fmul+0x150>
   1c8d0:	f112 0f19 	cmn.w	r2, #25
   1c8d4:	bfdc      	itt	le
   1c8d6:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1c8da:	4770      	bxle	lr
   1c8dc:	f1c2 0200 	rsb	r2, r2, #0
   1c8e0:	0041      	lsls	r1, r0, #1
   1c8e2:	fa21 f102 	lsr.w	r1, r1, r2
   1c8e6:	f1c2 0220 	rsb	r2, r2, #32
   1c8ea:	fa00 fc02 	lsl.w	ip, r0, r2
   1c8ee:	ea5f 0031 	movs.w	r0, r1, rrx
   1c8f2:	f140 0000 	adc.w	r0, r0, #0
   1c8f6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1c8fa:	bf08      	it	eq
   1c8fc:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1c900:	4770      	bx	lr
   1c902:	f092 0f00 	teq	r2, #0
   1c906:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1c90a:	bf02      	ittt	eq
   1c90c:	0040      	lsleq	r0, r0, #1
   1c90e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1c912:	3a01      	subeq	r2, #1
   1c914:	d0f9      	beq.n	1c90a <__aeabi_fmul+0xce>
   1c916:	ea40 000c 	orr.w	r0, r0, ip
   1c91a:	f093 0f00 	teq	r3, #0
   1c91e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1c922:	bf02      	ittt	eq
   1c924:	0049      	lsleq	r1, r1, #1
   1c926:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1c92a:	3b01      	subeq	r3, #1
   1c92c:	d0f9      	beq.n	1c922 <__aeabi_fmul+0xe6>
   1c92e:	ea41 010c 	orr.w	r1, r1, ip
   1c932:	e78f      	b.n	1c854 <__aeabi_fmul+0x18>
   1c934:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1c938:	ea92 0f0c 	teq	r2, ip
   1c93c:	bf18      	it	ne
   1c93e:	ea93 0f0c 	teqne	r3, ip
   1c942:	d00a      	beq.n	1c95a <__aeabi_fmul+0x11e>
   1c944:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1c948:	bf18      	it	ne
   1c94a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1c94e:	d1d8      	bne.n	1c902 <__aeabi_fmul+0xc6>
   1c950:	ea80 0001 	eor.w	r0, r0, r1
   1c954:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1c958:	4770      	bx	lr
   1c95a:	f090 0f00 	teq	r0, #0
   1c95e:	bf17      	itett	ne
   1c960:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   1c964:	4608      	moveq	r0, r1
   1c966:	f091 0f00 	teqne	r1, #0
   1c96a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   1c96e:	d014      	beq.n	1c99a <__aeabi_fmul+0x15e>
   1c970:	ea92 0f0c 	teq	r2, ip
   1c974:	d101      	bne.n	1c97a <__aeabi_fmul+0x13e>
   1c976:	0242      	lsls	r2, r0, #9
   1c978:	d10f      	bne.n	1c99a <__aeabi_fmul+0x15e>
   1c97a:	ea93 0f0c 	teq	r3, ip
   1c97e:	d103      	bne.n	1c988 <__aeabi_fmul+0x14c>
   1c980:	024b      	lsls	r3, r1, #9
   1c982:	bf18      	it	ne
   1c984:	4608      	movne	r0, r1
   1c986:	d108      	bne.n	1c99a <__aeabi_fmul+0x15e>
   1c988:	ea80 0001 	eor.w	r0, r0, r1
   1c98c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1c990:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1c994:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1c998:	4770      	bx	lr
   1c99a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1c99e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1c9a2:	4770      	bx	lr

0001c9a4 <__aeabi_fdiv>:
__divsf3():
   1c9a4:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1c9a8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1c9ac:	bf1e      	ittt	ne
   1c9ae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1c9b2:	ea92 0f0c 	teqne	r2, ip
   1c9b6:	ea93 0f0c 	teqne	r3, ip
   1c9ba:	d069      	beq.n	1ca90 <__aeabi_fdiv+0xec>
   1c9bc:	eba2 0203 	sub.w	r2, r2, r3
   1c9c0:	ea80 0c01 	eor.w	ip, r0, r1
   1c9c4:	0249      	lsls	r1, r1, #9
   1c9c6:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1c9ca:	d037      	beq.n	1ca3c <__aeabi_fdiv+0x98>
   1c9cc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1c9d0:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1c9d4:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1c9d8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1c9dc:	428b      	cmp	r3, r1
   1c9de:	bf38      	it	cc
   1c9e0:	005b      	lslcc	r3, r3, #1
   1c9e2:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1c9e6:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1c9ea:	428b      	cmp	r3, r1
   1c9ec:	bf24      	itt	cs
   1c9ee:	1a5b      	subcs	r3, r3, r1
   1c9f0:	ea40 000c 	orrcs.w	r0, r0, ip
   1c9f4:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1c9f8:	bf24      	itt	cs
   1c9fa:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1c9fe:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1ca02:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1ca06:	bf24      	itt	cs
   1ca08:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1ca0c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1ca10:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1ca14:	bf24      	itt	cs
   1ca16:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1ca1a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1ca1e:	011b      	lsls	r3, r3, #4
   1ca20:	bf18      	it	ne
   1ca22:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1ca26:	d1e0      	bne.n	1c9ea <__aeabi_fdiv+0x46>
   1ca28:	2afd      	cmp	r2, #253	; 0xfd
   1ca2a:	f63f af50 	bhi.w	1c8ce <__aeabi_fmul+0x92>
   1ca2e:	428b      	cmp	r3, r1
   1ca30:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1ca34:	bf08      	it	eq
   1ca36:	f020 0001 	biceq.w	r0, r0, #1
   1ca3a:	4770      	bx	lr
   1ca3c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1ca40:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1ca44:	327f      	adds	r2, #127	; 0x7f
   1ca46:	bfc2      	ittt	gt
   1ca48:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1ca4c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1ca50:	4770      	bxgt	lr
   1ca52:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1ca56:	f04f 0300 	mov.w	r3, #0
   1ca5a:	3a01      	subs	r2, #1
   1ca5c:	e737      	b.n	1c8ce <__aeabi_fmul+0x92>
   1ca5e:	f092 0f00 	teq	r2, #0
   1ca62:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1ca66:	bf02      	ittt	eq
   1ca68:	0040      	lsleq	r0, r0, #1
   1ca6a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1ca6e:	3a01      	subeq	r2, #1
   1ca70:	d0f9      	beq.n	1ca66 <__aeabi_fdiv+0xc2>
   1ca72:	ea40 000c 	orr.w	r0, r0, ip
   1ca76:	f093 0f00 	teq	r3, #0
   1ca7a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1ca7e:	bf02      	ittt	eq
   1ca80:	0049      	lsleq	r1, r1, #1
   1ca82:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1ca86:	3b01      	subeq	r3, #1
   1ca88:	d0f9      	beq.n	1ca7e <__aeabi_fdiv+0xda>
   1ca8a:	ea41 010c 	orr.w	r1, r1, ip
   1ca8e:	e795      	b.n	1c9bc <__aeabi_fdiv+0x18>
   1ca90:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1ca94:	ea92 0f0c 	teq	r2, ip
   1ca98:	d108      	bne.n	1caac <__aeabi_fdiv+0x108>
   1ca9a:	0242      	lsls	r2, r0, #9
   1ca9c:	f47f af7d 	bne.w	1c99a <__aeabi_fmul+0x15e>
   1caa0:	ea93 0f0c 	teq	r3, ip
   1caa4:	f47f af70 	bne.w	1c988 <__aeabi_fmul+0x14c>
   1caa8:	4608      	mov	r0, r1
   1caaa:	e776      	b.n	1c99a <__aeabi_fmul+0x15e>
   1caac:	ea93 0f0c 	teq	r3, ip
   1cab0:	d104      	bne.n	1cabc <__aeabi_fdiv+0x118>
   1cab2:	024b      	lsls	r3, r1, #9
   1cab4:	f43f af4c 	beq.w	1c950 <__aeabi_fmul+0x114>
   1cab8:	4608      	mov	r0, r1
   1caba:	e76e      	b.n	1c99a <__aeabi_fmul+0x15e>
   1cabc:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1cac0:	bf18      	it	ne
   1cac2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1cac6:	d1ca      	bne.n	1ca5e <__aeabi_fdiv+0xba>
   1cac8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1cacc:	f47f af5c 	bne.w	1c988 <__aeabi_fmul+0x14c>
   1cad0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1cad4:	f47f af3c 	bne.w	1c950 <__aeabi_fmul+0x114>
   1cad8:	e75f      	b.n	1c99a <__aeabi_fmul+0x15e>
   1cada:	bf00      	nop

0001cadc <__aeabi_f2iz>:
__fixsfsi():
   1cadc:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1cae0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1cae4:	d30f      	bcc.n	1cb06 <__aeabi_f2iz+0x2a>
   1cae6:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1caea:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1caee:	d90d      	bls.n	1cb0c <__aeabi_f2iz+0x30>
   1caf0:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1caf4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1caf8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1cafc:	fa23 f002 	lsr.w	r0, r3, r2
   1cb00:	bf18      	it	ne
   1cb02:	4240      	negne	r0, r0
   1cb04:	4770      	bx	lr
   1cb06:	f04f 0000 	mov.w	r0, #0
   1cb0a:	4770      	bx	lr
   1cb0c:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1cb10:	d101      	bne.n	1cb16 <__aeabi_f2iz+0x3a>
   1cb12:	0242      	lsls	r2, r0, #9
   1cb14:	d105      	bne.n	1cb22 <__aeabi_f2iz+0x46>
   1cb16:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   1cb1a:	bf08      	it	eq
   1cb1c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1cb20:	4770      	bx	lr
   1cb22:	f04f 0000 	mov.w	r0, #0
   1cb26:	4770      	bx	lr

0001cb28 <__aeabi_f2uiz>:
__aeabi_f2uiz():
   1cb28:	0042      	lsls	r2, r0, #1
   1cb2a:	d20e      	bcs.n	1cb4a <__aeabi_f2uiz+0x22>
   1cb2c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1cb30:	d30b      	bcc.n	1cb4a <__aeabi_f2uiz+0x22>
   1cb32:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1cb36:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1cb3a:	d409      	bmi.n	1cb50 <__aeabi_f2uiz+0x28>
   1cb3c:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1cb40:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1cb44:	fa23 f002 	lsr.w	r0, r3, r2
   1cb48:	4770      	bx	lr
   1cb4a:	f04f 0000 	mov.w	r0, #0
   1cb4e:	4770      	bx	lr
   1cb50:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1cb54:	d101      	bne.n	1cb5a <__aeabi_f2uiz+0x32>
   1cb56:	0242      	lsls	r2, r0, #9
   1cb58:	d102      	bne.n	1cb60 <__aeabi_f2uiz+0x38>
   1cb5a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1cb5e:	4770      	bx	lr
   1cb60:	f04f 0000 	mov.w	r0, #0
   1cb64:	4770      	bx	lr
   1cb66:	bf00      	nop

0001cb68 <__aeabi_uldivmod>:
$t():
   1cb68:	b953      	cbnz	r3, 1cb80 <__aeabi_uldivmod+0x18>
   1cb6a:	b94a      	cbnz	r2, 1cb80 <__aeabi_uldivmod+0x18>
   1cb6c:	2900      	cmp	r1, #0
   1cb6e:	bf08      	it	eq
   1cb70:	2800      	cmpeq	r0, #0
   1cb72:	bf1c      	itt	ne
   1cb74:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   1cb78:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1cb7c:	f000 b982 	b.w	1ce84 <__aeabi_idiv0>
   1cb80:	f1ad 0c08 	sub.w	ip, sp, #8
   1cb84:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   1cb88:	f000 f806 	bl	1cb98 <__udivmoddi4>
   1cb8c:	f8dd e004 	ldr.w	lr, [sp, #4]
   1cb90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1cb94:	b004      	add	sp, #16
   1cb96:	4770      	bx	lr

0001cb98 <__udivmoddi4>:
__udivmoddi4():
   1cb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb9c:	468c      	mov	ip, r1
   1cb9e:	460c      	mov	r4, r1
   1cba0:	4605      	mov	r5, r0
   1cba2:	9e09      	ldr	r6, [sp, #36]	; 0x24
   1cba4:	2b00      	cmp	r3, #0
   1cba6:	d14f      	bne.n	1cc48 <__udivmoddi4+0xb0>
   1cba8:	428a      	cmp	r2, r1
   1cbaa:	4617      	mov	r7, r2
   1cbac:	d96b      	bls.n	1cc86 <__udivmoddi4+0xee>
   1cbae:	fab2 fe82 	clz	lr, r2
   1cbb2:	f1be 0f00 	cmp.w	lr, #0
   1cbb6:	d00b      	beq.n	1cbd0 <__udivmoddi4+0x38>
   1cbb8:	f1ce 0520 	rsb	r5, lr, #32
   1cbbc:	fa20 f505 	lsr.w	r5, r0, r5
   1cbc0:	fa01 f30e 	lsl.w	r3, r1, lr
   1cbc4:	ea45 0c03 	orr.w	ip, r5, r3
   1cbc8:	fa02 f70e 	lsl.w	r7, r2, lr
   1cbcc:	fa00 f50e 	lsl.w	r5, r0, lr
   1cbd0:	0c39      	lsrs	r1, r7, #16
   1cbd2:	fbbc f0f1 	udiv	r0, ip, r1
   1cbd6:	b2ba      	uxth	r2, r7
   1cbd8:	fb01 c310 	mls	r3, r1, r0, ip
   1cbdc:	fb00 f802 	mul.w	r8, r0, r2
   1cbe0:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   1cbe4:	ea4c 4403 	orr.w	r4, ip, r3, lsl #16
   1cbe8:	45a0      	cmp	r8, r4
   1cbea:	d909      	bls.n	1cc00 <__udivmoddi4+0x68>
   1cbec:	19e4      	adds	r4, r4, r7
   1cbee:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1cbf2:	f080 8128 	bcs.w	1ce46 <__udivmoddi4+0x2ae>
   1cbf6:	45a0      	cmp	r8, r4
   1cbf8:	f240 8125 	bls.w	1ce46 <__udivmoddi4+0x2ae>
   1cbfc:	3802      	subs	r0, #2
   1cbfe:	443c      	add	r4, r7
   1cc00:	ebc8 0404 	rsb	r4, r8, r4
   1cc04:	fbb4 f3f1 	udiv	r3, r4, r1
   1cc08:	fb01 4c13 	mls	ip, r1, r3, r4
   1cc0c:	fb03 f202 	mul.w	r2, r3, r2
   1cc10:	b2ac      	uxth	r4, r5
   1cc12:	ea44 410c 	orr.w	r1, r4, ip, lsl #16
   1cc16:	428a      	cmp	r2, r1
   1cc18:	d909      	bls.n	1cc2e <__udivmoddi4+0x96>
   1cc1a:	19c9      	adds	r1, r1, r7
   1cc1c:	f103 34ff 	add.w	r4, r3, #4294967295	; 0xffffffff
   1cc20:	f080 810f 	bcs.w	1ce42 <__udivmoddi4+0x2aa>
   1cc24:	428a      	cmp	r2, r1
   1cc26:	f240 810c 	bls.w	1ce42 <__udivmoddi4+0x2aa>
   1cc2a:	3b02      	subs	r3, #2
   1cc2c:	4439      	add	r1, r7
   1cc2e:	1a8a      	subs	r2, r1, r2
   1cc30:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   1cc34:	2100      	movs	r1, #0
   1cc36:	2e00      	cmp	r6, #0
   1cc38:	d063      	beq.n	1cd02 <__udivmoddi4+0x16a>
   1cc3a:	fa22 f20e 	lsr.w	r2, r2, lr
   1cc3e:	2300      	movs	r3, #0
   1cc40:	e886 000c 	stmia.w	r6, {r2, r3}
   1cc44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc48:	428b      	cmp	r3, r1
   1cc4a:	d907      	bls.n	1cc5c <__udivmoddi4+0xc4>
   1cc4c:	2e00      	cmp	r6, #0
   1cc4e:	d056      	beq.n	1ccfe <__udivmoddi4+0x166>
   1cc50:	2100      	movs	r1, #0
   1cc52:	e886 0011 	stmia.w	r6, {r0, r4}
   1cc56:	4608      	mov	r0, r1
   1cc58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc5c:	fab3 f183 	clz	r1, r3
   1cc60:	2900      	cmp	r1, #0
   1cc62:	f040 8093 	bne.w	1cd8c <__udivmoddi4+0x1f4>
   1cc66:	42a3      	cmp	r3, r4
   1cc68:	d302      	bcc.n	1cc70 <__udivmoddi4+0xd8>
   1cc6a:	4282      	cmp	r2, r0
   1cc6c:	f200 80fe 	bhi.w	1ce6c <__udivmoddi4+0x2d4>
   1cc70:	1a85      	subs	r5, r0, r2
   1cc72:	eb64 0303 	sbc.w	r3, r4, r3
   1cc76:	469c      	mov	ip, r3
   1cc78:	2001      	movs	r0, #1
   1cc7a:	2e00      	cmp	r6, #0
   1cc7c:	d041      	beq.n	1cd02 <__udivmoddi4+0x16a>
   1cc7e:	e886 1020 	stmia.w	r6, {r5, ip}
   1cc82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc86:	b912      	cbnz	r2, 1cc8e <__udivmoddi4+0xf6>
   1cc88:	2701      	movs	r7, #1
   1cc8a:	fbb7 f7f2 	udiv	r7, r7, r2
   1cc8e:	fab7 fe87 	clz	lr, r7
   1cc92:	f1be 0f00 	cmp.w	lr, #0
   1cc96:	d136      	bne.n	1cd06 <__udivmoddi4+0x16e>
   1cc98:	1be4      	subs	r4, r4, r7
   1cc9a:	ea4f 4817 	mov.w	r8, r7, lsr #16
   1cc9e:	fa1f f987 	uxth.w	r9, r7
   1cca2:	2101      	movs	r1, #1
   1cca4:	fbb4 f3f8 	udiv	r3, r4, r8
   1cca8:	fb08 4413 	mls	r4, r8, r3, r4
   1ccac:	fb09 f203 	mul.w	r2, r9, r3
   1ccb0:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   1ccb4:	ea4c 4404 	orr.w	r4, ip, r4, lsl #16
   1ccb8:	42a2      	cmp	r2, r4
   1ccba:	d907      	bls.n	1cccc <__udivmoddi4+0x134>
   1ccbc:	19e4      	adds	r4, r4, r7
   1ccbe:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
   1ccc2:	d202      	bcs.n	1ccca <__udivmoddi4+0x132>
   1ccc4:	42a2      	cmp	r2, r4
   1ccc6:	f200 80d3 	bhi.w	1ce70 <__udivmoddi4+0x2d8>
   1ccca:	4603      	mov	r3, r0
   1cccc:	1aa4      	subs	r4, r4, r2
   1ccce:	fbb4 f0f8 	udiv	r0, r4, r8
   1ccd2:	fb08 4810 	mls	r8, r8, r0, r4
   1ccd6:	fb09 f900 	mul.w	r9, r9, r0
   1ccda:	b2ac      	uxth	r4, r5
   1ccdc:	ea44 4208 	orr.w	r2, r4, r8, lsl #16
   1cce0:	4591      	cmp	r9, r2
   1cce2:	d907      	bls.n	1ccf4 <__udivmoddi4+0x15c>
   1cce4:	19d2      	adds	r2, r2, r7
   1cce6:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
   1ccea:	d202      	bcs.n	1ccf2 <__udivmoddi4+0x15a>
   1ccec:	4591      	cmp	r9, r2
   1ccee:	f200 80ba 	bhi.w	1ce66 <__udivmoddi4+0x2ce>
   1ccf2:	4620      	mov	r0, r4
   1ccf4:	ebc9 0202 	rsb	r2, r9, r2
   1ccf8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   1ccfc:	e79b      	b.n	1cc36 <__udivmoddi4+0x9e>
   1ccfe:	4631      	mov	r1, r6
   1cd00:	4630      	mov	r0, r6
   1cd02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd06:	fa07 f70e 	lsl.w	r7, r7, lr
   1cd0a:	f1ce 0c20 	rsb	ip, lr, #32
   1cd0e:	fa24 f30c 	lsr.w	r3, r4, ip
   1cd12:	ea4f 4817 	mov.w	r8, r7, lsr #16
   1cd16:	fbb3 faf8 	udiv	sl, r3, r8
   1cd1a:	fa1f f987 	uxth.w	r9, r7
   1cd1e:	fb08 351a 	mls	r5, r8, sl, r3
   1cd22:	fa20 fc0c 	lsr.w	ip, r0, ip
   1cd26:	fa04 f40e 	lsl.w	r4, r4, lr
   1cd2a:	fb0a fb09 	mul.w	fp, sl, r9
   1cd2e:	ea4c 0c04 	orr.w	ip, ip, r4
   1cd32:	ea4f 421c 	mov.w	r2, ip, lsr #16
   1cd36:	ea42 4305 	orr.w	r3, r2, r5, lsl #16
   1cd3a:	459b      	cmp	fp, r3
   1cd3c:	fa00 f50e 	lsl.w	r5, r0, lr
   1cd40:	d90a      	bls.n	1cd58 <__udivmoddi4+0x1c0>
   1cd42:	19db      	adds	r3, r3, r7
   1cd44:	f10a 32ff 	add.w	r2, sl, #4294967295	; 0xffffffff
   1cd48:	f080 808b 	bcs.w	1ce62 <__udivmoddi4+0x2ca>
   1cd4c:	459b      	cmp	fp, r3
   1cd4e:	f240 8088 	bls.w	1ce62 <__udivmoddi4+0x2ca>
   1cd52:	f1aa 0a02 	sub.w	sl, sl, #2
   1cd56:	443b      	add	r3, r7
   1cd58:	ebcb 0303 	rsb	r3, fp, r3
   1cd5c:	fbb3 f0f8 	udiv	r0, r3, r8
   1cd60:	fb08 3310 	mls	r3, r8, r0, r3
   1cd64:	fb00 f409 	mul.w	r4, r0, r9
   1cd68:	fa1f fc8c 	uxth.w	ip, ip
   1cd6c:	ea4c 4303 	orr.w	r3, ip, r3, lsl #16
   1cd70:	429c      	cmp	r4, r3
   1cd72:	d907      	bls.n	1cd84 <__udivmoddi4+0x1ec>
   1cd74:	19db      	adds	r3, r3, r7
   1cd76:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   1cd7a:	d26e      	bcs.n	1ce5a <__udivmoddi4+0x2c2>
   1cd7c:	429c      	cmp	r4, r3
   1cd7e:	d96c      	bls.n	1ce5a <__udivmoddi4+0x2c2>
   1cd80:	3802      	subs	r0, #2
   1cd82:	443b      	add	r3, r7
   1cd84:	1b1c      	subs	r4, r3, r4
   1cd86:	ea40 410a 	orr.w	r1, r0, sl, lsl #16
   1cd8a:	e78b      	b.n	1cca4 <__udivmoddi4+0x10c>
   1cd8c:	f1c1 0e20 	rsb	lr, r1, #32
   1cd90:	408b      	lsls	r3, r1
   1cd92:	fa22 fc0e 	lsr.w	ip, r2, lr
   1cd96:	ea4c 0c03 	orr.w	ip, ip, r3
   1cd9a:	fa24 f70e 	lsr.w	r7, r4, lr
   1cd9e:	ea4f 491c 	mov.w	r9, ip, lsr #16
   1cda2:	fbb7 faf9 	udiv	sl, r7, r9
   1cda6:	fa1f f38c 	uxth.w	r3, ip
   1cdaa:	fb09 771a 	mls	r7, r9, sl, r7
   1cdae:	fa20 f80e 	lsr.w	r8, r0, lr
   1cdb2:	408c      	lsls	r4, r1
   1cdb4:	fb0a f503 	mul.w	r5, sl, r3
   1cdb8:	ea48 0404 	orr.w	r4, r8, r4
   1cdbc:	ea4f 4814 	mov.w	r8, r4, lsr #16
   1cdc0:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   1cdc4:	42bd      	cmp	r5, r7
   1cdc6:	fa02 f201 	lsl.w	r2, r2, r1
   1cdca:	fa00 fb01 	lsl.w	fp, r0, r1
   1cdce:	d909      	bls.n	1cde4 <__udivmoddi4+0x24c>
   1cdd0:	eb17 070c 	adds.w	r7, r7, ip
   1cdd4:	f10a 30ff 	add.w	r0, sl, #4294967295	; 0xffffffff
   1cdd8:	d241      	bcs.n	1ce5e <__udivmoddi4+0x2c6>
   1cdda:	42bd      	cmp	r5, r7
   1cddc:	d93f      	bls.n	1ce5e <__udivmoddi4+0x2c6>
   1cdde:	f1aa 0a02 	sub.w	sl, sl, #2
   1cde2:	4467      	add	r7, ip
   1cde4:	1b7f      	subs	r7, r7, r5
   1cde6:	fbb7 f5f9 	udiv	r5, r7, r9
   1cdea:	fb09 7715 	mls	r7, r9, r5, r7
   1cdee:	fb05 f303 	mul.w	r3, r5, r3
   1cdf2:	b2a4      	uxth	r4, r4
   1cdf4:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
   1cdf8:	42bb      	cmp	r3, r7
   1cdfa:	d908      	bls.n	1ce0e <__udivmoddi4+0x276>
   1cdfc:	eb17 070c 	adds.w	r7, r7, ip
   1ce00:	f105 30ff 	add.w	r0, r5, #4294967295	; 0xffffffff
   1ce04:	d227      	bcs.n	1ce56 <__udivmoddi4+0x2be>
   1ce06:	42bb      	cmp	r3, r7
   1ce08:	d925      	bls.n	1ce56 <__udivmoddi4+0x2be>
   1ce0a:	3d02      	subs	r5, #2
   1ce0c:	4467      	add	r7, ip
   1ce0e:	ea45 400a 	orr.w	r0, r5, sl, lsl #16
   1ce12:	fba0 8902 	umull	r8, r9, r0, r2
   1ce16:	1aff      	subs	r7, r7, r3
   1ce18:	454f      	cmp	r7, r9
   1ce1a:	4645      	mov	r5, r8
   1ce1c:	464c      	mov	r4, r9
   1ce1e:	d314      	bcc.n	1ce4a <__udivmoddi4+0x2b2>
   1ce20:	d029      	beq.n	1ce76 <__udivmoddi4+0x2de>
   1ce22:	b366      	cbz	r6, 1ce7e <__udivmoddi4+0x2e6>
   1ce24:	ebbb 0305 	subs.w	r3, fp, r5
   1ce28:	eb67 0704 	sbc.w	r7, r7, r4
   1ce2c:	fa07 fe0e 	lsl.w	lr, r7, lr
   1ce30:	40cb      	lsrs	r3, r1
   1ce32:	40cf      	lsrs	r7, r1
   1ce34:	ea4e 0303 	orr.w	r3, lr, r3
   1ce38:	e886 0088 	stmia.w	r6, {r3, r7}
   1ce3c:	2100      	movs	r1, #0
   1ce3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce42:	4623      	mov	r3, r4
   1ce44:	e6f3      	b.n	1cc2e <__udivmoddi4+0x96>
   1ce46:	4618      	mov	r0, r3
   1ce48:	e6da      	b.n	1cc00 <__udivmoddi4+0x68>
   1ce4a:	ebb8 0502 	subs.w	r5, r8, r2
   1ce4e:	eb69 040c 	sbc.w	r4, r9, ip
   1ce52:	3801      	subs	r0, #1
   1ce54:	e7e5      	b.n	1ce22 <__udivmoddi4+0x28a>
   1ce56:	4605      	mov	r5, r0
   1ce58:	e7d9      	b.n	1ce0e <__udivmoddi4+0x276>
   1ce5a:	4610      	mov	r0, r2
   1ce5c:	e792      	b.n	1cd84 <__udivmoddi4+0x1ec>
   1ce5e:	4682      	mov	sl, r0
   1ce60:	e7c0      	b.n	1cde4 <__udivmoddi4+0x24c>
   1ce62:	4692      	mov	sl, r2
   1ce64:	e778      	b.n	1cd58 <__udivmoddi4+0x1c0>
   1ce66:	3802      	subs	r0, #2
   1ce68:	443a      	add	r2, r7
   1ce6a:	e743      	b.n	1ccf4 <__udivmoddi4+0x15c>
   1ce6c:	4608      	mov	r0, r1
   1ce6e:	e704      	b.n	1cc7a <__udivmoddi4+0xe2>
   1ce70:	3b02      	subs	r3, #2
   1ce72:	443c      	add	r4, r7
   1ce74:	e72a      	b.n	1cccc <__udivmoddi4+0x134>
   1ce76:	45c3      	cmp	fp, r8
   1ce78:	d3e7      	bcc.n	1ce4a <__udivmoddi4+0x2b2>
   1ce7a:	463c      	mov	r4, r7
   1ce7c:	e7d1      	b.n	1ce22 <__udivmoddi4+0x28a>
   1ce7e:	4631      	mov	r1, r6
   1ce80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ce84 <__aeabi_idiv0>:
__aeabi_ldiv0():
   1ce84:	4770      	bx	lr
   1ce86:	bf00      	nop

0001ce88 <abort>:
abort():
   1ce88:	b508      	push	{r3, lr}
   1ce8a:	2006      	movs	r0, #6
   1ce8c:	f001 fe68 	bl	1eb60 <raise>
   1ce90:	2001      	movs	r0, #1
   1ce92:	f7f4 fb13 	bl	114bc <_exit>

0001ce96 <atoi>:
atoi():
   1ce96:	220a      	movs	r2, #10
   1ce98:	2100      	movs	r1, #0
   1ce9a:	f002 beb5 	b.w	1fc08 <strtol>

0001ce9e <ctime>:
ctime():
   1ce9e:	b508      	push	{r3, lr}
   1cea0:	f000 f910 	bl	1d0c4 <localtime>
   1cea4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1cea8:	f003 ba50 	b.w	2034c <asctime>

0001ceac <_cleanup_r>:
_cleanup_r():
   1ceac:	4901      	ldr	r1, [pc, #4]	; (1ceb4 <_cleanup_r+0x8>)
   1ceae:	f000 b8c5 	b.w	1d03c <_fwalk_reent>
   1ceb2:	bf00      	nop
   1ceb4:	00021165 	.word	0x00021165

0001ceb8 <std.isra.0>:
std.isra.0():
   1ceb8:	b510      	push	{r4, lr}
   1ceba:	4604      	mov	r4, r0
   1cebc:	2300      	movs	r3, #0
   1cebe:	6003      	str	r3, [r0, #0]
   1cec0:	6043      	str	r3, [r0, #4]
   1cec2:	6083      	str	r3, [r0, #8]
   1cec4:	8181      	strh	r1, [r0, #12]
   1cec6:	6643      	str	r3, [r0, #100]	; 0x64
   1cec8:	81c2      	strh	r2, [r0, #14]
   1ceca:	6103      	str	r3, [r0, #16]
   1cecc:	6143      	str	r3, [r0, #20]
   1cece:	6183      	str	r3, [r0, #24]
   1ced0:	4619      	mov	r1, r3
   1ced2:	2208      	movs	r2, #8
   1ced4:	305c      	adds	r0, #92	; 0x5c
   1ced6:	f000 fa40 	bl	1d35a <memset>
   1ceda:	4b05      	ldr	r3, [pc, #20]	; (1cef0 <std.isra.0+0x38>)
   1cedc:	6224      	str	r4, [r4, #32]
   1cede:	6263      	str	r3, [r4, #36]	; 0x24
   1cee0:	4b04      	ldr	r3, [pc, #16]	; (1cef4 <std.isra.0+0x3c>)
   1cee2:	62a3      	str	r3, [r4, #40]	; 0x28
   1cee4:	4b04      	ldr	r3, [pc, #16]	; (1cef8 <std.isra.0+0x40>)
   1cee6:	62e3      	str	r3, [r4, #44]	; 0x2c
   1cee8:	4b04      	ldr	r3, [pc, #16]	; (1cefc <std.isra.0+0x44>)
   1ceea:	6323      	str	r3, [r4, #48]	; 0x30
   1ceec:	bd10      	pop	{r4, pc}
   1ceee:	bf00      	nop
   1cef0:	0001ec35 	.word	0x0001ec35
   1cef4:	0001ec5b 	.word	0x0001ec5b
   1cef8:	0001ec93 	.word	0x0001ec93
   1cefc:	0001ecb7 	.word	0x0001ecb7

0001cf00 <__sfmoreglue>:
__sfmoreglue():
   1cf00:	b570      	push	{r4, r5, r6, lr}
   1cf02:	2368      	movs	r3, #104	; 0x68
   1cf04:	1e4d      	subs	r5, r1, #1
   1cf06:	435d      	muls	r5, r3
   1cf08:	460e      	mov	r6, r1
   1cf0a:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1cf0e:	f000 fd03 	bl	1d918 <_malloc_r>
   1cf12:	4604      	mov	r4, r0
   1cf14:	b140      	cbz	r0, 1cf28 <__sfmoreglue+0x28>
   1cf16:	2100      	movs	r1, #0
   1cf18:	e880 0042 	stmia.w	r0, {r1, r6}
   1cf1c:	300c      	adds	r0, #12
   1cf1e:	60a0      	str	r0, [r4, #8]
   1cf20:	f105 0268 	add.w	r2, r5, #104	; 0x68
   1cf24:	f000 fa19 	bl	1d35a <memset>
   1cf28:	4620      	mov	r0, r4
   1cf2a:	bd70      	pop	{r4, r5, r6, pc}

0001cf2c <__sinit>:
__sinit():
   1cf2c:	6983      	ldr	r3, [r0, #24]
   1cf2e:	b510      	push	{r4, lr}
   1cf30:	4604      	mov	r4, r0
   1cf32:	bb33      	cbnz	r3, 1cf82 <__sinit+0x56>
   1cf34:	6483      	str	r3, [r0, #72]	; 0x48
   1cf36:	64c3      	str	r3, [r0, #76]	; 0x4c
   1cf38:	6503      	str	r3, [r0, #80]	; 0x50
   1cf3a:	4b12      	ldr	r3, [pc, #72]	; (1cf84 <__sinit+0x58>)
   1cf3c:	4a12      	ldr	r2, [pc, #72]	; (1cf88 <__sinit+0x5c>)
   1cf3e:	681b      	ldr	r3, [r3, #0]
   1cf40:	6282      	str	r2, [r0, #40]	; 0x28
   1cf42:	4298      	cmp	r0, r3
   1cf44:	bf04      	itt	eq
   1cf46:	2301      	moveq	r3, #1
   1cf48:	6183      	streq	r3, [r0, #24]
   1cf4a:	f000 f81f 	bl	1cf8c <__sfp>
   1cf4e:	6060      	str	r0, [r4, #4]
   1cf50:	4620      	mov	r0, r4
   1cf52:	f000 f81b 	bl	1cf8c <__sfp>
   1cf56:	60a0      	str	r0, [r4, #8]
   1cf58:	4620      	mov	r0, r4
   1cf5a:	f000 f817 	bl	1cf8c <__sfp>
   1cf5e:	2200      	movs	r2, #0
   1cf60:	60e0      	str	r0, [r4, #12]
   1cf62:	2104      	movs	r1, #4
   1cf64:	6860      	ldr	r0, [r4, #4]
   1cf66:	f7ff ffa7 	bl	1ceb8 <std.isra.0>
   1cf6a:	2201      	movs	r2, #1
   1cf6c:	2109      	movs	r1, #9
   1cf6e:	68a0      	ldr	r0, [r4, #8]
   1cf70:	f7ff ffa2 	bl	1ceb8 <std.isra.0>
   1cf74:	2202      	movs	r2, #2
   1cf76:	2112      	movs	r1, #18
   1cf78:	68e0      	ldr	r0, [r4, #12]
   1cf7a:	f7ff ff9d 	bl	1ceb8 <std.isra.0>
   1cf7e:	2301      	movs	r3, #1
   1cf80:	61a3      	str	r3, [r4, #24]
   1cf82:	bd10      	pop	{r4, pc}
   1cf84:	00026398 	.word	0x00026398
   1cf88:	0001cead 	.word	0x0001cead

0001cf8c <__sfp>:
__sfp():
   1cf8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1cf8e:	4b1c      	ldr	r3, [pc, #112]	; (1d000 <__sfp+0x74>)
   1cf90:	4607      	mov	r7, r0
   1cf92:	681e      	ldr	r6, [r3, #0]
   1cf94:	69b3      	ldr	r3, [r6, #24]
   1cf96:	b913      	cbnz	r3, 1cf9e <__sfp+0x12>
   1cf98:	4630      	mov	r0, r6
   1cf9a:	f7ff ffc7 	bl	1cf2c <__sinit>
   1cf9e:	3648      	adds	r6, #72	; 0x48
   1cfa0:	68b4      	ldr	r4, [r6, #8]
   1cfa2:	6873      	ldr	r3, [r6, #4]
   1cfa4:	3b01      	subs	r3, #1
   1cfa6:	d404      	bmi.n	1cfb2 <__sfp+0x26>
   1cfa8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1cfac:	b17d      	cbz	r5, 1cfce <__sfp+0x42>
   1cfae:	3468      	adds	r4, #104	; 0x68
   1cfb0:	e7f8      	b.n	1cfa4 <__sfp+0x18>
   1cfb2:	6833      	ldr	r3, [r6, #0]
   1cfb4:	b10b      	cbz	r3, 1cfba <__sfp+0x2e>
   1cfb6:	6836      	ldr	r6, [r6, #0]
   1cfb8:	e7f2      	b.n	1cfa0 <__sfp+0x14>
   1cfba:	2104      	movs	r1, #4
   1cfbc:	4638      	mov	r0, r7
   1cfbe:	f7ff ff9f 	bl	1cf00 <__sfmoreglue>
   1cfc2:	6030      	str	r0, [r6, #0]
   1cfc4:	2800      	cmp	r0, #0
   1cfc6:	d1f6      	bne.n	1cfb6 <__sfp+0x2a>
   1cfc8:	230c      	movs	r3, #12
   1cfca:	603b      	str	r3, [r7, #0]
   1cfcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1cfce:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1cfd2:	81e3      	strh	r3, [r4, #14]
   1cfd4:	2301      	movs	r3, #1
   1cfd6:	81a3      	strh	r3, [r4, #12]
   1cfd8:	6665      	str	r5, [r4, #100]	; 0x64
   1cfda:	6025      	str	r5, [r4, #0]
   1cfdc:	60a5      	str	r5, [r4, #8]
   1cfde:	6065      	str	r5, [r4, #4]
   1cfe0:	6125      	str	r5, [r4, #16]
   1cfe2:	6165      	str	r5, [r4, #20]
   1cfe4:	61a5      	str	r5, [r4, #24]
   1cfe6:	2208      	movs	r2, #8
   1cfe8:	4629      	mov	r1, r5
   1cfea:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1cfee:	f000 f9b4 	bl	1d35a <memset>
   1cff2:	6365      	str	r5, [r4, #52]	; 0x34
   1cff4:	63a5      	str	r5, [r4, #56]	; 0x38
   1cff6:	64a5      	str	r5, [r4, #72]	; 0x48
   1cff8:	64e5      	str	r5, [r4, #76]	; 0x4c
   1cffa:	4620      	mov	r0, r4
   1cffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1cffe:	bf00      	nop
   1d000:	00026398 	.word	0x00026398

0001d004 <_fwalk>:
_fwalk():
   1d004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d008:	4688      	mov	r8, r1
   1d00a:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1d00e:	2600      	movs	r6, #0
   1d010:	b18c      	cbz	r4, 1d036 <_fwalk+0x32>
   1d012:	68a5      	ldr	r5, [r4, #8]
   1d014:	6867      	ldr	r7, [r4, #4]
   1d016:	3f01      	subs	r7, #1
   1d018:	d40b      	bmi.n	1d032 <_fwalk+0x2e>
   1d01a:	89ab      	ldrh	r3, [r5, #12]
   1d01c:	2b01      	cmp	r3, #1
   1d01e:	d906      	bls.n	1d02e <_fwalk+0x2a>
   1d020:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1d024:	3301      	adds	r3, #1
   1d026:	d002      	beq.n	1d02e <_fwalk+0x2a>
   1d028:	4628      	mov	r0, r5
   1d02a:	47c0      	blx	r8
   1d02c:	4306      	orrs	r6, r0
   1d02e:	3568      	adds	r5, #104	; 0x68
   1d030:	e7f1      	b.n	1d016 <_fwalk+0x12>
   1d032:	6824      	ldr	r4, [r4, #0]
   1d034:	e7ec      	b.n	1d010 <_fwalk+0xc>
   1d036:	4630      	mov	r0, r6
   1d038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001d03c <_fwalk_reent>:
_fwalk_reent():
   1d03c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d040:	4680      	mov	r8, r0
   1d042:	4689      	mov	r9, r1
   1d044:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1d048:	2600      	movs	r6, #0
   1d04a:	b194      	cbz	r4, 1d072 <_fwalk_reent+0x36>
   1d04c:	68a5      	ldr	r5, [r4, #8]
   1d04e:	6867      	ldr	r7, [r4, #4]
   1d050:	3f01      	subs	r7, #1
   1d052:	d40c      	bmi.n	1d06e <_fwalk_reent+0x32>
   1d054:	89ab      	ldrh	r3, [r5, #12]
   1d056:	2b01      	cmp	r3, #1
   1d058:	d907      	bls.n	1d06a <_fwalk_reent+0x2e>
   1d05a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1d05e:	3301      	adds	r3, #1
   1d060:	d003      	beq.n	1d06a <_fwalk_reent+0x2e>
   1d062:	4629      	mov	r1, r5
   1d064:	4640      	mov	r0, r8
   1d066:	47c8      	blx	r9
   1d068:	4306      	orrs	r6, r0
   1d06a:	3568      	adds	r5, #104	; 0x68
   1d06c:	e7f0      	b.n	1d050 <_fwalk_reent+0x14>
   1d06e:	6824      	ldr	r4, [r4, #0]
   1d070:	e7eb      	b.n	1d04a <_fwalk_reent+0xe>
   1d072:	4630      	mov	r0, r6
   1d074:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0001d078 <__libc_init_array>:
__libc_init_array():
   1d078:	4b0e      	ldr	r3, [pc, #56]	; (1d0b4 <__libc_init_array+0x3c>)
   1d07a:	b570      	push	{r4, r5, r6, lr}
   1d07c:	461e      	mov	r6, r3
   1d07e:	4c0e      	ldr	r4, [pc, #56]	; (1d0b8 <__libc_init_array+0x40>)
   1d080:	2500      	movs	r5, #0
   1d082:	1ae4      	subs	r4, r4, r3
   1d084:	10a4      	asrs	r4, r4, #2
   1d086:	42a5      	cmp	r5, r4
   1d088:	d004      	beq.n	1d094 <__libc_init_array+0x1c>
   1d08a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1d08e:	4798      	blx	r3
   1d090:	3501      	adds	r5, #1
   1d092:	e7f8      	b.n	1d086 <__libc_init_array+0xe>
   1d094:	f7f4 fa1c 	bl	114d0 <_init>
   1d098:	4b08      	ldr	r3, [pc, #32]	; (1d0bc <__libc_init_array+0x44>)
   1d09a:	4c09      	ldr	r4, [pc, #36]	; (1d0c0 <__libc_init_array+0x48>)
   1d09c:	461e      	mov	r6, r3
   1d09e:	1ae4      	subs	r4, r4, r3
   1d0a0:	10a4      	asrs	r4, r4, #2
   1d0a2:	2500      	movs	r5, #0
   1d0a4:	42a5      	cmp	r5, r4
   1d0a6:	d004      	beq.n	1d0b2 <__libc_init_array+0x3a>
   1d0a8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1d0ac:	4798      	blx	r3
   1d0ae:	3501      	adds	r5, #1
   1d0b0:	e7f8      	b.n	1d0a4 <__libc_init_array+0x2c>
   1d0b2:	bd70      	pop	{r4, r5, r6, pc}
   1d0b4:	000266cc 	.word	0x000266cc
   1d0b8:	000266cc 	.word	0x000266cc
   1d0bc:	000266cc 	.word	0x000266cc
   1d0c0:	000266d0 	.word	0x000266d0

0001d0c4 <localtime>:
localtime():
   1d0c4:	b538      	push	{r3, r4, r5, lr}
   1d0c6:	4b07      	ldr	r3, [pc, #28]	; (1d0e4 <localtime+0x20>)
   1d0c8:	4605      	mov	r5, r0
   1d0ca:	681c      	ldr	r4, [r3, #0]
   1d0cc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1d0ce:	b91b      	cbnz	r3, 1d0d8 <localtime+0x14>
   1d0d0:	2024      	movs	r0, #36	; 0x24
   1d0d2:	f000 f8ef 	bl	1d2b4 <malloc>
   1d0d6:	63e0      	str	r0, [r4, #60]	; 0x3c
   1d0d8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
   1d0da:	4628      	mov	r0, r5
   1d0dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1d0e0:	f000 b802 	b.w	1d0e8 <localtime_r>
   1d0e4:	2007c140 	.word	0x2007c140

0001d0e8 <localtime_r>:
localtime_r():
   1d0e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d0ec:	460c      	mov	r4, r1
   1d0ee:	4680      	mov	r8, r0
   1d0f0:	f004 fbe8 	bl	218c4 <__gettzinfo>
   1d0f4:	4621      	mov	r1, r4
   1d0f6:	4607      	mov	r7, r0
   1d0f8:	4640      	mov	r0, r8
   1d0fa:	f004 fbe7 	bl	218cc <gmtime_r>
   1d0fe:	6946      	ldr	r6, [r0, #20]
   1d100:	4604      	mov	r4, r0
   1d102:	f206 766c 	addw	r6, r6, #1900	; 0x76c
   1d106:	07b3      	lsls	r3, r6, #30
   1d108:	d105      	bne.n	1d116 <localtime_r+0x2e>
   1d10a:	2264      	movs	r2, #100	; 0x64
   1d10c:	fb96 f3f2 	sdiv	r3, r6, r2
   1d110:	fb02 6313 	mls	r3, r2, r3, r6
   1d114:	b94b      	cbnz	r3, 1d12a <localtime_r+0x42>
   1d116:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1d11a:	fb96 f3f5 	sdiv	r3, r6, r5
   1d11e:	fb05 6513 	mls	r5, r5, r3, r6
   1d122:	fab5 f385 	clz	r3, r5
   1d126:	095b      	lsrs	r3, r3, #5
   1d128:	e000      	b.n	1d12c <localtime_r+0x44>
   1d12a:	2301      	movs	r3, #1
   1d12c:	4a5f      	ldr	r2, [pc, #380]	; (1d2ac <localtime_r+0x1c4>)
   1d12e:	2530      	movs	r5, #48	; 0x30
   1d130:	fb05 2503 	mla	r5, r5, r3, r2
   1d134:	f002 fe46 	bl	1fdc4 <__tz_lock>
   1d138:	f002 fe46 	bl	1fdc8 <_tzset_unlocked>
   1d13c:	4b5c      	ldr	r3, [pc, #368]	; (1d2b0 <localtime_r+0x1c8>)
   1d13e:	681b      	ldr	r3, [r3, #0]
   1d140:	b1f3      	cbz	r3, 1d180 <localtime_r+0x98>
   1d142:	687b      	ldr	r3, [r7, #4]
   1d144:	429e      	cmp	r6, r3
   1d146:	d105      	bne.n	1d154 <localtime_r+0x6c>
   1d148:	6839      	ldr	r1, [r7, #0]
   1d14a:	f8d8 3000 	ldr.w	r3, [r8]
   1d14e:	69fa      	ldr	r2, [r7, #28]
   1d150:	b941      	cbnz	r1, 1d164 <localtime_r+0x7c>
   1d152:	e00a      	b.n	1d16a <localtime_r+0x82>
   1d154:	4630      	mov	r0, r6
   1d156:	f002 fd8d 	bl	1fc74 <__tzcalc_limits>
   1d15a:	2800      	cmp	r0, #0
   1d15c:	d1f4      	bne.n	1d148 <localtime_r+0x60>
   1d15e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1d162:	e00d      	b.n	1d180 <localtime_r+0x98>
   1d164:	4293      	cmp	r3, r2
   1d166:	db08      	blt.n	1d17a <localtime_r+0x92>
   1d168:	e001      	b.n	1d16e <localtime_r+0x86>
   1d16a:	4293      	cmp	r3, r2
   1d16c:	da07      	bge.n	1d17e <localtime_r+0x96>
   1d16e:	6bba      	ldr	r2, [r7, #56]	; 0x38
   1d170:	4293      	cmp	r3, r2
   1d172:	bfac      	ite	ge
   1d174:	2300      	movge	r3, #0
   1d176:	2301      	movlt	r3, #1
   1d178:	e002      	b.n	1d180 <localtime_r+0x98>
   1d17a:	2300      	movs	r3, #0
   1d17c:	e000      	b.n	1d180 <localtime_r+0x98>
   1d17e:	2301      	movs	r3, #1
   1d180:	6223      	str	r3, [r4, #32]
   1d182:	6a23      	ldr	r3, [r4, #32]
   1d184:	203c      	movs	r0, #60	; 0x3c
   1d186:	2b01      	cmp	r3, #1
   1d188:	bf0c      	ite	eq
   1d18a:	6bf9      	ldreq	r1, [r7, #60]	; 0x3c
   1d18c:	6a39      	ldrne	r1, [r7, #32]
   1d18e:	f44f 6361 	mov.w	r3, #3600	; 0xe10
   1d192:	fb91 f6f3 	sdiv	r6, r1, r3
   1d196:	fb03 1316 	mls	r3, r3, r6, r1
   1d19a:	fb93 f2f0 	sdiv	r2, r3, r0
   1d19e:	fb00 3012 	mls	r0, r0, r2, r3
   1d1a2:	6861      	ldr	r1, [r4, #4]
   1d1a4:	6823      	ldr	r3, [r4, #0]
   1d1a6:	1a89      	subs	r1, r1, r2
   1d1a8:	68a2      	ldr	r2, [r4, #8]
   1d1aa:	1a1b      	subs	r3, r3, r0
   1d1ac:	1b92      	subs	r2, r2, r6
   1d1ae:	2b3b      	cmp	r3, #59	; 0x3b
   1d1b0:	6023      	str	r3, [r4, #0]
   1d1b2:	6061      	str	r1, [r4, #4]
   1d1b4:	60a2      	str	r2, [r4, #8]
   1d1b6:	dd03      	ble.n	1d1c0 <localtime_r+0xd8>
   1d1b8:	3101      	adds	r1, #1
   1d1ba:	6061      	str	r1, [r4, #4]
   1d1bc:	3b3c      	subs	r3, #60	; 0x3c
   1d1be:	e004      	b.n	1d1ca <localtime_r+0xe2>
   1d1c0:	2b00      	cmp	r3, #0
   1d1c2:	da03      	bge.n	1d1cc <localtime_r+0xe4>
   1d1c4:	3901      	subs	r1, #1
   1d1c6:	6061      	str	r1, [r4, #4]
   1d1c8:	333c      	adds	r3, #60	; 0x3c
   1d1ca:	6023      	str	r3, [r4, #0]
   1d1cc:	6863      	ldr	r3, [r4, #4]
   1d1ce:	2b3b      	cmp	r3, #59	; 0x3b
   1d1d0:	dd03      	ble.n	1d1da <localtime_r+0xf2>
   1d1d2:	3201      	adds	r2, #1
   1d1d4:	60a2      	str	r2, [r4, #8]
   1d1d6:	3b3c      	subs	r3, #60	; 0x3c
   1d1d8:	e004      	b.n	1d1e4 <localtime_r+0xfc>
   1d1da:	2b00      	cmp	r3, #0
   1d1dc:	da03      	bge.n	1d1e6 <localtime_r+0xfe>
   1d1de:	3a01      	subs	r2, #1
   1d1e0:	60a2      	str	r2, [r4, #8]
   1d1e2:	333c      	adds	r3, #60	; 0x3c
   1d1e4:	6063      	str	r3, [r4, #4]
   1d1e6:	68a3      	ldr	r3, [r4, #8]
   1d1e8:	2b17      	cmp	r3, #23
   1d1ea:	dd22      	ble.n	1d232 <localtime_r+0x14a>
   1d1ec:	69e2      	ldr	r2, [r4, #28]
   1d1ee:	3b18      	subs	r3, #24
   1d1f0:	3201      	adds	r2, #1
   1d1f2:	61e2      	str	r2, [r4, #28]
   1d1f4:	69a2      	ldr	r2, [r4, #24]
   1d1f6:	60a3      	str	r3, [r4, #8]
   1d1f8:	3201      	adds	r2, #1
   1d1fa:	2a06      	cmp	r2, #6
   1d1fc:	bfc8      	it	gt
   1d1fe:	2200      	movgt	r2, #0
   1d200:	61a2      	str	r2, [r4, #24]
   1d202:	68e2      	ldr	r2, [r4, #12]
   1d204:	6923      	ldr	r3, [r4, #16]
   1d206:	3201      	adds	r2, #1
   1d208:	60e2      	str	r2, [r4, #12]
   1d20a:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   1d20e:	428a      	cmp	r2, r1
   1d210:	dd46      	ble.n	1d2a0 <localtime_r+0x1b8>
   1d212:	3301      	adds	r3, #1
   1d214:	2b0c      	cmp	r3, #12
   1d216:	bf08      	it	eq
   1d218:	6963      	ldreq	r3, [r4, #20]
   1d21a:	eba2 0201 	sub.w	r2, r2, r1
   1d21e:	60e2      	str	r2, [r4, #12]
   1d220:	bf05      	ittet	eq
   1d222:	3301      	addeq	r3, #1
   1d224:	2200      	moveq	r2, #0
   1d226:	6123      	strne	r3, [r4, #16]
   1d228:	6122      	streq	r2, [r4, #16]
   1d22a:	bf04      	itt	eq
   1d22c:	6163      	streq	r3, [r4, #20]
   1d22e:	61e2      	streq	r2, [r4, #28]
   1d230:	e036      	b.n	1d2a0 <localtime_r+0x1b8>
   1d232:	2b00      	cmp	r3, #0
   1d234:	da34      	bge.n	1d2a0 <localtime_r+0x1b8>
   1d236:	69e2      	ldr	r2, [r4, #28]
   1d238:	3318      	adds	r3, #24
   1d23a:	3a01      	subs	r2, #1
   1d23c:	61e2      	str	r2, [r4, #28]
   1d23e:	69a2      	ldr	r2, [r4, #24]
   1d240:	60a3      	str	r3, [r4, #8]
   1d242:	3a01      	subs	r2, #1
   1d244:	bf48      	it	mi
   1d246:	2206      	movmi	r2, #6
   1d248:	61a2      	str	r2, [r4, #24]
   1d24a:	68e2      	ldr	r2, [r4, #12]
   1d24c:	3a01      	subs	r2, #1
   1d24e:	60e2      	str	r2, [r4, #12]
   1d250:	bb32      	cbnz	r2, 1d2a0 <localtime_r+0x1b8>
   1d252:	6923      	ldr	r3, [r4, #16]
   1d254:	3b01      	subs	r3, #1
   1d256:	d401      	bmi.n	1d25c <localtime_r+0x174>
   1d258:	6123      	str	r3, [r4, #16]
   1d25a:	e01d      	b.n	1d298 <localtime_r+0x1b0>
   1d25c:	230b      	movs	r3, #11
   1d25e:	6123      	str	r3, [r4, #16]
   1d260:	6963      	ldr	r3, [r4, #20]
   1d262:	1e5a      	subs	r2, r3, #1
   1d264:	f012 0f03 	tst.w	r2, #3
   1d268:	6162      	str	r2, [r4, #20]
   1d26a:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1d26e:	d105      	bne.n	1d27c <localtime_r+0x194>
   1d270:	2164      	movs	r1, #100	; 0x64
   1d272:	fb93 f2f1 	sdiv	r2, r3, r1
   1d276:	fb01 3212 	mls	r2, r1, r2, r3
   1d27a:	b94a      	cbnz	r2, 1d290 <localtime_r+0x1a8>
   1d27c:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1d280:	fb93 f2f1 	sdiv	r2, r3, r1
   1d284:	fb01 3312 	mls	r3, r1, r2, r3
   1d288:	fab3 f383 	clz	r3, r3
   1d28c:	095b      	lsrs	r3, r3, #5
   1d28e:	e000      	b.n	1d292 <localtime_r+0x1aa>
   1d290:	2301      	movs	r3, #1
   1d292:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
   1d296:	61e3      	str	r3, [r4, #28]
   1d298:	6923      	ldr	r3, [r4, #16]
   1d29a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
   1d29e:	60e3      	str	r3, [r4, #12]
   1d2a0:	f002 fd91 	bl	1fdc6 <__tz_unlock>
   1d2a4:	4620      	mov	r0, r4
   1d2a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d2aa:	bf00      	nop
   1d2ac:	000263fc 	.word	0x000263fc
   1d2b0:	2007c784 	.word	0x2007c784

0001d2b4 <malloc>:
malloc():
   1d2b4:	4b02      	ldr	r3, [pc, #8]	; (1d2c0 <malloc+0xc>)
   1d2b6:	4601      	mov	r1, r0
   1d2b8:	6818      	ldr	r0, [r3, #0]
   1d2ba:	f000 bb2d 	b.w	1d918 <_malloc_r>
   1d2be:	bf00      	nop
   1d2c0:	2007c140 	.word	0x2007c140

0001d2c4 <free>:
free():
   1d2c4:	4b02      	ldr	r3, [pc, #8]	; (1d2d0 <free+0xc>)
   1d2c6:	4601      	mov	r1, r0
   1d2c8:	6818      	ldr	r0, [r3, #0]
   1d2ca:	f000 baa7 	b.w	1d81c <_free_r>
   1d2ce:	bf00      	nop
   1d2d0:	2007c140 	.word	0x2007c140

0001d2d4 <memchr>:
memchr():
   1d2d4:	b510      	push	{r4, lr}
   1d2d6:	b2c9      	uxtb	r1, r1
   1d2d8:	4402      	add	r2, r0
   1d2da:	4290      	cmp	r0, r2
   1d2dc:	4603      	mov	r3, r0
   1d2de:	d005      	beq.n	1d2ec <memchr+0x18>
   1d2e0:	781c      	ldrb	r4, [r3, #0]
   1d2e2:	3001      	adds	r0, #1
   1d2e4:	428c      	cmp	r4, r1
   1d2e6:	d1f8      	bne.n	1d2da <memchr+0x6>
   1d2e8:	4618      	mov	r0, r3
   1d2ea:	bd10      	pop	{r4, pc}
   1d2ec:	2000      	movs	r0, #0
   1d2ee:	bd10      	pop	{r4, pc}

0001d2f0 <memcmp>:
memcmp():
   1d2f0:	b510      	push	{r4, lr}
   1d2f2:	3901      	subs	r1, #1
   1d2f4:	4402      	add	r2, r0
   1d2f6:	4290      	cmp	r0, r2
   1d2f8:	d007      	beq.n	1d30a <memcmp+0x1a>
   1d2fa:	f810 3b01 	ldrb.w	r3, [r0], #1
   1d2fe:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   1d302:	42a3      	cmp	r3, r4
   1d304:	d0f7      	beq.n	1d2f6 <memcmp+0x6>
   1d306:	1b18      	subs	r0, r3, r4
   1d308:	bd10      	pop	{r4, pc}
   1d30a:	2000      	movs	r0, #0
   1d30c:	bd10      	pop	{r4, pc}

0001d30e <memcpy>:
memcpy():
   1d30e:	b510      	push	{r4, lr}
   1d310:	1e43      	subs	r3, r0, #1
   1d312:	440a      	add	r2, r1
   1d314:	4291      	cmp	r1, r2
   1d316:	d004      	beq.n	1d322 <memcpy+0x14>
   1d318:	f811 4b01 	ldrb.w	r4, [r1], #1
   1d31c:	f803 4f01 	strb.w	r4, [r3, #1]!
   1d320:	e7f8      	b.n	1d314 <memcpy+0x6>
   1d322:	bd10      	pop	{r4, pc}

0001d324 <memmove>:
memmove():
   1d324:	4288      	cmp	r0, r1
   1d326:	b510      	push	{r4, lr}
   1d328:	eb01 0302 	add.w	r3, r1, r2
   1d32c:	d801      	bhi.n	1d332 <memmove+0xe>
   1d32e:	1e42      	subs	r2, r0, #1
   1d330:	e00b      	b.n	1d34a <memmove+0x26>
   1d332:	4298      	cmp	r0, r3
   1d334:	d2fb      	bcs.n	1d32e <memmove+0xa>
   1d336:	1881      	adds	r1, r0, r2
   1d338:	1ad2      	subs	r2, r2, r3
   1d33a:	42d3      	cmn	r3, r2
   1d33c:	d004      	beq.n	1d348 <memmove+0x24>
   1d33e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   1d342:	f801 4d01 	strb.w	r4, [r1, #-1]!
   1d346:	e7f8      	b.n	1d33a <memmove+0x16>
   1d348:	bd10      	pop	{r4, pc}
   1d34a:	4299      	cmp	r1, r3
   1d34c:	d004      	beq.n	1d358 <memmove+0x34>
   1d34e:	f811 4b01 	ldrb.w	r4, [r1], #1
   1d352:	f802 4f01 	strb.w	r4, [r2, #1]!
   1d356:	e7f8      	b.n	1d34a <memmove+0x26>
   1d358:	bd10      	pop	{r4, pc}

0001d35a <memset>:
memset():
   1d35a:	4603      	mov	r3, r0
   1d35c:	4402      	add	r2, r0
   1d35e:	4293      	cmp	r3, r2
   1d360:	d002      	beq.n	1d368 <memset+0xe>
   1d362:	f803 1b01 	strb.w	r1, [r3], #1
   1d366:	e7fa      	b.n	1d35e <memset+0x4>
   1d368:	4770      	bx	lr
   1d36a:	ffff b5f7 	vsli.64	<illegal reg q13.5>, <illegal reg q11.5>, #63	; 0x3f

0001d36c <validate_structure>:
validate_structure():
   1d36c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1d36e:	6801      	ldr	r1, [r0, #0]
   1d370:	4604      	mov	r4, r0
   1d372:	293b      	cmp	r1, #59	; 0x3b
   1d374:	d911      	bls.n	1d39a <validate_structure+0x2e>
   1d376:	223c      	movs	r2, #60	; 0x3c
   1d378:	4668      	mov	r0, sp
   1d37a:	f003 f833 	bl	203e4 <div>
   1d37e:	9a01      	ldr	r2, [sp, #4]
   1d380:	6863      	ldr	r3, [r4, #4]
   1d382:	9900      	ldr	r1, [sp, #0]
   1d384:	2a00      	cmp	r2, #0
   1d386:	440b      	add	r3, r1
   1d388:	6063      	str	r3, [r4, #4]
   1d38a:	bfbb      	ittet	lt
   1d38c:	323c      	addlt	r2, #60	; 0x3c
   1d38e:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1d392:	6022      	strge	r2, [r4, #0]
   1d394:	6022      	strlt	r2, [r4, #0]
   1d396:	bfb8      	it	lt
   1d398:	6063      	strlt	r3, [r4, #4]
   1d39a:	6861      	ldr	r1, [r4, #4]
   1d39c:	293b      	cmp	r1, #59	; 0x3b
   1d39e:	d911      	bls.n	1d3c4 <validate_structure+0x58>
   1d3a0:	223c      	movs	r2, #60	; 0x3c
   1d3a2:	4668      	mov	r0, sp
   1d3a4:	f003 f81e 	bl	203e4 <div>
   1d3a8:	9a01      	ldr	r2, [sp, #4]
   1d3aa:	68a1      	ldr	r1, [r4, #8]
   1d3ac:	9b00      	ldr	r3, [sp, #0]
   1d3ae:	2a00      	cmp	r2, #0
   1d3b0:	440b      	add	r3, r1
   1d3b2:	60a3      	str	r3, [r4, #8]
   1d3b4:	bfbb      	ittet	lt
   1d3b6:	323c      	addlt	r2, #60	; 0x3c
   1d3b8:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1d3bc:	6062      	strge	r2, [r4, #4]
   1d3be:	6062      	strlt	r2, [r4, #4]
   1d3c0:	bfb8      	it	lt
   1d3c2:	60a3      	strlt	r3, [r4, #8]
   1d3c4:	68a1      	ldr	r1, [r4, #8]
   1d3c6:	2917      	cmp	r1, #23
   1d3c8:	d911      	bls.n	1d3ee <validate_structure+0x82>
   1d3ca:	2218      	movs	r2, #24
   1d3cc:	4668      	mov	r0, sp
   1d3ce:	f003 f809 	bl	203e4 <div>
   1d3d2:	9a01      	ldr	r2, [sp, #4]
   1d3d4:	68e1      	ldr	r1, [r4, #12]
   1d3d6:	9b00      	ldr	r3, [sp, #0]
   1d3d8:	2a00      	cmp	r2, #0
   1d3da:	440b      	add	r3, r1
   1d3dc:	60e3      	str	r3, [r4, #12]
   1d3de:	bfbb      	ittet	lt
   1d3e0:	3218      	addlt	r2, #24
   1d3e2:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1d3e6:	60a2      	strge	r2, [r4, #8]
   1d3e8:	60a2      	strlt	r2, [r4, #8]
   1d3ea:	bfb8      	it	lt
   1d3ec:	60e3      	strlt	r3, [r4, #12]
   1d3ee:	6921      	ldr	r1, [r4, #16]
   1d3f0:	290b      	cmp	r1, #11
   1d3f2:	d911      	bls.n	1d418 <validate_structure+0xac>
   1d3f4:	220c      	movs	r2, #12
   1d3f6:	4668      	mov	r0, sp
   1d3f8:	f002 fff4 	bl	203e4 <div>
   1d3fc:	9a01      	ldr	r2, [sp, #4]
   1d3fe:	6961      	ldr	r1, [r4, #20]
   1d400:	9b00      	ldr	r3, [sp, #0]
   1d402:	2a00      	cmp	r2, #0
   1d404:	440b      	add	r3, r1
   1d406:	6163      	str	r3, [r4, #20]
   1d408:	bfbb      	ittet	lt
   1d40a:	320c      	addlt	r2, #12
   1d40c:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1d410:	6122      	strge	r2, [r4, #16]
   1d412:	6122      	strlt	r2, [r4, #16]
   1d414:	bfb8      	it	lt
   1d416:	6163      	strlt	r3, [r4, #20]
   1d418:	6963      	ldr	r3, [r4, #20]
   1d41a:	0799      	lsls	r1, r3, #30
   1d41c:	d112      	bne.n	1d444 <validate_structure+0xd8>
   1d41e:	2164      	movs	r1, #100	; 0x64
   1d420:	fb93 f2f1 	sdiv	r2, r3, r1
   1d424:	fb01 3212 	mls	r2, r1, r2, r3
   1d428:	b972      	cbnz	r2, 1d448 <validate_structure+0xdc>
   1d42a:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   1d42e:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1d432:	fb93 f2f1 	sdiv	r2, r3, r1
   1d436:	fb01 3312 	mls	r3, r1, r2, r3
   1d43a:	2b00      	cmp	r3, #0
   1d43c:	bf14      	ite	ne
   1d43e:	231c      	movne	r3, #28
   1d440:	231d      	moveq	r3, #29
   1d442:	e002      	b.n	1d44a <validate_structure+0xde>
   1d444:	231c      	movs	r3, #28
   1d446:	e000      	b.n	1d44a <validate_structure+0xde>
   1d448:	231d      	movs	r3, #29
   1d44a:	68e2      	ldr	r2, [r4, #12]
   1d44c:	2a00      	cmp	r2, #0
   1d44e:	dd06      	ble.n	1d45e <validate_structure+0xf2>
   1d450:	4f33      	ldr	r7, [pc, #204]	; (1d520 <validate_structure+0x1b4>)
   1d452:	f04f 0e00 	mov.w	lr, #0
   1d456:	2564      	movs	r5, #100	; 0x64
   1d458:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1d45c:	e039      	b.n	1d4d2 <validate_structure+0x166>
   1d45e:	4f30      	ldr	r7, [pc, #192]	; (1d520 <validate_structure+0x1b4>)
   1d460:	260b      	movs	r6, #11
   1d462:	2064      	movs	r0, #100	; 0x64
   1d464:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1d468:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   1d46c:	f1be 0f00 	cmp.w	lr, #0
   1d470:	dc53      	bgt.n	1d51a <validate_structure+0x1ae>
   1d472:	6921      	ldr	r1, [r4, #16]
   1d474:	3901      	subs	r1, #1
   1d476:	6121      	str	r1, [r4, #16]
   1d478:	3101      	adds	r1, #1
   1d47a:	d118      	bne.n	1d4ae <validate_structure+0x142>
   1d47c:	6963      	ldr	r3, [r4, #20]
   1d47e:	6126      	str	r6, [r4, #16]
   1d480:	1e59      	subs	r1, r3, #1
   1d482:	078a      	lsls	r2, r1, #30
   1d484:	6161      	str	r1, [r4, #20]
   1d486:	d10f      	bne.n	1d4a8 <validate_structure+0x13c>
   1d488:	fb91 f2f0 	sdiv	r2, r1, r0
   1d48c:	fb00 1112 	mls	r1, r0, r2, r1
   1d490:	b961      	cbnz	r1, 1d4ac <validate_structure+0x140>
   1d492:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1d496:	fb93 f2f5 	sdiv	r2, r3, r5
   1d49a:	fb05 3312 	mls	r3, r5, r2, r3
   1d49e:	2b00      	cmp	r3, #0
   1d4a0:	bf14      	ite	ne
   1d4a2:	231c      	movne	r3, #28
   1d4a4:	231d      	moveq	r3, #29
   1d4a6:	e002      	b.n	1d4ae <validate_structure+0x142>
   1d4a8:	231c      	movs	r3, #28
   1d4aa:	e000      	b.n	1d4ae <validate_structure+0x142>
   1d4ac:	231d      	movs	r3, #29
   1d4ae:	6922      	ldr	r2, [r4, #16]
   1d4b0:	2a01      	cmp	r2, #1
   1d4b2:	bf0c      	ite	eq
   1d4b4:	461a      	moveq	r2, r3
   1d4b6:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   1d4ba:	4472      	add	r2, lr
   1d4bc:	60e2      	str	r2, [r4, #12]
   1d4be:	e7d3      	b.n	1d468 <validate_structure+0xfc>
   1d4c0:	428b      	cmp	r3, r1
   1d4c2:	da2a      	bge.n	1d51a <validate_structure+0x1ae>
   1d4c4:	4618      	mov	r0, r3
   1d4c6:	3201      	adds	r2, #1
   1d4c8:	1a09      	subs	r1, r1, r0
   1d4ca:	2a0c      	cmp	r2, #12
   1d4cc:	60e1      	str	r1, [r4, #12]
   1d4ce:	6122      	str	r2, [r4, #16]
   1d4d0:	d008      	beq.n	1d4e4 <validate_structure+0x178>
   1d4d2:	6922      	ldr	r2, [r4, #16]
   1d4d4:	68e1      	ldr	r1, [r4, #12]
   1d4d6:	2a01      	cmp	r2, #1
   1d4d8:	d0f2      	beq.n	1d4c0 <validate_structure+0x154>
   1d4da:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
   1d4de:	4281      	cmp	r1, r0
   1d4e0:	dcf1      	bgt.n	1d4c6 <validate_structure+0x15a>
   1d4e2:	e01a      	b.n	1d51a <validate_structure+0x1ae>
   1d4e4:	6963      	ldr	r3, [r4, #20]
   1d4e6:	f8c4 e010 	str.w	lr, [r4, #16]
   1d4ea:	1c5a      	adds	r2, r3, #1
   1d4ec:	0791      	lsls	r1, r2, #30
   1d4ee:	6162      	str	r2, [r4, #20]
   1d4f0:	d10f      	bne.n	1d512 <validate_structure+0x1a6>
   1d4f2:	fb92 f1f5 	sdiv	r1, r2, r5
   1d4f6:	fb05 2211 	mls	r2, r5, r1, r2
   1d4fa:	b962      	cbnz	r2, 1d516 <validate_structure+0x1aa>
   1d4fc:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   1d500:	fb93 f2f6 	sdiv	r2, r3, r6
   1d504:	fb06 3312 	mls	r3, r6, r2, r3
   1d508:	2b00      	cmp	r3, #0
   1d50a:	bf14      	ite	ne
   1d50c:	231c      	movne	r3, #28
   1d50e:	231d      	moveq	r3, #29
   1d510:	e7df      	b.n	1d4d2 <validate_structure+0x166>
   1d512:	231c      	movs	r3, #28
   1d514:	e7dd      	b.n	1d4d2 <validate_structure+0x166>
   1d516:	231d      	movs	r3, #29
   1d518:	e7db      	b.n	1d4d2 <validate_structure+0x166>
   1d51a:	b003      	add	sp, #12
   1d51c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1d51e:	bf00      	nop
   1d520:	000263cc 	.word	0x000263cc

0001d524 <mktime>:
mktime():
   1d524:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d528:	4605      	mov	r5, r0
   1d52a:	f004 f9cb 	bl	218c4 <__gettzinfo>
   1d52e:	4681      	mov	r9, r0
   1d530:	4628      	mov	r0, r5
   1d532:	f7ff ff1b 	bl	1d36c <validate_structure>
   1d536:	e895 000c 	ldmia.w	r5, {r2, r3}
   1d53a:	213c      	movs	r1, #60	; 0x3c
   1d53c:	fb01 2303 	mla	r3, r1, r3, r2
   1d540:	68aa      	ldr	r2, [r5, #8]
   1d542:	f44f 6861 	mov.w	r8, #3600	; 0xe10
   1d546:	fb08 3102 	mla	r1, r8, r2, r3
   1d54a:	692b      	ldr	r3, [r5, #16]
   1d54c:	4aab      	ldr	r2, [pc, #684]	; (1d7fc <mktime+0x2d8>)
   1d54e:	68ec      	ldr	r4, [r5, #12]
   1d550:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1d554:	3c01      	subs	r4, #1
   1d556:	2b01      	cmp	r3, #1
   1d558:	4414      	add	r4, r2
   1d55a:	696b      	ldr	r3, [r5, #20]
   1d55c:	dd11      	ble.n	1d582 <mktime+0x5e>
   1d55e:	079e      	lsls	r6, r3, #30
   1d560:	d10f      	bne.n	1d582 <mktime+0x5e>
   1d562:	2064      	movs	r0, #100	; 0x64
   1d564:	fb93 f2f0 	sdiv	r2, r3, r0
   1d568:	fb00 3212 	mls	r2, r0, r2, r3
   1d56c:	b942      	cbnz	r2, 1d580 <mktime+0x5c>
   1d56e:	f203 766c 	addw	r6, r3, #1900	; 0x76c
   1d572:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1d576:	fb96 f0f2 	sdiv	r0, r6, r2
   1d57a:	fb02 6210 	mls	r2, r2, r0, r6
   1d57e:	b902      	cbnz	r2, 1d582 <mktime+0x5e>
   1d580:	3401      	adds	r4, #1
   1d582:	f644 6020 	movw	r0, #20000	; 0x4e20
   1d586:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1d58a:	3210      	adds	r2, #16
   1d58c:	4282      	cmp	r2, r0
   1d58e:	61ec      	str	r4, [r5, #28]
   1d590:	461f      	mov	r7, r3
   1d592:	f200 812e 	bhi.w	1d7f2 <mktime+0x2ce>
   1d596:	2b46      	cmp	r3, #70	; 0x46
   1d598:	dd22      	ble.n	1d5e0 <mktime+0xbc>
   1d59a:	f240 1c6d 	movw	ip, #365	; 0x16d
   1d59e:	2246      	movs	r2, #70	; 0x46
   1d5a0:	2664      	movs	r6, #100	; 0x64
   1d5a2:	f44f 7ec8 	mov.w	lr, #400	; 0x190
   1d5a6:	0790      	lsls	r0, r2, #30
   1d5a8:	d110      	bne.n	1d5cc <mktime+0xa8>
   1d5aa:	fb92 f0f6 	sdiv	r0, r2, r6
   1d5ae:	fb06 2010 	mls	r0, r6, r0, r2
   1d5b2:	b970      	cbnz	r0, 1d5d2 <mktime+0xae>
   1d5b4:	f202 786c 	addw	r8, r2, #1900	; 0x76c
   1d5b8:	fb98 f0fe 	sdiv	r0, r8, lr
   1d5bc:	fb0e 8010 	mls	r0, lr, r0, r8
   1d5c0:	2800      	cmp	r0, #0
   1d5c2:	bf14      	ite	ne
   1d5c4:	4660      	movne	r0, ip
   1d5c6:	f44f 70b7 	moveq.w	r0, #366	; 0x16e
   1d5ca:	e004      	b.n	1d5d6 <mktime+0xb2>
   1d5cc:	f240 106d 	movw	r0, #365	; 0x16d
   1d5d0:	e001      	b.n	1d5d6 <mktime+0xb2>
   1d5d2:	f44f 70b7 	mov.w	r0, #366	; 0x16e
   1d5d6:	3201      	adds	r2, #1
   1d5d8:	4293      	cmp	r3, r2
   1d5da:	4404      	add	r4, r0
   1d5dc:	d1e3      	bne.n	1d5a6 <mktime+0x82>
   1d5de:	e044      	b.n	1d66a <mktime+0x146>
   1d5e0:	d043      	beq.n	1d66a <mktime+0x146>
   1d5e2:	f240 1e6d 	movw	lr, #365	; 0x16d
   1d5e6:	2245      	movs	r2, #69	; 0x45
   1d5e8:	2664      	movs	r6, #100	; 0x64
   1d5ea:	f44f 77c8 	mov.w	r7, #400	; 0x190
   1d5ee:	429a      	cmp	r2, r3
   1d5f0:	dd1a      	ble.n	1d628 <mktime+0x104>
   1d5f2:	0790      	lsls	r0, r2, #30
   1d5f4:	d110      	bne.n	1d618 <mktime+0xf4>
   1d5f6:	fb92 f0f6 	sdiv	r0, r2, r6
   1d5fa:	fb06 2010 	mls	r0, r6, r0, r2
   1d5fe:	b970      	cbnz	r0, 1d61e <mktime+0xfa>
   1d600:	f202 7c6c 	addw	ip, r2, #1900	; 0x76c
   1d604:	fb9c f0f7 	sdiv	r0, ip, r7
   1d608:	fb07 c010 	mls	r0, r7, r0, ip
   1d60c:	2800      	cmp	r0, #0
   1d60e:	bf14      	ite	ne
   1d610:	4670      	movne	r0, lr
   1d612:	f44f 70b7 	moveq.w	r0, #366	; 0x16e
   1d616:	e004      	b.n	1d622 <mktime+0xfe>
   1d618:	f240 106d 	movw	r0, #365	; 0x16d
   1d61c:	e001      	b.n	1d622 <mktime+0xfe>
   1d61e:	f44f 70b7 	mov.w	r0, #366	; 0x16e
   1d622:	1a24      	subs	r4, r4, r0
   1d624:	3a01      	subs	r2, #1
   1d626:	e7e2      	b.n	1d5ee <mktime+0xca>
   1d628:	2b45      	cmp	r3, #69	; 0x45
   1d62a:	bfa8      	it	ge
   1d62c:	2345      	movge	r3, #69	; 0x45
   1d62e:	079e      	lsls	r6, r3, #30
   1d630:	461f      	mov	r7, r3
   1d632:	d114      	bne.n	1d65e <mktime+0x13a>
   1d634:	2264      	movs	r2, #100	; 0x64
   1d636:	fb93 f3f2 	sdiv	r3, r3, r2
   1d63a:	fb02 7313 	mls	r3, r2, r3, r7
   1d63e:	b98b      	cbnz	r3, 1d664 <mktime+0x140>
   1d640:	f207 706c 	addw	r0, r7, #1900	; 0x76c
   1d644:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1d648:	fb90 f2f3 	sdiv	r2, r0, r3
   1d64c:	fb03 0312 	mls	r3, r3, r2, r0
   1d650:	2b00      	cmp	r3, #0
   1d652:	f240 136d 	movw	r3, #365	; 0x16d
   1d656:	bf08      	it	eq
   1d658:	f44f 73b7 	moveq.w	r3, #366	; 0x16e
   1d65c:	e004      	b.n	1d668 <mktime+0x144>
   1d65e:	f240 136d 	movw	r3, #365	; 0x16d
   1d662:	e001      	b.n	1d668 <mktime+0x144>
   1d664:	f44f 73b7 	mov.w	r3, #366	; 0x16e
   1d668:	1ae4      	subs	r4, r4, r3
   1d66a:	4865      	ldr	r0, [pc, #404]	; (1d800 <mktime+0x2dc>)
   1d66c:	fb00 1804 	mla	r8, r0, r4, r1
   1d670:	f002 fba8 	bl	1fdc4 <__tz_lock>
   1d674:	f002 fba8 	bl	1fdc8 <_tzset_unlocked>
   1d678:	4b62      	ldr	r3, [pc, #392]	; (1d804 <mktime+0x2e0>)
   1d67a:	681e      	ldr	r6, [r3, #0]
   1d67c:	2e00      	cmp	r6, #0
   1d67e:	f000 80a4 	beq.w	1d7ca <mktime+0x2a6>
   1d682:	6a2b      	ldr	r3, [r5, #32]
   1d684:	6968      	ldr	r0, [r5, #20]
   1d686:	2b01      	cmp	r3, #1
   1d688:	bfa8      	it	ge
   1d68a:	2301      	movge	r3, #1
   1d68c:	469a      	mov	sl, r3
   1d68e:	f8d9 3004 	ldr.w	r3, [r9, #4]
   1d692:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1d696:	4298      	cmp	r0, r3
   1d698:	d10d      	bne.n	1d6b6 <mktime+0x192>
   1d69a:	f8d9 2038 	ldr.w	r2, [r9, #56]	; 0x38
   1d69e:	f8d9 3020 	ldr.w	r3, [r9, #32]
   1d6a2:	f8d9 003c 	ldr.w	r0, [r9, #60]	; 0x3c
   1d6a6:	f8d9 101c 	ldr.w	r1, [r9, #28]
   1d6aa:	1ad6      	subs	r6, r2, r3
   1d6ac:	45b0      	cmp	r8, r6
   1d6ae:	eba1 0100 	sub.w	r1, r1, r0
   1d6b2:	da05      	bge.n	1d6c0 <mktime+0x19c>
   1d6b4:	e007      	b.n	1d6c6 <mktime+0x1a2>
   1d6b6:	f002 fadd 	bl	1fc74 <__tzcalc_limits>
   1d6ba:	2800      	cmp	r0, #0
   1d6bc:	d1ed      	bne.n	1d69a <mktime+0x176>
   1d6be:	e076      	b.n	1d7ae <mktime+0x28a>
   1d6c0:	1a12      	subs	r2, r2, r0
   1d6c2:	4590      	cmp	r8, r2
   1d6c4:	db73      	blt.n	1d7ae <mktime+0x28a>
   1d6c6:	f8d9 2000 	ldr.w	r2, [r9]
   1d6ca:	b112      	cbz	r2, 1d6d2 <mktime+0x1ae>
   1d6cc:	4588      	cmp	r8, r1
   1d6ce:	db77      	blt.n	1d7c0 <mktime+0x29c>
   1d6d0:	e001      	b.n	1d6d6 <mktime+0x1b2>
   1d6d2:	4588      	cmp	r8, r1
   1d6d4:	da07      	bge.n	1d6e6 <mktime+0x1c2>
   1d6d6:	45b0      	cmp	r8, r6
   1d6d8:	bfac      	ite	ge
   1d6da:	2600      	movge	r6, #0
   1d6dc:	2601      	movlt	r6, #1
   1d6de:	f1ba 0f00 	cmp.w	sl, #0
   1d6e2:	da04      	bge.n	1d6ee <mktime+0x1ca>
   1d6e4:	e064      	b.n	1d7b0 <mktime+0x28c>
   1d6e6:	f1ba 0f00 	cmp.w	sl, #0
   1d6ea:	db63      	blt.n	1d7b4 <mktime+0x290>
   1d6ec:	2601      	movs	r6, #1
   1d6ee:	ea8a 0a06 	eor.w	sl, sl, r6
   1d6f2:	f1ba 0f01 	cmp.w	sl, #1
   1d6f6:	d15b      	bne.n	1d7b0 <mktime+0x28c>
   1d6f8:	1a1b      	subs	r3, r3, r0
   1d6fa:	b906      	cbnz	r6, 1d6fe <mktime+0x1da>
   1d6fc:	425b      	negs	r3, r3
   1d6fe:	682a      	ldr	r2, [r5, #0]
   1d700:	4628      	mov	r0, r5
   1d702:	441a      	add	r2, r3
   1d704:	602a      	str	r2, [r5, #0]
   1d706:	4498      	add	r8, r3
   1d708:	f8d5 a00c 	ldr.w	sl, [r5, #12]
   1d70c:	f7ff fe2e 	bl	1d36c <validate_structure>
   1d710:	68eb      	ldr	r3, [r5, #12]
   1d712:	ebb3 030a 	subs.w	r3, r3, sl
   1d716:	d04b      	beq.n	1d7b0 <mktime+0x28c>
   1d718:	2b01      	cmp	r3, #1
   1d71a:	dc03      	bgt.n	1d724 <mktime+0x200>
   1d71c:	1c98      	adds	r0, r3, #2
   1d71e:	bfd8      	it	le
   1d720:	2301      	movle	r3, #1
   1d722:	e001      	b.n	1d728 <mktime+0x204>
   1d724:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1d728:	69ea      	ldr	r2, [r5, #28]
   1d72a:	441c      	add	r4, r3
   1d72c:	189b      	adds	r3, r3, r2
   1d72e:	d51d      	bpl.n	1d76c <mktime+0x248>
   1d730:	1e7b      	subs	r3, r7, #1
   1d732:	0799      	lsls	r1, r3, #30
   1d734:	d114      	bne.n	1d760 <mktime+0x23c>
   1d736:	2164      	movs	r1, #100	; 0x64
   1d738:	fb93 f2f1 	sdiv	r2, r3, r1
   1d73c:	fb01 3312 	mls	r3, r1, r2, r3
   1d740:	b98b      	cbnz	r3, 1d766 <mktime+0x242>
   1d742:	f207 776b 	addw	r7, r7, #1899	; 0x76b
   1d746:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1d74a:	fb97 f3f2 	sdiv	r3, r7, r2
   1d74e:	fb02 7713 	mls	r7, r2, r3, r7
   1d752:	2f00      	cmp	r7, #0
   1d754:	f240 136d 	movw	r3, #365	; 0x16d
   1d758:	bf18      	it	ne
   1d75a:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1d75e:	e024      	b.n	1d7aa <mktime+0x286>
   1d760:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1d764:	e021      	b.n	1d7aa <mktime+0x286>
   1d766:	f240 136d 	movw	r3, #365	; 0x16d
   1d76a:	e01e      	b.n	1d7aa <mktime+0x286>
   1d76c:	07ba      	lsls	r2, r7, #30
   1d76e:	d114      	bne.n	1d79a <mktime+0x276>
   1d770:	2164      	movs	r1, #100	; 0x64
   1d772:	fb97 f2f1 	sdiv	r2, r7, r1
   1d776:	fb01 7212 	mls	r2, r1, r2, r7
   1d77a:	b98a      	cbnz	r2, 1d7a0 <mktime+0x27c>
   1d77c:	f207 776c 	addw	r7, r7, #1900	; 0x76c
   1d780:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1d784:	fb97 f2f1 	sdiv	r2, r7, r1
   1d788:	fb01 7712 	mls	r7, r1, r2, r7
   1d78c:	2f00      	cmp	r7, #0
   1d78e:	f240 126d 	movw	r2, #365	; 0x16d
   1d792:	bf08      	it	eq
   1d794:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1d798:	e004      	b.n	1d7a4 <mktime+0x280>
   1d79a:	f240 126d 	movw	r2, #365	; 0x16d
   1d79e:	e001      	b.n	1d7a4 <mktime+0x280>
   1d7a0:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1d7a4:	429a      	cmp	r2, r3
   1d7a6:	bfd8      	it	le
   1d7a8:	1a9b      	suble	r3, r3, r2
   1d7aa:	61eb      	str	r3, [r5, #28]
   1d7ac:	e000      	b.n	1d7b0 <mktime+0x28c>
   1d7ae:	4656      	mov	r6, sl
   1d7b0:	2e01      	cmp	r6, #1
   1d7b2:	d10a      	bne.n	1d7ca <mktime+0x2a6>
   1d7b4:	f8d9 003c 	ldr.w	r0, [r9, #60]	; 0x3c
   1d7b8:	2601      	movs	r6, #1
   1d7ba:	eb08 0700 	add.w	r7, r8, r0
   1d7be:	e008      	b.n	1d7d2 <mktime+0x2ae>
   1d7c0:	f1ba 0f00 	cmp.w	sl, #0
   1d7c4:	f04f 0600 	mov.w	r6, #0
   1d7c8:	da91      	bge.n	1d6ee <mktime+0x1ca>
   1d7ca:	f8d9 0020 	ldr.w	r0, [r9, #32]
   1d7ce:	eb08 0700 	add.w	r7, r8, r0
   1d7d2:	f002 faf8 	bl	1fdc6 <__tz_unlock>
   1d7d6:	3404      	adds	r4, #4
   1d7d8:	2307      	movs	r3, #7
   1d7da:	fb94 f3f3 	sdiv	r3, r4, r3
   1d7de:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1d7e2:	1ae4      	subs	r4, r4, r3
   1d7e4:	bf48      	it	mi
   1d7e6:	3407      	addmi	r4, #7
   1d7e8:	622e      	str	r6, [r5, #32]
   1d7ea:	61ac      	str	r4, [r5, #24]
   1d7ec:	4638      	mov	r0, r7
   1d7ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d7f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1d7f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d7fa:	bf00      	nop
   1d7fc:	0002639c 	.word	0x0002639c
   1d800:	00015180 	.word	0x00015180
   1d804:	2007c784 	.word	0x2007c784

0001d808 <mallinfo>:
mallinfo():
   1d808:	b510      	push	{r4, lr}
   1d80a:	4604      	mov	r4, r0
   1d80c:	4b02      	ldr	r3, [pc, #8]	; (1d818 <mallinfo+0x10>)
   1d80e:	6819      	ldr	r1, [r3, #0]
   1d810:	f000 f850 	bl	1d8b4 <_mallinfo_r>
   1d814:	4620      	mov	r0, r4
   1d816:	bd10      	pop	{r4, pc}
   1d818:	2007c140 	.word	0x2007c140

0001d81c <_free_r>:
_free_r():
   1d81c:	b538      	push	{r3, r4, r5, lr}
   1d81e:	4605      	mov	r5, r0
   1d820:	2900      	cmp	r1, #0
   1d822:	d044      	beq.n	1d8ae <_free_r+0x92>
   1d824:	f851 3c04 	ldr.w	r3, [r1, #-4]
   1d828:	1f0c      	subs	r4, r1, #4
   1d82a:	2b00      	cmp	r3, #0
   1d82c:	bfb8      	it	lt
   1d82e:	18e4      	addlt	r4, r4, r3
   1d830:	f7f3 ff40 	bl	116b4 <__malloc_lock>
   1d834:	4a1e      	ldr	r2, [pc, #120]	; (1d8b0 <_free_r+0x94>)
   1d836:	6813      	ldr	r3, [r2, #0]
   1d838:	4611      	mov	r1, r2
   1d83a:	b913      	cbnz	r3, 1d842 <_free_r+0x26>
   1d83c:	6063      	str	r3, [r4, #4]
   1d83e:	6014      	str	r4, [r2, #0]
   1d840:	e030      	b.n	1d8a4 <_free_r+0x88>
   1d842:	42a3      	cmp	r3, r4
   1d844:	d90d      	bls.n	1d862 <_free_r+0x46>
   1d846:	6822      	ldr	r2, [r4, #0]
   1d848:	18a0      	adds	r0, r4, r2
   1d84a:	4283      	cmp	r3, r0
   1d84c:	bf01      	itttt	eq
   1d84e:	6818      	ldreq	r0, [r3, #0]
   1d850:	685b      	ldreq	r3, [r3, #4]
   1d852:	1812      	addeq	r2, r2, r0
   1d854:	6022      	streq	r2, [r4, #0]
   1d856:	6063      	str	r3, [r4, #4]
   1d858:	600c      	str	r4, [r1, #0]
   1d85a:	e023      	b.n	1d8a4 <_free_r+0x88>
   1d85c:	42a2      	cmp	r2, r4
   1d85e:	d803      	bhi.n	1d868 <_free_r+0x4c>
   1d860:	4613      	mov	r3, r2
   1d862:	685a      	ldr	r2, [r3, #4]
   1d864:	2a00      	cmp	r2, #0
   1d866:	d1f9      	bne.n	1d85c <_free_r+0x40>
   1d868:	6818      	ldr	r0, [r3, #0]
   1d86a:	1819      	adds	r1, r3, r0
   1d86c:	42a1      	cmp	r1, r4
   1d86e:	d10b      	bne.n	1d888 <_free_r+0x6c>
   1d870:	6821      	ldr	r1, [r4, #0]
   1d872:	4401      	add	r1, r0
   1d874:	1858      	adds	r0, r3, r1
   1d876:	4282      	cmp	r2, r0
   1d878:	6019      	str	r1, [r3, #0]
   1d87a:	d113      	bne.n	1d8a4 <_free_r+0x88>
   1d87c:	6810      	ldr	r0, [r2, #0]
   1d87e:	6852      	ldr	r2, [r2, #4]
   1d880:	4401      	add	r1, r0
   1d882:	6019      	str	r1, [r3, #0]
   1d884:	605a      	str	r2, [r3, #4]
   1d886:	e00d      	b.n	1d8a4 <_free_r+0x88>
   1d888:	d902      	bls.n	1d890 <_free_r+0x74>
   1d88a:	230c      	movs	r3, #12
   1d88c:	602b      	str	r3, [r5, #0]
   1d88e:	e009      	b.n	1d8a4 <_free_r+0x88>
   1d890:	6821      	ldr	r1, [r4, #0]
   1d892:	1860      	adds	r0, r4, r1
   1d894:	4282      	cmp	r2, r0
   1d896:	bf01      	itttt	eq
   1d898:	6810      	ldreq	r0, [r2, #0]
   1d89a:	6852      	ldreq	r2, [r2, #4]
   1d89c:	1809      	addeq	r1, r1, r0
   1d89e:	6021      	streq	r1, [r4, #0]
   1d8a0:	6062      	str	r2, [r4, #4]
   1d8a2:	605c      	str	r4, [r3, #4]
   1d8a4:	4628      	mov	r0, r5
   1d8a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1d8aa:	f7f3 bf05 	b.w	116b8 <__malloc_unlock>
   1d8ae:	bd38      	pop	{r3, r4, r5, pc}
   1d8b0:	2007c764 	.word	0x2007c764

0001d8b4 <_mallinfo_r>:
_mallinfo_r():
   1d8b4:	b570      	push	{r4, r5, r6, lr}
   1d8b6:	4c15      	ldr	r4, [pc, #84]	; (1d90c <_mallinfo_r+0x58>)
   1d8b8:	4606      	mov	r6, r0
   1d8ba:	4608      	mov	r0, r1
   1d8bc:	460d      	mov	r5, r1
   1d8be:	f7f3 fef9 	bl	116b4 <__malloc_lock>
   1d8c2:	6820      	ldr	r0, [r4, #0]
   1d8c4:	b138      	cbz	r0, 1d8d6 <_mallinfo_r+0x22>
   1d8c6:	2100      	movs	r1, #0
   1d8c8:	4628      	mov	r0, r5
   1d8ca:	f001 f849 	bl	1e960 <_sbrk_r>
   1d8ce:	1c43      	adds	r3, r0, #1
   1d8d0:	bf1c      	itt	ne
   1d8d2:	6823      	ldrne	r3, [r4, #0]
   1d8d4:	1ac0      	subne	r0, r0, r3
   1d8d6:	4b0e      	ldr	r3, [pc, #56]	; (1d910 <_mallinfo_r+0x5c>)
   1d8d8:	681a      	ldr	r2, [r3, #0]
   1d8da:	2300      	movs	r3, #0
   1d8dc:	b11a      	cbz	r2, 1d8e6 <_mallinfo_r+0x32>
   1d8de:	6811      	ldr	r1, [r2, #0]
   1d8e0:	6852      	ldr	r2, [r2, #4]
   1d8e2:	440b      	add	r3, r1
   1d8e4:	e7fa      	b.n	1d8dc <_mallinfo_r+0x28>
   1d8e6:	4c0b      	ldr	r4, [pc, #44]	; (1d914 <_mallinfo_r+0x60>)
   1d8e8:	6020      	str	r0, [r4, #0]
   1d8ea:	1ac0      	subs	r0, r0, r3
   1d8ec:	61e0      	str	r0, [r4, #28]
   1d8ee:	4628      	mov	r0, r5
   1d8f0:	4635      	mov	r5, r6
   1d8f2:	6223      	str	r3, [r4, #32]
   1d8f4:	f7f3 fee0 	bl	116b8 <__malloc_unlock>
   1d8f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1d8fa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1d8fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1d8fe:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1d900:	e894 0003 	ldmia.w	r4, {r0, r1}
   1d904:	e885 0003 	stmia.w	r5, {r0, r1}
   1d908:	4630      	mov	r0, r6
   1d90a:	bd70      	pop	{r4, r5, r6, pc}
   1d90c:	2007c760 	.word	0x2007c760
   1d910:	2007c764 	.word	0x2007c764
   1d914:	2007c738 	.word	0x2007c738

0001d918 <_malloc_r>:
_malloc_r():
   1d918:	b570      	push	{r4, r5, r6, lr}
   1d91a:	1ccd      	adds	r5, r1, #3
   1d91c:	f025 0503 	bic.w	r5, r5, #3
   1d920:	3508      	adds	r5, #8
   1d922:	2d0c      	cmp	r5, #12
   1d924:	bf38      	it	cc
   1d926:	250c      	movcc	r5, #12
   1d928:	2d00      	cmp	r5, #0
   1d92a:	4606      	mov	r6, r0
   1d92c:	db01      	blt.n	1d932 <_malloc_r+0x1a>
   1d92e:	42a9      	cmp	r1, r5
   1d930:	d902      	bls.n	1d938 <_malloc_r+0x20>
   1d932:	230c      	movs	r3, #12
   1d934:	6033      	str	r3, [r6, #0]
   1d936:	e046      	b.n	1d9c6 <_malloc_r+0xae>
   1d938:	f7f3 febc 	bl	116b4 <__malloc_lock>
   1d93c:	4b23      	ldr	r3, [pc, #140]	; (1d9cc <_malloc_r+0xb4>)
   1d93e:	681c      	ldr	r4, [r3, #0]
   1d940:	461a      	mov	r2, r3
   1d942:	4621      	mov	r1, r4
   1d944:	b1a1      	cbz	r1, 1d970 <_malloc_r+0x58>
   1d946:	680b      	ldr	r3, [r1, #0]
   1d948:	1b5b      	subs	r3, r3, r5
   1d94a:	d40e      	bmi.n	1d96a <_malloc_r+0x52>
   1d94c:	2b0b      	cmp	r3, #11
   1d94e:	d903      	bls.n	1d958 <_malloc_r+0x40>
   1d950:	600b      	str	r3, [r1, #0]
   1d952:	18cc      	adds	r4, r1, r3
   1d954:	50cd      	str	r5, [r1, r3]
   1d956:	e01e      	b.n	1d996 <_malloc_r+0x7e>
   1d958:	428c      	cmp	r4, r1
   1d95a:	bf0b      	itete	eq
   1d95c:	6863      	ldreq	r3, [r4, #4]
   1d95e:	684b      	ldrne	r3, [r1, #4]
   1d960:	6013      	streq	r3, [r2, #0]
   1d962:	6063      	strne	r3, [r4, #4]
   1d964:	bf18      	it	ne
   1d966:	460c      	movne	r4, r1
   1d968:	e015      	b.n	1d996 <_malloc_r+0x7e>
   1d96a:	460c      	mov	r4, r1
   1d96c:	6849      	ldr	r1, [r1, #4]
   1d96e:	e7e9      	b.n	1d944 <_malloc_r+0x2c>
   1d970:	4c17      	ldr	r4, [pc, #92]	; (1d9d0 <_malloc_r+0xb8>)
   1d972:	6823      	ldr	r3, [r4, #0]
   1d974:	b91b      	cbnz	r3, 1d97e <_malloc_r+0x66>
   1d976:	4630      	mov	r0, r6
   1d978:	f000 fff2 	bl	1e960 <_sbrk_r>
   1d97c:	6020      	str	r0, [r4, #0]
   1d97e:	4629      	mov	r1, r5
   1d980:	4630      	mov	r0, r6
   1d982:	f000 ffed 	bl	1e960 <_sbrk_r>
   1d986:	1c43      	adds	r3, r0, #1
   1d988:	d018      	beq.n	1d9bc <_malloc_r+0xa4>
   1d98a:	1cc4      	adds	r4, r0, #3
   1d98c:	f024 0403 	bic.w	r4, r4, #3
   1d990:	42a0      	cmp	r0, r4
   1d992:	d10d      	bne.n	1d9b0 <_malloc_r+0x98>
   1d994:	6025      	str	r5, [r4, #0]
   1d996:	4630      	mov	r0, r6
   1d998:	f7f3 fe8e 	bl	116b8 <__malloc_unlock>
   1d99c:	f104 000b 	add.w	r0, r4, #11
   1d9a0:	1d23      	adds	r3, r4, #4
   1d9a2:	f020 0007 	bic.w	r0, r0, #7
   1d9a6:	1ac3      	subs	r3, r0, r3
   1d9a8:	d00e      	beq.n	1d9c8 <_malloc_r+0xb0>
   1d9aa:	425a      	negs	r2, r3
   1d9ac:	50e2      	str	r2, [r4, r3]
   1d9ae:	bd70      	pop	{r4, r5, r6, pc}
   1d9b0:	1a21      	subs	r1, r4, r0
   1d9b2:	4630      	mov	r0, r6
   1d9b4:	f000 ffd4 	bl	1e960 <_sbrk_r>
   1d9b8:	3001      	adds	r0, #1
   1d9ba:	d1eb      	bne.n	1d994 <_malloc_r+0x7c>
   1d9bc:	230c      	movs	r3, #12
   1d9be:	6033      	str	r3, [r6, #0]
   1d9c0:	4630      	mov	r0, r6
   1d9c2:	f7f3 fe79 	bl	116b8 <__malloc_unlock>
   1d9c6:	2000      	movs	r0, #0
   1d9c8:	bd70      	pop	{r4, r5, r6, pc}
   1d9ca:	bf00      	nop
   1d9cc:	2007c764 	.word	0x2007c764
   1d9d0:	2007c760 	.word	0x2007c760

0001d9d4 <__cvt>:
__cvt():
   1d9d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d9d8:	b088      	sub	sp, #32
   1d9da:	9f14      	ldr	r7, [sp, #80]	; 0x50
   1d9dc:	2b00      	cmp	r3, #0
   1d9de:	461e      	mov	r6, r3
   1d9e0:	9912      	ldr	r1, [sp, #72]	; 0x48
   1d9e2:	bfb8      	it	lt
   1d9e4:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   1d9e8:	f027 0720 	bic.w	r7, r7, #32
   1d9ec:	bfb6      	itet	lt
   1d9ee:	461e      	movlt	r6, r3
   1d9f0:	2300      	movge	r3, #0
   1d9f2:	232d      	movlt	r3, #45	; 0x2d
   1d9f4:	2f46      	cmp	r7, #70	; 0x46
   1d9f6:	4614      	mov	r4, r2
   1d9f8:	9d10      	ldr	r5, [sp, #64]	; 0x40
   1d9fa:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   1d9fe:	700b      	strb	r3, [r1, #0]
   1da00:	d003      	beq.n	1da0a <__cvt+0x36>
   1da02:	2f45      	cmp	r7, #69	; 0x45
   1da04:	d103      	bne.n	1da0e <__cvt+0x3a>
   1da06:	3501      	adds	r5, #1
   1da08:	e001      	b.n	1da0e <__cvt+0x3a>
   1da0a:	2303      	movs	r3, #3
   1da0c:	e000      	b.n	1da10 <__cvt+0x3c>
   1da0e:	2302      	movs	r3, #2
   1da10:	aa07      	add	r2, sp, #28
   1da12:	9204      	str	r2, [sp, #16]
   1da14:	aa06      	add	r2, sp, #24
   1da16:	9203      	str	r2, [sp, #12]
   1da18:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   1da1c:	4622      	mov	r2, r4
   1da1e:	4633      	mov	r3, r6
   1da20:	f002 fd82 	bl	20528 <_dtoa_r>
   1da24:	2f47      	cmp	r7, #71	; 0x47
   1da26:	4680      	mov	r8, r0
   1da28:	d102      	bne.n	1da30 <__cvt+0x5c>
   1da2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1da2c:	07db      	lsls	r3, r3, #31
   1da2e:	d528      	bpl.n	1da82 <__cvt+0xae>
   1da30:	2f46      	cmp	r7, #70	; 0x46
   1da32:	eb08 0905 	add.w	r9, r8, r5
   1da36:	d111      	bne.n	1da5c <__cvt+0x88>
   1da38:	f898 3000 	ldrb.w	r3, [r8]
   1da3c:	2b30      	cmp	r3, #48	; 0x30
   1da3e:	d10a      	bne.n	1da56 <__cvt+0x82>
   1da40:	2200      	movs	r2, #0
   1da42:	2300      	movs	r3, #0
   1da44:	4620      	mov	r0, r4
   1da46:	4631      	mov	r1, r6
   1da48:	f7fe fd20 	bl	1c48c <__aeabi_dcmpeq>
   1da4c:	b918      	cbnz	r0, 1da56 <__cvt+0x82>
   1da4e:	f1c5 0501 	rsb	r5, r5, #1
   1da52:	f8ca 5000 	str.w	r5, [sl]
   1da56:	f8da 3000 	ldr.w	r3, [sl]
   1da5a:	4499      	add	r9, r3
   1da5c:	2200      	movs	r2, #0
   1da5e:	2300      	movs	r3, #0
   1da60:	4620      	mov	r0, r4
   1da62:	4631      	mov	r1, r6
   1da64:	f7fe fd12 	bl	1c48c <__aeabi_dcmpeq>
   1da68:	b908      	cbnz	r0, 1da6e <__cvt+0x9a>
   1da6a:	2230      	movs	r2, #48	; 0x30
   1da6c:	e002      	b.n	1da74 <__cvt+0xa0>
   1da6e:	f8cd 901c 	str.w	r9, [sp, #28]
   1da72:	e006      	b.n	1da82 <__cvt+0xae>
   1da74:	9b07      	ldr	r3, [sp, #28]
   1da76:	4599      	cmp	r9, r3
   1da78:	d903      	bls.n	1da82 <__cvt+0xae>
   1da7a:	1c59      	adds	r1, r3, #1
   1da7c:	9107      	str	r1, [sp, #28]
   1da7e:	701a      	strb	r2, [r3, #0]
   1da80:	e7f8      	b.n	1da74 <__cvt+0xa0>
   1da82:	4640      	mov	r0, r8
   1da84:	9b07      	ldr	r3, [sp, #28]
   1da86:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1da88:	ebc8 0303 	rsb	r3, r8, r3
   1da8c:	6013      	str	r3, [r2, #0]
   1da8e:	b008      	add	sp, #32
   1da90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001da94 <__exponent>:
__exponent():
   1da94:	4603      	mov	r3, r0
   1da96:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1da98:	2900      	cmp	r1, #0
   1da9a:	bfb8      	it	lt
   1da9c:	4249      	neglt	r1, r1
   1da9e:	f803 2b02 	strb.w	r2, [r3], #2
   1daa2:	bfb4      	ite	lt
   1daa4:	222d      	movlt	r2, #45	; 0x2d
   1daa6:	222b      	movge	r2, #43	; 0x2b
   1daa8:	2909      	cmp	r1, #9
   1daaa:	7042      	strb	r2, [r0, #1]
   1daac:	dd1a      	ble.n	1dae4 <__exponent+0x50>
   1daae:	f10d 0207 	add.w	r2, sp, #7
   1dab2:	4616      	mov	r6, r2
   1dab4:	250a      	movs	r5, #10
   1dab6:	fb91 f4f5 	sdiv	r4, r1, r5
   1daba:	fb05 1114 	mls	r1, r5, r4, r1
   1dabe:	2c09      	cmp	r4, #9
   1dac0:	f101 0130 	add.w	r1, r1, #48	; 0x30
   1dac4:	f802 1d01 	strb.w	r1, [r2, #-1]!
   1dac8:	4621      	mov	r1, r4
   1daca:	dcf4      	bgt.n	1dab6 <__exponent+0x22>
   1dacc:	3130      	adds	r1, #48	; 0x30
   1dace:	1e54      	subs	r4, r2, #1
   1dad0:	f802 1c01 	strb.w	r1, [r2, #-1]
   1dad4:	42b4      	cmp	r4, r6
   1dad6:	461a      	mov	r2, r3
   1dad8:	d20a      	bcs.n	1daf0 <__exponent+0x5c>
   1dada:	f814 2b01 	ldrb.w	r2, [r4], #1
   1dade:	f803 2b01 	strb.w	r2, [r3], #1
   1dae2:	e7f7      	b.n	1dad4 <__exponent+0x40>
   1dae4:	461a      	mov	r2, r3
   1dae6:	2430      	movs	r4, #48	; 0x30
   1dae8:	4421      	add	r1, r4
   1daea:	f802 4b02 	strb.w	r4, [r2], #2
   1daee:	7059      	strb	r1, [r3, #1]
   1daf0:	1a10      	subs	r0, r2, r0
   1daf2:	b002      	add	sp, #8
   1daf4:	bd70      	pop	{r4, r5, r6, pc}
   1daf6:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

0001daf8 <_printf_float>:
_printf_float():
   1daf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dafc:	b091      	sub	sp, #68	; 0x44
   1dafe:	460c      	mov	r4, r1
   1db00:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
   1db04:	4616      	mov	r6, r2
   1db06:	461f      	mov	r7, r3
   1db08:	4605      	mov	r5, r0
   1db0a:	f003 ff75 	bl	219f8 <_localeconv_r>
   1db0e:	6803      	ldr	r3, [r0, #0]
   1db10:	4618      	mov	r0, r3
   1db12:	9309      	str	r3, [sp, #36]	; 0x24
   1db14:	f001 f921 	bl	1ed5a <strlen>
   1db18:	2300      	movs	r3, #0
   1db1a:	930e      	str	r3, [sp, #56]	; 0x38
   1db1c:	f8d8 3000 	ldr.w	r3, [r8]
   1db20:	900a      	str	r0, [sp, #40]	; 0x28
   1db22:	3307      	adds	r3, #7
   1db24:	f023 0307 	bic.w	r3, r3, #7
   1db28:	f103 0208 	add.w	r2, r3, #8
   1db2c:	f894 9018 	ldrb.w	r9, [r4, #24]
   1db30:	f8d4 b000 	ldr.w	fp, [r4]
   1db34:	f8c8 2000 	str.w	r2, [r8]
   1db38:	e9d3 2300 	ldrd	r2, r3, [r3]
   1db3c:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   1db40:	f8d4 a04c 	ldr.w	sl, [r4, #76]	; 0x4c
   1db44:	f8d4 8048 	ldr.w	r8, [r4, #72]	; 0x48
   1db48:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
   1db4c:	930b      	str	r3, [sp, #44]	; 0x2c
   1db4e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1db52:	4ba7      	ldr	r3, [pc, #668]	; (1ddf0 <_printf_float+0x2f8>)
   1db54:	4640      	mov	r0, r8
   1db56:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1db58:	f005 fc9a 	bl	23490 <__aeabi_dcmpun>
   1db5c:	b9a0      	cbnz	r0, 1db88 <_printf_float+0x90>
   1db5e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1db62:	4ba3      	ldr	r3, [pc, #652]	; (1ddf0 <_printf_float+0x2f8>)
   1db64:	4640      	mov	r0, r8
   1db66:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1db68:	f7fe fca4 	bl	1c4b4 <__aeabi_dcmple>
   1db6c:	b960      	cbnz	r0, 1db88 <_printf_float+0x90>
   1db6e:	2200      	movs	r2, #0
   1db70:	2300      	movs	r3, #0
   1db72:	4640      	mov	r0, r8
   1db74:	4651      	mov	r1, sl
   1db76:	f7fe fc93 	bl	1c4a0 <__aeabi_dcmplt>
   1db7a:	b110      	cbz	r0, 1db82 <_printf_float+0x8a>
   1db7c:	232d      	movs	r3, #45	; 0x2d
   1db7e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1db82:	4b9c      	ldr	r3, [pc, #624]	; (1ddf4 <_printf_float+0x2fc>)
   1db84:	4a9c      	ldr	r2, [pc, #624]	; (1ddf8 <_printf_float+0x300>)
   1db86:	e00a      	b.n	1db9e <_printf_float+0xa6>
   1db88:	4642      	mov	r2, r8
   1db8a:	4653      	mov	r3, sl
   1db8c:	4640      	mov	r0, r8
   1db8e:	4651      	mov	r1, sl
   1db90:	f005 fc7e 	bl	23490 <__aeabi_dcmpun>
   1db94:	2800      	cmp	r0, #0
   1db96:	f000 8192 	beq.w	1debe <_printf_float+0x3c6>
   1db9a:	4b98      	ldr	r3, [pc, #608]	; (1ddfc <_printf_float+0x304>)
   1db9c:	4a98      	ldr	r2, [pc, #608]	; (1de00 <_printf_float+0x308>)
   1db9e:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
   1dba2:	bf8c      	ite	hi
   1dba4:	4690      	movhi	r8, r2
   1dba6:	4698      	movls	r8, r3
   1dba8:	2303      	movs	r3, #3
   1dbaa:	6123      	str	r3, [r4, #16]
   1dbac:	f02b 0304 	bic.w	r3, fp, #4
   1dbb0:	6023      	str	r3, [r4, #0]
   1dbb2:	f04f 0a00 	mov.w	sl, #0
   1dbb6:	e03d      	b.n	1dc34 <_printf_float+0x13c>
   1dbb8:	f1b9 0f67 	cmp.w	r9, #103	; 0x67
   1dbbc:	f000 818a 	beq.w	1ded4 <_printf_float+0x3dc>
   1dbc0:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
   1dbc4:	f000 8186 	beq.w	1ded4 <_printf_float+0x3dc>
   1dbc8:	6023      	str	r3, [r4, #0]
   1dbca:	9301      	str	r3, [sp, #4]
   1dbcc:	6863      	ldr	r3, [r4, #4]
   1dbce:	2100      	movs	r1, #0
   1dbd0:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   1dbd4:	9005      	str	r0, [sp, #20]
   1dbd6:	9202      	str	r2, [sp, #8]
   1dbd8:	9300      	str	r3, [sp, #0]
   1dbda:	4642      	mov	r2, r8
   1dbdc:	4653      	mov	r3, sl
   1dbde:	9106      	str	r1, [sp, #24]
   1dbe0:	f8cd 9010 	str.w	r9, [sp, #16]
   1dbe4:	f8cd e00c 	str.w	lr, [sp, #12]
   1dbe8:	4628      	mov	r0, r5
   1dbea:	f7ff fef3 	bl	1d9d4 <__cvt>
   1dbee:	f009 03df 	and.w	r3, r9, #223	; 0xdf
   1dbf2:	2b47      	cmp	r3, #71	; 0x47
   1dbf4:	4680      	mov	r8, r0
   1dbf6:	f000 8184 	beq.w	1df02 <_printf_float+0x40a>
   1dbfa:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
   1dbfe:	990d      	ldr	r1, [sp, #52]	; 0x34
   1dc00:	f200 818d 	bhi.w	1df1e <_printf_float+0x426>
   1dc04:	3901      	subs	r1, #1
   1dc06:	464a      	mov	r2, r9
   1dc08:	f104 0050 	add.w	r0, r4, #80	; 0x50
   1dc0c:	910d      	str	r1, [sp, #52]	; 0x34
   1dc0e:	f7ff ff41 	bl	1da94 <__exponent>
   1dc12:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1dc14:	4682      	mov	sl, r0
   1dc16:	1883      	adds	r3, r0, r2
   1dc18:	2a01      	cmp	r2, #1
   1dc1a:	6123      	str	r3, [r4, #16]
   1dc1c:	f300 817c 	bgt.w	1df18 <_printf_float+0x420>
   1dc20:	6822      	ldr	r2, [r4, #0]
   1dc22:	07d1      	lsls	r1, r2, #31
   1dc24:	f100 8178 	bmi.w	1df18 <_printf_float+0x420>
   1dc28:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   1dc2c:	b113      	cbz	r3, 1dc34 <_printf_float+0x13c>
   1dc2e:	232d      	movs	r3, #45	; 0x2d
   1dc30:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1dc34:	9700      	str	r7, [sp, #0]
   1dc36:	4633      	mov	r3, r6
   1dc38:	aa0f      	add	r2, sp, #60	; 0x3c
   1dc3a:	4621      	mov	r1, r4
   1dc3c:	4628      	mov	r0, r5
   1dc3e:	f000 f99f 	bl	1df80 <_printf_common>
   1dc42:	3001      	adds	r0, #1
   1dc44:	d102      	bne.n	1dc4c <_printf_float+0x154>
   1dc46:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dc4a:	e196      	b.n	1df7a <_printf_float+0x482>
   1dc4c:	6823      	ldr	r3, [r4, #0]
   1dc4e:	055a      	lsls	r2, r3, #21
   1dc50:	d401      	bmi.n	1dc56 <_printf_float+0x15e>
   1dc52:	6923      	ldr	r3, [r4, #16]
   1dc54:	e065      	b.n	1dd22 <_printf_float+0x22a>
   1dc56:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
   1dc5a:	f240 80d5 	bls.w	1de08 <_printf_float+0x310>
   1dc5e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1dc62:	2200      	movs	r2, #0
   1dc64:	2300      	movs	r3, #0
   1dc66:	f7fe fc11 	bl	1c48c <__aeabi_dcmpeq>
   1dc6a:	b378      	cbz	r0, 1dccc <_printf_float+0x1d4>
   1dc6c:	2301      	movs	r3, #1
   1dc6e:	4a65      	ldr	r2, [pc, #404]	; (1de04 <_printf_float+0x30c>)
   1dc70:	4631      	mov	r1, r6
   1dc72:	4628      	mov	r0, r5
   1dc74:	47b8      	blx	r7
   1dc76:	3001      	adds	r0, #1
   1dc78:	d0e5      	beq.n	1dc46 <_printf_float+0x14e>
   1dc7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1dc7c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1dc7e:	429a      	cmp	r2, r3
   1dc80:	db0b      	blt.n	1dc9a <_printf_float+0x1a2>
   1dc82:	6823      	ldr	r3, [r4, #0]
   1dc84:	07d8      	lsls	r0, r3, #31
   1dc86:	d408      	bmi.n	1dc9a <_printf_float+0x1a2>
   1dc88:	6823      	ldr	r3, [r4, #0]
   1dc8a:	079b      	lsls	r3, r3, #30
   1dc8c:	f140 8111 	bpl.w	1deb2 <_printf_float+0x3ba>
   1dc90:	f04f 0800 	mov.w	r8, #0
   1dc94:	f104 0919 	add.w	r9, r4, #25
   1dc98:	e106      	b.n	1dea8 <_printf_float+0x3b0>
   1dc9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1dc9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1dc9e:	4631      	mov	r1, r6
   1dca0:	4628      	mov	r0, r5
   1dca2:	47b8      	blx	r7
   1dca4:	3001      	adds	r0, #1
   1dca6:	d0ce      	beq.n	1dc46 <_printf_float+0x14e>
   1dca8:	f04f 0800 	mov.w	r8, #0
   1dcac:	f104 091a 	add.w	r9, r4, #26
   1dcb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1dcb2:	3b01      	subs	r3, #1
   1dcb4:	4598      	cmp	r8, r3
   1dcb6:	dae7      	bge.n	1dc88 <_printf_float+0x190>
   1dcb8:	2301      	movs	r3, #1
   1dcba:	464a      	mov	r2, r9
   1dcbc:	4631      	mov	r1, r6
   1dcbe:	4628      	mov	r0, r5
   1dcc0:	47b8      	blx	r7
   1dcc2:	3001      	adds	r0, #1
   1dcc4:	d0bf      	beq.n	1dc46 <_printf_float+0x14e>
   1dcc6:	f108 0801 	add.w	r8, r8, #1
   1dcca:	e7f1      	b.n	1dcb0 <_printf_float+0x1b8>
   1dccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1dcce:	2b00      	cmp	r3, #0
   1dcd0:	dc29      	bgt.n	1dd26 <_printf_float+0x22e>
   1dcd2:	2301      	movs	r3, #1
   1dcd4:	4a4b      	ldr	r2, [pc, #300]	; (1de04 <_printf_float+0x30c>)
   1dcd6:	4631      	mov	r1, r6
   1dcd8:	4628      	mov	r0, r5
   1dcda:	47b8      	blx	r7
   1dcdc:	3001      	adds	r0, #1
   1dcde:	d0b2      	beq.n	1dc46 <_printf_float+0x14e>
   1dce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1dce2:	b923      	cbnz	r3, 1dcee <_printf_float+0x1f6>
   1dce4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1dce6:	b913      	cbnz	r3, 1dcee <_printf_float+0x1f6>
   1dce8:	6823      	ldr	r3, [r4, #0]
   1dcea:	07d9      	lsls	r1, r3, #31
   1dcec:	d5cc      	bpl.n	1dc88 <_printf_float+0x190>
   1dcee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1dcf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1dcf2:	4631      	mov	r1, r6
   1dcf4:	4628      	mov	r0, r5
   1dcf6:	47b8      	blx	r7
   1dcf8:	3001      	adds	r0, #1
   1dcfa:	d0a4      	beq.n	1dc46 <_printf_float+0x14e>
   1dcfc:	f04f 0900 	mov.w	r9, #0
   1dd00:	f104 0a1a 	add.w	sl, r4, #26
   1dd04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1dd06:	425b      	negs	r3, r3
   1dd08:	4599      	cmp	r9, r3
   1dd0a:	da09      	bge.n	1dd20 <_printf_float+0x228>
   1dd0c:	2301      	movs	r3, #1
   1dd0e:	4652      	mov	r2, sl
   1dd10:	4631      	mov	r1, r6
   1dd12:	4628      	mov	r0, r5
   1dd14:	47b8      	blx	r7
   1dd16:	3001      	adds	r0, #1
   1dd18:	d095      	beq.n	1dc46 <_printf_float+0x14e>
   1dd1a:	f109 0901 	add.w	r9, r9, #1
   1dd1e:	e7f1      	b.n	1dd04 <_printf_float+0x20c>
   1dd20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1dd22:	4642      	mov	r2, r8
   1dd24:	e0a7      	b.n	1de76 <_printf_float+0x37e>
   1dd26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1dd28:	6da3      	ldr	r3, [r4, #88]	; 0x58
   1dd2a:	429a      	cmp	r2, r3
   1dd2c:	bfa8      	it	ge
   1dd2e:	461a      	movge	r2, r3
   1dd30:	2a00      	cmp	r2, #0
   1dd32:	4691      	mov	r9, r2
   1dd34:	dc06      	bgt.n	1dd44 <_printf_float+0x24c>
   1dd36:	f04f 0a00 	mov.w	sl, #0
   1dd3a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
   1dd3e:	f104 0b1a 	add.w	fp, r4, #26
   1dd42:	e011      	b.n	1dd68 <_printf_float+0x270>
   1dd44:	4613      	mov	r3, r2
   1dd46:	4631      	mov	r1, r6
   1dd48:	4642      	mov	r2, r8
   1dd4a:	4628      	mov	r0, r5
   1dd4c:	47b8      	blx	r7
   1dd4e:	3001      	adds	r0, #1
   1dd50:	d1f1      	bne.n	1dd36 <_printf_float+0x23e>
   1dd52:	e778      	b.n	1dc46 <_printf_float+0x14e>
   1dd54:	2301      	movs	r3, #1
   1dd56:	465a      	mov	r2, fp
   1dd58:	4631      	mov	r1, r6
   1dd5a:	4628      	mov	r0, r5
   1dd5c:	47b8      	blx	r7
   1dd5e:	3001      	adds	r0, #1
   1dd60:	f43f af71 	beq.w	1dc46 <_printf_float+0x14e>
   1dd64:	f10a 0a01 	add.w	sl, sl, #1
   1dd68:	6da3      	ldr	r3, [r4, #88]	; 0x58
   1dd6a:	ebc9 0203 	rsb	r2, r9, r3
   1dd6e:	4592      	cmp	sl, r2
   1dd70:	dbf0      	blt.n	1dd54 <_printf_float+0x25c>
   1dd72:	eb08 0903 	add.w	r9, r8, r3
   1dd76:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1dd78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1dd7a:	429a      	cmp	r2, r3
   1dd7c:	db0f      	blt.n	1dd9e <_printf_float+0x2a6>
   1dd7e:	6823      	ldr	r3, [r4, #0]
   1dd80:	07da      	lsls	r2, r3, #31
   1dd82:	d40c      	bmi.n	1dd9e <_printf_float+0x2a6>
   1dd84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1dd86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1dd88:	4498      	add	r8, r3
   1dd8a:	ebc9 0808 	rsb	r8, r9, r8
   1dd8e:	1a9b      	subs	r3, r3, r2
   1dd90:	4598      	cmp	r8, r3
   1dd92:	bfa8      	it	ge
   1dd94:	4698      	movge	r8, r3
   1dd96:	f1b8 0f00 	cmp.w	r8, #0
   1dd9a:	dc08      	bgt.n	1ddae <_printf_float+0x2b6>
   1dd9c:	e00f      	b.n	1ddbe <_printf_float+0x2c6>
   1dd9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1dda0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1dda2:	4631      	mov	r1, r6
   1dda4:	4628      	mov	r0, r5
   1dda6:	47b8      	blx	r7
   1dda8:	3001      	adds	r0, #1
   1ddaa:	d1eb      	bne.n	1dd84 <_printf_float+0x28c>
   1ddac:	e74b      	b.n	1dc46 <_printf_float+0x14e>
   1ddae:	4643      	mov	r3, r8
   1ddb0:	464a      	mov	r2, r9
   1ddb2:	4631      	mov	r1, r6
   1ddb4:	4628      	mov	r0, r5
   1ddb6:	47b8      	blx	r7
   1ddb8:	3001      	adds	r0, #1
   1ddba:	f43f af44 	beq.w	1dc46 <_printf_float+0x14e>
   1ddbe:	f04f 0900 	mov.w	r9, #0
   1ddc2:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1ddc6:	f104 0a1a 	add.w	sl, r4, #26
   1ddca:	e009      	b.n	1dde0 <_printf_float+0x2e8>
   1ddcc:	2301      	movs	r3, #1
   1ddce:	4652      	mov	r2, sl
   1ddd0:	4631      	mov	r1, r6
   1ddd2:	4628      	mov	r0, r5
   1ddd4:	47b8      	blx	r7
   1ddd6:	3001      	adds	r0, #1
   1ddd8:	f43f af35 	beq.w	1dc46 <_printf_float+0x14e>
   1dddc:	f109 0901 	add.w	r9, r9, #1
   1dde0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1dde2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1dde4:	1a9b      	subs	r3, r3, r2
   1dde6:	ebc8 0303 	rsb	r3, r8, r3
   1ddea:	4599      	cmp	r9, r3
   1ddec:	dbee      	blt.n	1ddcc <_printf_float+0x2d4>
   1ddee:	e74b      	b.n	1dc88 <_printf_float+0x190>
   1ddf0:	7fefffff 	.word	0x7fefffff
   1ddf4:	0002645c 	.word	0x0002645c
   1ddf8:	00026460 	.word	0x00026460
   1ddfc:	00026464 	.word	0x00026464
   1de00:	00026468 	.word	0x00026468
   1de04:	0002375a 	.word	0x0002375a
   1de08:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1de0a:	2a01      	cmp	r2, #1
   1de0c:	dc01      	bgt.n	1de12 <_printf_float+0x31a>
   1de0e:	07db      	lsls	r3, r3, #31
   1de10:	d538      	bpl.n	1de84 <_printf_float+0x38c>
   1de12:	2301      	movs	r3, #1
   1de14:	4642      	mov	r2, r8
   1de16:	4631      	mov	r1, r6
   1de18:	4628      	mov	r0, r5
   1de1a:	47b8      	blx	r7
   1de1c:	3001      	adds	r0, #1
   1de1e:	f43f af12 	beq.w	1dc46 <_printf_float+0x14e>
   1de22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1de24:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1de26:	4631      	mov	r1, r6
   1de28:	4628      	mov	r0, r5
   1de2a:	47b8      	blx	r7
   1de2c:	3001      	adds	r0, #1
   1de2e:	f43f af0a 	beq.w	1dc46 <_printf_float+0x14e>
   1de32:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1de36:	2200      	movs	r2, #0
   1de38:	2300      	movs	r3, #0
   1de3a:	f7fe fb27 	bl	1c48c <__aeabi_dcmpeq>
   1de3e:	b120      	cbz	r0, 1de4a <_printf_float+0x352>
   1de40:	f04f 0800 	mov.w	r8, #0
   1de44:	f104 091a 	add.w	r9, r4, #26
   1de48:	e00e      	b.n	1de68 <_printf_float+0x370>
   1de4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1de4c:	f108 0201 	add.w	r2, r8, #1
   1de50:	3b01      	subs	r3, #1
   1de52:	e019      	b.n	1de88 <_printf_float+0x390>
   1de54:	2301      	movs	r3, #1
   1de56:	464a      	mov	r2, r9
   1de58:	4631      	mov	r1, r6
   1de5a:	4628      	mov	r0, r5
   1de5c:	47b8      	blx	r7
   1de5e:	3001      	adds	r0, #1
   1de60:	f43f aef1 	beq.w	1dc46 <_printf_float+0x14e>
   1de64:	f108 0801 	add.w	r8, r8, #1
   1de68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1de6a:	3b01      	subs	r3, #1
   1de6c:	4598      	cmp	r8, r3
   1de6e:	dbf1      	blt.n	1de54 <_printf_float+0x35c>
   1de70:	4653      	mov	r3, sl
   1de72:	f104 0250 	add.w	r2, r4, #80	; 0x50
   1de76:	4631      	mov	r1, r6
   1de78:	4628      	mov	r0, r5
   1de7a:	47b8      	blx	r7
   1de7c:	3001      	adds	r0, #1
   1de7e:	f47f af03 	bne.w	1dc88 <_printf_float+0x190>
   1de82:	e6e0      	b.n	1dc46 <_printf_float+0x14e>
   1de84:	4642      	mov	r2, r8
   1de86:	2301      	movs	r3, #1
   1de88:	4631      	mov	r1, r6
   1de8a:	4628      	mov	r0, r5
   1de8c:	47b8      	blx	r7
   1de8e:	3001      	adds	r0, #1
   1de90:	d1ee      	bne.n	1de70 <_printf_float+0x378>
   1de92:	e6d8      	b.n	1dc46 <_printf_float+0x14e>
   1de94:	2301      	movs	r3, #1
   1de96:	464a      	mov	r2, r9
   1de98:	4631      	mov	r1, r6
   1de9a:	4628      	mov	r0, r5
   1de9c:	47b8      	blx	r7
   1de9e:	3001      	adds	r0, #1
   1dea0:	f43f aed1 	beq.w	1dc46 <_printf_float+0x14e>
   1dea4:	f108 0801 	add.w	r8, r8, #1
   1dea8:	68e3      	ldr	r3, [r4, #12]
   1deaa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1deac:	1a9b      	subs	r3, r3, r2
   1deae:	4598      	cmp	r8, r3
   1deb0:	dbf0      	blt.n	1de94 <_printf_float+0x39c>
   1deb2:	68e0      	ldr	r0, [r4, #12]
   1deb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1deb6:	4298      	cmp	r0, r3
   1deb8:	bfb8      	it	lt
   1deba:	4618      	movlt	r0, r3
   1debc:	e05d      	b.n	1df7a <_printf_float+0x482>
   1debe:	6862      	ldr	r2, [r4, #4]
   1dec0:	a80e      	add	r0, sp, #56	; 0x38
   1dec2:	1c53      	adds	r3, r2, #1
   1dec4:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   1dec8:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
   1decc:	f47f ae74 	bne.w	1dbb8 <_printf_float+0xc0>
   1ded0:	2206      	movs	r2, #6
   1ded2:	e001      	b.n	1ded8 <_printf_float+0x3e0>
   1ded4:	b912      	cbnz	r2, 1dedc <_printf_float+0x3e4>
   1ded6:	2201      	movs	r2, #1
   1ded8:	6062      	str	r2, [r4, #4]
   1deda:	e675      	b.n	1dbc8 <_printf_float+0xd0>
   1dedc:	2100      	movs	r1, #0
   1dede:	9106      	str	r1, [sp, #24]
   1dee0:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   1dee4:	e88d 000c 	stmia.w	sp, {r2, r3}
   1dee8:	6023      	str	r3, [r4, #0]
   1deea:	9005      	str	r0, [sp, #20]
   1deec:	4642      	mov	r2, r8
   1deee:	f8cd 9010 	str.w	r9, [sp, #16]
   1def2:	f8cd e00c 	str.w	lr, [sp, #12]
   1def6:	9102      	str	r1, [sp, #8]
   1def8:	4653      	mov	r3, sl
   1defa:	4628      	mov	r0, r5
   1defc:	f7ff fd6a 	bl	1d9d4 <__cvt>
   1df00:	4680      	mov	r8, r0
   1df02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1df04:	1cd8      	adds	r0, r3, #3
   1df06:	db02      	blt.n	1df0e <_printf_float+0x416>
   1df08:	6862      	ldr	r2, [r4, #4]
   1df0a:	4293      	cmp	r3, r2
   1df0c:	dd1d      	ble.n	1df4a <_printf_float+0x452>
   1df0e:	f1a9 0902 	sub.w	r9, r9, #2
   1df12:	fa5f f989 	uxtb.w	r9, r9
   1df16:	e670      	b.n	1dbfa <_printf_float+0x102>
   1df18:	3301      	adds	r3, #1
   1df1a:	6123      	str	r3, [r4, #16]
   1df1c:	e684      	b.n	1dc28 <_printf_float+0x130>
   1df1e:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
   1df22:	d114      	bne.n	1df4e <_printf_float+0x456>
   1df24:	2900      	cmp	r1, #0
   1df26:	6863      	ldr	r3, [r4, #4]
   1df28:	dd07      	ble.n	1df3a <_printf_float+0x442>
   1df2a:	6121      	str	r1, [r4, #16]
   1df2c:	b913      	cbnz	r3, 1df34 <_printf_float+0x43c>
   1df2e:	6822      	ldr	r2, [r4, #0]
   1df30:	07d2      	lsls	r2, r2, #31
   1df32:	d51d      	bpl.n	1df70 <_printf_float+0x478>
   1df34:	3301      	adds	r3, #1
   1df36:	440b      	add	r3, r1
   1df38:	e019      	b.n	1df6e <_printf_float+0x476>
   1df3a:	b913      	cbnz	r3, 1df42 <_printf_float+0x44a>
   1df3c:	6822      	ldr	r2, [r4, #0]
   1df3e:	07d0      	lsls	r0, r2, #31
   1df40:	d501      	bpl.n	1df46 <_printf_float+0x44e>
   1df42:	3302      	adds	r3, #2
   1df44:	e013      	b.n	1df6e <_printf_float+0x476>
   1df46:	2301      	movs	r3, #1
   1df48:	e011      	b.n	1df6e <_printf_float+0x476>
   1df4a:	f04f 0967 	mov.w	r9, #103	; 0x67
   1df4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1df50:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1df52:	4293      	cmp	r3, r2
   1df54:	db05      	blt.n	1df62 <_printf_float+0x46a>
   1df56:	6822      	ldr	r2, [r4, #0]
   1df58:	6123      	str	r3, [r4, #16]
   1df5a:	07d1      	lsls	r1, r2, #31
   1df5c:	d508      	bpl.n	1df70 <_printf_float+0x478>
   1df5e:	3301      	adds	r3, #1
   1df60:	e005      	b.n	1df6e <_printf_float+0x476>
   1df62:	2b00      	cmp	r3, #0
   1df64:	bfd4      	ite	le
   1df66:	f1c3 0302 	rsble	r3, r3, #2
   1df6a:	2301      	movgt	r3, #1
   1df6c:	4413      	add	r3, r2
   1df6e:	6123      	str	r3, [r4, #16]
   1df70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1df72:	f04f 0a00 	mov.w	sl, #0
   1df76:	65a3      	str	r3, [r4, #88]	; 0x58
   1df78:	e656      	b.n	1dc28 <_printf_float+0x130>
   1df7a:	b011      	add	sp, #68	; 0x44
   1df7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001df80 <_printf_common>:
_printf_common():
   1df80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1df84:	4691      	mov	r9, r2
   1df86:	461f      	mov	r7, r3
   1df88:	690a      	ldr	r2, [r1, #16]
   1df8a:	688b      	ldr	r3, [r1, #8]
   1df8c:	4606      	mov	r6, r0
   1df8e:	4293      	cmp	r3, r2
   1df90:	bfb8      	it	lt
   1df92:	4613      	movlt	r3, r2
   1df94:	f8c9 3000 	str.w	r3, [r9]
   1df98:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   1df9c:	460c      	mov	r4, r1
   1df9e:	f8dd 8020 	ldr.w	r8, [sp, #32]
   1dfa2:	b112      	cbz	r2, 1dfaa <_printf_common+0x2a>
   1dfa4:	3301      	adds	r3, #1
   1dfa6:	f8c9 3000 	str.w	r3, [r9]
   1dfaa:	6823      	ldr	r3, [r4, #0]
   1dfac:	0699      	lsls	r1, r3, #26
   1dfae:	bf42      	ittt	mi
   1dfb0:	f8d9 3000 	ldrmi.w	r3, [r9]
   1dfb4:	3302      	addmi	r3, #2
   1dfb6:	f8c9 3000 	strmi.w	r3, [r9]
   1dfba:	6825      	ldr	r5, [r4, #0]
   1dfbc:	f015 0506 	ands.w	r5, r5, #6
   1dfc0:	d110      	bne.n	1dfe4 <_printf_common+0x64>
   1dfc2:	f104 0a19 	add.w	sl, r4, #25
   1dfc6:	e007      	b.n	1dfd8 <_printf_common+0x58>
   1dfc8:	2301      	movs	r3, #1
   1dfca:	4652      	mov	r2, sl
   1dfcc:	4639      	mov	r1, r7
   1dfce:	4630      	mov	r0, r6
   1dfd0:	47c0      	blx	r8
   1dfd2:	3001      	adds	r0, #1
   1dfd4:	d01a      	beq.n	1e00c <_printf_common+0x8c>
   1dfd6:	3501      	adds	r5, #1
   1dfd8:	68e3      	ldr	r3, [r4, #12]
   1dfda:	f8d9 2000 	ldr.w	r2, [r9]
   1dfde:	1a9b      	subs	r3, r3, r2
   1dfe0:	429d      	cmp	r5, r3
   1dfe2:	dbf1      	blt.n	1dfc8 <_printf_common+0x48>
   1dfe4:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   1dfe8:	6822      	ldr	r2, [r4, #0]
   1dfea:	3300      	adds	r3, #0
   1dfec:	bf18      	it	ne
   1dfee:	2301      	movne	r3, #1
   1dff0:	0692      	lsls	r2, r2, #26
   1dff2:	d50f      	bpl.n	1e014 <_printf_common+0x94>
   1dff4:	18e1      	adds	r1, r4, r3
   1dff6:	2030      	movs	r0, #48	; 0x30
   1dff8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   1dffc:	1c5a      	adds	r2, r3, #1
   1dffe:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   1e002:	4422      	add	r2, r4
   1e004:	3302      	adds	r3, #2
   1e006:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   1e00a:	e003      	b.n	1e014 <_printf_common+0x94>
   1e00c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e010:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e014:	f104 0243 	add.w	r2, r4, #67	; 0x43
   1e018:	4639      	mov	r1, r7
   1e01a:	4630      	mov	r0, r6
   1e01c:	47c0      	blx	r8
   1e01e:	3001      	adds	r0, #1
   1e020:	d0f4      	beq.n	1e00c <_printf_common+0x8c>
   1e022:	6822      	ldr	r2, [r4, #0]
   1e024:	f8d9 5000 	ldr.w	r5, [r9]
   1e028:	68e3      	ldr	r3, [r4, #12]
   1e02a:	f002 0206 	and.w	r2, r2, #6
   1e02e:	2a04      	cmp	r2, #4
   1e030:	bf08      	it	eq
   1e032:	1b5d      	subeq	r5, r3, r5
   1e034:	6922      	ldr	r2, [r4, #16]
   1e036:	68a3      	ldr	r3, [r4, #8]
   1e038:	bf0c      	ite	eq
   1e03a:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   1e03e:	2500      	movne	r5, #0
   1e040:	4293      	cmp	r3, r2
   1e042:	bfc4      	itt	gt
   1e044:	1a9b      	subgt	r3, r3, r2
   1e046:	18ed      	addgt	r5, r5, r3
   1e048:	f04f 0900 	mov.w	r9, #0
   1e04c:	341a      	adds	r4, #26
   1e04e:	454d      	cmp	r5, r9
   1e050:	d009      	beq.n	1e066 <_printf_common+0xe6>
   1e052:	2301      	movs	r3, #1
   1e054:	4622      	mov	r2, r4
   1e056:	4639      	mov	r1, r7
   1e058:	4630      	mov	r0, r6
   1e05a:	47c0      	blx	r8
   1e05c:	3001      	adds	r0, #1
   1e05e:	d0d5      	beq.n	1e00c <_printf_common+0x8c>
   1e060:	f109 0901 	add.w	r9, r9, #1
   1e064:	e7f3      	b.n	1e04e <_printf_common+0xce>
   1e066:	2000      	movs	r0, #0
   1e068:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001e06c <_printf_i>:
_printf_i():
   1e06c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1e070:	4617      	mov	r7, r2
   1e072:	7e0a      	ldrb	r2, [r1, #24]
   1e074:	b085      	sub	sp, #20
   1e076:	2a6e      	cmp	r2, #110	; 0x6e
   1e078:	4698      	mov	r8, r3
   1e07a:	4606      	mov	r6, r0
   1e07c:	460c      	mov	r4, r1
   1e07e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1e080:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   1e084:	f000 80ae 	beq.w	1e1e4 <_printf_i+0x178>
   1e088:	d811      	bhi.n	1e0ae <_printf_i+0x42>
   1e08a:	2a63      	cmp	r2, #99	; 0x63
   1e08c:	d022      	beq.n	1e0d4 <_printf_i+0x68>
   1e08e:	d809      	bhi.n	1e0a4 <_printf_i+0x38>
   1e090:	2a00      	cmp	r2, #0
   1e092:	f000 80bb 	beq.w	1e20c <_printf_i+0x1a0>
   1e096:	2a58      	cmp	r2, #88	; 0x58
   1e098:	f040 80ca 	bne.w	1e230 <_printf_i+0x1c4>
   1e09c:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   1e0a0:	4983      	ldr	r1, [pc, #524]	; (1e2b0 <_printf_i+0x244>)
   1e0a2:	e055      	b.n	1e150 <_printf_i+0xe4>
   1e0a4:	2a64      	cmp	r2, #100	; 0x64
   1e0a6:	d01e      	beq.n	1e0e6 <_printf_i+0x7a>
   1e0a8:	2a69      	cmp	r2, #105	; 0x69
   1e0aa:	d01c      	beq.n	1e0e6 <_printf_i+0x7a>
   1e0ac:	e0c0      	b.n	1e230 <_printf_i+0x1c4>
   1e0ae:	2a73      	cmp	r2, #115	; 0x73
   1e0b0:	f000 80b0 	beq.w	1e214 <_printf_i+0x1a8>
   1e0b4:	d809      	bhi.n	1e0ca <_printf_i+0x5e>
   1e0b6:	2a6f      	cmp	r2, #111	; 0x6f
   1e0b8:	d02e      	beq.n	1e118 <_printf_i+0xac>
   1e0ba:	2a70      	cmp	r2, #112	; 0x70
   1e0bc:	f040 80b8 	bne.w	1e230 <_printf_i+0x1c4>
   1e0c0:	680a      	ldr	r2, [r1, #0]
   1e0c2:	f042 0220 	orr.w	r2, r2, #32
   1e0c6:	600a      	str	r2, [r1, #0]
   1e0c8:	e03e      	b.n	1e148 <_printf_i+0xdc>
   1e0ca:	2a75      	cmp	r2, #117	; 0x75
   1e0cc:	d024      	beq.n	1e118 <_printf_i+0xac>
   1e0ce:	2a78      	cmp	r2, #120	; 0x78
   1e0d0:	d03a      	beq.n	1e148 <_printf_i+0xdc>
   1e0d2:	e0ad      	b.n	1e230 <_printf_i+0x1c4>
   1e0d4:	681a      	ldr	r2, [r3, #0]
   1e0d6:	f101 0542 	add.w	r5, r1, #66	; 0x42
   1e0da:	1d11      	adds	r1, r2, #4
   1e0dc:	6019      	str	r1, [r3, #0]
   1e0de:	6813      	ldr	r3, [r2, #0]
   1e0e0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1e0e4:	e0a8      	b.n	1e238 <_printf_i+0x1cc>
   1e0e6:	6821      	ldr	r1, [r4, #0]
   1e0e8:	681a      	ldr	r2, [r3, #0]
   1e0ea:	f011 0f80 	tst.w	r1, #128	; 0x80
   1e0ee:	d002      	beq.n	1e0f6 <_printf_i+0x8a>
   1e0f0:	1d11      	adds	r1, r2, #4
   1e0f2:	6019      	str	r1, [r3, #0]
   1e0f4:	e008      	b.n	1e108 <_printf_i+0x9c>
   1e0f6:	f011 0f40 	tst.w	r1, #64	; 0x40
   1e0fa:	f102 0104 	add.w	r1, r2, #4
   1e0fe:	6019      	str	r1, [r3, #0]
   1e100:	d002      	beq.n	1e108 <_printf_i+0x9c>
   1e102:	f9b2 3000 	ldrsh.w	r3, [r2]
   1e106:	e000      	b.n	1e10a <_printf_i+0x9e>
   1e108:	6813      	ldr	r3, [r2, #0]
   1e10a:	2b00      	cmp	r3, #0
   1e10c:	da3c      	bge.n	1e188 <_printf_i+0x11c>
   1e10e:	222d      	movs	r2, #45	; 0x2d
   1e110:	425b      	negs	r3, r3
   1e112:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   1e116:	e037      	b.n	1e188 <_printf_i+0x11c>
   1e118:	6821      	ldr	r1, [r4, #0]
   1e11a:	681a      	ldr	r2, [r3, #0]
   1e11c:	f011 0f80 	tst.w	r1, #128	; 0x80
   1e120:	d002      	beq.n	1e128 <_printf_i+0xbc>
   1e122:	1d11      	adds	r1, r2, #4
   1e124:	6019      	str	r1, [r3, #0]
   1e126:	e007      	b.n	1e138 <_printf_i+0xcc>
   1e128:	f011 0f40 	tst.w	r1, #64	; 0x40
   1e12c:	f102 0104 	add.w	r1, r2, #4
   1e130:	6019      	str	r1, [r3, #0]
   1e132:	d001      	beq.n	1e138 <_printf_i+0xcc>
   1e134:	8813      	ldrh	r3, [r2, #0]
   1e136:	e000      	b.n	1e13a <_printf_i+0xce>
   1e138:	6813      	ldr	r3, [r2, #0]
   1e13a:	7e22      	ldrb	r2, [r4, #24]
   1e13c:	495c      	ldr	r1, [pc, #368]	; (1e2b0 <_printf_i+0x244>)
   1e13e:	2a6f      	cmp	r2, #111	; 0x6f
   1e140:	bf14      	ite	ne
   1e142:	220a      	movne	r2, #10
   1e144:	2208      	moveq	r2, #8
   1e146:	e01b      	b.n	1e180 <_printf_i+0x114>
   1e148:	2278      	movs	r2, #120	; 0x78
   1e14a:	495a      	ldr	r1, [pc, #360]	; (1e2b4 <_printf_i+0x248>)
   1e14c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   1e150:	6822      	ldr	r2, [r4, #0]
   1e152:	6818      	ldr	r0, [r3, #0]
   1e154:	f012 0f80 	tst.w	r2, #128	; 0x80
   1e158:	f100 0504 	add.w	r5, r0, #4
   1e15c:	601d      	str	r5, [r3, #0]
   1e15e:	d103      	bne.n	1e168 <_printf_i+0xfc>
   1e160:	0655      	lsls	r5, r2, #25
   1e162:	d501      	bpl.n	1e168 <_printf_i+0xfc>
   1e164:	8803      	ldrh	r3, [r0, #0]
   1e166:	e000      	b.n	1e16a <_printf_i+0xfe>
   1e168:	6803      	ldr	r3, [r0, #0]
   1e16a:	07d0      	lsls	r0, r2, #31
   1e16c:	bf44      	itt	mi
   1e16e:	f042 0220 	orrmi.w	r2, r2, #32
   1e172:	6022      	strmi	r2, [r4, #0]
   1e174:	b91b      	cbnz	r3, 1e17e <_printf_i+0x112>
   1e176:	6822      	ldr	r2, [r4, #0]
   1e178:	f022 0220 	bic.w	r2, r2, #32
   1e17c:	6022      	str	r2, [r4, #0]
   1e17e:	2210      	movs	r2, #16
   1e180:	2000      	movs	r0, #0
   1e182:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   1e186:	e001      	b.n	1e18c <_printf_i+0x120>
   1e188:	4949      	ldr	r1, [pc, #292]	; (1e2b0 <_printf_i+0x244>)
   1e18a:	220a      	movs	r2, #10
   1e18c:	6865      	ldr	r5, [r4, #4]
   1e18e:	2d00      	cmp	r5, #0
   1e190:	60a5      	str	r5, [r4, #8]
   1e192:	db08      	blt.n	1e1a6 <_printf_i+0x13a>
   1e194:	6820      	ldr	r0, [r4, #0]
   1e196:	f020 0004 	bic.w	r0, r0, #4
   1e19a:	6020      	str	r0, [r4, #0]
   1e19c:	b92b      	cbnz	r3, 1e1aa <_printf_i+0x13e>
   1e19e:	2d00      	cmp	r5, #0
   1e1a0:	d17d      	bne.n	1e29e <_printf_i+0x232>
   1e1a2:	4675      	mov	r5, lr
   1e1a4:	e00c      	b.n	1e1c0 <_printf_i+0x154>
   1e1a6:	2b00      	cmp	r3, #0
   1e1a8:	d079      	beq.n	1e29e <_printf_i+0x232>
   1e1aa:	4675      	mov	r5, lr
   1e1ac:	fbb3 f0f2 	udiv	r0, r3, r2
   1e1b0:	fb02 3310 	mls	r3, r2, r0, r3
   1e1b4:	5ccb      	ldrb	r3, [r1, r3]
   1e1b6:	f805 3d01 	strb.w	r3, [r5, #-1]!
   1e1ba:	4603      	mov	r3, r0
   1e1bc:	2800      	cmp	r0, #0
   1e1be:	d1f5      	bne.n	1e1ac <_printf_i+0x140>
   1e1c0:	2a08      	cmp	r2, #8
   1e1c2:	d10b      	bne.n	1e1dc <_printf_i+0x170>
   1e1c4:	6823      	ldr	r3, [r4, #0]
   1e1c6:	07da      	lsls	r2, r3, #31
   1e1c8:	d508      	bpl.n	1e1dc <_printf_i+0x170>
   1e1ca:	6923      	ldr	r3, [r4, #16]
   1e1cc:	6862      	ldr	r2, [r4, #4]
   1e1ce:	429a      	cmp	r2, r3
   1e1d0:	bfde      	ittt	le
   1e1d2:	2330      	movle	r3, #48	; 0x30
   1e1d4:	f805 3c01 	strble.w	r3, [r5, #-1]
   1e1d8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   1e1dc:	ebc5 030e 	rsb	r3, r5, lr
   1e1e0:	6123      	str	r3, [r4, #16]
   1e1e2:	e02e      	b.n	1e242 <_printf_i+0x1d6>
   1e1e4:	6808      	ldr	r0, [r1, #0]
   1e1e6:	681a      	ldr	r2, [r3, #0]
   1e1e8:	f010 0f80 	tst.w	r0, #128	; 0x80
   1e1ec:	6949      	ldr	r1, [r1, #20]
   1e1ee:	d003      	beq.n	1e1f8 <_printf_i+0x18c>
   1e1f0:	1d10      	adds	r0, r2, #4
   1e1f2:	6018      	str	r0, [r3, #0]
   1e1f4:	6813      	ldr	r3, [r2, #0]
   1e1f6:	e008      	b.n	1e20a <_printf_i+0x19e>
   1e1f8:	f010 0f40 	tst.w	r0, #64	; 0x40
   1e1fc:	f102 0004 	add.w	r0, r2, #4
   1e200:	6018      	str	r0, [r3, #0]
   1e202:	6813      	ldr	r3, [r2, #0]
   1e204:	d001      	beq.n	1e20a <_printf_i+0x19e>
   1e206:	8019      	strh	r1, [r3, #0]
   1e208:	e000      	b.n	1e20c <_printf_i+0x1a0>
   1e20a:	6019      	str	r1, [r3, #0]
   1e20c:	2300      	movs	r3, #0
   1e20e:	6123      	str	r3, [r4, #16]
   1e210:	4675      	mov	r5, lr
   1e212:	e016      	b.n	1e242 <_printf_i+0x1d6>
   1e214:	681a      	ldr	r2, [r3, #0]
   1e216:	1d11      	adds	r1, r2, #4
   1e218:	6019      	str	r1, [r3, #0]
   1e21a:	6815      	ldr	r5, [r2, #0]
   1e21c:	2100      	movs	r1, #0
   1e21e:	6862      	ldr	r2, [r4, #4]
   1e220:	4628      	mov	r0, r5
   1e222:	f7ff f857 	bl	1d2d4 <memchr>
   1e226:	b108      	cbz	r0, 1e22c <_printf_i+0x1c0>
   1e228:	1b40      	subs	r0, r0, r5
   1e22a:	6060      	str	r0, [r4, #4]
   1e22c:	6863      	ldr	r3, [r4, #4]
   1e22e:	e004      	b.n	1e23a <_printf_i+0x1ce>
   1e230:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1e234:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   1e238:	2301      	movs	r3, #1
   1e23a:	6123      	str	r3, [r4, #16]
   1e23c:	2300      	movs	r3, #0
   1e23e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1e242:	f8cd 8000 	str.w	r8, [sp]
   1e246:	463b      	mov	r3, r7
   1e248:	aa03      	add	r2, sp, #12
   1e24a:	4621      	mov	r1, r4
   1e24c:	4630      	mov	r0, r6
   1e24e:	f7ff fe97 	bl	1df80 <_printf_common>
   1e252:	3001      	adds	r0, #1
   1e254:	d102      	bne.n	1e25c <_printf_i+0x1f0>
   1e256:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e25a:	e026      	b.n	1e2aa <_printf_i+0x23e>
   1e25c:	6923      	ldr	r3, [r4, #16]
   1e25e:	462a      	mov	r2, r5
   1e260:	4639      	mov	r1, r7
   1e262:	4630      	mov	r0, r6
   1e264:	47c0      	blx	r8
   1e266:	3001      	adds	r0, #1
   1e268:	d0f5      	beq.n	1e256 <_printf_i+0x1ea>
   1e26a:	6823      	ldr	r3, [r4, #0]
   1e26c:	079b      	lsls	r3, r3, #30
   1e26e:	d510      	bpl.n	1e292 <_printf_i+0x226>
   1e270:	2500      	movs	r5, #0
   1e272:	f104 0919 	add.w	r9, r4, #25
   1e276:	e007      	b.n	1e288 <_printf_i+0x21c>
   1e278:	2301      	movs	r3, #1
   1e27a:	464a      	mov	r2, r9
   1e27c:	4639      	mov	r1, r7
   1e27e:	4630      	mov	r0, r6
   1e280:	47c0      	blx	r8
   1e282:	3001      	adds	r0, #1
   1e284:	d0e7      	beq.n	1e256 <_printf_i+0x1ea>
   1e286:	3501      	adds	r5, #1
   1e288:	68e3      	ldr	r3, [r4, #12]
   1e28a:	9a03      	ldr	r2, [sp, #12]
   1e28c:	1a9b      	subs	r3, r3, r2
   1e28e:	429d      	cmp	r5, r3
   1e290:	dbf2      	blt.n	1e278 <_printf_i+0x20c>
   1e292:	68e0      	ldr	r0, [r4, #12]
   1e294:	9b03      	ldr	r3, [sp, #12]
   1e296:	4298      	cmp	r0, r3
   1e298:	bfb8      	it	lt
   1e29a:	4618      	movlt	r0, r3
   1e29c:	e005      	b.n	1e2aa <_printf_i+0x23e>
   1e29e:	780b      	ldrb	r3, [r1, #0]
   1e2a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1e2a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1e2a8:	e78a      	b.n	1e1c0 <_printf_i+0x154>
   1e2aa:	b005      	add	sp, #20
   1e2ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1e2b0:	0002646c 	.word	0x0002646c
   1e2b4:	0002647d 	.word	0x0002647d

0001e2b8 <_scanf_float>:
_scanf_float():
   1e2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2bc:	469a      	mov	sl, r3
   1e2be:	688b      	ldr	r3, [r1, #8]
   1e2c0:	4616      	mov	r6, r2
   1e2c2:	1e5a      	subs	r2, r3, #1
   1e2c4:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   1e2c8:	bf88      	it	hi
   1e2ca:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   1e2ce:	b087      	sub	sp, #28
   1e2d0:	bf82      	ittt	hi
   1e2d2:	189b      	addhi	r3, r3, r2
   1e2d4:	9301      	strhi	r3, [sp, #4]
   1e2d6:	f240 135d 	movwhi	r3, #349	; 0x15d
   1e2da:	4688      	mov	r8, r1
   1e2dc:	bf96      	itet	ls
   1e2de:	2300      	movls	r3, #0
   1e2e0:	608b      	strhi	r3, [r1, #8]
   1e2e2:	9301      	strls	r3, [sp, #4]
   1e2e4:	680b      	ldr	r3, [r1, #0]
   1e2e6:	f04f 0b00 	mov.w	fp, #0
   1e2ea:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   1e2ee:	f848 3b1c 	str.w	r3, [r8], #28
   1e2f2:	4607      	mov	r7, r0
   1e2f4:	460c      	mov	r4, r1
   1e2f6:	4645      	mov	r5, r8
   1e2f8:	465a      	mov	r2, fp
   1e2fa:	46d9      	mov	r9, fp
   1e2fc:	f8cd b010 	str.w	fp, [sp, #16]
   1e300:	f8cd b00c 	str.w	fp, [sp, #12]
   1e304:	f8cd b008 	str.w	fp, [sp, #8]
   1e308:	68a1      	ldr	r1, [r4, #8]
   1e30a:	2900      	cmp	r1, #0
   1e30c:	f000 80e5 	beq.w	1e4da <_scanf_float+0x222>
   1e310:	6833      	ldr	r3, [r6, #0]
   1e312:	781b      	ldrb	r3, [r3, #0]
   1e314:	2b49      	cmp	r3, #73	; 0x49
   1e316:	d070      	beq.n	1e3fa <_scanf_float+0x142>
   1e318:	d816      	bhi.n	1e348 <_scanf_float+0x90>
   1e31a:	2b39      	cmp	r3, #57	; 0x39
   1e31c:	d80d      	bhi.n	1e33a <_scanf_float+0x82>
   1e31e:	2b31      	cmp	r3, #49	; 0x31
   1e320:	d240      	bcs.n	1e3a4 <_scanf_float+0xec>
   1e322:	2b2d      	cmp	r3, #45	; 0x2d
   1e324:	d046      	beq.n	1e3b4 <_scanf_float+0xfc>
   1e326:	d802      	bhi.n	1e32e <_scanf_float+0x76>
   1e328:	2b2b      	cmp	r3, #43	; 0x2b
   1e32a:	d043      	beq.n	1e3b4 <_scanf_float+0xfc>
   1e32c:	e0d5      	b.n	1e4da <_scanf_float+0x222>
   1e32e:	2b2e      	cmp	r3, #46	; 0x2e
   1e330:	f000 8092 	beq.w	1e458 <_scanf_float+0x1a0>
   1e334:	2b30      	cmp	r3, #48	; 0x30
   1e336:	d023      	beq.n	1e380 <_scanf_float+0xc8>
   1e338:	e0cf      	b.n	1e4da <_scanf_float+0x222>
   1e33a:	2b45      	cmp	r3, #69	; 0x45
   1e33c:	f000 8095 	beq.w	1e46a <_scanf_float+0x1b2>
   1e340:	2b46      	cmp	r3, #70	; 0x46
   1e342:	d077      	beq.n	1e434 <_scanf_float+0x17c>
   1e344:	2b41      	cmp	r3, #65	; 0x41
   1e346:	e00c      	b.n	1e362 <_scanf_float+0xaa>
   1e348:	2b65      	cmp	r3, #101	; 0x65
   1e34a:	f000 808e 	beq.w	1e46a <_scanf_float+0x1b2>
   1e34e:	d80a      	bhi.n	1e366 <_scanf_float+0xae>
   1e350:	2b54      	cmp	r3, #84	; 0x54
   1e352:	d075      	beq.n	1e440 <_scanf_float+0x188>
   1e354:	d802      	bhi.n	1e35c <_scanf_float+0xa4>
   1e356:	2b4e      	cmp	r3, #78	; 0x4e
   1e358:	d034      	beq.n	1e3c4 <_scanf_float+0x10c>
   1e35a:	e0be      	b.n	1e4da <_scanf_float+0x222>
   1e35c:	2b59      	cmp	r3, #89	; 0x59
   1e35e:	d075      	beq.n	1e44c <_scanf_float+0x194>
   1e360:	2b61      	cmp	r3, #97	; 0x61
   1e362:	d046      	beq.n	1e3f2 <_scanf_float+0x13a>
   1e364:	e0b9      	b.n	1e4da <_scanf_float+0x222>
   1e366:	2b6e      	cmp	r3, #110	; 0x6e
   1e368:	d02c      	beq.n	1e3c4 <_scanf_float+0x10c>
   1e36a:	d804      	bhi.n	1e376 <_scanf_float+0xbe>
   1e36c:	2b66      	cmp	r3, #102	; 0x66
   1e36e:	d061      	beq.n	1e434 <_scanf_float+0x17c>
   1e370:	2b69      	cmp	r3, #105	; 0x69
   1e372:	d042      	beq.n	1e3fa <_scanf_float+0x142>
   1e374:	e0b1      	b.n	1e4da <_scanf_float+0x222>
   1e376:	2b74      	cmp	r3, #116	; 0x74
   1e378:	d062      	beq.n	1e440 <_scanf_float+0x188>
   1e37a:	2b79      	cmp	r3, #121	; 0x79
   1e37c:	d066      	beq.n	1e44c <_scanf_float+0x194>
   1e37e:	e0ac      	b.n	1e4da <_scanf_float+0x222>
   1e380:	6820      	ldr	r0, [r4, #0]
   1e382:	f410 7f80 	tst.w	r0, #256	; 0x100
   1e386:	d00d      	beq.n	1e3a4 <_scanf_float+0xec>
   1e388:	9b01      	ldr	r3, [sp, #4]
   1e38a:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   1e38e:	6020      	str	r0, [r4, #0]
   1e390:	f109 0901 	add.w	r9, r9, #1
   1e394:	2b00      	cmp	r3, #0
   1e396:	f000 8087 	beq.w	1e4a8 <_scanf_float+0x1f0>
   1e39a:	3b01      	subs	r3, #1
   1e39c:	3101      	adds	r1, #1
   1e39e:	9301      	str	r3, [sp, #4]
   1e3a0:	60a1      	str	r1, [r4, #8]
   1e3a2:	e081      	b.n	1e4a8 <_scanf_float+0x1f0>
   1e3a4:	eb12 0f0b 	cmn.w	r2, fp
   1e3a8:	f040 8097 	bne.w	1e4da <_scanf_float+0x222>
   1e3ac:	6821      	ldr	r1, [r4, #0]
   1e3ae:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   1e3b2:	e005      	b.n	1e3c0 <_scanf_float+0x108>
   1e3b4:	6821      	ldr	r1, [r4, #0]
   1e3b6:	0608      	lsls	r0, r1, #24
   1e3b8:	f140 808f 	bpl.w	1e4da <_scanf_float+0x222>
   1e3bc:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   1e3c0:	6021      	str	r1, [r4, #0]
   1e3c2:	e06f      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e3c4:	b96a      	cbnz	r2, 1e3e2 <_scanf_float+0x12a>
   1e3c6:	f1b9 0f00 	cmp.w	r9, #0
   1e3ca:	d10c      	bne.n	1e3e6 <_scanf_float+0x12e>
   1e3cc:	6821      	ldr	r1, [r4, #0]
   1e3ce:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1e3d2:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1e3d6:	d106      	bne.n	1e3e6 <_scanf_float+0x12e>
   1e3d8:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1e3dc:	6021      	str	r1, [r4, #0]
   1e3de:	2201      	movs	r2, #1
   1e3e0:	e060      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e3e2:	2a02      	cmp	r2, #2
   1e3e4:	d05d      	beq.n	1e4a2 <_scanf_float+0x1ea>
   1e3e6:	f1bb 0f01 	cmp.w	fp, #1
   1e3ea:	d01e      	beq.n	1e42a <_scanf_float+0x172>
   1e3ec:	f1bb 0f04 	cmp.w	fp, #4
   1e3f0:	e01a      	b.n	1e428 <_scanf_float+0x170>
   1e3f2:	2a01      	cmp	r2, #1
   1e3f4:	d171      	bne.n	1e4da <_scanf_float+0x222>
   1e3f6:	2202      	movs	r2, #2
   1e3f8:	e054      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e3fa:	f1bb 0f00 	cmp.w	fp, #0
   1e3fe:	d10e      	bne.n	1e41e <_scanf_float+0x166>
   1e400:	f1b9 0f00 	cmp.w	r9, #0
   1e404:	d16c      	bne.n	1e4e0 <_scanf_float+0x228>
   1e406:	6821      	ldr	r1, [r4, #0]
   1e408:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1e40c:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1e410:	d16a      	bne.n	1e4e8 <_scanf_float+0x230>
   1e412:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1e416:	6021      	str	r1, [r4, #0]
   1e418:	f04f 0b01 	mov.w	fp, #1
   1e41c:	e042      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e41e:	f1bb 0f03 	cmp.w	fp, #3
   1e422:	d002      	beq.n	1e42a <_scanf_float+0x172>
   1e424:	f1bb 0f05 	cmp.w	fp, #5
   1e428:	d157      	bne.n	1e4da <_scanf_float+0x222>
   1e42a:	f10b 0b01 	add.w	fp, fp, #1
   1e42e:	fa5f fb8b 	uxtb.w	fp, fp
   1e432:	e037      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e434:	f1bb 0f02 	cmp.w	fp, #2
   1e438:	d14f      	bne.n	1e4da <_scanf_float+0x222>
   1e43a:	f04f 0b03 	mov.w	fp, #3
   1e43e:	e031      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e440:	f1bb 0f06 	cmp.w	fp, #6
   1e444:	d149      	bne.n	1e4da <_scanf_float+0x222>
   1e446:	f04f 0b07 	mov.w	fp, #7
   1e44a:	e02b      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e44c:	f1bb 0f07 	cmp.w	fp, #7
   1e450:	d143      	bne.n	1e4da <_scanf_float+0x222>
   1e452:	f04f 0b08 	mov.w	fp, #8
   1e456:	e025      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e458:	6821      	ldr	r1, [r4, #0]
   1e45a:	0588      	lsls	r0, r1, #22
   1e45c:	d53d      	bpl.n	1e4da <_scanf_float+0x222>
   1e45e:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   1e462:	6021      	str	r1, [r4, #0]
   1e464:	f8cd 9008 	str.w	r9, [sp, #8]
   1e468:	e01c      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e46a:	6821      	ldr	r1, [r4, #0]
   1e46c:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   1e470:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   1e474:	d004      	beq.n	1e480 <_scanf_float+0x1c8>
   1e476:	0548      	lsls	r0, r1, #21
   1e478:	d52f      	bpl.n	1e4da <_scanf_float+0x222>
   1e47a:	f1b9 0f00 	cmp.w	r9, #0
   1e47e:	d033      	beq.n	1e4e8 <_scanf_float+0x230>
   1e480:	0588      	lsls	r0, r1, #22
   1e482:	bf58      	it	pl
   1e484:	9802      	ldrpl	r0, [sp, #8]
   1e486:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1e48a:	bf58      	it	pl
   1e48c:	ebc0 0009 	rsbpl	r0, r0, r9
   1e490:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   1e494:	bf5c      	itt	pl
   1e496:	9003      	strpl	r0, [sp, #12]
   1e498:	9504      	strpl	r5, [sp, #16]
   1e49a:	6021      	str	r1, [r4, #0]
   1e49c:	f04f 0900 	mov.w	r9, #0
   1e4a0:	e000      	b.n	1e4a4 <_scanf_float+0x1ec>
   1e4a2:	2203      	movs	r2, #3
   1e4a4:	702b      	strb	r3, [r5, #0]
   1e4a6:	3501      	adds	r5, #1
   1e4a8:	68a3      	ldr	r3, [r4, #8]
   1e4aa:	3b01      	subs	r3, #1
   1e4ac:	60a3      	str	r3, [r4, #8]
   1e4ae:	6923      	ldr	r3, [r4, #16]
   1e4b0:	3301      	adds	r3, #1
   1e4b2:	6123      	str	r3, [r4, #16]
   1e4b4:	6873      	ldr	r3, [r6, #4]
   1e4b6:	3b01      	subs	r3, #1
   1e4b8:	2b00      	cmp	r3, #0
   1e4ba:	6073      	str	r3, [r6, #4]
   1e4bc:	dd03      	ble.n	1e4c6 <_scanf_float+0x20e>
   1e4be:	6833      	ldr	r3, [r6, #0]
   1e4c0:	3301      	adds	r3, #1
   1e4c2:	6033      	str	r3, [r6, #0]
   1e4c4:	e720      	b.n	1e308 <_scanf_float+0x50>
   1e4c6:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1e4ca:	4631      	mov	r1, r6
   1e4cc:	4638      	mov	r0, r7
   1e4ce:	9205      	str	r2, [sp, #20]
   1e4d0:	4798      	blx	r3
   1e4d2:	9a05      	ldr	r2, [sp, #20]
   1e4d4:	2800      	cmp	r0, #0
   1e4d6:	f43f af17 	beq.w	1e308 <_scanf_float+0x50>
   1e4da:	f1b9 0f00 	cmp.w	r9, #0
   1e4de:	d003      	beq.n	1e4e8 <_scanf_float+0x230>
   1e4e0:	6823      	ldr	r3, [r4, #0]
   1e4e2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1e4e6:	6023      	str	r3, [r4, #0]
   1e4e8:	3a01      	subs	r2, #1
   1e4ea:	2a01      	cmp	r2, #1
   1e4ec:	d80e      	bhi.n	1e50c <_scanf_float+0x254>
   1e4ee:	4545      	cmp	r5, r8
   1e4f0:	d90a      	bls.n	1e508 <_scanf_float+0x250>
   1e4f2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1e4f6:	4632      	mov	r2, r6
   1e4f8:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1e4fc:	4638      	mov	r0, r7
   1e4fe:	4798      	blx	r3
   1e500:	6923      	ldr	r3, [r4, #16]
   1e502:	3b01      	subs	r3, #1
   1e504:	6123      	str	r3, [r4, #16]
   1e506:	e7f2      	b.n	1e4ee <_scanf_float+0x236>
   1e508:	2601      	movs	r6, #1
   1e50a:	e0ad      	b.n	1e668 <_scanf_float+0x3b0>
   1e50c:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   1e510:	2b06      	cmp	r3, #6
   1e512:	d822      	bhi.n	1e55a <_scanf_float+0x2a2>
   1e514:	f1bb 0f02 	cmp.w	fp, #2
   1e518:	d912      	bls.n	1e540 <_scanf_float+0x288>
   1e51a:	f1ab 0b03 	sub.w	fp, fp, #3
   1e51e:	fa5f fb8b 	uxtb.w	fp, fp
   1e522:	ebcb 0b05 	rsb	fp, fp, r5
   1e526:	455d      	cmp	r5, fp
   1e528:	d017      	beq.n	1e55a <_scanf_float+0x2a2>
   1e52a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1e52e:	4632      	mov	r2, r6
   1e530:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1e534:	4638      	mov	r0, r7
   1e536:	4798      	blx	r3
   1e538:	6923      	ldr	r3, [r4, #16]
   1e53a:	3b01      	subs	r3, #1
   1e53c:	6123      	str	r3, [r4, #16]
   1e53e:	e7f2      	b.n	1e526 <_scanf_float+0x26e>
   1e540:	4545      	cmp	r5, r8
   1e542:	d9e1      	bls.n	1e508 <_scanf_float+0x250>
   1e544:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1e548:	4632      	mov	r2, r6
   1e54a:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1e54e:	4638      	mov	r0, r7
   1e550:	4798      	blx	r3
   1e552:	6923      	ldr	r3, [r4, #16]
   1e554:	3b01      	subs	r3, #1
   1e556:	6123      	str	r3, [r4, #16]
   1e558:	e7f2      	b.n	1e540 <_scanf_float+0x288>
   1e55a:	6823      	ldr	r3, [r4, #0]
   1e55c:	05da      	lsls	r2, r3, #23
   1e55e:	d52c      	bpl.n	1e5ba <_scanf_float+0x302>
   1e560:	055b      	lsls	r3, r3, #21
   1e562:	d50c      	bpl.n	1e57e <_scanf_float+0x2c6>
   1e564:	4545      	cmp	r5, r8
   1e566:	d9cf      	bls.n	1e508 <_scanf_float+0x250>
   1e568:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1e56c:	4632      	mov	r2, r6
   1e56e:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1e572:	4638      	mov	r0, r7
   1e574:	4798      	blx	r3
   1e576:	6923      	ldr	r3, [r4, #16]
   1e578:	3b01      	subs	r3, #1
   1e57a:	6123      	str	r3, [r4, #16]
   1e57c:	e7f2      	b.n	1e564 <_scanf_float+0x2ac>
   1e57e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1e582:	6923      	ldr	r3, [r4, #16]
   1e584:	2965      	cmp	r1, #101	; 0x65
   1e586:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1e58a:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   1e58e:	6123      	str	r3, [r4, #16]
   1e590:	d00d      	beq.n	1e5ae <_scanf_float+0x2f6>
   1e592:	2945      	cmp	r1, #69	; 0x45
   1e594:	d00b      	beq.n	1e5ae <_scanf_float+0x2f6>
   1e596:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1e59a:	4632      	mov	r2, r6
   1e59c:	4638      	mov	r0, r7
   1e59e:	4798      	blx	r3
   1e5a0:	6923      	ldr	r3, [r4, #16]
   1e5a2:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   1e5a6:	3b01      	subs	r3, #1
   1e5a8:	f1a5 0b02 	sub.w	fp, r5, #2
   1e5ac:	6123      	str	r3, [r4, #16]
   1e5ae:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1e5b2:	4632      	mov	r2, r6
   1e5b4:	4638      	mov	r0, r7
   1e5b6:	4798      	blx	r3
   1e5b8:	465d      	mov	r5, fp
   1e5ba:	6826      	ldr	r6, [r4, #0]
   1e5bc:	f016 0610 	ands.w	r6, r6, #16
   1e5c0:	d151      	bne.n	1e666 <_scanf_float+0x3ae>
   1e5c2:	702e      	strb	r6, [r5, #0]
   1e5c4:	6823      	ldr	r3, [r4, #0]
   1e5c6:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   1e5ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1e5ce:	d105      	bne.n	1e5dc <_scanf_float+0x324>
   1e5d0:	9b02      	ldr	r3, [sp, #8]
   1e5d2:	ebc3 0309 	rsb	r3, r3, r9
   1e5d6:	425a      	negs	r2, r3
   1e5d8:	b963      	cbnz	r3, 1e5f4 <_scanf_float+0x33c>
   1e5da:	e015      	b.n	1e608 <_scanf_float+0x350>
   1e5dc:	9b03      	ldr	r3, [sp, #12]
   1e5de:	b19b      	cbz	r3, 1e608 <_scanf_float+0x350>
   1e5e0:	9904      	ldr	r1, [sp, #16]
   1e5e2:	230a      	movs	r3, #10
   1e5e4:	4632      	mov	r2, r6
   1e5e6:	3101      	adds	r1, #1
   1e5e8:	4638      	mov	r0, r7
   1e5ea:	f001 fa87 	bl	1fafc <_strtol_r>
   1e5ee:	9b03      	ldr	r3, [sp, #12]
   1e5f0:	9d04      	ldr	r5, [sp, #16]
   1e5f2:	1ac2      	subs	r2, r0, r3
   1e5f4:	f204 136f 	addw	r3, r4, #367	; 0x16f
   1e5f8:	429d      	cmp	r5, r3
   1e5fa:	bf28      	it	cs
   1e5fc:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   1e600:	491b      	ldr	r1, [pc, #108]	; (1e670 <_scanf_float+0x3b8>)
   1e602:	4628      	mov	r0, r5
   1e604:	f000 fac8 	bl	1eb98 <siprintf>
   1e608:	2200      	movs	r2, #0
   1e60a:	4641      	mov	r1, r8
   1e60c:	4638      	mov	r0, r7
   1e60e:	f000 fc47 	bl	1eea0 <_strtod_r>
   1e612:	6822      	ldr	r2, [r4, #0]
   1e614:	4680      	mov	r8, r0
   1e616:	f012 0f02 	tst.w	r2, #2
   1e61a:	4689      	mov	r9, r1
   1e61c:	f8da 3000 	ldr.w	r3, [sl]
   1e620:	d003      	beq.n	1e62a <_scanf_float+0x372>
   1e622:	1d1a      	adds	r2, r3, #4
   1e624:	f8ca 2000 	str.w	r2, [sl]
   1e628:	e006      	b.n	1e638 <_scanf_float+0x380>
   1e62a:	f012 0504 	ands.w	r5, r2, #4
   1e62e:	f103 0204 	add.w	r2, r3, #4
   1e632:	f8ca 2000 	str.w	r2, [sl]
   1e636:	d003      	beq.n	1e640 <_scanf_float+0x388>
   1e638:	681b      	ldr	r3, [r3, #0]
   1e63a:	e9c3 8900 	strd	r8, r9, [r3]
   1e63e:	e00e      	b.n	1e65e <_scanf_float+0x3a6>
   1e640:	681f      	ldr	r7, [r3, #0]
   1e642:	4602      	mov	r2, r0
   1e644:	460b      	mov	r3, r1
   1e646:	f004 ff23 	bl	23490 <__aeabi_dcmpun>
   1e64a:	b118      	cbz	r0, 1e654 <_scanf_float+0x39c>
   1e64c:	4628      	mov	r0, r5
   1e64e:	f000 fa59 	bl	1eb04 <nanf>
   1e652:	e003      	b.n	1e65c <_scanf_float+0x3a4>
   1e654:	4640      	mov	r0, r8
   1e656:	4649      	mov	r1, r9
   1e658:	f7fd ff92 	bl	1c580 <__aeabi_d2f>
   1e65c:	6038      	str	r0, [r7, #0]
   1e65e:	68e3      	ldr	r3, [r4, #12]
   1e660:	3301      	adds	r3, #1
   1e662:	60e3      	str	r3, [r4, #12]
   1e664:	e000      	b.n	1e668 <_scanf_float+0x3b0>
   1e666:	2600      	movs	r6, #0
   1e668:	4630      	mov	r0, r6
   1e66a:	b007      	add	sp, #28
   1e66c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e670:	0002648e 	.word	0x0002648e

0001e674 <iprintf>:
printf():
   1e674:	b40f      	push	{r0, r1, r2, r3}
   1e676:	4b0a      	ldr	r3, [pc, #40]	; (1e6a0 <iprintf+0x2c>)
   1e678:	b513      	push	{r0, r1, r4, lr}
   1e67a:	681c      	ldr	r4, [r3, #0]
   1e67c:	b124      	cbz	r4, 1e688 <iprintf+0x14>
   1e67e:	69a3      	ldr	r3, [r4, #24]
   1e680:	b913      	cbnz	r3, 1e688 <iprintf+0x14>
   1e682:	4620      	mov	r0, r4
   1e684:	f7fe fc52 	bl	1cf2c <__sinit>
   1e688:	ab05      	add	r3, sp, #20
   1e68a:	9a04      	ldr	r2, [sp, #16]
   1e68c:	68a1      	ldr	r1, [r4, #8]
   1e68e:	4620      	mov	r0, r4
   1e690:	9301      	str	r3, [sp, #4]
   1e692:	f004 f969 	bl	22968 <_vfiprintf_r>
   1e696:	b002      	add	sp, #8
   1e698:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1e69c:	b004      	add	sp, #16
   1e69e:	4770      	bx	lr
   1e6a0:	2007c140 	.word	0x2007c140

0001e6a4 <_puts_r>:
_puts_r():
   1e6a4:	b570      	push	{r4, r5, r6, lr}
   1e6a6:	460e      	mov	r6, r1
   1e6a8:	4605      	mov	r5, r0
   1e6aa:	b118      	cbz	r0, 1e6b4 <_puts_r+0x10>
   1e6ac:	6983      	ldr	r3, [r0, #24]
   1e6ae:	b90b      	cbnz	r3, 1e6b4 <_puts_r+0x10>
   1e6b0:	f7fe fc3c 	bl	1cf2c <__sinit>
   1e6b4:	69ab      	ldr	r3, [r5, #24]
   1e6b6:	68ac      	ldr	r4, [r5, #8]
   1e6b8:	b913      	cbnz	r3, 1e6c0 <_puts_r+0x1c>
   1e6ba:	4628      	mov	r0, r5
   1e6bc:	f7fe fc36 	bl	1cf2c <__sinit>
   1e6c0:	4b22      	ldr	r3, [pc, #136]	; (1e74c <_puts_r+0xa8>)
   1e6c2:	429c      	cmp	r4, r3
   1e6c4:	d101      	bne.n	1e6ca <_puts_r+0x26>
   1e6c6:	686c      	ldr	r4, [r5, #4]
   1e6c8:	e008      	b.n	1e6dc <_puts_r+0x38>
   1e6ca:	4b21      	ldr	r3, [pc, #132]	; (1e750 <_puts_r+0xac>)
   1e6cc:	429c      	cmp	r4, r3
   1e6ce:	d101      	bne.n	1e6d4 <_puts_r+0x30>
   1e6d0:	68ac      	ldr	r4, [r5, #8]
   1e6d2:	e003      	b.n	1e6dc <_puts_r+0x38>
   1e6d4:	4b1f      	ldr	r3, [pc, #124]	; (1e754 <_puts_r+0xb0>)
   1e6d6:	429c      	cmp	r4, r3
   1e6d8:	bf08      	it	eq
   1e6da:	68ec      	ldreq	r4, [r5, #12]
   1e6dc:	89a3      	ldrh	r3, [r4, #12]
   1e6de:	071b      	lsls	r3, r3, #28
   1e6e0:	d501      	bpl.n	1e6e6 <_puts_r+0x42>
   1e6e2:	6923      	ldr	r3, [r4, #16]
   1e6e4:	b93b      	cbnz	r3, 1e6f6 <_puts_r+0x52>
   1e6e6:	4621      	mov	r1, r4
   1e6e8:	4628      	mov	r0, r5
   1e6ea:	f001 fdc1 	bl	20270 <__swsetup_r>
   1e6ee:	b110      	cbz	r0, 1e6f6 <_puts_r+0x52>
   1e6f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e6f4:	bd70      	pop	{r4, r5, r6, pc}
   1e6f6:	3e01      	subs	r6, #1
   1e6f8:	68a3      	ldr	r3, [r4, #8]
   1e6fa:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   1e6fe:	3b01      	subs	r3, #1
   1e700:	60a3      	str	r3, [r4, #8]
   1e702:	b191      	cbz	r1, 1e72a <_puts_r+0x86>
   1e704:	2b00      	cmp	r3, #0
   1e706:	da04      	bge.n	1e712 <_puts_r+0x6e>
   1e708:	69a2      	ldr	r2, [r4, #24]
   1e70a:	4293      	cmp	r3, r2
   1e70c:	db06      	blt.n	1e71c <_puts_r+0x78>
   1e70e:	290a      	cmp	r1, #10
   1e710:	d004      	beq.n	1e71c <_puts_r+0x78>
   1e712:	6823      	ldr	r3, [r4, #0]
   1e714:	1c5a      	adds	r2, r3, #1
   1e716:	6022      	str	r2, [r4, #0]
   1e718:	7019      	strb	r1, [r3, #0]
   1e71a:	e7ed      	b.n	1e6f8 <_puts_r+0x54>
   1e71c:	4622      	mov	r2, r4
   1e71e:	4628      	mov	r0, r5
   1e720:	f001 fd40 	bl	201a4 <__swbuf_r>
   1e724:	3001      	adds	r0, #1
   1e726:	d1e7      	bne.n	1e6f8 <_puts_r+0x54>
   1e728:	e7e2      	b.n	1e6f0 <_puts_r+0x4c>
   1e72a:	2b00      	cmp	r3, #0
   1e72c:	da08      	bge.n	1e740 <_puts_r+0x9c>
   1e72e:	4622      	mov	r2, r4
   1e730:	210a      	movs	r1, #10
   1e732:	4628      	mov	r0, r5
   1e734:	f001 fd36 	bl	201a4 <__swbuf_r>
   1e738:	3001      	adds	r0, #1
   1e73a:	d0d9      	beq.n	1e6f0 <_puts_r+0x4c>
   1e73c:	200a      	movs	r0, #10
   1e73e:	bd70      	pop	{r4, r5, r6, pc}
   1e740:	6823      	ldr	r3, [r4, #0]
   1e742:	200a      	movs	r0, #10
   1e744:	1c5a      	adds	r2, r3, #1
   1e746:	6022      	str	r2, [r4, #0]
   1e748:	7018      	strb	r0, [r3, #0]
   1e74a:	bd70      	pop	{r4, r5, r6, pc}
   1e74c:	00026334 	.word	0x00026334
   1e750:	00026354 	.word	0x00026354
   1e754:	00026374 	.word	0x00026374

0001e758 <puts>:
puts():
   1e758:	4b02      	ldr	r3, [pc, #8]	; (1e764 <puts+0xc>)
   1e75a:	4601      	mov	r1, r0
   1e75c:	6818      	ldr	r0, [r3, #0]
   1e75e:	f7ff bfa1 	b.w	1e6a4 <_puts_r>
   1e762:	bf00      	nop
   1e764:	2007c140 	.word	0x2007c140

0001e768 <srand>:
srand():
   1e768:	b538      	push	{r3, r4, r5, lr}
   1e76a:	4b12      	ldr	r3, [pc, #72]	; (1e7b4 <srand+0x4c>)
   1e76c:	4605      	mov	r5, r0
   1e76e:	681c      	ldr	r4, [r3, #0]
   1e770:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1e772:	b9d3      	cbnz	r3, 1e7aa <srand+0x42>
   1e774:	2018      	movs	r0, #24
   1e776:	f7fe fd9d 	bl	1d2b4 <malloc>
   1e77a:	f243 330e 	movw	r3, #13070	; 0x330e
   1e77e:	63a0      	str	r0, [r4, #56]	; 0x38
   1e780:	8003      	strh	r3, [r0, #0]
   1e782:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1e786:	8043      	strh	r3, [r0, #2]
   1e788:	f241 2334 	movw	r3, #4660	; 0x1234
   1e78c:	8083      	strh	r3, [r0, #4]
   1e78e:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1e792:	80c3      	strh	r3, [r0, #6]
   1e794:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1e798:	8103      	strh	r3, [r0, #8]
   1e79a:	2305      	movs	r3, #5
   1e79c:	8143      	strh	r3, [r0, #10]
   1e79e:	230b      	movs	r3, #11
   1e7a0:	8183      	strh	r3, [r0, #12]
   1e7a2:	2201      	movs	r2, #1
   1e7a4:	2300      	movs	r3, #0
   1e7a6:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1e7aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1e7ac:	2200      	movs	r2, #0
   1e7ae:	611d      	str	r5, [r3, #16]
   1e7b0:	615a      	str	r2, [r3, #20]
   1e7b2:	bd38      	pop	{r3, r4, r5, pc}
   1e7b4:	2007c140 	.word	0x2007c140

0001e7b8 <rand>:
rand():
   1e7b8:	4b19      	ldr	r3, [pc, #100]	; (1e820 <rand+0x68>)
   1e7ba:	b510      	push	{r4, lr}
   1e7bc:	681c      	ldr	r4, [r3, #0]
   1e7be:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1e7c0:	b9d3      	cbnz	r3, 1e7f8 <rand+0x40>
   1e7c2:	2018      	movs	r0, #24
   1e7c4:	f7fe fd76 	bl	1d2b4 <malloc>
   1e7c8:	f243 330e 	movw	r3, #13070	; 0x330e
   1e7cc:	63a0      	str	r0, [r4, #56]	; 0x38
   1e7ce:	8003      	strh	r3, [r0, #0]
   1e7d0:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1e7d4:	8043      	strh	r3, [r0, #2]
   1e7d6:	f241 2334 	movw	r3, #4660	; 0x1234
   1e7da:	8083      	strh	r3, [r0, #4]
   1e7dc:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1e7e0:	80c3      	strh	r3, [r0, #6]
   1e7e2:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1e7e6:	8103      	strh	r3, [r0, #8]
   1e7e8:	2305      	movs	r3, #5
   1e7ea:	8143      	strh	r3, [r0, #10]
   1e7ec:	230b      	movs	r3, #11
   1e7ee:	8183      	strh	r3, [r0, #12]
   1e7f0:	2201      	movs	r2, #1
   1e7f2:	2300      	movs	r3, #0
   1e7f4:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1e7f8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1e7fa:	4c0a      	ldr	r4, [pc, #40]	; (1e824 <rand+0x6c>)
   1e7fc:	690b      	ldr	r3, [r1, #16]
   1e7fe:	6948      	ldr	r0, [r1, #20]
   1e800:	435c      	muls	r4, r3
   1e802:	4a09      	ldr	r2, [pc, #36]	; (1e828 <rand+0x70>)
   1e804:	fb02 4000 	mla	r0, r2, r0, r4
   1e808:	fba3 2302 	umull	r2, r3, r3, r2
   1e80c:	3201      	adds	r2, #1
   1e80e:	4403      	add	r3, r0
   1e810:	f143 0300 	adc.w	r3, r3, #0
   1e814:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1e818:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1e81c:	bd10      	pop	{r4, pc}
   1e81e:	bf00      	nop
   1e820:	2007c140 	.word	0x2007c140
   1e824:	5851f42d 	.word	0x5851f42d
   1e828:	4c957f2d 	.word	0x4c957f2d

0001e82c <realloc>:
realloc():
   1e82c:	4b02      	ldr	r3, [pc, #8]	; (1e838 <realloc+0xc>)
   1e82e:	460a      	mov	r2, r1
   1e830:	4601      	mov	r1, r0
   1e832:	6818      	ldr	r0, [r3, #0]
   1e834:	f003 bd4d 	b.w	222d2 <_realloc_r>
   1e838:	2007c140 	.word	0x2007c140

0001e83c <lflush>:
lflush():
   1e83c:	8983      	ldrh	r3, [r0, #12]
   1e83e:	f003 0309 	and.w	r3, r3, #9
   1e842:	2b09      	cmp	r3, #9
   1e844:	d101      	bne.n	1e84a <lflush+0xe>
   1e846:	f002 bcb7 	b.w	211b8 <fflush>
   1e84a:	2000      	movs	r0, #0
   1e84c:	4770      	bx	lr
   1e84e:	ffff b5f8 	vsli.64	<illegal reg q13.5>, q12, #63	; 0x3f

0001e850 <__srefill_r>:
__srefill_r():
   1e850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1e852:	460c      	mov	r4, r1
   1e854:	4605      	mov	r5, r0
   1e856:	b118      	cbz	r0, 1e860 <__srefill_r+0x10>
   1e858:	6983      	ldr	r3, [r0, #24]
   1e85a:	b90b      	cbnz	r3, 1e860 <__srefill_r+0x10>
   1e85c:	f7fe fb66 	bl	1cf2c <__sinit>
   1e860:	4b3a      	ldr	r3, [pc, #232]	; (1e94c <__srefill_r+0xfc>)
   1e862:	429c      	cmp	r4, r3
   1e864:	d101      	bne.n	1e86a <__srefill_r+0x1a>
   1e866:	686c      	ldr	r4, [r5, #4]
   1e868:	e008      	b.n	1e87c <__srefill_r+0x2c>
   1e86a:	4b39      	ldr	r3, [pc, #228]	; (1e950 <__srefill_r+0x100>)
   1e86c:	429c      	cmp	r4, r3
   1e86e:	d101      	bne.n	1e874 <__srefill_r+0x24>
   1e870:	68ac      	ldr	r4, [r5, #8]
   1e872:	e003      	b.n	1e87c <__srefill_r+0x2c>
   1e874:	4b37      	ldr	r3, [pc, #220]	; (1e954 <__srefill_r+0x104>)
   1e876:	429c      	cmp	r4, r3
   1e878:	bf08      	it	eq
   1e87a:	68ec      	ldreq	r4, [r5, #12]
   1e87c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   1e880:	2300      	movs	r3, #0
   1e882:	6063      	str	r3, [r4, #4]
   1e884:	b293      	uxth	r3, r2
   1e886:	069e      	lsls	r6, r3, #26
   1e888:	d45b      	bmi.n	1e942 <__srefill_r+0xf2>
   1e88a:	0758      	lsls	r0, r3, #29
   1e88c:	d41a      	bmi.n	1e8c4 <__srefill_r+0x74>
   1e88e:	06d9      	lsls	r1, r3, #27
   1e890:	d405      	bmi.n	1e89e <__srefill_r+0x4e>
   1e892:	2309      	movs	r3, #9
   1e894:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1e898:	602b      	str	r3, [r5, #0]
   1e89a:	81a2      	strh	r2, [r4, #12]
   1e89c:	e051      	b.n	1e942 <__srefill_r+0xf2>
   1e89e:	071a      	lsls	r2, r3, #28
   1e8a0:	d50b      	bpl.n	1e8ba <__srefill_r+0x6a>
   1e8a2:	4621      	mov	r1, r4
   1e8a4:	4628      	mov	r0, r5
   1e8a6:	f002 fc5d 	bl	21164 <_fflush_r>
   1e8aa:	2800      	cmp	r0, #0
   1e8ac:	d149      	bne.n	1e942 <__srefill_r+0xf2>
   1e8ae:	89a3      	ldrh	r3, [r4, #12]
   1e8b0:	60a0      	str	r0, [r4, #8]
   1e8b2:	f023 0308 	bic.w	r3, r3, #8
   1e8b6:	81a3      	strh	r3, [r4, #12]
   1e8b8:	61a0      	str	r0, [r4, #24]
   1e8ba:	89a3      	ldrh	r3, [r4, #12]
   1e8bc:	f043 0304 	orr.w	r3, r3, #4
   1e8c0:	81a3      	strh	r3, [r4, #12]
   1e8c2:	e010      	b.n	1e8e6 <__srefill_r+0x96>
   1e8c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1e8c6:	b171      	cbz	r1, 1e8e6 <__srefill_r+0x96>
   1e8c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1e8cc:	4299      	cmp	r1, r3
   1e8ce:	d002      	beq.n	1e8d6 <__srefill_r+0x86>
   1e8d0:	4628      	mov	r0, r5
   1e8d2:	f7fe ffa3 	bl	1d81c <_free_r>
   1e8d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1e8d8:	2000      	movs	r0, #0
   1e8da:	6360      	str	r0, [r4, #52]	; 0x34
   1e8dc:	6063      	str	r3, [r4, #4]
   1e8de:	b113      	cbz	r3, 1e8e6 <__srefill_r+0x96>
   1e8e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1e8e2:	6023      	str	r3, [r4, #0]
   1e8e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1e8e6:	6923      	ldr	r3, [r4, #16]
   1e8e8:	b91b      	cbnz	r3, 1e8f2 <__srefill_r+0xa2>
   1e8ea:	4621      	mov	r1, r4
   1e8ec:	4628      	mov	r0, r5
   1e8ee:	f003 f8bd 	bl	21a6c <__smakebuf_r>
   1e8f2:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   1e8f6:	b2be      	uxth	r6, r7
   1e8f8:	07b3      	lsls	r3, r6, #30
   1e8fa:	d00f      	beq.n	1e91c <__srefill_r+0xcc>
   1e8fc:	2301      	movs	r3, #1
   1e8fe:	81a3      	strh	r3, [r4, #12]
   1e900:	4b15      	ldr	r3, [pc, #84]	; (1e958 <__srefill_r+0x108>)
   1e902:	4916      	ldr	r1, [pc, #88]	; (1e95c <__srefill_r+0x10c>)
   1e904:	6818      	ldr	r0, [r3, #0]
   1e906:	f006 0609 	and.w	r6, r6, #9
   1e90a:	f7fe fb7b 	bl	1d004 <_fwalk>
   1e90e:	2e09      	cmp	r6, #9
   1e910:	81a7      	strh	r7, [r4, #12]
   1e912:	d103      	bne.n	1e91c <__srefill_r+0xcc>
   1e914:	4621      	mov	r1, r4
   1e916:	4628      	mov	r0, r5
   1e918:	f002 fb9e 	bl	21058 <__sflush_r>
   1e91c:	6922      	ldr	r2, [r4, #16]
   1e91e:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1e920:	6022      	str	r2, [r4, #0]
   1e922:	6963      	ldr	r3, [r4, #20]
   1e924:	6a21      	ldr	r1, [r4, #32]
   1e926:	4628      	mov	r0, r5
   1e928:	47b0      	blx	r6
   1e92a:	2800      	cmp	r0, #0
   1e92c:	6060      	str	r0, [r4, #4]
   1e92e:	dc0b      	bgt.n	1e948 <__srefill_r+0xf8>
   1e930:	89a3      	ldrh	r3, [r4, #12]
   1e932:	bf17      	itett	ne
   1e934:	2200      	movne	r2, #0
   1e936:	f043 0320 	orreq.w	r3, r3, #32
   1e93a:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1e93e:	6062      	strne	r2, [r4, #4]
   1e940:	81a3      	strh	r3, [r4, #12]
   1e942:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e946:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1e948:	2000      	movs	r0, #0
   1e94a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1e94c:	00026334 	.word	0x00026334
   1e950:	00026354 	.word	0x00026354
   1e954:	00026374 	.word	0x00026374
   1e958:	00026398 	.word	0x00026398
   1e95c:	0001e83d 	.word	0x0001e83d

0001e960 <_sbrk_r>:
_sbrk_r():
   1e960:	b538      	push	{r3, r4, r5, lr}
   1e962:	4c06      	ldr	r4, [pc, #24]	; (1e97c <_sbrk_r+0x1c>)
   1e964:	2300      	movs	r3, #0
   1e966:	4605      	mov	r5, r0
   1e968:	4608      	mov	r0, r1
   1e96a:	6023      	str	r3, [r4, #0]
   1e96c:	f7f2 fdf6 	bl	1155c <_sbrk>
   1e970:	1c43      	adds	r3, r0, #1
   1e972:	d102      	bne.n	1e97a <_sbrk_r+0x1a>
   1e974:	6823      	ldr	r3, [r4, #0]
   1e976:	b103      	cbz	r3, 1e97a <_sbrk_r+0x1a>
   1e978:	602b      	str	r3, [r5, #0]
   1e97a:	bd38      	pop	{r3, r4, r5, pc}
   1e97c:	2007c790 	.word	0x2007c790

0001e980 <iscanf>:
iscanf():
   1e980:	b40f      	push	{r0, r1, r2, r3}
   1e982:	4b0a      	ldr	r3, [pc, #40]	; (1e9ac <iscanf+0x2c>)
   1e984:	b513      	push	{r0, r1, r4, lr}
   1e986:	681c      	ldr	r4, [r3, #0]
   1e988:	b124      	cbz	r4, 1e994 <iscanf+0x14>
   1e98a:	69a3      	ldr	r3, [r4, #24]
   1e98c:	b913      	cbnz	r3, 1e994 <iscanf+0x14>
   1e98e:	4620      	mov	r0, r4
   1e990:	f7fe facc 	bl	1cf2c <__sinit>
   1e994:	ab05      	add	r3, sp, #20
   1e996:	9a04      	ldr	r2, [sp, #16]
   1e998:	6861      	ldr	r1, [r4, #4]
   1e99a:	4620      	mov	r0, r4
   1e99c:	9301      	str	r3, [sp, #4]
   1e99e:	f004 fa53 	bl	22e48 <_vfiscanf_r>
   1e9a2:	b002      	add	sp, #8
   1e9a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1e9a8:	b004      	add	sp, #16
   1e9aa:	4770      	bx	lr
   1e9ac:	2007c140 	.word	0x2007c140

0001e9b0 <setvbuf>:
setvbuf():
   1e9b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1e9b4:	461d      	mov	r5, r3
   1e9b6:	4b4f      	ldr	r3, [pc, #316]	; (1eaf4 <setvbuf+0x144>)
   1e9b8:	4604      	mov	r4, r0
   1e9ba:	681e      	ldr	r6, [r3, #0]
   1e9bc:	460f      	mov	r7, r1
   1e9be:	4690      	mov	r8, r2
   1e9c0:	b126      	cbz	r6, 1e9cc <setvbuf+0x1c>
   1e9c2:	69b3      	ldr	r3, [r6, #24]
   1e9c4:	b913      	cbnz	r3, 1e9cc <setvbuf+0x1c>
   1e9c6:	4630      	mov	r0, r6
   1e9c8:	f7fe fab0 	bl	1cf2c <__sinit>
   1e9cc:	4b4a      	ldr	r3, [pc, #296]	; (1eaf8 <setvbuf+0x148>)
   1e9ce:	429c      	cmp	r4, r3
   1e9d0:	d101      	bne.n	1e9d6 <setvbuf+0x26>
   1e9d2:	6874      	ldr	r4, [r6, #4]
   1e9d4:	e008      	b.n	1e9e8 <setvbuf+0x38>
   1e9d6:	4b49      	ldr	r3, [pc, #292]	; (1eafc <setvbuf+0x14c>)
   1e9d8:	429c      	cmp	r4, r3
   1e9da:	d101      	bne.n	1e9e0 <setvbuf+0x30>
   1e9dc:	68b4      	ldr	r4, [r6, #8]
   1e9de:	e003      	b.n	1e9e8 <setvbuf+0x38>
   1e9e0:	4b47      	ldr	r3, [pc, #284]	; (1eb00 <setvbuf+0x150>)
   1e9e2:	429c      	cmp	r4, r3
   1e9e4:	bf08      	it	eq
   1e9e6:	68f4      	ldreq	r4, [r6, #12]
   1e9e8:	f1b8 0f02 	cmp.w	r8, #2
   1e9ec:	d004      	beq.n	1e9f8 <setvbuf+0x48>
   1e9ee:	f1b8 0f01 	cmp.w	r8, #1
   1e9f2:	d879      	bhi.n	1eae8 <setvbuf+0x138>
   1e9f4:	2d00      	cmp	r5, #0
   1e9f6:	db77      	blt.n	1eae8 <setvbuf+0x138>
   1e9f8:	4621      	mov	r1, r4
   1e9fa:	4630      	mov	r0, r6
   1e9fc:	f002 fbb2 	bl	21164 <_fflush_r>
   1ea00:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1ea02:	b141      	cbz	r1, 1ea16 <setvbuf+0x66>
   1ea04:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1ea08:	4299      	cmp	r1, r3
   1ea0a:	d002      	beq.n	1ea12 <setvbuf+0x62>
   1ea0c:	4630      	mov	r0, r6
   1ea0e:	f7fe ff05 	bl	1d81c <_free_r>
   1ea12:	2300      	movs	r3, #0
   1ea14:	6363      	str	r3, [r4, #52]	; 0x34
   1ea16:	2300      	movs	r3, #0
   1ea18:	61a3      	str	r3, [r4, #24]
   1ea1a:	6063      	str	r3, [r4, #4]
   1ea1c:	89a3      	ldrh	r3, [r4, #12]
   1ea1e:	061b      	lsls	r3, r3, #24
   1ea20:	d503      	bpl.n	1ea2a <setvbuf+0x7a>
   1ea22:	6921      	ldr	r1, [r4, #16]
   1ea24:	4630      	mov	r0, r6
   1ea26:	f7fe fef9 	bl	1d81c <_free_r>
   1ea2a:	89a3      	ldrh	r3, [r4, #12]
   1ea2c:	f1b8 0f02 	cmp.w	r8, #2
   1ea30:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   1ea34:	f023 0303 	bic.w	r3, r3, #3
   1ea38:	81a3      	strh	r3, [r4, #12]
   1ea3a:	d01e      	beq.n	1ea7a <setvbuf+0xca>
   1ea3c:	ab01      	add	r3, sp, #4
   1ea3e:	466a      	mov	r2, sp
   1ea40:	4621      	mov	r1, r4
   1ea42:	4630      	mov	r0, r6
   1ea44:	f002 ffee 	bl	21a24 <__swhatbuf_r>
   1ea48:	89a3      	ldrh	r3, [r4, #12]
   1ea4a:	4318      	orrs	r0, r3
   1ea4c:	81a0      	strh	r0, [r4, #12]
   1ea4e:	b90d      	cbnz	r5, 1ea54 <setvbuf+0xa4>
   1ea50:	9d00      	ldr	r5, [sp, #0]
   1ea52:	e000      	b.n	1ea56 <setvbuf+0xa6>
   1ea54:	bb2f      	cbnz	r7, 1eaa2 <setvbuf+0xf2>
   1ea56:	4628      	mov	r0, r5
   1ea58:	f7fe fc2c 	bl	1d2b4 <malloc>
   1ea5c:	4607      	mov	r7, r0
   1ea5e:	b9d0      	cbnz	r0, 1ea96 <setvbuf+0xe6>
   1ea60:	f8dd 9000 	ldr.w	r9, [sp]
   1ea64:	45a9      	cmp	r9, r5
   1ea66:	d102      	bne.n	1ea6e <setvbuf+0xbe>
   1ea68:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ea6c:	e006      	b.n	1ea7c <setvbuf+0xcc>
   1ea6e:	4648      	mov	r0, r9
   1ea70:	f7fe fc20 	bl	1d2b4 <malloc>
   1ea74:	4607      	mov	r7, r0
   1ea76:	b978      	cbnz	r0, 1ea98 <setvbuf+0xe8>
   1ea78:	e7f6      	b.n	1ea68 <setvbuf+0xb8>
   1ea7a:	2000      	movs	r0, #0
   1ea7c:	89a3      	ldrh	r3, [r4, #12]
   1ea7e:	f043 0302 	orr.w	r3, r3, #2
   1ea82:	81a3      	strh	r3, [r4, #12]
   1ea84:	2300      	movs	r3, #0
   1ea86:	60a3      	str	r3, [r4, #8]
   1ea88:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1ea8c:	6023      	str	r3, [r4, #0]
   1ea8e:	6123      	str	r3, [r4, #16]
   1ea90:	2301      	movs	r3, #1
   1ea92:	6163      	str	r3, [r4, #20]
   1ea94:	e02a      	b.n	1eaec <setvbuf+0x13c>
   1ea96:	46a9      	mov	r9, r5
   1ea98:	464d      	mov	r5, r9
   1ea9a:	89a3      	ldrh	r3, [r4, #12]
   1ea9c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1eaa0:	81a3      	strh	r3, [r4, #12]
   1eaa2:	69b3      	ldr	r3, [r6, #24]
   1eaa4:	b913      	cbnz	r3, 1eaac <setvbuf+0xfc>
   1eaa6:	4630      	mov	r0, r6
   1eaa8:	f7fe fa40 	bl	1cf2c <__sinit>
   1eaac:	f1b8 0f01 	cmp.w	r8, #1
   1eab0:	bf08      	it	eq
   1eab2:	89a3      	ldrheq	r3, [r4, #12]
   1eab4:	6027      	str	r7, [r4, #0]
   1eab6:	bf04      	itt	eq
   1eab8:	f043 0301 	orreq.w	r3, r3, #1
   1eabc:	81a3      	strheq	r3, [r4, #12]
   1eabe:	89a3      	ldrh	r3, [r4, #12]
   1eac0:	6127      	str	r7, [r4, #16]
   1eac2:	f003 0008 	and.w	r0, r3, #8
   1eac6:	b280      	uxth	r0, r0
   1eac8:	6165      	str	r5, [r4, #20]
   1eaca:	b158      	cbz	r0, 1eae4 <setvbuf+0x134>
   1eacc:	f013 0301 	ands.w	r3, r3, #1
   1ead0:	f04f 0000 	mov.w	r0, #0
   1ead4:	bf1d      	ittte	ne
   1ead6:	426d      	negne	r5, r5
   1ead8:	60a0      	strne	r0, [r4, #8]
   1eada:	61a5      	strne	r5, [r4, #24]
   1eadc:	60a5      	streq	r5, [r4, #8]
   1eade:	bf08      	it	eq
   1eae0:	4618      	moveq	r0, r3
   1eae2:	e003      	b.n	1eaec <setvbuf+0x13c>
   1eae4:	60a0      	str	r0, [r4, #8]
   1eae6:	e001      	b.n	1eaec <setvbuf+0x13c>
   1eae8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1eaec:	b003      	add	sp, #12
   1eaee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1eaf2:	bf00      	nop
   1eaf4:	2007c140 	.word	0x2007c140
   1eaf8:	00026334 	.word	0x00026334
   1eafc:	00026354 	.word	0x00026354
   1eb00:	00026374 	.word	0x00026374

0001eb04 <nanf>:
nanf():
   1eb04:	4800      	ldr	r0, [pc, #0]	; (1eb08 <nanf+0x4>)
   1eb06:	4770      	bx	lr
   1eb08:	7fc00000 	.word	0x7fc00000

0001eb0c <_raise_r>:
_raise_r():
   1eb0c:	291f      	cmp	r1, #31
   1eb0e:	b538      	push	{r3, r4, r5, lr}
   1eb10:	4604      	mov	r4, r0
   1eb12:	460d      	mov	r5, r1
   1eb14:	d904      	bls.n	1eb20 <_raise_r+0x14>
   1eb16:	2316      	movs	r3, #22
   1eb18:	6003      	str	r3, [r0, #0]
   1eb1a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1eb1e:	bd38      	pop	{r3, r4, r5, pc}
   1eb20:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1eb22:	b112      	cbz	r2, 1eb2a <_raise_r+0x1e>
   1eb24:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1eb28:	b94b      	cbnz	r3, 1eb3e <_raise_r+0x32>
   1eb2a:	4620      	mov	r0, r4
   1eb2c:	f000 f832 	bl	1eb94 <_getpid_r>
   1eb30:	462a      	mov	r2, r5
   1eb32:	4601      	mov	r1, r0
   1eb34:	4620      	mov	r0, r4
   1eb36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1eb3a:	f000 b819 	b.w	1eb70 <_kill_r>
   1eb3e:	2b01      	cmp	r3, #1
   1eb40:	d00c      	beq.n	1eb5c <_raise_r+0x50>
   1eb42:	1c59      	adds	r1, r3, #1
   1eb44:	d103      	bne.n	1eb4e <_raise_r+0x42>
   1eb46:	2316      	movs	r3, #22
   1eb48:	6003      	str	r3, [r0, #0]
   1eb4a:	2001      	movs	r0, #1
   1eb4c:	bd38      	pop	{r3, r4, r5, pc}
   1eb4e:	2400      	movs	r4, #0
   1eb50:	4628      	mov	r0, r5
   1eb52:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   1eb56:	4798      	blx	r3
   1eb58:	4620      	mov	r0, r4
   1eb5a:	bd38      	pop	{r3, r4, r5, pc}
   1eb5c:	2000      	movs	r0, #0
   1eb5e:	bd38      	pop	{r3, r4, r5, pc}

0001eb60 <raise>:
raise():
   1eb60:	4b02      	ldr	r3, [pc, #8]	; (1eb6c <raise+0xc>)
   1eb62:	4601      	mov	r1, r0
   1eb64:	6818      	ldr	r0, [r3, #0]
   1eb66:	f7ff bfd1 	b.w	1eb0c <_raise_r>
   1eb6a:	bf00      	nop
   1eb6c:	2007c140 	.word	0x2007c140

0001eb70 <_kill_r>:
_kill_r():
   1eb70:	b538      	push	{r3, r4, r5, lr}
   1eb72:	4c07      	ldr	r4, [pc, #28]	; (1eb90 <_kill_r+0x20>)
   1eb74:	2300      	movs	r3, #0
   1eb76:	4605      	mov	r5, r0
   1eb78:	4608      	mov	r0, r1
   1eb7a:	4611      	mov	r1, r2
   1eb7c:	6023      	str	r3, [r4, #0]
   1eb7e:	f7f2 fc95 	bl	114ac <_kill>
   1eb82:	1c43      	adds	r3, r0, #1
   1eb84:	d102      	bne.n	1eb8c <_kill_r+0x1c>
   1eb86:	6823      	ldr	r3, [r4, #0]
   1eb88:	b103      	cbz	r3, 1eb8c <_kill_r+0x1c>
   1eb8a:	602b      	str	r3, [r5, #0]
   1eb8c:	bd38      	pop	{r3, r4, r5, pc}
   1eb8e:	bf00      	nop
   1eb90:	2007c790 	.word	0x2007c790

0001eb94 <_getpid_r>:
_getpid_r():
   1eb94:	f7f2 bc9a 	b.w	114cc <_getpid>

0001eb98 <siprintf>:
sprintf():
   1eb98:	b40e      	push	{r1, r2, r3}
   1eb9a:	b500      	push	{lr}
   1eb9c:	f44f 7102 	mov.w	r1, #520	; 0x208
   1eba0:	b09c      	sub	sp, #112	; 0x70
   1eba2:	f8ad 1014 	strh.w	r1, [sp, #20]
   1eba6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1ebaa:	9104      	str	r1, [sp, #16]
   1ebac:	9107      	str	r1, [sp, #28]
   1ebae:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1ebb2:	ab1d      	add	r3, sp, #116	; 0x74
   1ebb4:	9002      	str	r0, [sp, #8]
   1ebb6:	9006      	str	r0, [sp, #24]
   1ebb8:	4808      	ldr	r0, [pc, #32]	; (1ebdc <siprintf+0x44>)
   1ebba:	f853 2b04 	ldr.w	r2, [r3], #4
   1ebbe:	f8ad 1016 	strh.w	r1, [sp, #22]
   1ebc2:	6800      	ldr	r0, [r0, #0]
   1ebc4:	a902      	add	r1, sp, #8
   1ebc6:	9301      	str	r3, [sp, #4]
   1ebc8:	f003 fc02 	bl	223d0 <_svfiprintf_r>
   1ebcc:	9b02      	ldr	r3, [sp, #8]
   1ebce:	2200      	movs	r2, #0
   1ebd0:	701a      	strb	r2, [r3, #0]
   1ebd2:	b01c      	add	sp, #112	; 0x70
   1ebd4:	f85d eb04 	ldr.w	lr, [sp], #4
   1ebd8:	b003      	add	sp, #12
   1ebda:	4770      	bx	lr
   1ebdc:	2007c140 	.word	0x2007c140

0001ebe0 <siscanf>:
sscanf():
   1ebe0:	b40e      	push	{r1, r2, r3}
   1ebe2:	b530      	push	{r4, r5, lr}
   1ebe4:	b09c      	sub	sp, #112	; 0x70
   1ebe6:	ac1f      	add	r4, sp, #124	; 0x7c
   1ebe8:	f44f 7201 	mov.w	r2, #516	; 0x204
   1ebec:	f854 5b04 	ldr.w	r5, [r4], #4
   1ebf0:	f8ad 2014 	strh.w	r2, [sp, #20]
   1ebf4:	9002      	str	r0, [sp, #8]
   1ebf6:	9006      	str	r0, [sp, #24]
   1ebf8:	f000 f8af 	bl	1ed5a <strlen>
   1ebfc:	4b0b      	ldr	r3, [pc, #44]	; (1ec2c <siscanf+0x4c>)
   1ebfe:	9003      	str	r0, [sp, #12]
   1ec00:	930b      	str	r3, [sp, #44]	; 0x2c
   1ec02:	2300      	movs	r3, #0
   1ec04:	930f      	str	r3, [sp, #60]	; 0x3c
   1ec06:	9314      	str	r3, [sp, #80]	; 0x50
   1ec08:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1ec0c:	9007      	str	r0, [sp, #28]
   1ec0e:	4808      	ldr	r0, [pc, #32]	; (1ec30 <siscanf+0x50>)
   1ec10:	f8ad 3016 	strh.w	r3, [sp, #22]
   1ec14:	462a      	mov	r2, r5
   1ec16:	4623      	mov	r3, r4
   1ec18:	a902      	add	r1, sp, #8
   1ec1a:	6800      	ldr	r0, [r0, #0]
   1ec1c:	9401      	str	r4, [sp, #4]
   1ec1e:	f003 fd27 	bl	22670 <__ssvfiscanf_r>
   1ec22:	b01c      	add	sp, #112	; 0x70
   1ec24:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1ec28:	b003      	add	sp, #12
   1ec2a:	4770      	bx	lr
   1ec2c:	0001ec57 	.word	0x0001ec57
   1ec30:	2007c140 	.word	0x2007c140

0001ec34 <__sread>:
__sread():
   1ec34:	b510      	push	{r4, lr}
   1ec36:	460c      	mov	r4, r1
   1ec38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ec3c:	f004 fa84 	bl	23148 <_read_r>
   1ec40:	2800      	cmp	r0, #0
   1ec42:	bfab      	itete	ge
   1ec44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   1ec46:	89a3      	ldrhlt	r3, [r4, #12]
   1ec48:	181b      	addge	r3, r3, r0
   1ec4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   1ec4e:	bfac      	ite	ge
   1ec50:	6563      	strge	r3, [r4, #84]	; 0x54
   1ec52:	81a3      	strhlt	r3, [r4, #12]
   1ec54:	bd10      	pop	{r4, pc}

0001ec56 <__seofread>:
__seofread():
   1ec56:	2000      	movs	r0, #0
   1ec58:	4770      	bx	lr

0001ec5a <__swrite>:
__swrite():
   1ec5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ec5e:	461f      	mov	r7, r3
   1ec60:	898b      	ldrh	r3, [r1, #12]
   1ec62:	4605      	mov	r5, r0
   1ec64:	05db      	lsls	r3, r3, #23
   1ec66:	460c      	mov	r4, r1
   1ec68:	4616      	mov	r6, r2
   1ec6a:	d505      	bpl.n	1ec78 <__swrite+0x1e>
   1ec6c:	2302      	movs	r3, #2
   1ec6e:	2200      	movs	r2, #0
   1ec70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ec74:	f002 fec4 	bl	21a00 <_lseek_r>
   1ec78:	89a3      	ldrh	r3, [r4, #12]
   1ec7a:	4632      	mov	r2, r6
   1ec7c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1ec80:	81a3      	strh	r3, [r4, #12]
   1ec82:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1ec86:	463b      	mov	r3, r7
   1ec88:	4628      	mov	r0, r5
   1ec8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1ec8e:	f001 badd 	b.w	2024c <_write_r>

0001ec92 <__sseek>:
__sseek():
   1ec92:	b510      	push	{r4, lr}
   1ec94:	460c      	mov	r4, r1
   1ec96:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ec9a:	f002 feb1 	bl	21a00 <_lseek_r>
   1ec9e:	1c43      	adds	r3, r0, #1
   1eca0:	89a3      	ldrh	r3, [r4, #12]
   1eca2:	bf15      	itete	ne
   1eca4:	6560      	strne	r0, [r4, #84]	; 0x54
   1eca6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1ecaa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1ecae:	81a3      	strheq	r3, [r4, #12]
   1ecb0:	bf18      	it	ne
   1ecb2:	81a3      	strhne	r3, [r4, #12]
   1ecb4:	bd10      	pop	{r4, pc}

0001ecb6 <__sclose>:
__sclose():
   1ecb6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ecba:	f001 bb83 	b.w	203c4 <_close_r>
   1ecbe:	ffff 4b0d 	vtbl.8	d20, {d15-d18}, d13

0001ecc0 <strcasecmp>:
strcasecmp():
   1ecc0:	4b0d      	ldr	r3, [pc, #52]	; (1ecf8 <strcasecmp+0x38>)
   1ecc2:	b530      	push	{r4, r5, lr}
   1ecc4:	681d      	ldr	r5, [r3, #0]
   1ecc6:	f810 3b01 	ldrb.w	r3, [r0], #1
   1ecca:	18ea      	adds	r2, r5, r3
   1eccc:	7852      	ldrb	r2, [r2, #1]
   1ecce:	f002 0203 	and.w	r2, r2, #3
   1ecd2:	2a01      	cmp	r2, #1
   1ecd4:	f811 2b01 	ldrb.w	r2, [r1], #1
   1ecd8:	bf08      	it	eq
   1ecda:	3320      	addeq	r3, #32
   1ecdc:	18ac      	adds	r4, r5, r2
   1ecde:	7864      	ldrb	r4, [r4, #1]
   1ece0:	f004 0403 	and.w	r4, r4, #3
   1ece4:	2c01      	cmp	r4, #1
   1ece6:	bf08      	it	eq
   1ece8:	3220      	addeq	r2, #32
   1ecea:	1a9b      	subs	r3, r3, r2
   1ecec:	d101      	bne.n	1ecf2 <strcasecmp+0x32>
   1ecee:	2a00      	cmp	r2, #0
   1ecf0:	d1e9      	bne.n	1ecc6 <strcasecmp+0x6>
   1ecf2:	4618      	mov	r0, r3
   1ecf4:	bd30      	pop	{r4, r5, pc}
   1ecf6:	bf00      	nop
   1ecf8:	2007c0dc 	.word	0x2007c0dc

0001ecfc <strcat>:
strcat():
   1ecfc:	4602      	mov	r2, r0
   1ecfe:	b510      	push	{r4, lr}
   1ed00:	4613      	mov	r3, r2
   1ed02:	781c      	ldrb	r4, [r3, #0]
   1ed04:	3201      	adds	r2, #1
   1ed06:	2c00      	cmp	r4, #0
   1ed08:	d1fa      	bne.n	1ed00 <strcat+0x4>
   1ed0a:	3b01      	subs	r3, #1
   1ed0c:	f811 2b01 	ldrb.w	r2, [r1], #1
   1ed10:	f803 2f01 	strb.w	r2, [r3, #1]!
   1ed14:	2a00      	cmp	r2, #0
   1ed16:	d1f9      	bne.n	1ed0c <strcat+0x10>
   1ed18:	bd10      	pop	{r4, pc}

0001ed1a <strchr>:
strchr():
   1ed1a:	b2c9      	uxtb	r1, r1
   1ed1c:	4603      	mov	r3, r0
   1ed1e:	f810 2b01 	ldrb.w	r2, [r0], #1
   1ed22:	b11a      	cbz	r2, 1ed2c <strchr+0x12>
   1ed24:	4291      	cmp	r1, r2
   1ed26:	d1f9      	bne.n	1ed1c <strchr+0x2>
   1ed28:	4618      	mov	r0, r3
   1ed2a:	4770      	bx	lr
   1ed2c:	2900      	cmp	r1, #0
   1ed2e:	bf0c      	ite	eq
   1ed30:	4618      	moveq	r0, r3
   1ed32:	2000      	movne	r0, #0
   1ed34:	4770      	bx	lr

0001ed36 <strcmp>:
strcmp():
   1ed36:	f810 2b01 	ldrb.w	r2, [r0], #1
   1ed3a:	f811 3b01 	ldrb.w	r3, [r1], #1
   1ed3e:	2a01      	cmp	r2, #1
   1ed40:	bf28      	it	cs
   1ed42:	429a      	cmpcs	r2, r3
   1ed44:	d0f7      	beq.n	1ed36 <strcmp>
   1ed46:	1ad0      	subs	r0, r2, r3
   1ed48:	4770      	bx	lr

0001ed4a <strcpy>:
strcpy():
   1ed4a:	4603      	mov	r3, r0
   1ed4c:	f811 2b01 	ldrb.w	r2, [r1], #1
   1ed50:	f803 2b01 	strb.w	r2, [r3], #1
   1ed54:	2a00      	cmp	r2, #0
   1ed56:	d1f9      	bne.n	1ed4c <strcpy+0x2>
   1ed58:	4770      	bx	lr

0001ed5a <strlen>:
strlen():
   1ed5a:	4603      	mov	r3, r0
   1ed5c:	f813 2b01 	ldrb.w	r2, [r3], #1
   1ed60:	2a00      	cmp	r2, #0
   1ed62:	d1fb      	bne.n	1ed5c <strlen+0x2>
   1ed64:	1a18      	subs	r0, r3, r0
   1ed66:	3801      	subs	r0, #1
   1ed68:	4770      	bx	lr
   1ed6a:	ffff 4b0f 	vtbl.8	d20, {d15-d18}, d15

0001ed6c <strncasecmp>:
strncasecmp():
   1ed6c:	4b0f      	ldr	r3, [pc, #60]	; (1edac <strncasecmp+0x40>)
   1ed6e:	b570      	push	{r4, r5, r6, lr}
   1ed70:	681e      	ldr	r6, [r3, #0]
   1ed72:	440a      	add	r2, r1
   1ed74:	4291      	cmp	r1, r2
   1ed76:	d016      	beq.n	1eda6 <strncasecmp+0x3a>
   1ed78:	f810 3b01 	ldrb.w	r3, [r0], #1
   1ed7c:	18f4      	adds	r4, r6, r3
   1ed7e:	7864      	ldrb	r4, [r4, #1]
   1ed80:	f004 0403 	and.w	r4, r4, #3
   1ed84:	2c01      	cmp	r4, #1
   1ed86:	f811 4b01 	ldrb.w	r4, [r1], #1
   1ed8a:	bf08      	it	eq
   1ed8c:	3320      	addeq	r3, #32
   1ed8e:	1935      	adds	r5, r6, r4
   1ed90:	786d      	ldrb	r5, [r5, #1]
   1ed92:	f005 0503 	and.w	r5, r5, #3
   1ed96:	2d01      	cmp	r5, #1
   1ed98:	bf08      	it	eq
   1ed9a:	3420      	addeq	r4, #32
   1ed9c:	1b1b      	subs	r3, r3, r4
   1ed9e:	d103      	bne.n	1eda8 <strncasecmp+0x3c>
   1eda0:	2c00      	cmp	r4, #0
   1eda2:	d1e7      	bne.n	1ed74 <strncasecmp+0x8>
   1eda4:	e000      	b.n	1eda8 <strncasecmp+0x3c>
   1eda6:	2300      	movs	r3, #0
   1eda8:	4618      	mov	r0, r3
   1edaa:	bd70      	pop	{r4, r5, r6, pc}
   1edac:	2007c0dc 	.word	0x2007c0dc

0001edb0 <strncmp>:
strncmp():
   1edb0:	b530      	push	{r4, r5, lr}
   1edb2:	b182      	cbz	r2, 1edd6 <strncmp+0x26>
   1edb4:	1e45      	subs	r5, r0, #1
   1edb6:	3901      	subs	r1, #1
   1edb8:	f815 3f01 	ldrb.w	r3, [r5, #1]!
   1edbc:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   1edc0:	42a3      	cmp	r3, r4
   1edc2:	d106      	bne.n	1edd2 <strncmp+0x22>
   1edc4:	43ec      	mvns	r4, r5
   1edc6:	4414      	add	r4, r2
   1edc8:	42e0      	cmn	r0, r4
   1edca:	d001      	beq.n	1edd0 <strncmp+0x20>
   1edcc:	2b00      	cmp	r3, #0
   1edce:	d1f3      	bne.n	1edb8 <strncmp+0x8>
   1edd0:	461c      	mov	r4, r3
   1edd2:	1b18      	subs	r0, r3, r4
   1edd4:	bd30      	pop	{r4, r5, pc}
   1edd6:	4610      	mov	r0, r2
   1edd8:	bd30      	pop	{r4, r5, pc}

0001edda <strncpy>:
strncpy():
   1edda:	4603      	mov	r3, r0
   1eddc:	b510      	push	{r4, lr}
   1edde:	b142      	cbz	r2, 1edf2 <strncpy+0x18>
   1ede0:	f811 4b01 	ldrb.w	r4, [r1], #1
   1ede4:	3a01      	subs	r2, #1
   1ede6:	f803 4b01 	strb.w	r4, [r3], #1
   1edea:	2c00      	cmp	r4, #0
   1edec:	d1f7      	bne.n	1edde <strncpy+0x4>
   1edee:	441a      	add	r2, r3
   1edf0:	e000      	b.n	1edf4 <strncpy+0x1a>
   1edf2:	bd10      	pop	{r4, pc}
   1edf4:	4293      	cmp	r3, r2
   1edf6:	d002      	beq.n	1edfe <strncpy+0x24>
   1edf8:	f803 4b01 	strb.w	r4, [r3], #1
   1edfc:	e7fa      	b.n	1edf4 <strncpy+0x1a>
   1edfe:	bd10      	pop	{r4, pc}

0001ee00 <strrchr>:
strrchr():
   1ee00:	b538      	push	{r3, r4, r5, lr}
   1ee02:	4603      	mov	r3, r0
   1ee04:	460d      	mov	r5, r1
   1ee06:	b141      	cbz	r1, 1ee1a <strrchr+0x1a>
   1ee08:	2400      	movs	r4, #0
   1ee0a:	4629      	mov	r1, r5
   1ee0c:	4618      	mov	r0, r3
   1ee0e:	f7ff ff84 	bl	1ed1a <strchr>
   1ee12:	b130      	cbz	r0, 1ee22 <strrchr+0x22>
   1ee14:	1c43      	adds	r3, r0, #1
   1ee16:	4604      	mov	r4, r0
   1ee18:	e7f7      	b.n	1ee0a <strrchr+0xa>
   1ee1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ee1e:	f7ff bf7c 	b.w	1ed1a <strchr>
   1ee22:	4620      	mov	r0, r4
   1ee24:	bd38      	pop	{r3, r4, r5, pc}

0001ee26 <strstr>:
strstr():
   1ee26:	b5f0      	push	{r4, r5, r6, r7, lr}
   1ee28:	7803      	ldrb	r3, [r0, #0]
   1ee2a:	b963      	cbnz	r3, 1ee46 <strstr+0x20>
   1ee2c:	780b      	ldrb	r3, [r1, #0]
   1ee2e:	2b00      	cmp	r3, #0
   1ee30:	bf18      	it	ne
   1ee32:	2000      	movne	r0, #0
   1ee34:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ee36:	f815 2f01 	ldrb.w	r2, [r5, #1]!
   1ee3a:	b162      	cbz	r2, 1ee56 <strstr+0x30>
   1ee3c:	f814 7f01 	ldrb.w	r7, [r4, #1]!
   1ee40:	4630      	mov	r0, r6
   1ee42:	4297      	cmp	r7, r2
   1ee44:	d0f7      	beq.n	1ee36 <strstr+0x10>
   1ee46:	4603      	mov	r3, r0
   1ee48:	1c46      	adds	r6, r0, #1
   1ee4a:	7800      	ldrb	r0, [r0, #0]
   1ee4c:	b110      	cbz	r0, 1ee54 <strstr+0x2e>
   1ee4e:	1e4d      	subs	r5, r1, #1
   1ee50:	1e5c      	subs	r4, r3, #1
   1ee52:	e7f0      	b.n	1ee36 <strstr+0x10>
   1ee54:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ee56:	4618      	mov	r0, r3
   1ee58:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001ee5a <sulp>:
sulp():
   1ee5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ee5e:	460f      	mov	r7, r1
   1ee60:	4690      	mov	r8, r2
   1ee62:	f003 f905 	bl	22070 <__ulp>
   1ee66:	4604      	mov	r4, r0
   1ee68:	460d      	mov	r5, r1
   1ee6a:	f1b8 0f00 	cmp.w	r8, #0
   1ee6e:	d011      	beq.n	1ee94 <sulp+0x3a>
   1ee70:	f3c7 530a 	ubfx	r3, r7, #20, #11
   1ee74:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1ee78:	2b00      	cmp	r3, #0
   1ee7a:	dd0b      	ble.n	1ee94 <sulp+0x3a>
   1ee7c:	051b      	lsls	r3, r3, #20
   1ee7e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   1ee82:	2400      	movs	r4, #0
   1ee84:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   1ee88:	4622      	mov	r2, r4
   1ee8a:	462b      	mov	r3, r5
   1ee8c:	f7fd f896 	bl	1bfbc <__aeabi_dmul>
   1ee90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ee94:	4620      	mov	r0, r4
   1ee96:	4629      	mov	r1, r5
   1ee98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ee9c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

0001eea0 <_strtod_r>:
_strtod_r():
   1eea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eea4:	4682      	mov	sl, r0
   1eea6:	460c      	mov	r4, r1
   1eea8:	b09d      	sub	sp, #116	; 0x74
   1eeaa:	2300      	movs	r3, #0
   1eeac:	9213      	str	r2, [sp, #76]	; 0x4c
   1eeae:	9318      	str	r3, [sp, #96]	; 0x60
   1eeb0:	f04f 0800 	mov.w	r8, #0
   1eeb4:	f04f 0900 	mov.w	r9, #0
   1eeb8:	9117      	str	r1, [sp, #92]	; 0x5c
   1eeba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1eebc:	781a      	ldrb	r2, [r3, #0]
   1eebe:	2a0d      	cmp	r2, #13
   1eec0:	d805      	bhi.n	1eece <_strtod_r+0x2e>
   1eec2:	2a09      	cmp	r2, #9
   1eec4:	d213      	bcs.n	1eeee <_strtod_r+0x4e>
   1eec6:	2a00      	cmp	r2, #0
   1eec8:	f000 81ad 	beq.w	1f226 <_strtod_r+0x386>
   1eecc:	e012      	b.n	1eef4 <_strtod_r+0x54>
   1eece:	2a2b      	cmp	r2, #43	; 0x2b
   1eed0:	d004      	beq.n	1eedc <_strtod_r+0x3c>
   1eed2:	2a2d      	cmp	r2, #45	; 0x2d
   1eed4:	d004      	beq.n	1eee0 <_strtod_r+0x40>
   1eed6:	2a20      	cmp	r2, #32
   1eed8:	d10c      	bne.n	1eef4 <_strtod_r+0x54>
   1eeda:	e008      	b.n	1eeee <_strtod_r+0x4e>
   1eedc:	2200      	movs	r2, #0
   1eede:	e000      	b.n	1eee2 <_strtod_r+0x42>
   1eee0:	2201      	movs	r2, #1
   1eee2:	920c      	str	r2, [sp, #48]	; 0x30
   1eee4:	1c5a      	adds	r2, r3, #1
   1eee6:	9217      	str	r2, [sp, #92]	; 0x5c
   1eee8:	785b      	ldrb	r3, [r3, #1]
   1eeea:	b92b      	cbnz	r3, 1eef8 <_strtod_r+0x58>
   1eeec:	e19b      	b.n	1f226 <_strtod_r+0x386>
   1eeee:	3301      	adds	r3, #1
   1eef0:	9317      	str	r3, [sp, #92]	; 0x5c
   1eef2:	e7e2      	b.n	1eeba <_strtod_r+0x1a>
   1eef4:	2300      	movs	r3, #0
   1eef6:	930c      	str	r3, [sp, #48]	; 0x30
   1eef8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   1eefa:	782b      	ldrb	r3, [r5, #0]
   1eefc:	2b30      	cmp	r3, #48	; 0x30
   1eefe:	d15c      	bne.n	1efba <_strtod_r+0x11a>
   1ef00:	786b      	ldrb	r3, [r5, #1]
   1ef02:	2b58      	cmp	r3, #88	; 0x58
   1ef04:	d001      	beq.n	1ef0a <_strtod_r+0x6a>
   1ef06:	2b78      	cmp	r3, #120	; 0x78
   1ef08:	d14c      	bne.n	1efa4 <_strtod_r+0x104>
   1ef0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1ef0c:	4aa8      	ldr	r2, [pc, #672]	; (1f1b0 <_strtod_r+0x310>)
   1ef0e:	9301      	str	r3, [sp, #4]
   1ef10:	ab18      	add	r3, sp, #96	; 0x60
   1ef12:	9300      	str	r3, [sp, #0]
   1ef14:	a917      	add	r1, sp, #92	; 0x5c
   1ef16:	ab19      	add	r3, sp, #100	; 0x64
   1ef18:	4650      	mov	r0, sl
   1ef1a:	f002 f9aa 	bl	21272 <__gethex>
   1ef1e:	f010 0607 	ands.w	r6, r0, #7
   1ef22:	4604      	mov	r4, r0
   1ef24:	f000 8585 	beq.w	1fa32 <_strtod_r+0xb92>
   1ef28:	2e06      	cmp	r6, #6
   1ef2a:	d105      	bne.n	1ef38 <_strtod_r+0x98>
   1ef2c:	3501      	adds	r5, #1
   1ef2e:	2300      	movs	r3, #0
   1ef30:	9517      	str	r5, [sp, #92]	; 0x5c
   1ef32:	930c      	str	r3, [sp, #48]	; 0x30
   1ef34:	f000 bd7d 	b.w	1fa32 <_strtod_r+0xb92>
   1ef38:	9a18      	ldr	r2, [sp, #96]	; 0x60
   1ef3a:	b13a      	cbz	r2, 1ef4c <_strtod_r+0xac>
   1ef3c:	2135      	movs	r1, #53	; 0x35
   1ef3e:	a81a      	add	r0, sp, #104	; 0x68
   1ef40:	f003 f97d 	bl	2223e <__copybits>
   1ef44:	9918      	ldr	r1, [sp, #96]	; 0x60
   1ef46:	4650      	mov	r0, sl
   1ef48:	f002 fe01 	bl	21b4e <_Bfree>
   1ef4c:	2e06      	cmp	r6, #6
   1ef4e:	d822      	bhi.n	1ef96 <_strtod_r+0xf6>
   1ef50:	e8df f006 	tbb	[pc, r6]
   1ef54:	18080d04 	.word	0x18080d04
   1ef58:	0d1d      	.short	0x0d1d
   1ef5a:	04          	.byte	0x04
   1ef5b:	00          	.byte	0x00
   1ef5c:	f04f 0900 	mov.w	r9, #0
   1ef60:	46c8      	mov	r8, r9
   1ef62:	e018      	b.n	1ef96 <_strtod_r+0xf6>
   1ef64:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
   1ef68:	f8dd 906c 	ldr.w	r9, [sp, #108]	; 0x6c
   1ef6c:	e013      	b.n	1ef96 <_strtod_r+0xf6>
   1ef6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1ef70:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1ef72:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   1ef76:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1ef7a:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
   1ef7e:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
   1ef82:	e008      	b.n	1ef96 <_strtod_r+0xf6>
   1ef84:	f8df 922c 	ldr.w	r9, [pc, #556]	; 1f1b4 <_strtod_r+0x314>
   1ef88:	f04f 0800 	mov.w	r8, #0
   1ef8c:	e003      	b.n	1ef96 <_strtod_r+0xf6>
   1ef8e:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
   1ef92:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
   1ef96:	0721      	lsls	r1, r4, #28
   1ef98:	f140 854b 	bpl.w	1fa32 <_strtod_r+0xb92>
   1ef9c:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
   1efa0:	f000 bd47 	b.w	1fa32 <_strtod_r+0xb92>
   1efa4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1efa6:	1c5a      	adds	r2, r3, #1
   1efa8:	9217      	str	r2, [sp, #92]	; 0x5c
   1efaa:	785b      	ldrb	r3, [r3, #1]
   1efac:	2b30      	cmp	r3, #48	; 0x30
   1efae:	d0f9      	beq.n	1efa4 <_strtod_r+0x104>
   1efb0:	2b00      	cmp	r3, #0
   1efb2:	f000 853e 	beq.w	1fa32 <_strtod_r+0xb92>
   1efb6:	2301      	movs	r3, #1
   1efb8:	e000      	b.n	1efbc <_strtod_r+0x11c>
   1efba:	2300      	movs	r3, #0
   1efbc:	9305      	str	r3, [sp, #20]
   1efbe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1efc0:	220a      	movs	r2, #10
   1efc2:	9306      	str	r3, [sp, #24]
   1efc4:	2300      	movs	r3, #0
   1efc6:	469b      	mov	fp, r3
   1efc8:	9302      	str	r3, [sp, #8]
   1efca:	9304      	str	r3, [sp, #16]
   1efcc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   1efce:	782e      	ldrb	r6, [r5, #0]
   1efd0:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1efd4:	b2d9      	uxtb	r1, r3
   1efd6:	2909      	cmp	r1, #9
   1efd8:	d811      	bhi.n	1effe <_strtod_r+0x15e>
   1efda:	f1bb 0f08 	cmp.w	fp, #8
   1efde:	bfd5      	itete	le
   1efe0:	9904      	ldrle	r1, [sp, #16]
   1efe2:	9902      	ldrgt	r1, [sp, #8]
   1efe4:	fb02 3301 	mlale	r3, r2, r1, r3
   1efe8:	fb02 3301 	mlagt	r3, r2, r1, r3
   1efec:	f105 0501 	add.w	r5, r5, #1
   1eff0:	bfd4      	ite	le
   1eff2:	9304      	strle	r3, [sp, #16]
   1eff4:	9302      	strgt	r3, [sp, #8]
   1eff6:	f10b 0b01 	add.w	fp, fp, #1
   1effa:	9517      	str	r5, [sp, #92]	; 0x5c
   1effc:	e7e6      	b.n	1efcc <_strtod_r+0x12c>
   1effe:	4650      	mov	r0, sl
   1f000:	f002 fcfa 	bl	219f8 <_localeconv_r>
   1f004:	6807      	ldr	r7, [r0, #0]
   1f006:	4650      	mov	r0, sl
   1f008:	f002 fcf6 	bl	219f8 <_localeconv_r>
   1f00c:	6800      	ldr	r0, [r0, #0]
   1f00e:	f7ff fea4 	bl	1ed5a <strlen>
   1f012:	4639      	mov	r1, r7
   1f014:	4602      	mov	r2, r0
   1f016:	4628      	mov	r0, r5
   1f018:	f7ff feca 	bl	1edb0 <strncmp>
   1f01c:	4607      	mov	r7, r0
   1f01e:	b128      	cbz	r0, 1f02c <_strtod_r+0x18c>
   1f020:	2000      	movs	r0, #0
   1f022:	4633      	mov	r3, r6
   1f024:	465d      	mov	r5, fp
   1f026:	4602      	mov	r2, r0
   1f028:	4601      	mov	r1, r0
   1f02a:	e05a      	b.n	1f0e2 <_strtod_r+0x242>
   1f02c:	4650      	mov	r0, sl
   1f02e:	f002 fce3 	bl	219f8 <_localeconv_r>
   1f032:	6800      	ldr	r0, [r0, #0]
   1f034:	f7ff fe91 	bl	1ed5a <strlen>
   1f038:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f03a:	181a      	adds	r2, r3, r0
   1f03c:	9217      	str	r2, [sp, #92]	; 0x5c
   1f03e:	5c1b      	ldrb	r3, [r3, r0]
   1f040:	f1bb 0f00 	cmp.w	fp, #0
   1f044:	d145      	bne.n	1f0d2 <_strtod_r+0x232>
   1f046:	4658      	mov	r0, fp
   1f048:	2b30      	cmp	r3, #48	; 0x30
   1f04a:	d105      	bne.n	1f058 <_strtod_r+0x1b8>
   1f04c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f04e:	3001      	adds	r0, #1
   1f050:	1c5a      	adds	r2, r3, #1
   1f052:	9217      	str	r2, [sp, #92]	; 0x5c
   1f054:	785b      	ldrb	r3, [r3, #1]
   1f056:	e7f7      	b.n	1f048 <_strtod_r+0x1a8>
   1f058:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   1f05c:	2a08      	cmp	r2, #8
   1f05e:	d846      	bhi.n	1f0ee <_strtod_r+0x24e>
   1f060:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   1f062:	9206      	str	r2, [sp, #24]
   1f064:	4602      	mov	r2, r0
   1f066:	2000      	movs	r0, #0
   1f068:	4605      	mov	r5, r0
   1f06a:	3b30      	subs	r3, #48	; 0x30
   1f06c:	f100 0101 	add.w	r1, r0, #1
   1f070:	d029      	beq.n	1f0c6 <_strtod_r+0x226>
   1f072:	440a      	add	r2, r1
   1f074:	4629      	mov	r1, r5
   1f076:	eb05 0c00 	add.w	ip, r5, r0
   1f07a:	260a      	movs	r6, #10
   1f07c:	4561      	cmp	r1, ip
   1f07e:	d00f      	beq.n	1f0a0 <_strtod_r+0x200>
   1f080:	3101      	adds	r1, #1
   1f082:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   1f086:	f1be 0f08 	cmp.w	lr, #8
   1f08a:	dc03      	bgt.n	1f094 <_strtod_r+0x1f4>
   1f08c:	9f04      	ldr	r7, [sp, #16]
   1f08e:	4377      	muls	r7, r6
   1f090:	9704      	str	r7, [sp, #16]
   1f092:	e7f3      	b.n	1f07c <_strtod_r+0x1dc>
   1f094:	2910      	cmp	r1, #16
   1f096:	bfde      	ittt	le
   1f098:	9f02      	ldrle	r7, [sp, #8]
   1f09a:	4377      	mulle	r7, r6
   1f09c:	9702      	strle	r7, [sp, #8]
   1f09e:	e7ed      	b.n	1f07c <_strtod_r+0x1dc>
   1f0a0:	4428      	add	r0, r5
   1f0a2:	2808      	cmp	r0, #8
   1f0a4:	f100 0501 	add.w	r5, r0, #1
   1f0a8:	dc05      	bgt.n	1f0b6 <_strtod_r+0x216>
   1f0aa:	9804      	ldr	r0, [sp, #16]
   1f0ac:	210a      	movs	r1, #10
   1f0ae:	fb01 3300 	mla	r3, r1, r0, r3
   1f0b2:	9304      	str	r3, [sp, #16]
   1f0b4:	e006      	b.n	1f0c4 <_strtod_r+0x224>
   1f0b6:	2d10      	cmp	r5, #16
   1f0b8:	bfdf      	itttt	le
   1f0ba:	9802      	ldrle	r0, [sp, #8]
   1f0bc:	210a      	movle	r1, #10
   1f0be:	fb01 3300 	mlale	r3, r1, r0, r3
   1f0c2:	9302      	strle	r3, [sp, #8]
   1f0c4:	2100      	movs	r1, #0
   1f0c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f0c8:	1c58      	adds	r0, r3, #1
   1f0ca:	9017      	str	r0, [sp, #92]	; 0x5c
   1f0cc:	785b      	ldrb	r3, [r3, #1]
   1f0ce:	4608      	mov	r0, r1
   1f0d0:	e002      	b.n	1f0d8 <_strtod_r+0x238>
   1f0d2:	465d      	mov	r5, fp
   1f0d4:	4638      	mov	r0, r7
   1f0d6:	463a      	mov	r2, r7
   1f0d8:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   1f0dc:	2909      	cmp	r1, #9
   1f0de:	d9c4      	bls.n	1f06a <_strtod_r+0x1ca>
   1f0e0:	2101      	movs	r1, #1
   1f0e2:	2b65      	cmp	r3, #101	; 0x65
   1f0e4:	d001      	beq.n	1f0ea <_strtod_r+0x24a>
   1f0e6:	2b45      	cmp	r3, #69	; 0x45
   1f0e8:	d14f      	bne.n	1f18a <_strtod_r+0x2ea>
   1f0ea:	b96d      	cbnz	r5, 1f108 <_strtod_r+0x268>
   1f0ec:	e004      	b.n	1f0f8 <_strtod_r+0x258>
   1f0ee:	2b65      	cmp	r3, #101	; 0x65
   1f0f0:	f040 84ad 	bne.w	1fa4e <_strtod_r+0xbae>
   1f0f4:	2200      	movs	r2, #0
   1f0f6:	2101      	movs	r1, #1
   1f0f8:	b928      	cbnz	r0, 1f106 <_strtod_r+0x266>
   1f0fa:	9b05      	ldr	r3, [sp, #20]
   1f0fc:	2b00      	cmp	r3, #0
   1f0fe:	f000 8092 	beq.w	1f226 <_strtod_r+0x386>
   1f102:	4605      	mov	r5, r0
   1f104:	e000      	b.n	1f108 <_strtod_r+0x268>
   1f106:	2500      	movs	r5, #0
   1f108:	9c17      	ldr	r4, [sp, #92]	; 0x5c
   1f10a:	1c63      	adds	r3, r4, #1
   1f10c:	9317      	str	r3, [sp, #92]	; 0x5c
   1f10e:	7863      	ldrb	r3, [r4, #1]
   1f110:	2b2b      	cmp	r3, #43	; 0x2b
   1f112:	d006      	beq.n	1f122 <_strtod_r+0x282>
   1f114:	2b2d      	cmp	r3, #45	; 0x2d
   1f116:	d002      	beq.n	1f11e <_strtod_r+0x27e>
   1f118:	2600      	movs	r6, #0
   1f11a:	9603      	str	r6, [sp, #12]
   1f11c:	e006      	b.n	1f12c <_strtod_r+0x28c>
   1f11e:	2301      	movs	r3, #1
   1f120:	e000      	b.n	1f124 <_strtod_r+0x284>
   1f122:	2300      	movs	r3, #0
   1f124:	9303      	str	r3, [sp, #12]
   1f126:	1ca3      	adds	r3, r4, #2
   1f128:	9317      	str	r3, [sp, #92]	; 0x5c
   1f12a:	78a3      	ldrb	r3, [r4, #2]
   1f12c:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   1f130:	2e09      	cmp	r6, #9
   1f132:	d829      	bhi.n	1f188 <_strtod_r+0x2e8>
   1f134:	2b30      	cmp	r3, #48	; 0x30
   1f136:	d104      	bne.n	1f142 <_strtod_r+0x2a2>
   1f138:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f13a:	1c5e      	adds	r6, r3, #1
   1f13c:	9617      	str	r6, [sp, #92]	; 0x5c
   1f13e:	785b      	ldrb	r3, [r3, #1]
   1f140:	e7f8      	b.n	1f134 <_strtod_r+0x294>
   1f142:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   1f146:	2e08      	cmp	r6, #8
   1f148:	d81f      	bhi.n	1f18a <_strtod_r+0x2ea>
   1f14a:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   1f14e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f150:	461f      	mov	r7, r3
   1f152:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f154:	1c5e      	adds	r6, r3, #1
   1f156:	9617      	str	r6, [sp, #92]	; 0x5c
   1f158:	785b      	ldrb	r3, [r3, #1]
   1f15a:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
   1f15e:	f1bc 0f09 	cmp.w	ip, #9
   1f162:	d805      	bhi.n	1f170 <_strtod_r+0x2d0>
   1f164:	260a      	movs	r6, #10
   1f166:	fb06 3e0e 	mla	lr, r6, lr, r3
   1f16a:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   1f16e:	e7f0      	b.n	1f152 <_strtod_r+0x2b2>
   1f170:	1bf6      	subs	r6, r6, r7
   1f172:	2e08      	cmp	r6, #8
   1f174:	f644 661f 	movw	r6, #19999	; 0x4e1f
   1f178:	dc02      	bgt.n	1f180 <_strtod_r+0x2e0>
   1f17a:	4576      	cmp	r6, lr
   1f17c:	bfa8      	it	ge
   1f17e:	4676      	movge	r6, lr
   1f180:	9f03      	ldr	r7, [sp, #12]
   1f182:	b11f      	cbz	r7, 1f18c <_strtod_r+0x2ec>
   1f184:	4276      	negs	r6, r6
   1f186:	e001      	b.n	1f18c <_strtod_r+0x2ec>
   1f188:	9417      	str	r4, [sp, #92]	; 0x5c
   1f18a:	2600      	movs	r6, #0
   1f18c:	2d00      	cmp	r5, #0
   1f18e:	d152      	bne.n	1f236 <_strtod_r+0x396>
   1f190:	2800      	cmp	r0, #0
   1f192:	f040 844e 	bne.w	1fa32 <_strtod_r+0xb92>
   1f196:	9a05      	ldr	r2, [sp, #20]
   1f198:	2a00      	cmp	r2, #0
   1f19a:	f040 844a 	bne.w	1fa32 <_strtod_r+0xb92>
   1f19e:	2900      	cmp	r1, #0
   1f1a0:	d141      	bne.n	1f226 <_strtod_r+0x386>
   1f1a2:	2b4e      	cmp	r3, #78	; 0x4e
   1f1a4:	d020      	beq.n	1f1e8 <_strtod_r+0x348>
   1f1a6:	dc07      	bgt.n	1f1b8 <_strtod_r+0x318>
   1f1a8:	2b49      	cmp	r3, #73	; 0x49
   1f1aa:	d00a      	beq.n	1f1c2 <_strtod_r+0x322>
   1f1ac:	e03b      	b.n	1f226 <_strtod_r+0x386>
   1f1ae:	bf00      	nop
   1f1b0:	000264a8 	.word	0x000264a8
   1f1b4:	7ff00000 	.word	0x7ff00000
   1f1b8:	2b69      	cmp	r3, #105	; 0x69
   1f1ba:	d002      	beq.n	1f1c2 <_strtod_r+0x322>
   1f1bc:	2b6e      	cmp	r3, #110	; 0x6e
   1f1be:	d013      	beq.n	1f1e8 <_strtod_r+0x348>
   1f1c0:	e031      	b.n	1f226 <_strtod_r+0x386>
   1f1c2:	49aa      	ldr	r1, [pc, #680]	; (1f46c <_strtod_r+0x5cc>)
   1f1c4:	a817      	add	r0, sp, #92	; 0x5c
   1f1c6:	f002 fa85 	bl	216d4 <__match>
   1f1ca:	b360      	cbz	r0, 1f226 <_strtod_r+0x386>
   1f1cc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f1ce:	49a8      	ldr	r1, [pc, #672]	; (1f470 <_strtod_r+0x5d0>)
   1f1d0:	3b01      	subs	r3, #1
   1f1d2:	a817      	add	r0, sp, #92	; 0x5c
   1f1d4:	9317      	str	r3, [sp, #92]	; 0x5c
   1f1d6:	f002 fa7d 	bl	216d4 <__match>
   1f1da:	b910      	cbnz	r0, 1f1e2 <_strtod_r+0x342>
   1f1dc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f1de:	3301      	adds	r3, #1
   1f1e0:	9317      	str	r3, [sp, #92]	; 0x5c
   1f1e2:	f8df 92a8 	ldr.w	r9, [pc, #680]	; 1f48c <_strtod_r+0x5ec>
   1f1e6:	e01a      	b.n	1f21e <_strtod_r+0x37e>
   1f1e8:	49a2      	ldr	r1, [pc, #648]	; (1f474 <_strtod_r+0x5d4>)
   1f1ea:	a817      	add	r0, sp, #92	; 0x5c
   1f1ec:	f002 fa72 	bl	216d4 <__match>
   1f1f0:	b1c8      	cbz	r0, 1f226 <_strtod_r+0x386>
   1f1f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1f1f4:	781b      	ldrb	r3, [r3, #0]
   1f1f6:	2b28      	cmp	r3, #40	; 0x28
   1f1f8:	d10f      	bne.n	1f21a <_strtod_r+0x37a>
   1f1fa:	aa1a      	add	r2, sp, #104	; 0x68
   1f1fc:	499e      	ldr	r1, [pc, #632]	; (1f478 <_strtod_r+0x5d8>)
   1f1fe:	a817      	add	r0, sp, #92	; 0x5c
   1f200:	f002 fa7b 	bl	216fa <__hexnan>
   1f204:	2805      	cmp	r0, #5
   1f206:	d108      	bne.n	1f21a <_strtod_r+0x37a>
   1f208:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1f20a:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
   1f20e:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
   1f212:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
   1f216:	f000 bc0c 	b.w	1fa32 <_strtod_r+0xb92>
   1f21a:	f8df 9274 	ldr.w	r9, [pc, #628]	; 1f490 <_strtod_r+0x5f0>
   1f21e:	f04f 0800 	mov.w	r8, #0
   1f222:	f000 bc06 	b.w	1fa32 <_strtod_r+0xb92>
   1f226:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1f228:	9417      	str	r4, [sp, #92]	; 0x5c
   1f22a:	2b00      	cmp	r3, #0
   1f22c:	f000 840c 	beq.w	1fa48 <_strtod_r+0xba8>
   1f230:	2300      	movs	r3, #0
   1f232:	930c      	str	r3, [sp, #48]	; 0x30
   1f234:	e3ff      	b.n	1fa36 <_strtod_r+0xb96>
   1f236:	462c      	mov	r4, r5
   1f238:	f1bb 0f00 	cmp.w	fp, #0
   1f23c:	bf08      	it	eq
   1f23e:	46ab      	moveq	fp, r5
   1f240:	9804      	ldr	r0, [sp, #16]
   1f242:	2d10      	cmp	r5, #16
   1f244:	bfa8      	it	ge
   1f246:	2410      	movge	r4, #16
   1f248:	1ab7      	subs	r7, r6, r2
   1f24a:	f7fc fe41 	bl	1bed0 <__aeabi_ui2d>
   1f24e:	2c09      	cmp	r4, #9
   1f250:	4680      	mov	r8, r0
   1f252:	4689      	mov	r9, r1
   1f254:	dd13      	ble.n	1f27e <_strtod_r+0x3de>
   1f256:	4b89      	ldr	r3, [pc, #548]	; (1f47c <_strtod_r+0x5dc>)
   1f258:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   1f25c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   1f260:	f7fc feac 	bl	1bfbc <__aeabi_dmul>
   1f264:	4680      	mov	r8, r0
   1f266:	9802      	ldr	r0, [sp, #8]
   1f268:	4689      	mov	r9, r1
   1f26a:	f7fc fe31 	bl	1bed0 <__aeabi_ui2d>
   1f26e:	4602      	mov	r2, r0
   1f270:	460b      	mov	r3, r1
   1f272:	4640      	mov	r0, r8
   1f274:	4649      	mov	r1, r9
   1f276:	f7fc fcef 	bl	1bc58 <__adddf3>
   1f27a:	4680      	mov	r8, r0
   1f27c:	4689      	mov	r9, r1
   1f27e:	2d0f      	cmp	r5, #15
   1f280:	dc33      	bgt.n	1f2ea <_strtod_r+0x44a>
   1f282:	2f00      	cmp	r7, #0
   1f284:	f000 83d5 	beq.w	1fa32 <_strtod_r+0xb92>
   1f288:	dd22      	ble.n	1f2d0 <_strtod_r+0x430>
   1f28a:	2f16      	cmp	r7, #22
   1f28c:	dc07      	bgt.n	1f29e <_strtod_r+0x3fe>
   1f28e:	4d7b      	ldr	r5, [pc, #492]	; (1f47c <_strtod_r+0x5dc>)
   1f290:	4642      	mov	r2, r8
   1f292:	eb05 01c7 	add.w	r1, r5, r7, lsl #3
   1f296:	464b      	mov	r3, r9
   1f298:	e9d1 0100 	ldrd	r0, r1, [r1]
   1f29c:	e013      	b.n	1f2c6 <_strtod_r+0x426>
   1f29e:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   1f2a2:	429f      	cmp	r7, r3
   1f2a4:	dc21      	bgt.n	1f2ea <_strtod_r+0x44a>
   1f2a6:	4c75      	ldr	r4, [pc, #468]	; (1f47c <_strtod_r+0x5dc>)
   1f2a8:	f1c5 050f 	rsb	r5, r5, #15
   1f2ac:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   1f2b0:	1b7d      	subs	r5, r7, r5
   1f2b2:	4642      	mov	r2, r8
   1f2b4:	e9d1 0100 	ldrd	r0, r1, [r1]
   1f2b8:	464b      	mov	r3, r9
   1f2ba:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1f2be:	f7fc fe7d 	bl	1bfbc <__aeabi_dmul>
   1f2c2:	e9d4 2300 	ldrd	r2, r3, [r4]
   1f2c6:	f7fc fe79 	bl	1bfbc <__aeabi_dmul>
   1f2ca:	4680      	mov	r8, r0
   1f2cc:	4689      	mov	r9, r1
   1f2ce:	e3b0      	b.n	1fa32 <_strtod_r+0xb92>
   1f2d0:	f117 0f16 	cmn.w	r7, #22
   1f2d4:	db09      	blt.n	1f2ea <_strtod_r+0x44a>
   1f2d6:	4d69      	ldr	r5, [pc, #420]	; (1f47c <_strtod_r+0x5dc>)
   1f2d8:	4640      	mov	r0, r8
   1f2da:	eba5 03c7 	sub.w	r3, r5, r7, lsl #3
   1f2de:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f2e2:	4649      	mov	r1, r9
   1f2e4:	f7fc ff94 	bl	1c210 <__aeabi_ddiv>
   1f2e8:	e7ef      	b.n	1f2ca <_strtod_r+0x42a>
   1f2ea:	1b2c      	subs	r4, r5, r4
   1f2ec:	443c      	add	r4, r7
   1f2ee:	2c00      	cmp	r4, #0
   1f2f0:	dd5d      	ble.n	1f3ae <_strtod_r+0x50e>
   1f2f2:	f014 010f 	ands.w	r1, r4, #15
   1f2f6:	d00a      	beq.n	1f30e <_strtod_r+0x46e>
   1f2f8:	4b60      	ldr	r3, [pc, #384]	; (1f47c <_strtod_r+0x5dc>)
   1f2fa:	4642      	mov	r2, r8
   1f2fc:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   1f300:	e9d1 0100 	ldrd	r0, r1, [r1]
   1f304:	464b      	mov	r3, r9
   1f306:	f7fc fe59 	bl	1bfbc <__aeabi_dmul>
   1f30a:	4680      	mov	r8, r0
   1f30c:	4689      	mov	r9, r1
   1f30e:	f034 040f 	bics.w	r4, r4, #15
   1f312:	f000 80c1 	beq.w	1f498 <_strtod_r+0x5f8>
   1f316:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   1f31a:	dd0f      	ble.n	1f33c <_strtod_r+0x49c>
   1f31c:	f04f 0b00 	mov.w	fp, #0
   1f320:	f8cd b008 	str.w	fp, [sp, #8]
   1f324:	f8cd b014 	str.w	fp, [sp, #20]
   1f328:	f8cd b010 	str.w	fp, [sp, #16]
   1f32c:	2322      	movs	r3, #34	; 0x22
   1f32e:	f8ca 3000 	str.w	r3, [sl]
   1f332:	f8df 9158 	ldr.w	r9, [pc, #344]	; 1f48c <_strtod_r+0x5ec>
   1f336:	f04f 0800 	mov.w	r8, #0
   1f33a:	e189      	b.n	1f650 <_strtod_r+0x7b0>
   1f33c:	4640      	mov	r0, r8
   1f33e:	4649      	mov	r1, r9
   1f340:	2300      	movs	r3, #0
   1f342:	4e4f      	ldr	r6, [pc, #316]	; (1f480 <_strtod_r+0x5e0>)
   1f344:	1124      	asrs	r4, r4, #4
   1f346:	9302      	str	r3, [sp, #8]
   1f348:	2c01      	cmp	r4, #1
   1f34a:	dd0c      	ble.n	1f366 <_strtod_r+0x4c6>
   1f34c:	07e2      	lsls	r2, r4, #31
   1f34e:	d504      	bpl.n	1f35a <_strtod_r+0x4ba>
   1f350:	e9d6 2300 	ldrd	r2, r3, [r6]
   1f354:	f7fc fe32 	bl	1bfbc <__aeabi_dmul>
   1f358:	2301      	movs	r3, #1
   1f35a:	9a02      	ldr	r2, [sp, #8]
   1f35c:	1064      	asrs	r4, r4, #1
   1f35e:	3201      	adds	r2, #1
   1f360:	9202      	str	r2, [sp, #8]
   1f362:	3608      	adds	r6, #8
   1f364:	e7f0      	b.n	1f348 <_strtod_r+0x4a8>
   1f366:	b10b      	cbz	r3, 1f36c <_strtod_r+0x4cc>
   1f368:	4680      	mov	r8, r0
   1f36a:	4689      	mov	r9, r1
   1f36c:	4b44      	ldr	r3, [pc, #272]	; (1f480 <_strtod_r+0x5e0>)
   1f36e:	9a02      	ldr	r2, [sp, #8]
   1f370:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
   1f374:	eb03 01c2 	add.w	r1, r3, r2, lsl #3
   1f378:	e9d1 0100 	ldrd	r0, r1, [r1]
   1f37c:	4642      	mov	r2, r8
   1f37e:	464b      	mov	r3, r9
   1f380:	f7fc fe1c 	bl	1bfbc <__aeabi_dmul>
   1f384:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1f388:	4689      	mov	r9, r1
   1f38a:	460a      	mov	r2, r1
   1f38c:	0d1b      	lsrs	r3, r3, #20
   1f38e:	493d      	ldr	r1, [pc, #244]	; (1f484 <_strtod_r+0x5e4>)
   1f390:	051b      	lsls	r3, r3, #20
   1f392:	428b      	cmp	r3, r1
   1f394:	4680      	mov	r8, r0
   1f396:	d8c1      	bhi.n	1f31c <_strtod_r+0x47c>
   1f398:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   1f39c:	428b      	cmp	r3, r1
   1f39e:	bf86      	itte	hi
   1f3a0:	f8df 90f0 	ldrhi.w	r9, [pc, #240]	; 1f494 <_strtod_r+0x5f4>
   1f3a4:	f04f 38ff 	movhi.w	r8, #4294967295	; 0xffffffff
   1f3a8:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
   1f3ac:	e074      	b.n	1f498 <_strtod_r+0x5f8>
   1f3ae:	d073      	beq.n	1f498 <_strtod_r+0x5f8>
   1f3b0:	4264      	negs	r4, r4
   1f3b2:	f014 020f 	ands.w	r2, r4, #15
   1f3b6:	d00a      	beq.n	1f3ce <_strtod_r+0x52e>
   1f3b8:	4b30      	ldr	r3, [pc, #192]	; (1f47c <_strtod_r+0x5dc>)
   1f3ba:	4640      	mov	r0, r8
   1f3bc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1f3c0:	4649      	mov	r1, r9
   1f3c2:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f3c6:	f7fc ff23 	bl	1c210 <__aeabi_ddiv>
   1f3ca:	4680      	mov	r8, r0
   1f3cc:	4689      	mov	r9, r1
   1f3ce:	1124      	asrs	r4, r4, #4
   1f3d0:	d062      	beq.n	1f498 <_strtod_r+0x5f8>
   1f3d2:	2c1f      	cmp	r4, #31
   1f3d4:	dd08      	ble.n	1f3e8 <_strtod_r+0x548>
   1f3d6:	f04f 0b00 	mov.w	fp, #0
   1f3da:	f8cd b008 	str.w	fp, [sp, #8]
   1f3de:	f8cd b014 	str.w	fp, [sp, #20]
   1f3e2:	f8cd b010 	str.w	fp, [sp, #16]
   1f3e6:	e12c      	b.n	1f642 <_strtod_r+0x7a2>
   1f3e8:	4640      	mov	r0, r8
   1f3ea:	4649      	mov	r1, r9
   1f3ec:	f014 0f10 	tst.w	r4, #16
   1f3f0:	bf0c      	ite	eq
   1f3f2:	2300      	moveq	r3, #0
   1f3f4:	236a      	movne	r3, #106	; 0x6a
   1f3f6:	4e24      	ldr	r6, [pc, #144]	; (1f488 <_strtod_r+0x5e8>)
   1f3f8:	9303      	str	r3, [sp, #12]
   1f3fa:	2300      	movs	r3, #0
   1f3fc:	2c00      	cmp	r4, #0
   1f3fe:	dd09      	ble.n	1f414 <_strtod_r+0x574>
   1f400:	07e2      	lsls	r2, r4, #31
   1f402:	d504      	bpl.n	1f40e <_strtod_r+0x56e>
   1f404:	e9d6 2300 	ldrd	r2, r3, [r6]
   1f408:	f7fc fdd8 	bl	1bfbc <__aeabi_dmul>
   1f40c:	2301      	movs	r3, #1
   1f40e:	1064      	asrs	r4, r4, #1
   1f410:	3608      	adds	r6, #8
   1f412:	e7f3      	b.n	1f3fc <_strtod_r+0x55c>
   1f414:	b10b      	cbz	r3, 1f41a <_strtod_r+0x57a>
   1f416:	4680      	mov	r8, r0
   1f418:	4689      	mov	r9, r1
   1f41a:	9b03      	ldr	r3, [sp, #12]
   1f41c:	b1eb      	cbz	r3, 1f45a <_strtod_r+0x5ba>
   1f41e:	f3c9 530a 	ubfx	r3, r9, #20, #11
   1f422:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1f426:	2b00      	cmp	r3, #0
   1f428:	4649      	mov	r1, r9
   1f42a:	dd16      	ble.n	1f45a <_strtod_r+0x5ba>
   1f42c:	2b1f      	cmp	r3, #31
   1f42e:	dd0e      	ble.n	1f44e <_strtod_r+0x5ae>
   1f430:	2b34      	cmp	r3, #52	; 0x34
   1f432:	bfde      	ittt	le
   1f434:	3b20      	suble	r3, #32
   1f436:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   1f43a:	fa02 f303 	lslle.w	r3, r2, r3
   1f43e:	f04f 0800 	mov.w	r8, #0
   1f442:	bfcc      	ite	gt
   1f444:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
   1f448:	ea03 0901 	andle.w	r9, r3, r1
   1f44c:	e005      	b.n	1f45a <_strtod_r+0x5ba>
   1f44e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1f452:	fa02 f303 	lsl.w	r3, r2, r3
   1f456:	ea03 0808 	and.w	r8, r3, r8
   1f45a:	2200      	movs	r2, #0
   1f45c:	2300      	movs	r3, #0
   1f45e:	4640      	mov	r0, r8
   1f460:	4649      	mov	r1, r9
   1f462:	f7fd f813 	bl	1c48c <__aeabi_dcmpeq>
   1f466:	2800      	cmp	r0, #0
   1f468:	d1b5      	bne.n	1f3d6 <_strtod_r+0x536>
   1f46a:	e017      	b.n	1f49c <_strtod_r+0x5fc>
   1f46c:	00026461 	.word	0x00026461
   1f470:	00026580 	.word	0x00026580
   1f474:	00026469 	.word	0x00026469
   1f478:	00026494 	.word	0x00026494
   1f47c:	00026590 	.word	0x00026590
   1f480:	00026668 	.word	0x00026668
   1f484:	7ca00000 	.word	0x7ca00000
   1f488:	000264c0 	.word	0x000264c0
   1f48c:	7ff00000 	.word	0x7ff00000
   1f490:	fff80000 	.word	0xfff80000
   1f494:	7fefffff 	.word	0x7fefffff
   1f498:	2300      	movs	r3, #0
   1f49a:	9303      	str	r3, [sp, #12]
   1f49c:	9b04      	ldr	r3, [sp, #16]
   1f49e:	465a      	mov	r2, fp
   1f4a0:	9300      	str	r3, [sp, #0]
   1f4a2:	9906      	ldr	r1, [sp, #24]
   1f4a4:	462b      	mov	r3, r5
   1f4a6:	4650      	mov	r0, sl
   1f4a8:	f002 fba3 	bl	21bf2 <__s2b>
   1f4ac:	9005      	str	r0, [sp, #20]
   1f4ae:	2800      	cmp	r0, #0
   1f4b0:	f43f af34 	beq.w	1f31c <_strtod_r+0x47c>
   1f4b4:	2f00      	cmp	r7, #0
   1f4b6:	f1c7 0300 	rsb	r3, r7, #0
   1f4ba:	bfa8      	it	ge
   1f4bc:	2300      	movge	r3, #0
   1f4be:	930d      	str	r3, [sp, #52]	; 0x34
   1f4c0:	f04f 0b00 	mov.w	fp, #0
   1f4c4:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
   1f4c8:	9312      	str	r3, [sp, #72]	; 0x48
   1f4ca:	f8cd b008 	str.w	fp, [sp, #8]
   1f4ce:	9b05      	ldr	r3, [sp, #20]
   1f4d0:	4650      	mov	r0, sl
   1f4d2:	6859      	ldr	r1, [r3, #4]
   1f4d4:	f002 fb06 	bl	21ae4 <_Balloc>
   1f4d8:	9004      	str	r0, [sp, #16]
   1f4da:	2800      	cmp	r0, #0
   1f4dc:	f43f af26 	beq.w	1f32c <_strtod_r+0x48c>
   1f4e0:	9b05      	ldr	r3, [sp, #20]
   1f4e2:	300c      	adds	r0, #12
   1f4e4:	691a      	ldr	r2, [r3, #16]
   1f4e6:	f103 010c 	add.w	r1, r3, #12
   1f4ea:	3202      	adds	r2, #2
   1f4ec:	0092      	lsls	r2, r2, #2
   1f4ee:	f7fd ff0e 	bl	1d30e <memcpy>
   1f4f2:	ab1a      	add	r3, sp, #104	; 0x68
   1f4f4:	9301      	str	r3, [sp, #4]
   1f4f6:	ab19      	add	r3, sp, #100	; 0x64
   1f4f8:	9300      	str	r3, [sp, #0]
   1f4fa:	4642      	mov	r2, r8
   1f4fc:	464b      	mov	r3, r9
   1f4fe:	4650      	mov	r0, sl
   1f500:	e9cd 8908 	strd	r8, r9, [sp, #32]
   1f504:	f002 fe25 	bl	22152 <__d2b>
   1f508:	9018      	str	r0, [sp, #96]	; 0x60
   1f50a:	2800      	cmp	r0, #0
   1f50c:	f43f af0e 	beq.w	1f32c <_strtod_r+0x48c>
   1f510:	2101      	movs	r1, #1
   1f512:	4650      	mov	r0, sl
   1f514:	f002 fbf8 	bl	21d08 <__i2b>
   1f518:	9002      	str	r0, [sp, #8]
   1f51a:	2800      	cmp	r0, #0
   1f51c:	f43f af06 	beq.w	1f32c <_strtod_r+0x48c>
   1f520:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1f522:	9903      	ldr	r1, [sp, #12]
   1f524:	2b00      	cmp	r3, #0
   1f526:	bfac      	ite	ge
   1f528:	9a0d      	ldrge	r2, [sp, #52]	; 0x34
   1f52a:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
   1f52c:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   1f52e:	bfac      	ite	ge
   1f530:	18d6      	addge	r6, r2, r3
   1f532:	1ad2      	sublt	r2, r2, r3
   1f534:	eba3 0301 	sub.w	r3, r3, r1
   1f538:	4423      	add	r3, r4
   1f53a:	49b1      	ldr	r1, [pc, #708]	; (1f800 <_strtod_r+0x960>)
   1f53c:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1f540:	bfac      	ite	ge
   1f542:	9a12      	ldrge	r2, [sp, #72]	; 0x48
   1f544:	9e0d      	ldrlt	r6, [sp, #52]	; 0x34
   1f546:	428b      	cmp	r3, r1
   1f548:	f1c4 0436 	rsb	r4, r4, #54	; 0x36
   1f54c:	f280 8085 	bge.w	1f65a <_strtod_r+0x7ba>
   1f550:	1ac9      	subs	r1, r1, r3
   1f552:	291f      	cmp	r1, #31
   1f554:	bfc8      	it	gt
   1f556:	4dab      	ldrgt	r5, [pc, #684]	; (1f804 <_strtod_r+0x964>)
   1f558:	f04f 0701 	mov.w	r7, #1
   1f55c:	bfd4      	ite	le
   1f55e:	fa07 f301 	lslle.w	r3, r7, r1
   1f562:	1aed      	subgt	r5, r5, r3
   1f564:	eba4 0401 	sub.w	r4, r4, r1
   1f568:	bfd9      	ittee	le
   1f56a:	9307      	strle	r3, [sp, #28]
   1f56c:	2500      	movle	r5, #0
   1f56e:	fa07 f505 	lslgt.w	r5, r7, r5
   1f572:	9707      	strgt	r7, [sp, #28]
   1f574:	1937      	adds	r7, r6, r4
   1f576:	9b03      	ldr	r3, [sp, #12]
   1f578:	42be      	cmp	r6, r7
   1f57a:	4414      	add	r4, r2
   1f57c:	441c      	add	r4, r3
   1f57e:	4633      	mov	r3, r6
   1f580:	bfa8      	it	ge
   1f582:	463b      	movge	r3, r7
   1f584:	42a3      	cmp	r3, r4
   1f586:	bfa8      	it	ge
   1f588:	4623      	movge	r3, r4
   1f58a:	2b00      	cmp	r3, #0
   1f58c:	bfc2      	ittt	gt
   1f58e:	1aff      	subgt	r7, r7, r3
   1f590:	1ae4      	subgt	r4, r4, r3
   1f592:	1af6      	subgt	r6, r6, r3
   1f594:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1f596:	2b00      	cmp	r3, #0
   1f598:	d163      	bne.n	1f662 <_strtod_r+0x7c2>
   1f59a:	2f00      	cmp	r7, #0
   1f59c:	dc7a      	bgt.n	1f694 <_strtod_r+0x7f4>
   1f59e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1f5a0:	2b00      	cmp	r3, #0
   1f5a2:	f040 8081 	bne.w	1f6a8 <_strtod_r+0x808>
   1f5a6:	2c00      	cmp	r4, #0
   1f5a8:	f300 8088 	bgt.w	1f6bc <_strtod_r+0x81c>
   1f5ac:	2e00      	cmp	r6, #0
   1f5ae:	f300 808f 	bgt.w	1f6d0 <_strtod_r+0x830>
   1f5b2:	9a04      	ldr	r2, [sp, #16]
   1f5b4:	9918      	ldr	r1, [sp, #96]	; 0x60
   1f5b6:	4650      	mov	r0, sl
   1f5b8:	f002 fcfb 	bl	21fb2 <__mdiff>
   1f5bc:	4683      	mov	fp, r0
   1f5be:	2800      	cmp	r0, #0
   1f5c0:	f43f aeb4 	beq.w	1f32c <_strtod_r+0x48c>
   1f5c4:	68c3      	ldr	r3, [r0, #12]
   1f5c6:	2400      	movs	r4, #0
   1f5c8:	60c4      	str	r4, [r0, #12]
   1f5ca:	9902      	ldr	r1, [sp, #8]
   1f5cc:	9306      	str	r3, [sp, #24]
   1f5ce:	f002 fcd4 	bl	21f7a <__mcmp>
   1f5d2:	42a0      	cmp	r0, r4
   1f5d4:	f280 808b 	bge.w	1f6ee <_strtod_r+0x84e>
   1f5d8:	9b06      	ldr	r3, [sp, #24]
   1f5da:	2b00      	cmp	r3, #0
   1f5dc:	f040 8202 	bne.w	1f9e4 <_strtod_r+0xb44>
   1f5e0:	f1b8 0f00 	cmp.w	r8, #0
   1f5e4:	f040 81fe 	bne.w	1f9e4 <_strtod_r+0xb44>
   1f5e8:	f3c9 0313 	ubfx	r3, r9, #0, #20
   1f5ec:	2b00      	cmp	r3, #0
   1f5ee:	f040 81f9 	bne.w	1f9e4 <_strtod_r+0xb44>
   1f5f2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1f5f6:	0d1b      	lsrs	r3, r3, #20
   1f5f8:	051b      	lsls	r3, r3, #20
   1f5fa:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1f5fe:	f240 81f1 	bls.w	1f9e4 <_strtod_r+0xb44>
   1f602:	f8db 3014 	ldr.w	r3, [fp, #20]
   1f606:	2b00      	cmp	r3, #0
   1f608:	d06c      	beq.n	1f6e4 <_strtod_r+0x844>
   1f60a:	4659      	mov	r1, fp
   1f60c:	2201      	movs	r2, #1
   1f60e:	4650      	mov	r0, sl
   1f610:	f002 fc62 	bl	21ed8 <__lshift>
   1f614:	9902      	ldr	r1, [sp, #8]
   1f616:	4683      	mov	fp, r0
   1f618:	f002 fcaf 	bl	21f7a <__mcmp>
   1f61c:	2800      	cmp	r0, #0
   1f61e:	f340 81e1 	ble.w	1f9e4 <_strtod_r+0xb44>
   1f622:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1f626:	9a03      	ldr	r2, [sp, #12]
   1f628:	0d1b      	lsrs	r3, r3, #20
   1f62a:	051b      	lsls	r3, r3, #20
   1f62c:	2a00      	cmp	r2, #0
   1f62e:	f000 808d 	beq.w	1f74c <_strtod_r+0x8ac>
   1f632:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1f636:	f300 8089 	bgt.w	1f74c <_strtod_r+0x8ac>
   1f63a:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   1f63e:	f300 81d3 	bgt.w	1f9e8 <_strtod_r+0xb48>
   1f642:	2322      	movs	r3, #34	; 0x22
   1f644:	f04f 0800 	mov.w	r8, #0
   1f648:	f04f 0900 	mov.w	r9, #0
   1f64c:	f8ca 3000 	str.w	r3, [sl]
   1f650:	9b05      	ldr	r3, [sp, #20]
   1f652:	2b00      	cmp	r3, #0
   1f654:	f040 81d9 	bne.w	1fa0a <_strtod_r+0xb6a>
   1f658:	e1eb      	b.n	1fa32 <_strtod_r+0xb92>
   1f65a:	2301      	movs	r3, #1
   1f65c:	2500      	movs	r5, #0
   1f65e:	9307      	str	r3, [sp, #28]
   1f660:	e788      	b.n	1f574 <_strtod_r+0x6d4>
   1f662:	461a      	mov	r2, r3
   1f664:	9902      	ldr	r1, [sp, #8]
   1f666:	4650      	mov	r0, sl
   1f668:	f002 fbe8 	bl	21e3c <__pow5mult>
   1f66c:	9002      	str	r0, [sp, #8]
   1f66e:	2800      	cmp	r0, #0
   1f670:	f43f ae5c 	beq.w	1f32c <_strtod_r+0x48c>
   1f674:	4601      	mov	r1, r0
   1f676:	9a18      	ldr	r2, [sp, #96]	; 0x60
   1f678:	4650      	mov	r0, sl
   1f67a:	f002 fb4e 	bl	21d1a <__multiply>
   1f67e:	9006      	str	r0, [sp, #24]
   1f680:	2800      	cmp	r0, #0
   1f682:	f43f ae53 	beq.w	1f32c <_strtod_r+0x48c>
   1f686:	9918      	ldr	r1, [sp, #96]	; 0x60
   1f688:	4650      	mov	r0, sl
   1f68a:	f002 fa60 	bl	21b4e <_Bfree>
   1f68e:	9b06      	ldr	r3, [sp, #24]
   1f690:	9318      	str	r3, [sp, #96]	; 0x60
   1f692:	e782      	b.n	1f59a <_strtod_r+0x6fa>
   1f694:	463a      	mov	r2, r7
   1f696:	9918      	ldr	r1, [sp, #96]	; 0x60
   1f698:	4650      	mov	r0, sl
   1f69a:	f002 fc1d 	bl	21ed8 <__lshift>
   1f69e:	9018      	str	r0, [sp, #96]	; 0x60
   1f6a0:	2800      	cmp	r0, #0
   1f6a2:	f47f af7c 	bne.w	1f59e <_strtod_r+0x6fe>
   1f6a6:	e641      	b.n	1f32c <_strtod_r+0x48c>
   1f6a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
   1f6aa:	9904      	ldr	r1, [sp, #16]
   1f6ac:	4650      	mov	r0, sl
   1f6ae:	f002 fbc5 	bl	21e3c <__pow5mult>
   1f6b2:	9004      	str	r0, [sp, #16]
   1f6b4:	2800      	cmp	r0, #0
   1f6b6:	f47f af76 	bne.w	1f5a6 <_strtod_r+0x706>
   1f6ba:	e637      	b.n	1f32c <_strtod_r+0x48c>
   1f6bc:	4622      	mov	r2, r4
   1f6be:	9904      	ldr	r1, [sp, #16]
   1f6c0:	4650      	mov	r0, sl
   1f6c2:	f002 fc09 	bl	21ed8 <__lshift>
   1f6c6:	9004      	str	r0, [sp, #16]
   1f6c8:	2800      	cmp	r0, #0
   1f6ca:	f47f af6f 	bne.w	1f5ac <_strtod_r+0x70c>
   1f6ce:	e62d      	b.n	1f32c <_strtod_r+0x48c>
   1f6d0:	4632      	mov	r2, r6
   1f6d2:	9902      	ldr	r1, [sp, #8]
   1f6d4:	4650      	mov	r0, sl
   1f6d6:	f002 fbff 	bl	21ed8 <__lshift>
   1f6da:	9002      	str	r0, [sp, #8]
   1f6dc:	2800      	cmp	r0, #0
   1f6de:	f47f af68 	bne.w	1f5b2 <_strtod_r+0x712>
   1f6e2:	e623      	b.n	1f32c <_strtod_r+0x48c>
   1f6e4:	f8db 3010 	ldr.w	r3, [fp, #16]
   1f6e8:	2b01      	cmp	r3, #1
   1f6ea:	dc8e      	bgt.n	1f60a <_strtod_r+0x76a>
   1f6ec:	e17a      	b.n	1f9e4 <_strtod_r+0xb44>
   1f6ee:	d161      	bne.n	1f7b4 <_strtod_r+0x914>
   1f6f0:	9a06      	ldr	r2, [sp, #24]
   1f6f2:	f3c9 0313 	ubfx	r3, r9, #0, #20
   1f6f6:	b322      	cbz	r2, 1f742 <_strtod_r+0x8a2>
   1f6f8:	4943      	ldr	r1, [pc, #268]	; (1f808 <_strtod_r+0x968>)
   1f6fa:	464a      	mov	r2, r9
   1f6fc:	428b      	cmp	r3, r1
   1f6fe:	d12e      	bne.n	1f75e <_strtod_r+0x8be>
   1f700:	9b03      	ldr	r3, [sp, #12]
   1f702:	4641      	mov	r1, r8
   1f704:	b163      	cbz	r3, 1f720 <_strtod_r+0x880>
   1f706:	4b41      	ldr	r3, [pc, #260]	; (1f80c <_strtod_r+0x96c>)
   1f708:	4013      	ands	r3, r2
   1f70a:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   1f70e:	d807      	bhi.n	1f720 <_strtod_r+0x880>
   1f710:	0d1b      	lsrs	r3, r3, #20
   1f712:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1f716:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f71a:	fa00 f303 	lsl.w	r3, r0, r3
   1f71e:	e001      	b.n	1f724 <_strtod_r+0x884>
   1f720:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1f724:	428b      	cmp	r3, r1
   1f726:	d11a      	bne.n	1f75e <_strtod_r+0x8be>
   1f728:	4939      	ldr	r1, [pc, #228]	; (1f810 <_strtod_r+0x970>)
   1f72a:	428a      	cmp	r2, r1
   1f72c:	d102      	bne.n	1f734 <_strtod_r+0x894>
   1f72e:	3301      	adds	r3, #1
   1f730:	f43f adfc 	beq.w	1f32c <_strtod_r+0x48c>
   1f734:	4b35      	ldr	r3, [pc, #212]	; (1f80c <_strtod_r+0x96c>)
   1f736:	f04f 0800 	mov.w	r8, #0
   1f73a:	4013      	ands	r3, r2
   1f73c:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
   1f740:	e150      	b.n	1f9e4 <_strtod_r+0xb44>
   1f742:	b963      	cbnz	r3, 1f75e <_strtod_r+0x8be>
   1f744:	f1b8 0f00 	cmp.w	r8, #0
   1f748:	d109      	bne.n	1f75e <_strtod_r+0x8be>
   1f74a:	e76a      	b.n	1f622 <_strtod_r+0x782>
   1f74c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   1f750:	ea6f 5913 	mvn.w	r9, r3, lsr #20
   1f754:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
   1f758:	ea6f 5909 	mvn.w	r9, r9, lsl #20
   1f75c:	e142      	b.n	1f9e4 <_strtod_r+0xb44>
   1f75e:	b115      	cbz	r5, 1f766 <_strtod_r+0x8c6>
   1f760:	ea15 0f09 	tst.w	r5, r9
   1f764:	e002      	b.n	1f76c <_strtod_r+0x8cc>
   1f766:	9b07      	ldr	r3, [sp, #28]
   1f768:	ea13 0f08 	tst.w	r3, r8
   1f76c:	f000 813a 	beq.w	1f9e4 <_strtod_r+0xb44>
   1f770:	9b06      	ldr	r3, [sp, #24]
   1f772:	9a03      	ldr	r2, [sp, #12]
   1f774:	4640      	mov	r0, r8
   1f776:	4649      	mov	r1, r9
   1f778:	b153      	cbz	r3, 1f790 <_strtod_r+0x8f0>
   1f77a:	f7ff fb6e 	bl	1ee5a <sulp>
   1f77e:	4602      	mov	r2, r0
   1f780:	460b      	mov	r3, r1
   1f782:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   1f786:	f7fc fa67 	bl	1bc58 <__adddf3>
   1f78a:	4680      	mov	r8, r0
   1f78c:	4689      	mov	r9, r1
   1f78e:	e129      	b.n	1f9e4 <_strtod_r+0xb44>
   1f790:	f7ff fb63 	bl	1ee5a <sulp>
   1f794:	4602      	mov	r2, r0
   1f796:	460b      	mov	r3, r1
   1f798:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   1f79c:	f7fc fa5a 	bl	1bc54 <__aeabi_dsub>
   1f7a0:	2200      	movs	r2, #0
   1f7a2:	2300      	movs	r3, #0
   1f7a4:	4680      	mov	r8, r0
   1f7a6:	4689      	mov	r9, r1
   1f7a8:	f7fc fe70 	bl	1c48c <__aeabi_dcmpeq>
   1f7ac:	2800      	cmp	r0, #0
   1f7ae:	f47f af48 	bne.w	1f642 <_strtod_r+0x7a2>
   1f7b2:	e117      	b.n	1f9e4 <_strtod_r+0xb44>
   1f7b4:	9902      	ldr	r1, [sp, #8]
   1f7b6:	4658      	mov	r0, fp
   1f7b8:	f002 fd19 	bl	221ee <__ratio>
   1f7bc:	2200      	movs	r2, #0
   1f7be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1f7c2:	4606      	mov	r6, r0
   1f7c4:	460f      	mov	r7, r1
   1f7c6:	f7fc fe75 	bl	1c4b4 <__aeabi_dcmple>
   1f7ca:	2800      	cmp	r0, #0
   1f7cc:	d03f      	beq.n	1f84e <_strtod_r+0x9ae>
   1f7ce:	9b06      	ldr	r3, [sp, #24]
   1f7d0:	b113      	cbz	r3, 1f7d8 <_strtod_r+0x938>
   1f7d2:	2600      	movs	r6, #0
   1f7d4:	4f0f      	ldr	r7, [pc, #60]	; (1f814 <_strtod_r+0x974>)
   1f7d6:	e010      	b.n	1f7fa <_strtod_r+0x95a>
   1f7d8:	f1b8 0f00 	cmp.w	r8, #0
   1f7dc:	d103      	bne.n	1f7e6 <_strtod_r+0x946>
   1f7de:	f3c9 0313 	ubfx	r3, r9, #0, #20
   1f7e2:	b93b      	cbnz	r3, 1f7f4 <_strtod_r+0x954>
   1f7e4:	e01a      	b.n	1f81c <_strtod_r+0x97c>
   1f7e6:	f1b8 0f01 	cmp.w	r8, #1
   1f7ea:	d103      	bne.n	1f7f4 <_strtod_r+0x954>
   1f7ec:	f1b9 0f00 	cmp.w	r9, #0
   1f7f0:	f43f af27 	beq.w	1f642 <_strtod_r+0x7a2>
   1f7f4:	4f08      	ldr	r7, [pc, #32]	; (1f818 <_strtod_r+0x978>)
   1f7f6:	2600      	movs	r6, #0
   1f7f8:	2400      	movs	r4, #0
   1f7fa:	4d06      	ldr	r5, [pc, #24]	; (1f814 <_strtod_r+0x974>)
   1f7fc:	e03c      	b.n	1f878 <_strtod_r+0x9d8>
   1f7fe:	bf00      	nop
   1f800:	fffffc02 	.word	0xfffffc02
   1f804:	fffffbe2 	.word	0xfffffbe2
   1f808:	000fffff 	.word	0x000fffff
   1f80c:	7ff00000 	.word	0x7ff00000
   1f810:	7fefffff 	.word	0x7fefffff
   1f814:	3ff00000 	.word	0x3ff00000
   1f818:	bff00000 	.word	0xbff00000
   1f81c:	2200      	movs	r2, #0
   1f81e:	4b9a      	ldr	r3, [pc, #616]	; (1fa88 <_strtod_r+0xbe8>)
   1f820:	4630      	mov	r0, r6
   1f822:	4639      	mov	r1, r7
   1f824:	f7fc fe3c 	bl	1c4a0 <__aeabi_dcmplt>
   1f828:	b940      	cbnz	r0, 1f83c <_strtod_r+0x99c>
   1f82a:	2200      	movs	r2, #0
   1f82c:	4b97      	ldr	r3, [pc, #604]	; (1fa8c <_strtod_r+0xbec>)
   1f82e:	4630      	mov	r0, r6
   1f830:	4639      	mov	r1, r7
   1f832:	f7fc fbc3 	bl	1bfbc <__aeabi_dmul>
   1f836:	4604      	mov	r4, r0
   1f838:	460d      	mov	r5, r1
   1f83a:	e001      	b.n	1f840 <_strtod_r+0x9a0>
   1f83c:	9c06      	ldr	r4, [sp, #24]
   1f83e:	4d93      	ldr	r5, [pc, #588]	; (1fa8c <_strtod_r+0xbec>)
   1f840:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1f844:	9414      	str	r4, [sp, #80]	; 0x50
   1f846:	9315      	str	r3, [sp, #84]	; 0x54
   1f848:	e9dd 6714 	ldrd	r6, r7, [sp, #80]	; 0x50
   1f84c:	e014      	b.n	1f878 <_strtod_r+0x9d8>
   1f84e:	4b8f      	ldr	r3, [pc, #572]	; (1fa8c <_strtod_r+0xbec>)
   1f850:	2200      	movs	r2, #0
   1f852:	4630      	mov	r0, r6
   1f854:	4639      	mov	r1, r7
   1f856:	f7fc fbb1 	bl	1bfbc <__aeabi_dmul>
   1f85a:	9b06      	ldr	r3, [sp, #24]
   1f85c:	4604      	mov	r4, r0
   1f85e:	460d      	mov	r5, r1
   1f860:	b923      	cbnz	r3, 1f86c <_strtod_r+0x9cc>
   1f862:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1f866:	900e      	str	r0, [sp, #56]	; 0x38
   1f868:	930f      	str	r3, [sp, #60]	; 0x3c
   1f86a:	e003      	b.n	1f874 <_strtod_r+0x9d4>
   1f86c:	4602      	mov	r2, r0
   1f86e:	460b      	mov	r3, r1
   1f870:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   1f874:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	; 0x38
   1f878:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1f87c:	0d1b      	lsrs	r3, r3, #20
   1f87e:	051b      	lsls	r3, r3, #20
   1f880:	9307      	str	r3, [sp, #28]
   1f882:	9a07      	ldr	r2, [sp, #28]
   1f884:	4b82      	ldr	r3, [pc, #520]	; (1fa90 <_strtod_r+0xbf0>)
   1f886:	429a      	cmp	r2, r3
   1f888:	d12b      	bne.n	1f8e2 <_strtod_r+0xa42>
   1f88a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   1f88e:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
   1f892:	4640      	mov	r0, r8
   1f894:	4649      	mov	r1, r9
   1f896:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1f89a:	f002 fbe9 	bl	22070 <__ulp>
   1f89e:	4602      	mov	r2, r0
   1f8a0:	460b      	mov	r3, r1
   1f8a2:	4630      	mov	r0, r6
   1f8a4:	4639      	mov	r1, r7
   1f8a6:	f7fc fb89 	bl	1bfbc <__aeabi_dmul>
   1f8aa:	4642      	mov	r2, r8
   1f8ac:	464b      	mov	r3, r9
   1f8ae:	f7fc f9d3 	bl	1bc58 <__adddf3>
   1f8b2:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1f8b6:	0d1b      	lsrs	r3, r3, #20
   1f8b8:	4a76      	ldr	r2, [pc, #472]	; (1fa94 <_strtod_r+0xbf4>)
   1f8ba:	051b      	lsls	r3, r3, #20
   1f8bc:	4293      	cmp	r3, r2
   1f8be:	4680      	mov	r8, r0
   1f8c0:	d90c      	bls.n	1f8dc <_strtod_r+0xa3c>
   1f8c2:	4b75      	ldr	r3, [pc, #468]	; (1fa98 <_strtod_r+0xbf8>)
   1f8c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1f8c6:	429a      	cmp	r2, r3
   1f8c8:	d103      	bne.n	1f8d2 <_strtod_r+0xa32>
   1f8ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1f8cc:	3301      	adds	r3, #1
   1f8ce:	f43f ad2d 	beq.w	1f32c <_strtod_r+0x48c>
   1f8d2:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 1fa98 <_strtod_r+0xbf8>
   1f8d6:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
   1f8da:	e072      	b.n	1f9c2 <_strtod_r+0xb22>
   1f8dc:	f101 7954 	add.w	r9, r1, #55574528	; 0x3500000
   1f8e0:	e039      	b.n	1f956 <_strtod_r+0xab6>
   1f8e2:	9b03      	ldr	r3, [sp, #12]
   1f8e4:	b33b      	cbz	r3, 1f936 <_strtod_r+0xa96>
   1f8e6:	9b07      	ldr	r3, [sp, #28]
   1f8e8:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   1f8ec:	d823      	bhi.n	1f936 <_strtod_r+0xa96>
   1f8ee:	a35e      	add	r3, pc, #376	; (adr r3, 1fa68 <_strtod_r+0xbc8>)
   1f8f0:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f8f4:	4620      	mov	r0, r4
   1f8f6:	4629      	mov	r1, r5
   1f8f8:	f7fc fddc 	bl	1c4b4 <__aeabi_dcmple>
   1f8fc:	b1b8      	cbz	r0, 1f92e <_strtod_r+0xa8e>
   1f8fe:	4629      	mov	r1, r5
   1f900:	4620      	mov	r0, r4
   1f902:	f7fc fe1d 	bl	1c540 <__aeabi_d2uiz>
   1f906:	2800      	cmp	r0, #0
   1f908:	bf08      	it	eq
   1f90a:	2001      	moveq	r0, #1
   1f90c:	f7fc fae0 	bl	1bed0 <__aeabi_ui2d>
   1f910:	9b06      	ldr	r3, [sp, #24]
   1f912:	4604      	mov	r4, r0
   1f914:	460d      	mov	r5, r1
   1f916:	b923      	cbnz	r3, 1f922 <_strtod_r+0xa82>
   1f918:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1f91c:	9010      	str	r0, [sp, #64]	; 0x40
   1f91e:	9311      	str	r3, [sp, #68]	; 0x44
   1f920:	e003      	b.n	1f92a <_strtod_r+0xa8a>
   1f922:	4602      	mov	r2, r0
   1f924:	460b      	mov	r3, r1
   1f926:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   1f92a:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   1f92e:	9a07      	ldr	r2, [sp, #28]
   1f930:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   1f934:	1a9f      	subs	r7, r3, r2
   1f936:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   1f93a:	f002 fb99 	bl	22070 <__ulp>
   1f93e:	4602      	mov	r2, r0
   1f940:	460b      	mov	r3, r1
   1f942:	4630      	mov	r0, r6
   1f944:	4639      	mov	r1, r7
   1f946:	f7fc fb39 	bl	1bfbc <__aeabi_dmul>
   1f94a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   1f94e:	f7fc f983 	bl	1bc58 <__adddf3>
   1f952:	4680      	mov	r8, r0
   1f954:	4689      	mov	r9, r1
   1f956:	9b03      	ldr	r3, [sp, #12]
   1f958:	bb9b      	cbnz	r3, 1f9c2 <_strtod_r+0xb22>
   1f95a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1f95e:	0d1b      	lsrs	r3, r3, #20
   1f960:	9a07      	ldr	r2, [sp, #28]
   1f962:	051b      	lsls	r3, r3, #20
   1f964:	429a      	cmp	r2, r3
   1f966:	464e      	mov	r6, r9
   1f968:	d12b      	bne.n	1f9c2 <_strtod_r+0xb22>
   1f96a:	4629      	mov	r1, r5
   1f96c:	4620      	mov	r0, r4
   1f96e:	f7fc fdbf 	bl	1c4f0 <__aeabi_d2iz>
   1f972:	f7fc fabd 	bl	1bef0 <__aeabi_i2d>
   1f976:	460b      	mov	r3, r1
   1f978:	4602      	mov	r2, r0
   1f97a:	4629      	mov	r1, r5
   1f97c:	4620      	mov	r0, r4
   1f97e:	f7fc f969 	bl	1bc54 <__aeabi_dsub>
   1f982:	9b06      	ldr	r3, [sp, #24]
   1f984:	4604      	mov	r4, r0
   1f986:	460d      	mov	r5, r1
   1f988:	b92b      	cbnz	r3, 1f996 <_strtod_r+0xaf6>
   1f98a:	f1b8 0f00 	cmp.w	r8, #0
   1f98e:	d102      	bne.n	1f996 <_strtod_r+0xaf6>
   1f990:	f3c9 0613 	ubfx	r6, r9, #0, #20
   1f994:	b17e      	cbz	r6, 1f9b6 <_strtod_r+0xb16>
   1f996:	a336      	add	r3, pc, #216	; (adr r3, 1fa70 <_strtod_r+0xbd0>)
   1f998:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f99c:	4620      	mov	r0, r4
   1f99e:	4629      	mov	r1, r5
   1f9a0:	f7fc fd7e 	bl	1c4a0 <__aeabi_dcmplt>
   1f9a4:	bb88      	cbnz	r0, 1fa0a <_strtod_r+0xb6a>
   1f9a6:	a334      	add	r3, pc, #208	; (adr r3, 1fa78 <_strtod_r+0xbd8>)
   1f9a8:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f9ac:	4620      	mov	r0, r4
   1f9ae:	4629      	mov	r1, r5
   1f9b0:	f7fc fd94 	bl	1c4dc <__aeabi_dcmpgt>
   1f9b4:	e004      	b.n	1f9c0 <_strtod_r+0xb20>
   1f9b6:	a332      	add	r3, pc, #200	; (adr r3, 1fa80 <_strtod_r+0xbe0>)
   1f9b8:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f9bc:	f7fc fd70 	bl	1c4a0 <__aeabi_dcmplt>
   1f9c0:	bb18      	cbnz	r0, 1fa0a <_strtod_r+0xb6a>
   1f9c2:	9918      	ldr	r1, [sp, #96]	; 0x60
   1f9c4:	4650      	mov	r0, sl
   1f9c6:	f002 f8c2 	bl	21b4e <_Bfree>
   1f9ca:	9904      	ldr	r1, [sp, #16]
   1f9cc:	4650      	mov	r0, sl
   1f9ce:	f002 f8be 	bl	21b4e <_Bfree>
   1f9d2:	9902      	ldr	r1, [sp, #8]
   1f9d4:	4650      	mov	r0, sl
   1f9d6:	f002 f8ba 	bl	21b4e <_Bfree>
   1f9da:	4659      	mov	r1, fp
   1f9dc:	4650      	mov	r0, sl
   1f9de:	f002 f8b6 	bl	21b4e <_Bfree>
   1f9e2:	e574      	b.n	1f4ce <_strtod_r+0x62e>
   1f9e4:	9b03      	ldr	r3, [sp, #12]
   1f9e6:	b183      	cbz	r3, 1fa0a <_strtod_r+0xb6a>
   1f9e8:	4b2c      	ldr	r3, [pc, #176]	; (1fa9c <_strtod_r+0xbfc>)
   1f9ea:	4640      	mov	r0, r8
   1f9ec:	930b      	str	r3, [sp, #44]	; 0x2c
   1f9ee:	2300      	movs	r3, #0
   1f9f0:	930a      	str	r3, [sp, #40]	; 0x28
   1f9f2:	4649      	mov	r1, r9
   1f9f4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1f9f8:	f7fc fae0 	bl	1bfbc <__aeabi_dmul>
   1f9fc:	4680      	mov	r8, r0
   1f9fe:	4689      	mov	r9, r1
   1fa00:	b919      	cbnz	r1, 1fa0a <_strtod_r+0xb6a>
   1fa02:	b910      	cbnz	r0, 1fa0a <_strtod_r+0xb6a>
   1fa04:	2322      	movs	r3, #34	; 0x22
   1fa06:	f8ca 3000 	str.w	r3, [sl]
   1fa0a:	9918      	ldr	r1, [sp, #96]	; 0x60
   1fa0c:	4650      	mov	r0, sl
   1fa0e:	f002 f89e 	bl	21b4e <_Bfree>
   1fa12:	9904      	ldr	r1, [sp, #16]
   1fa14:	4650      	mov	r0, sl
   1fa16:	f002 f89a 	bl	21b4e <_Bfree>
   1fa1a:	9902      	ldr	r1, [sp, #8]
   1fa1c:	4650      	mov	r0, sl
   1fa1e:	f002 f896 	bl	21b4e <_Bfree>
   1fa22:	9905      	ldr	r1, [sp, #20]
   1fa24:	4650      	mov	r0, sl
   1fa26:	f002 f892 	bl	21b4e <_Bfree>
   1fa2a:	4659      	mov	r1, fp
   1fa2c:	4650      	mov	r0, sl
   1fa2e:	f002 f88e 	bl	21b4e <_Bfree>
   1fa32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1fa34:	b113      	cbz	r3, 1fa3c <_strtod_r+0xb9c>
   1fa36:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1fa38:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   1fa3a:	6013      	str	r3, [r2, #0]
   1fa3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1fa3e:	b11b      	cbz	r3, 1fa48 <_strtod_r+0xba8>
   1fa40:	4642      	mov	r2, r8
   1fa42:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
   1fa46:	e007      	b.n	1fa58 <_strtod_r+0xbb8>
   1fa48:	4642      	mov	r2, r8
   1fa4a:	464b      	mov	r3, r9
   1fa4c:	e004      	b.n	1fa58 <_strtod_r+0xbb8>
   1fa4e:	2500      	movs	r5, #0
   1fa50:	462a      	mov	r2, r5
   1fa52:	2101      	movs	r1, #1
   1fa54:	f7ff bb47 	b.w	1f0e6 <_strtod_r+0x246>
   1fa58:	4610      	mov	r0, r2
   1fa5a:	4619      	mov	r1, r3
   1fa5c:	b01d      	add	sp, #116	; 0x74
   1fa5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa62:	bf00      	nop
   1fa64:	f3af 8000 	nop.w
   1fa68:	ffc00000 	.word	0xffc00000
   1fa6c:	41dfffff 	.word	0x41dfffff
   1fa70:	94a03595 	.word	0x94a03595
   1fa74:	3fdfffff 	.word	0x3fdfffff
   1fa78:	35afe535 	.word	0x35afe535
   1fa7c:	3fe00000 	.word	0x3fe00000
   1fa80:	94a03595 	.word	0x94a03595
   1fa84:	3fcfffff 	.word	0x3fcfffff
   1fa88:	3ff00000 	.word	0x3ff00000
   1fa8c:	3fe00000 	.word	0x3fe00000
   1fa90:	7fe00000 	.word	0x7fe00000
   1fa94:	7c9fffff 	.word	0x7c9fffff
   1fa98:	7fefffff 	.word	0x7fefffff
   1fa9c:	39500000 	.word	0x39500000

0001faa0 <__strtok_r>:
__strtok_r():
   1faa0:	b5f0      	push	{r4, r5, r6, r7, lr}
   1faa2:	b948      	cbnz	r0, 1fab8 <__strtok_r+0x18>
   1faa4:	6810      	ldr	r0, [r2, #0]
   1faa6:	b938      	cbnz	r0, 1fab8 <__strtok_r+0x18>
   1faa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1faaa:	f817 6b01 	ldrb.w	r6, [r7], #1
   1faae:	b15e      	cbz	r6, 1fac8 <__strtok_r+0x28>
   1fab0:	42b5      	cmp	r5, r6
   1fab2:	d1fa      	bne.n	1faaa <__strtok_r+0xa>
   1fab4:	b12b      	cbz	r3, 1fac2 <__strtok_r+0x22>
   1fab6:	4620      	mov	r0, r4
   1fab8:	4604      	mov	r4, r0
   1faba:	460f      	mov	r7, r1
   1fabc:	f814 5b01 	ldrb.w	r5, [r4], #1
   1fac0:	e7f3      	b.n	1faaa <__strtok_r+0xa>
   1fac2:	6014      	str	r4, [r2, #0]
   1fac4:	7003      	strb	r3, [r0, #0]
   1fac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fac8:	b94d      	cbnz	r5, 1fade <__strtok_r+0x3e>
   1faca:	6015      	str	r5, [r2, #0]
   1facc:	4628      	mov	r0, r5
   1face:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fad0:	f817 6b01 	ldrb.w	r6, [r7], #1
   1fad4:	42b5      	cmp	r5, r6
   1fad6:	d007      	beq.n	1fae8 <__strtok_r+0x48>
   1fad8:	2e00      	cmp	r6, #0
   1fada:	d1f9      	bne.n	1fad0 <__strtok_r+0x30>
   1fadc:	461c      	mov	r4, r3
   1fade:	4623      	mov	r3, r4
   1fae0:	460f      	mov	r7, r1
   1fae2:	f813 5b01 	ldrb.w	r5, [r3], #1
   1fae6:	e7f3      	b.n	1fad0 <__strtok_r+0x30>
   1fae8:	b115      	cbz	r5, 1faf0 <__strtok_r+0x50>
   1faea:	2100      	movs	r1, #0
   1faec:	7021      	strb	r1, [r4, #0]
   1faee:	e000      	b.n	1faf2 <__strtok_r+0x52>
   1faf0:	462b      	mov	r3, r5
   1faf2:	6013      	str	r3, [r2, #0]
   1faf4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001faf6 <strtok_r>:
strtok_r():
   1faf6:	2301      	movs	r3, #1
   1faf8:	f7ff bfd2 	b.w	1faa0 <__strtok_r>

0001fafc <_strtol_r>:
_strtol_r():
   1fafc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1fb00:	460f      	mov	r7, r1
   1fb02:	4680      	mov	r8, r0
   1fb04:	483f      	ldr	r0, [pc, #252]	; (1fc04 <_strtol_r+0x108>)
   1fb06:	f8d0 9000 	ldr.w	r9, [r0]
   1fb0a:	463d      	mov	r5, r7
   1fb0c:	f815 4b01 	ldrb.w	r4, [r5], #1
   1fb10:	eb09 0004 	add.w	r0, r9, r4
   1fb14:	7840      	ldrb	r0, [r0, #1]
   1fb16:	f000 0008 	and.w	r0, r0, #8
   1fb1a:	f000 06ff 	and.w	r6, r0, #255	; 0xff
   1fb1e:	b108      	cbz	r0, 1fb24 <_strtol_r+0x28>
   1fb20:	462f      	mov	r7, r5
   1fb22:	e7f2      	b.n	1fb0a <_strtol_r+0xe>
   1fb24:	2c2d      	cmp	r4, #45	; 0x2d
   1fb26:	d103      	bne.n	1fb30 <_strtol_r+0x34>
   1fb28:	1cbd      	adds	r5, r7, #2
   1fb2a:	787c      	ldrb	r4, [r7, #1]
   1fb2c:	2601      	movs	r6, #1
   1fb2e:	e003      	b.n	1fb38 <_strtol_r+0x3c>
   1fb30:	2c2b      	cmp	r4, #43	; 0x2b
   1fb32:	bf04      	itt	eq
   1fb34:	787c      	ldrbeq	r4, [r7, #1]
   1fb36:	1cbd      	addeq	r5, r7, #2
   1fb38:	b113      	cbz	r3, 1fb40 <_strtol_r+0x44>
   1fb3a:	2b10      	cmp	r3, #16
   1fb3c:	d10a      	bne.n	1fb54 <_strtol_r+0x58>
   1fb3e:	e05b      	b.n	1fbf8 <_strtol_r+0xfc>
   1fb40:	2c30      	cmp	r4, #48	; 0x30
   1fb42:	d157      	bne.n	1fbf4 <_strtol_r+0xf8>
   1fb44:	7828      	ldrb	r0, [r5, #0]
   1fb46:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   1fb4a:	2858      	cmp	r0, #88	; 0x58
   1fb4c:	d14d      	bne.n	1fbea <_strtol_r+0xee>
   1fb4e:	786c      	ldrb	r4, [r5, #1]
   1fb50:	2310      	movs	r3, #16
   1fb52:	3502      	adds	r5, #2
   1fb54:	2e00      	cmp	r6, #0
   1fb56:	bf14      	ite	ne
   1fb58:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
   1fb5c:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
   1fb60:	fbbc faf3 	udiv	sl, ip, r3
   1fb64:	2700      	movs	r7, #0
   1fb66:	4638      	mov	r0, r7
   1fb68:	fb03 cc1a 	mls	ip, r3, sl, ip
   1fb6c:	eb09 0e04 	add.w	lr, r9, r4
   1fb70:	f89e e001 	ldrb.w	lr, [lr, #1]
   1fb74:	f01e 0f04 	tst.w	lr, #4
   1fb78:	d001      	beq.n	1fb7e <_strtol_r+0x82>
   1fb7a:	3c30      	subs	r4, #48	; 0x30
   1fb7c:	e00b      	b.n	1fb96 <_strtol_r+0x9a>
   1fb7e:	f01e 0e03 	ands.w	lr, lr, #3
   1fb82:	d01b      	beq.n	1fbbc <_strtol_r+0xc0>
   1fb84:	f1be 0f01 	cmp.w	lr, #1
   1fb88:	bf0c      	ite	eq
   1fb8a:	f04f 0e37 	moveq.w	lr, #55	; 0x37
   1fb8e:	f04f 0e57 	movne.w	lr, #87	; 0x57
   1fb92:	ebce 0404 	rsb	r4, lr, r4
   1fb96:	42a3      	cmp	r3, r4
   1fb98:	dd10      	ble.n	1fbbc <_strtol_r+0xc0>
   1fb9a:	f1b7 3fff 	cmp.w	r7, #4294967295	; 0xffffffff
   1fb9e:	d00a      	beq.n	1fbb6 <_strtol_r+0xba>
   1fba0:	4550      	cmp	r0, sl
   1fba2:	d806      	bhi.n	1fbb2 <_strtol_r+0xb6>
   1fba4:	d101      	bne.n	1fbaa <_strtol_r+0xae>
   1fba6:	4564      	cmp	r4, ip
   1fba8:	dc03      	bgt.n	1fbb2 <_strtol_r+0xb6>
   1fbaa:	fb03 4000 	mla	r0, r3, r0, r4
   1fbae:	2701      	movs	r7, #1
   1fbb0:	e001      	b.n	1fbb6 <_strtol_r+0xba>
   1fbb2:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1fbb6:	f815 4b01 	ldrb.w	r4, [r5], #1
   1fbba:	e7d7      	b.n	1fb6c <_strtol_r+0x70>
   1fbbc:	1c7b      	adds	r3, r7, #1
   1fbbe:	d10c      	bne.n	1fbda <_strtol_r+0xde>
   1fbc0:	2e00      	cmp	r6, #0
   1fbc2:	f04f 0322 	mov.w	r3, #34	; 0x22
   1fbc6:	bf14      	ite	ne
   1fbc8:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
   1fbcc:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1fbd0:	f8c8 3000 	str.w	r3, [r8]
   1fbd4:	b92a      	cbnz	r2, 1fbe2 <_strtol_r+0xe6>
   1fbd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1fbda:	b106      	cbz	r6, 1fbde <_strtol_r+0xe2>
   1fbdc:	4240      	negs	r0, r0
   1fbde:	b172      	cbz	r2, 1fbfe <_strtol_r+0x102>
   1fbe0:	b107      	cbz	r7, 1fbe4 <_strtol_r+0xe8>
   1fbe2:	1e69      	subs	r1, r5, #1
   1fbe4:	6011      	str	r1, [r2, #0]
   1fbe6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1fbea:	2430      	movs	r4, #48	; 0x30
   1fbec:	2b00      	cmp	r3, #0
   1fbee:	d1b1      	bne.n	1fb54 <_strtol_r+0x58>
   1fbf0:	2308      	movs	r3, #8
   1fbf2:	e7af      	b.n	1fb54 <_strtol_r+0x58>
   1fbf4:	230a      	movs	r3, #10
   1fbf6:	e7ad      	b.n	1fb54 <_strtol_r+0x58>
   1fbf8:	2c30      	cmp	r4, #48	; 0x30
   1fbfa:	d0a3      	beq.n	1fb44 <_strtol_r+0x48>
   1fbfc:	e7aa      	b.n	1fb54 <_strtol_r+0x58>
   1fbfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1fc02:	bf00      	nop
   1fc04:	2007c0dc 	.word	0x2007c0dc

0001fc08 <strtol>:
strtol():
   1fc08:	4613      	mov	r3, r2
   1fc0a:	460a      	mov	r2, r1
   1fc0c:	4601      	mov	r1, r0
   1fc0e:	4802      	ldr	r0, [pc, #8]	; (1fc18 <strtol+0x10>)
   1fc10:	6800      	ldr	r0, [r0, #0]
   1fc12:	f7ff bf73 	b.w	1fafc <_strtol_r>
   1fc16:	bf00      	nop
   1fc18:	2007c140 	.word	0x2007c140

0001fc1c <time>:
time():
   1fc1c:	b513      	push	{r0, r1, r4, lr}
   1fc1e:	4b08      	ldr	r3, [pc, #32]	; (1fc40 <time+0x24>)
   1fc20:	4604      	mov	r4, r0
   1fc22:	2200      	movs	r2, #0
   1fc24:	6818      	ldr	r0, [r3, #0]
   1fc26:	4669      	mov	r1, sp
   1fc28:	f001 fe3a 	bl	218a0 <_gettimeofday_r>
   1fc2c:	2800      	cmp	r0, #0
   1fc2e:	bfbc      	itt	lt
   1fc30:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1fc34:	9300      	strlt	r3, [sp, #0]
   1fc36:	9800      	ldr	r0, [sp, #0]
   1fc38:	b104      	cbz	r4, 1fc3c <time+0x20>
   1fc3a:	6020      	str	r0, [r4, #0]
   1fc3c:	b002      	add	sp, #8
   1fc3e:	bd10      	pop	{r4, pc}
   1fc40:	2007c140 	.word	0x2007c140

0001fc44 <tolower>:
tolower():
   1fc44:	4b04      	ldr	r3, [pc, #16]	; (1fc58 <tolower+0x14>)
   1fc46:	681b      	ldr	r3, [r3, #0]
   1fc48:	4403      	add	r3, r0
   1fc4a:	785b      	ldrb	r3, [r3, #1]
   1fc4c:	f003 0303 	and.w	r3, r3, #3
   1fc50:	2b01      	cmp	r3, #1
   1fc52:	bf08      	it	eq
   1fc54:	3020      	addeq	r0, #32
   1fc56:	4770      	bx	lr
   1fc58:	2007c0dc 	.word	0x2007c0dc

0001fc5c <toupper>:
toupper():
   1fc5c:	4b04      	ldr	r3, [pc, #16]	; (1fc70 <toupper+0x14>)
   1fc5e:	681b      	ldr	r3, [r3, #0]
   1fc60:	4403      	add	r3, r0
   1fc62:	785b      	ldrb	r3, [r3, #1]
   1fc64:	f003 0303 	and.w	r3, r3, #3
   1fc68:	2b02      	cmp	r3, #2
   1fc6a:	bf08      	it	eq
   1fc6c:	3820      	subeq	r0, #32
   1fc6e:	4770      	bx	lr
   1fc70:	2007c0dc 	.word	0x2007c0dc

0001fc74 <__tzcalc_limits>:
__tzcalc_limits():
   1fc74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc78:	4604      	mov	r4, r0
   1fc7a:	f001 fe23 	bl	218c4 <__gettzinfo>
   1fc7e:	f240 73b1 	movw	r3, #1969	; 0x7b1
   1fc82:	429c      	cmp	r4, r3
   1fc84:	f340 8096 	ble.w	1fdb4 <__tzcalc_limits+0x140>
   1fc88:	f240 156d 	movw	r5, #365	; 0x16d
   1fc8c:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   1fc90:	18e3      	adds	r3, r4, r3
   1fc92:	f2a4 72b2 	subw	r2, r4, #1970	; 0x7b2
   1fc96:	109b      	asrs	r3, r3, #2
   1fc98:	fb05 3502 	mla	r5, r5, r2, r3
   1fc9c:	f2a4 726d 	subw	r2, r4, #1901	; 0x76d
   1fca0:	f06f 0363 	mvn.w	r3, #99	; 0x63
   1fca4:	fb92 f3f3 	sdiv	r3, r2, r3
   1fca8:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   1fcac:	442b      	add	r3, r5
   1fcae:	18a5      	adds	r5, r4, r2
   1fcb0:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1fcb4:	fb94 f7f2 	sdiv	r7, r4, r2
   1fcb8:	fb95 f5f2 	sdiv	r5, r5, r2
   1fcbc:	fb02 4717 	mls	r7, r2, r7, r4
   1fcc0:	441d      	add	r5, r3
   1fcc2:	2364      	movs	r3, #100	; 0x64
   1fcc4:	fb94 f6f3 	sdiv	r6, r4, r3
   1fcc8:	fab7 fe87 	clz	lr, r7
   1fccc:	4601      	mov	r1, r0
   1fcce:	fb03 4616 	mls	r6, r3, r6, r4
   1fcd2:	f100 0338 	add.w	r3, r0, #56	; 0x38
   1fcd6:	9301      	str	r3, [sp, #4]
   1fcd8:	f004 0303 	and.w	r3, r4, #3
   1fcdc:	6044      	str	r4, [r0, #4]
   1fcde:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   1fce2:	9300      	str	r3, [sp, #0]
   1fce4:	f04f 0c07 	mov.w	ip, #7
   1fce8:	7a0b      	ldrb	r3, [r1, #8]
   1fcea:	2b4a      	cmp	r3, #74	; 0x4a
   1fcec:	d10e      	bne.n	1fd0c <__tzcalc_limits+0x98>
   1fcee:	694b      	ldr	r3, [r1, #20]
   1fcf0:	9a00      	ldr	r2, [sp, #0]
   1fcf2:	18ec      	adds	r4, r5, r3
   1fcf4:	b902      	cbnz	r2, 1fcf8 <__tzcalc_limits+0x84>
   1fcf6:	b906      	cbnz	r6, 1fcfa <__tzcalc_limits+0x86>
   1fcf8:	b927      	cbnz	r7, 1fd04 <__tzcalc_limits+0x90>
   1fcfa:	2b3b      	cmp	r3, #59	; 0x3b
   1fcfc:	bfd4      	ite	le
   1fcfe:	2300      	movle	r3, #0
   1fd00:	2301      	movgt	r3, #1
   1fd02:	e000      	b.n	1fd06 <__tzcalc_limits+0x92>
   1fd04:	2300      	movs	r3, #0
   1fd06:	4423      	add	r3, r4
   1fd08:	3b01      	subs	r3, #1
   1fd0a:	e03f      	b.n	1fd8c <__tzcalc_limits+0x118>
   1fd0c:	2b44      	cmp	r3, #68	; 0x44
   1fd0e:	d102      	bne.n	1fd16 <__tzcalc_limits+0xa2>
   1fd10:	694b      	ldr	r3, [r1, #20]
   1fd12:	442b      	add	r3, r5
   1fd14:	e03a      	b.n	1fd8c <__tzcalc_limits+0x118>
   1fd16:	9b00      	ldr	r3, [sp, #0]
   1fd18:	b92b      	cbnz	r3, 1fd26 <__tzcalc_limits+0xb2>
   1fd1a:	2e00      	cmp	r6, #0
   1fd1c:	bf0c      	ite	eq
   1fd1e:	46f0      	moveq	r8, lr
   1fd20:	f04f 0801 	movne.w	r8, #1
   1fd24:	e000      	b.n	1fd28 <__tzcalc_limits+0xb4>
   1fd26:	46f0      	mov	r8, lr
   1fd28:	46a9      	mov	r9, r5
   1fd2a:	4b24      	ldr	r3, [pc, #144]	; (1fdbc <__tzcalc_limits+0x148>)
   1fd2c:	2230      	movs	r2, #48	; 0x30
   1fd2e:	fb02 3808 	mla	r8, r2, r8, r3
   1fd32:	68cc      	ldr	r4, [r1, #12]
   1fd34:	f1a8 0a04 	sub.w	sl, r8, #4
   1fd38:	2301      	movs	r3, #1
   1fd3a:	42a3      	cmp	r3, r4
   1fd3c:	da04      	bge.n	1fd48 <__tzcalc_limits+0xd4>
   1fd3e:	f85a bf04 	ldr.w	fp, [sl, #4]!
   1fd42:	3301      	adds	r3, #1
   1fd44:	44d9      	add	r9, fp
   1fd46:	e7f8      	b.n	1fd3a <__tzcalc_limits+0xc6>
   1fd48:	f109 0304 	add.w	r3, r9, #4
   1fd4c:	fb93 fbfc 	sdiv	fp, r3, ip
   1fd50:	ebcb 0acb 	rsb	sl, fp, fp, lsl #3
   1fd54:	ebca 0a03 	rsb	sl, sl, r3
   1fd58:	694b      	ldr	r3, [r1, #20]
   1fd5a:	2c01      	cmp	r4, #1
   1fd5c:	bfb8      	it	lt
   1fd5e:	2401      	movlt	r4, #1
   1fd60:	ebb3 0a0a 	subs.w	sl, r3, sl
   1fd64:	690b      	ldr	r3, [r1, #16]
   1fd66:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
   1fd6a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1fd6e:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   1fd72:	bf48      	it	mi
   1fd74:	f10a 0a07 	addmi.w	sl, sl, #7
   1fd78:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1fd7c:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
   1fd80:	4453      	add	r3, sl
   1fd82:	42a3      	cmp	r3, r4
   1fd84:	db01      	blt.n	1fd8a <__tzcalc_limits+0x116>
   1fd86:	3b07      	subs	r3, #7
   1fd88:	e7fb      	b.n	1fd82 <__tzcalc_limits+0x10e>
   1fd8a:	444b      	add	r3, r9
   1fd8c:	698c      	ldr	r4, [r1, #24]
   1fd8e:	4a0c      	ldr	r2, [pc, #48]	; (1fdc0 <__tzcalc_limits+0x14c>)
   1fd90:	fb02 4303 	mla	r3, r2, r3, r4
   1fd94:	6a0c      	ldr	r4, [r1, #32]
   1fd96:	4423      	add	r3, r4
   1fd98:	f841 3f1c 	str.w	r3, [r1, #28]!
   1fd9c:	9b01      	ldr	r3, [sp, #4]
   1fd9e:	4299      	cmp	r1, r3
   1fda0:	d1a2      	bne.n	1fce8 <__tzcalc_limits+0x74>
   1fda2:	69c3      	ldr	r3, [r0, #28]
   1fda4:	6b82      	ldr	r2, [r0, #56]	; 0x38
   1fda6:	4293      	cmp	r3, r2
   1fda8:	bfac      	ite	ge
   1fdaa:	2300      	movge	r3, #0
   1fdac:	2301      	movlt	r3, #1
   1fdae:	6003      	str	r3, [r0, #0]
   1fdb0:	2001      	movs	r0, #1
   1fdb2:	e000      	b.n	1fdb6 <__tzcalc_limits+0x142>
   1fdb4:	2000      	movs	r0, #0
   1fdb6:	b003      	add	sp, #12
   1fdb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdbc:	000263fc 	.word	0x000263fc
   1fdc0:	00015180 	.word	0x00015180

0001fdc4 <__tz_lock>:
__tz_lock():
   1fdc4:	4770      	bx	lr

0001fdc6 <__tz_unlock>:
__tz_unlock():
   1fdc6:	4770      	bx	lr

0001fdc8 <_tzset_unlocked>:
_tzset_unlocked():
   1fdc8:	4b01      	ldr	r3, [pc, #4]	; (1fdd0 <_tzset_unlocked+0x8>)
   1fdca:	6818      	ldr	r0, [r3, #0]
   1fdcc:	f000 b802 	b.w	1fdd4 <_tzset_unlocked_r>
   1fdd0:	2007c140 	.word	0x2007c140

0001fdd4 <_tzset_unlocked_r>:
_tzset_unlocked_r():
   1fdd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fdd8:	b08d      	sub	sp, #52	; 0x34
   1fdda:	4607      	mov	r7, r0
   1fddc:	f001 fd72 	bl	218c4 <__gettzinfo>
   1fde0:	49b0      	ldr	r1, [pc, #704]	; (200a4 <_tzset_unlocked_r+0x2d0>)
   1fde2:	4604      	mov	r4, r0
   1fde4:	4638      	mov	r0, r7
   1fde6:	f001 fd53 	bl	21890 <_getenv_r>
   1fdea:	4eaf      	ldr	r6, [pc, #700]	; (200a8 <_tzset_unlocked_r+0x2d4>)
   1fdec:	4605      	mov	r5, r0
   1fdee:	b960      	cbnz	r0, 1fe0a <_tzset_unlocked_r+0x36>
   1fdf0:	4bae      	ldr	r3, [pc, #696]	; (200ac <_tzset_unlocked_r+0x2d8>)
   1fdf2:	4aaf      	ldr	r2, [pc, #700]	; (200b0 <_tzset_unlocked_r+0x2dc>)
   1fdf4:	6018      	str	r0, [r3, #0]
   1fdf6:	4baf      	ldr	r3, [pc, #700]	; (200b4 <_tzset_unlocked_r+0x2e0>)
   1fdf8:	6018      	str	r0, [r3, #0]
   1fdfa:	4baf      	ldr	r3, [pc, #700]	; (200b8 <_tzset_unlocked_r+0x2e4>)
   1fdfc:	6830      	ldr	r0, [r6, #0]
   1fdfe:	601a      	str	r2, [r3, #0]
   1fe00:	605a      	str	r2, [r3, #4]
   1fe02:	f7fd fa5f 	bl	1d2c4 <free>
   1fe06:	6035      	str	r5, [r6, #0]
   1fe08:	e148      	b.n	2009c <_tzset_unlocked_r+0x2c8>
   1fe0a:	6831      	ldr	r1, [r6, #0]
   1fe0c:	b979      	cbnz	r1, 1fe2e <_tzset_unlocked_r+0x5a>
   1fe0e:	6830      	ldr	r0, [r6, #0]
   1fe10:	f7fd fa58 	bl	1d2c4 <free>
   1fe14:	4628      	mov	r0, r5
   1fe16:	f7fe ffa0 	bl	1ed5a <strlen>
   1fe1a:	1c41      	adds	r1, r0, #1
   1fe1c:	4638      	mov	r0, r7
   1fe1e:	f7fd fd7b 	bl	1d918 <_malloc_r>
   1fe22:	6030      	str	r0, [r6, #0]
   1fe24:	b148      	cbz	r0, 1fe3a <_tzset_unlocked_r+0x66>
   1fe26:	4629      	mov	r1, r5
   1fe28:	f7fe ff8f 	bl	1ed4a <strcpy>
   1fe2c:	e005      	b.n	1fe3a <_tzset_unlocked_r+0x66>
   1fe2e:	f7fe ff82 	bl	1ed36 <strcmp>
   1fe32:	2800      	cmp	r0, #0
   1fe34:	f000 8132 	beq.w	2009c <_tzset_unlocked_r+0x2c8>
   1fe38:	e7e9      	b.n	1fe0e <_tzset_unlocked_r+0x3a>
   1fe3a:	782b      	ldrb	r3, [r5, #0]
   1fe3c:	ae0a      	add	r6, sp, #40	; 0x28
   1fe3e:	2b3a      	cmp	r3, #58	; 0x3a
   1fe40:	bf08      	it	eq
   1fe42:	3501      	addeq	r5, #1
   1fe44:	4633      	mov	r3, r6
   1fe46:	4a9d      	ldr	r2, [pc, #628]	; (200bc <_tzset_unlocked_r+0x2e8>)
   1fe48:	499d      	ldr	r1, [pc, #628]	; (200c0 <_tzset_unlocked_r+0x2ec>)
   1fe4a:	4628      	mov	r0, r5
   1fe4c:	f7fe fec8 	bl	1ebe0 <siscanf>
   1fe50:	2800      	cmp	r0, #0
   1fe52:	f340 8123 	ble.w	2009c <_tzset_unlocked_r+0x2c8>
   1fe56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1fe58:	18ef      	adds	r7, r5, r3
   1fe5a:	5ceb      	ldrb	r3, [r5, r3]
   1fe5c:	2b2d      	cmp	r3, #45	; 0x2d
   1fe5e:	d103      	bne.n	1fe68 <_tzset_unlocked_r+0x94>
   1fe60:	3701      	adds	r7, #1
   1fe62:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1fe66:	e003      	b.n	1fe70 <_tzset_unlocked_r+0x9c>
   1fe68:	2b2b      	cmp	r3, #43	; 0x2b
   1fe6a:	bf08      	it	eq
   1fe6c:	3701      	addeq	r7, #1
   1fe6e:	2501      	movs	r5, #1
   1fe70:	f10d 0a20 	add.w	sl, sp, #32
   1fe74:	f10d 0b1e 	add.w	fp, sp, #30
   1fe78:	f04f 0800 	mov.w	r8, #0
   1fe7c:	9603      	str	r6, [sp, #12]
   1fe7e:	f8cd a008 	str.w	sl, [sp, #8]
   1fe82:	9601      	str	r6, [sp, #4]
   1fe84:	f8cd b000 	str.w	fp, [sp]
   1fe88:	4633      	mov	r3, r6
   1fe8a:	aa07      	add	r2, sp, #28
   1fe8c:	498d      	ldr	r1, [pc, #564]	; (200c4 <_tzset_unlocked_r+0x2f0>)
   1fe8e:	4638      	mov	r0, r7
   1fe90:	f8ad 801e 	strh.w	r8, [sp, #30]
   1fe94:	f8ad 8020 	strh.w	r8, [sp, #32]
   1fe98:	f7fe fea2 	bl	1ebe0 <siscanf>
   1fe9c:	4540      	cmp	r0, r8
   1fe9e:	f340 80fd 	ble.w	2009c <_tzset_unlocked_r+0x2c8>
   1fea2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
   1fea6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
   1feaa:	213c      	movs	r1, #60	; 0x3c
   1feac:	fb01 3302 	mla	r3, r1, r2, r3
   1feb0:	f8bd 201c 	ldrh.w	r2, [sp, #28]
   1feb4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1feb8:	fb01 3302 	mla	r3, r1, r2, r3
   1febc:	435d      	muls	r5, r3
   1febe:	4b7f      	ldr	r3, [pc, #508]	; (200bc <_tzset_unlocked_r+0x2e8>)
   1fec0:	6225      	str	r5, [r4, #32]
   1fec2:	4d7d      	ldr	r5, [pc, #500]	; (200b8 <_tzset_unlocked_r+0x2e4>)
   1fec4:	f8df 9208 	ldr.w	r9, [pc, #520]	; 200d0 <_tzset_unlocked_r+0x2fc>
   1fec8:	602b      	str	r3, [r5, #0]
   1feca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1fecc:	464a      	mov	r2, r9
   1fece:	441f      	add	r7, r3
   1fed0:	497b      	ldr	r1, [pc, #492]	; (200c0 <_tzset_unlocked_r+0x2ec>)
   1fed2:	4633      	mov	r3, r6
   1fed4:	4638      	mov	r0, r7
   1fed6:	f7fe fe83 	bl	1ebe0 <siscanf>
   1feda:	4540      	cmp	r0, r8
   1fedc:	dc08      	bgt.n	1fef0 <_tzset_unlocked_r+0x11c>
   1fede:	682b      	ldr	r3, [r5, #0]
   1fee0:	6a22      	ldr	r2, [r4, #32]
   1fee2:	606b      	str	r3, [r5, #4]
   1fee4:	4b71      	ldr	r3, [pc, #452]	; (200ac <_tzset_unlocked_r+0x2d8>)
   1fee6:	601a      	str	r2, [r3, #0]
   1fee8:	4b72      	ldr	r3, [pc, #456]	; (200b4 <_tzset_unlocked_r+0x2e0>)
   1feea:	f8c3 8000 	str.w	r8, [r3]
   1feee:	e0d5      	b.n	2009c <_tzset_unlocked_r+0x2c8>
   1fef0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1fef2:	f8c5 9004 	str.w	r9, [r5, #4]
   1fef6:	18fd      	adds	r5, r7, r3
   1fef8:	5cfb      	ldrb	r3, [r7, r3]
   1fefa:	2b2d      	cmp	r3, #45	; 0x2d
   1fefc:	d103      	bne.n	1ff06 <_tzset_unlocked_r+0x132>
   1fefe:	3501      	adds	r5, #1
   1ff00:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1ff04:	e003      	b.n	1ff0e <_tzset_unlocked_r+0x13a>
   1ff06:	2b2b      	cmp	r3, #43	; 0x2b
   1ff08:	bf08      	it	eq
   1ff0a:	3501      	addeq	r5, #1
   1ff0c:	2701      	movs	r7, #1
   1ff0e:	2300      	movs	r3, #0
   1ff10:	f8ad 301c 	strh.w	r3, [sp, #28]
   1ff14:	f8ad 301e 	strh.w	r3, [sp, #30]
   1ff18:	f8ad 3020 	strh.w	r3, [sp, #32]
   1ff1c:	930a      	str	r3, [sp, #40]	; 0x28
   1ff1e:	9603      	str	r6, [sp, #12]
   1ff20:	f8cd a008 	str.w	sl, [sp, #8]
   1ff24:	9601      	str	r6, [sp, #4]
   1ff26:	f8cd b000 	str.w	fp, [sp]
   1ff2a:	4633      	mov	r3, r6
   1ff2c:	aa07      	add	r2, sp, #28
   1ff2e:	4965      	ldr	r1, [pc, #404]	; (200c4 <_tzset_unlocked_r+0x2f0>)
   1ff30:	4628      	mov	r0, r5
   1ff32:	f7fe fe55 	bl	1ebe0 <siscanf>
   1ff36:	2800      	cmp	r0, #0
   1ff38:	dc04      	bgt.n	1ff44 <_tzset_unlocked_r+0x170>
   1ff3a:	6a23      	ldr	r3, [r4, #32]
   1ff3c:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   1ff40:	63e3      	str	r3, [r4, #60]	; 0x3c
   1ff42:	e00e      	b.n	1ff62 <_tzset_unlocked_r+0x18e>
   1ff44:	f8bd 201e 	ldrh.w	r2, [sp, #30]
   1ff48:	f8bd 3020 	ldrh.w	r3, [sp, #32]
   1ff4c:	213c      	movs	r1, #60	; 0x3c
   1ff4e:	fb01 3302 	mla	r3, r1, r2, r3
   1ff52:	f8bd 201c 	ldrh.w	r2, [sp, #28]
   1ff56:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1ff5a:	fb01 3302 	mla	r3, r1, r2, r3
   1ff5e:	435f      	muls	r7, r3
   1ff60:	63e7      	str	r7, [r4, #60]	; 0x3c
   1ff62:	4627      	mov	r7, r4
   1ff64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ff66:	f04f 0900 	mov.w	r9, #0
   1ff6a:	441d      	add	r5, r3
   1ff6c:	782b      	ldrb	r3, [r5, #0]
   1ff6e:	2b2c      	cmp	r3, #44	; 0x2c
   1ff70:	bf08      	it	eq
   1ff72:	3501      	addeq	r5, #1
   1ff74:	f895 8000 	ldrb.w	r8, [r5]
   1ff78:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   1ff7c:	d126      	bne.n	1ffcc <_tzset_unlocked_r+0x1f8>
   1ff7e:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   1ff82:	9302      	str	r3, [sp, #8]
   1ff84:	ab09      	add	r3, sp, #36	; 0x24
   1ff86:	9300      	str	r3, [sp, #0]
   1ff88:	9603      	str	r6, [sp, #12]
   1ff8a:	9601      	str	r6, [sp, #4]
   1ff8c:	4633      	mov	r3, r6
   1ff8e:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   1ff92:	494d      	ldr	r1, [pc, #308]	; (200c8 <_tzset_unlocked_r+0x2f4>)
   1ff94:	4628      	mov	r0, r5
   1ff96:	f7fe fe23 	bl	1ebe0 <siscanf>
   1ff9a:	2803      	cmp	r0, #3
   1ff9c:	d17e      	bne.n	2009c <_tzset_unlocked_r+0x2c8>
   1ff9e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   1ffa2:	1e4b      	subs	r3, r1, #1
   1ffa4:	2b0b      	cmp	r3, #11
   1ffa6:	d879      	bhi.n	2009c <_tzset_unlocked_r+0x2c8>
   1ffa8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   1ffac:	1e53      	subs	r3, r2, #1
   1ffae:	2b04      	cmp	r3, #4
   1ffb0:	d874      	bhi.n	2009c <_tzset_unlocked_r+0x2c8>
   1ffb2:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   1ffb6:	2b06      	cmp	r3, #6
   1ffb8:	d870      	bhi.n	2009c <_tzset_unlocked_r+0x2c8>
   1ffba:	f887 8008 	strb.w	r8, [r7, #8]
   1ffbe:	60f9      	str	r1, [r7, #12]
   1ffc0:	613a      	str	r2, [r7, #16]
   1ffc2:	617b      	str	r3, [r7, #20]
   1ffc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ffc6:	eb05 0803 	add.w	r8, r5, r3
   1ffca:	e02a      	b.n	20022 <_tzset_unlocked_r+0x24e>
   1ffcc:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   1ffd0:	bf06      	itte	eq
   1ffd2:	4643      	moveq	r3, r8
   1ffd4:	3501      	addeq	r5, #1
   1ffd6:	2344      	movne	r3, #68	; 0x44
   1ffd8:	220a      	movs	r2, #10
   1ffda:	a90b      	add	r1, sp, #44	; 0x2c
   1ffdc:	4628      	mov	r0, r5
   1ffde:	9305      	str	r3, [sp, #20]
   1ffe0:	f003 f972 	bl	232c8 <strtoul>
   1ffe4:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   1ffe8:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   1ffec:	4545      	cmp	r5, r8
   1ffee:	9b05      	ldr	r3, [sp, #20]
   1fff0:	d114      	bne.n	2001c <_tzset_unlocked_r+0x248>
   1fff2:	234d      	movs	r3, #77	; 0x4d
   1fff4:	f1b9 0f00 	cmp.w	r9, #0
   1fff8:	d107      	bne.n	2000a <_tzset_unlocked_r+0x236>
   1fffa:	7223      	strb	r3, [r4, #8]
   1fffc:	2303      	movs	r3, #3
   1fffe:	60e3      	str	r3, [r4, #12]
   20000:	2302      	movs	r3, #2
   20002:	6123      	str	r3, [r4, #16]
   20004:	f8c4 9014 	str.w	r9, [r4, #20]
   20008:	e00b      	b.n	20022 <_tzset_unlocked_r+0x24e>
   2000a:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
   2000e:	230b      	movs	r3, #11
   20010:	62a3      	str	r3, [r4, #40]	; 0x28
   20012:	2301      	movs	r3, #1
   20014:	62e3      	str	r3, [r4, #44]	; 0x2c
   20016:	2300      	movs	r3, #0
   20018:	6323      	str	r3, [r4, #48]	; 0x30
   2001a:	e002      	b.n	20022 <_tzset_unlocked_r+0x24e>
   2001c:	b280      	uxth	r0, r0
   2001e:	723b      	strb	r3, [r7, #8]
   20020:	6178      	str	r0, [r7, #20]
   20022:	2302      	movs	r3, #2
   20024:	f8ad 301c 	strh.w	r3, [sp, #28]
   20028:	2300      	movs	r3, #0
   2002a:	f8ad 301e 	strh.w	r3, [sp, #30]
   2002e:	f8ad 3020 	strh.w	r3, [sp, #32]
   20032:	930a      	str	r3, [sp, #40]	; 0x28
   20034:	f898 3000 	ldrb.w	r3, [r8]
   20038:	2b2f      	cmp	r3, #47	; 0x2f
   2003a:	d10b      	bne.n	20054 <_tzset_unlocked_r+0x280>
   2003c:	9603      	str	r6, [sp, #12]
   2003e:	f8cd a008 	str.w	sl, [sp, #8]
   20042:	9601      	str	r6, [sp, #4]
   20044:	f8cd b000 	str.w	fp, [sp]
   20048:	4633      	mov	r3, r6
   2004a:	aa07      	add	r2, sp, #28
   2004c:	491f      	ldr	r1, [pc, #124]	; (200cc <_tzset_unlocked_r+0x2f8>)
   2004e:	4640      	mov	r0, r8
   20050:	f7fe fdc6 	bl	1ebe0 <siscanf>
   20054:	f8bd 201e 	ldrh.w	r2, [sp, #30]
   20058:	f8bd 3020 	ldrh.w	r3, [sp, #32]
   2005c:	213c      	movs	r1, #60	; 0x3c
   2005e:	fb01 3302 	mla	r3, r1, r2, r3
   20062:	f8bd 201c 	ldrh.w	r2, [sp, #28]
   20066:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   2006a:	fb01 3302 	mla	r3, r1, r2, r3
   2006e:	61bb      	str	r3, [r7, #24]
   20070:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   20072:	f109 0901 	add.w	r9, r9, #1
   20076:	f1b9 0f02 	cmp.w	r9, #2
   2007a:	4445      	add	r5, r8
   2007c:	f107 071c 	add.w	r7, r7, #28
   20080:	f47f af74 	bne.w	1ff6c <_tzset_unlocked_r+0x198>
   20084:	6860      	ldr	r0, [r4, #4]
   20086:	f7ff fdf5 	bl	1fc74 <__tzcalc_limits>
   2008a:	6a22      	ldr	r2, [r4, #32]
   2008c:	4b07      	ldr	r3, [pc, #28]	; (200ac <_tzset_unlocked_r+0x2d8>)
   2008e:	601a      	str	r2, [r3, #0]
   20090:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   20092:	1a9b      	subs	r3, r3, r2
   20094:	4a07      	ldr	r2, [pc, #28]	; (200b4 <_tzset_unlocked_r+0x2e0>)
   20096:	bf18      	it	ne
   20098:	2301      	movne	r3, #1
   2009a:	6013      	str	r3, [r2, #0]
   2009c:	b00d      	add	sp, #52	; 0x34
   2009e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200a2:	bf00      	nop
   200a4:	000264e8 	.word	0x000264e8
   200a8:	2007c780 	.word	0x2007c780
   200ac:	2007c788 	.word	0x2007c788
   200b0:	000264eb 	.word	0x000264eb
   200b4:	2007c784 	.word	0x2007c784
   200b8:	2007c144 	.word	0x2007c144
   200bc:	2007c773 	.word	0x2007c773
   200c0:	000264ef 	.word	0x000264ef
   200c4:	00026512 	.word	0x00026512
   200c8:	000264fe 	.word	0x000264fe
   200cc:	00026511 	.word	0x00026511
   200d0:	2007c768 	.word	0x2007c768

000200d4 <_vsniprintf_r>:
_vsnprintf_r():
   200d4:	b530      	push	{r4, r5, lr}
   200d6:	1e14      	subs	r4, r2, #0
   200d8:	4605      	mov	r5, r0
   200da:	b09b      	sub	sp, #108	; 0x6c
   200dc:	4618      	mov	r0, r3
   200de:	da04      	bge.n	200ea <_vsniprintf_r+0x16>
   200e0:	238b      	movs	r3, #139	; 0x8b
   200e2:	602b      	str	r3, [r5, #0]
   200e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   200e8:	e01d      	b.n	20126 <_vsniprintf_r+0x52>
   200ea:	f44f 7302 	mov.w	r3, #520	; 0x208
   200ee:	f8ad 300c 	strh.w	r3, [sp, #12]
   200f2:	bf0c      	ite	eq
   200f4:	4623      	moveq	r3, r4
   200f6:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   200fa:	9302      	str	r3, [sp, #8]
   200fc:	9305      	str	r3, [sp, #20]
   200fe:	f64f 73ff 	movw	r3, #65535	; 0xffff
   20102:	9100      	str	r1, [sp, #0]
   20104:	9104      	str	r1, [sp, #16]
   20106:	f8ad 300e 	strh.w	r3, [sp, #14]
   2010a:	4602      	mov	r2, r0
   2010c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   2010e:	4669      	mov	r1, sp
   20110:	4628      	mov	r0, r5
   20112:	f002 f95d 	bl	223d0 <_svfiprintf_r>
   20116:	1c43      	adds	r3, r0, #1
   20118:	bfbc      	itt	lt
   2011a:	238b      	movlt	r3, #139	; 0x8b
   2011c:	602b      	strlt	r3, [r5, #0]
   2011e:	b114      	cbz	r4, 20126 <_vsniprintf_r+0x52>
   20120:	9b00      	ldr	r3, [sp, #0]
   20122:	2200      	movs	r2, #0
   20124:	701a      	strb	r2, [r3, #0]
   20126:	b01b      	add	sp, #108	; 0x6c
   20128:	bd30      	pop	{r4, r5, pc}
   2012a:	ffff b507 	vabal.u<illegal width 64>	<illegal reg q13.5>, d15, d7

0002012c <vsniprintf>:
vsnprintf():
   2012c:	b507      	push	{r0, r1, r2, lr}
   2012e:	9300      	str	r3, [sp, #0]
   20130:	4613      	mov	r3, r2
   20132:	460a      	mov	r2, r1
   20134:	4601      	mov	r1, r0
   20136:	4803      	ldr	r0, [pc, #12]	; (20144 <vsniprintf+0x18>)
   20138:	6800      	ldr	r0, [r0, #0]
   2013a:	f7ff ffcb 	bl	200d4 <_vsniprintf_r>
   2013e:	b003      	add	sp, #12
   20140:	f85d fb04 	ldr.w	pc, [sp], #4
   20144:	2007c140 	.word	0x2007c140

00020148 <_vsiscanf_r>:
_vsiscanf_r():
   20148:	b570      	push	{r4, r5, r6, lr}
   2014a:	4604      	mov	r4, r0
   2014c:	b09a      	sub	sp, #104	; 0x68
   2014e:	461e      	mov	r6, r3
   20150:	4608      	mov	r0, r1
   20152:	f44f 7301 	mov.w	r3, #516	; 0x204
   20156:	4615      	mov	r5, r2
   20158:	f8ad 300c 	strh.w	r3, [sp, #12]
   2015c:	9100      	str	r1, [sp, #0]
   2015e:	9104      	str	r1, [sp, #16]
   20160:	f7fe fdfb 	bl	1ed5a <strlen>
   20164:	4b09      	ldr	r3, [pc, #36]	; (2018c <_vsiscanf_r+0x44>)
   20166:	2100      	movs	r1, #0
   20168:	9309      	str	r3, [sp, #36]	; 0x24
   2016a:	f64f 73ff 	movw	r3, #65535	; 0xffff
   2016e:	9001      	str	r0, [sp, #4]
   20170:	9005      	str	r0, [sp, #20]
   20172:	910d      	str	r1, [sp, #52]	; 0x34
   20174:	9112      	str	r1, [sp, #72]	; 0x48
   20176:	f8ad 300e 	strh.w	r3, [sp, #14]
   2017a:	462a      	mov	r2, r5
   2017c:	4633      	mov	r3, r6
   2017e:	4669      	mov	r1, sp
   20180:	4620      	mov	r0, r4
   20182:	f002 fa75 	bl	22670 <__ssvfiscanf_r>
   20186:	b01a      	add	sp, #104	; 0x68
   20188:	bd70      	pop	{r4, r5, r6, pc}
   2018a:	bf00      	nop
   2018c:	0001ec57 	.word	0x0001ec57

00020190 <vsiscanf>:
vsscanf():
   20190:	4613      	mov	r3, r2
   20192:	460a      	mov	r2, r1
   20194:	4601      	mov	r1, r0
   20196:	4802      	ldr	r0, [pc, #8]	; (201a0 <vsiscanf+0x10>)
   20198:	6800      	ldr	r0, [r0, #0]
   2019a:	f7ff bfd5 	b.w	20148 <_vsiscanf_r>
   2019e:	bf00      	nop
   201a0:	2007c140 	.word	0x2007c140

000201a4 <__swbuf_r>:
__swbuf_r():
   201a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   201a6:	460f      	mov	r7, r1
   201a8:	4614      	mov	r4, r2
   201aa:	4606      	mov	r6, r0
   201ac:	b118      	cbz	r0, 201b6 <__swbuf_r+0x12>
   201ae:	6983      	ldr	r3, [r0, #24]
   201b0:	b90b      	cbnz	r3, 201b6 <__swbuf_r+0x12>
   201b2:	f7fc febb 	bl	1cf2c <__sinit>
   201b6:	4b22      	ldr	r3, [pc, #136]	; (20240 <__swbuf_r+0x9c>)
   201b8:	429c      	cmp	r4, r3
   201ba:	d101      	bne.n	201c0 <__swbuf_r+0x1c>
   201bc:	6874      	ldr	r4, [r6, #4]
   201be:	e008      	b.n	201d2 <__swbuf_r+0x2e>
   201c0:	4b20      	ldr	r3, [pc, #128]	; (20244 <__swbuf_r+0xa0>)
   201c2:	429c      	cmp	r4, r3
   201c4:	d101      	bne.n	201ca <__swbuf_r+0x26>
   201c6:	68b4      	ldr	r4, [r6, #8]
   201c8:	e003      	b.n	201d2 <__swbuf_r+0x2e>
   201ca:	4b1f      	ldr	r3, [pc, #124]	; (20248 <__swbuf_r+0xa4>)
   201cc:	429c      	cmp	r4, r3
   201ce:	bf08      	it	eq
   201d0:	68f4      	ldreq	r4, [r6, #12]
   201d2:	69a3      	ldr	r3, [r4, #24]
   201d4:	60a3      	str	r3, [r4, #8]
   201d6:	89a3      	ldrh	r3, [r4, #12]
   201d8:	071a      	lsls	r2, r3, #28
   201da:	d509      	bpl.n	201f0 <__swbuf_r+0x4c>
   201dc:	6923      	ldr	r3, [r4, #16]
   201de:	b13b      	cbz	r3, 201f0 <__swbuf_r+0x4c>
   201e0:	6823      	ldr	r3, [r4, #0]
   201e2:	6920      	ldr	r0, [r4, #16]
   201e4:	b2fd      	uxtb	r5, r7
   201e6:	1a18      	subs	r0, r3, r0
   201e8:	6963      	ldr	r3, [r4, #20]
   201ea:	4298      	cmp	r0, r3
   201ec:	db0f      	blt.n	2020e <__swbuf_r+0x6a>
   201ee:	e008      	b.n	20202 <__swbuf_r+0x5e>
   201f0:	4621      	mov	r1, r4
   201f2:	4630      	mov	r0, r6
   201f4:	f000 f83c 	bl	20270 <__swsetup_r>
   201f8:	2800      	cmp	r0, #0
   201fa:	d0f1      	beq.n	201e0 <__swbuf_r+0x3c>
   201fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20200:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   20202:	4621      	mov	r1, r4
   20204:	4630      	mov	r0, r6
   20206:	f000 ffad 	bl	21164 <_fflush_r>
   2020a:	2800      	cmp	r0, #0
   2020c:	d1f6      	bne.n	201fc <__swbuf_r+0x58>
   2020e:	68a3      	ldr	r3, [r4, #8]
   20210:	3b01      	subs	r3, #1
   20212:	60a3      	str	r3, [r4, #8]
   20214:	6823      	ldr	r3, [r4, #0]
   20216:	1c5a      	adds	r2, r3, #1
   20218:	6022      	str	r2, [r4, #0]
   2021a:	701f      	strb	r7, [r3, #0]
   2021c:	6962      	ldr	r2, [r4, #20]
   2021e:	1c43      	adds	r3, r0, #1
   20220:	4293      	cmp	r3, r2
   20222:	d004      	beq.n	2022e <__swbuf_r+0x8a>
   20224:	89a3      	ldrh	r3, [r4, #12]
   20226:	07db      	lsls	r3, r3, #31
   20228:	d507      	bpl.n	2023a <__swbuf_r+0x96>
   2022a:	2d0a      	cmp	r5, #10
   2022c:	d105      	bne.n	2023a <__swbuf_r+0x96>
   2022e:	4621      	mov	r1, r4
   20230:	4630      	mov	r0, r6
   20232:	f000 ff97 	bl	21164 <_fflush_r>
   20236:	2800      	cmp	r0, #0
   20238:	d1e0      	bne.n	201fc <__swbuf_r+0x58>
   2023a:	4628      	mov	r0, r5
   2023c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   2023e:	bf00      	nop
   20240:	00026334 	.word	0x00026334
   20244:	00026354 	.word	0x00026354
   20248:	00026374 	.word	0x00026374

0002024c <_write_r>:
_write_r():
   2024c:	b538      	push	{r3, r4, r5, lr}
   2024e:	4c07      	ldr	r4, [pc, #28]	; (2026c <_write_r+0x20>)
   20250:	4605      	mov	r5, r0
   20252:	4608      	mov	r0, r1
   20254:	4611      	mov	r1, r2
   20256:	2200      	movs	r2, #0
   20258:	6022      	str	r2, [r4, #0]
   2025a:	461a      	mov	r2, r3
   2025c:	f7f1 f93a 	bl	114d4 <_write>
   20260:	1c43      	adds	r3, r0, #1
   20262:	d102      	bne.n	2026a <_write_r+0x1e>
   20264:	6823      	ldr	r3, [r4, #0]
   20266:	b103      	cbz	r3, 2026a <_write_r+0x1e>
   20268:	602b      	str	r3, [r5, #0]
   2026a:	bd38      	pop	{r3, r4, r5, pc}
   2026c:	2007c790 	.word	0x2007c790

00020270 <__swsetup_r>:
__swsetup_r():
   20270:	4b32      	ldr	r3, [pc, #200]	; (2033c <__swsetup_r+0xcc>)
   20272:	b570      	push	{r4, r5, r6, lr}
   20274:	681d      	ldr	r5, [r3, #0]
   20276:	4606      	mov	r6, r0
   20278:	460c      	mov	r4, r1
   2027a:	b125      	cbz	r5, 20286 <__swsetup_r+0x16>
   2027c:	69ab      	ldr	r3, [r5, #24]
   2027e:	b913      	cbnz	r3, 20286 <__swsetup_r+0x16>
   20280:	4628      	mov	r0, r5
   20282:	f7fc fe53 	bl	1cf2c <__sinit>
   20286:	4b2e      	ldr	r3, [pc, #184]	; (20340 <__swsetup_r+0xd0>)
   20288:	429c      	cmp	r4, r3
   2028a:	d101      	bne.n	20290 <__swsetup_r+0x20>
   2028c:	686c      	ldr	r4, [r5, #4]
   2028e:	e008      	b.n	202a2 <__swsetup_r+0x32>
   20290:	4b2c      	ldr	r3, [pc, #176]	; (20344 <__swsetup_r+0xd4>)
   20292:	429c      	cmp	r4, r3
   20294:	d101      	bne.n	2029a <__swsetup_r+0x2a>
   20296:	68ac      	ldr	r4, [r5, #8]
   20298:	e003      	b.n	202a2 <__swsetup_r+0x32>
   2029a:	4b2b      	ldr	r3, [pc, #172]	; (20348 <__swsetup_r+0xd8>)
   2029c:	429c      	cmp	r4, r3
   2029e:	bf08      	it	eq
   202a0:	68ec      	ldreq	r4, [r5, #12]
   202a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   202a6:	b29a      	uxth	r2, r3
   202a8:	0715      	lsls	r5, r2, #28
   202aa:	d41d      	bmi.n	202e8 <__swsetup_r+0x78>
   202ac:	06d0      	lsls	r0, r2, #27
   202ae:	d402      	bmi.n	202b6 <__swsetup_r+0x46>
   202b0:	2209      	movs	r2, #9
   202b2:	6032      	str	r2, [r6, #0]
   202b4:	e03a      	b.n	2032c <__swsetup_r+0xbc>
   202b6:	0751      	lsls	r1, r2, #29
   202b8:	d512      	bpl.n	202e0 <__swsetup_r+0x70>
   202ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
   202bc:	b141      	cbz	r1, 202d0 <__swsetup_r+0x60>
   202be:	f104 0344 	add.w	r3, r4, #68	; 0x44
   202c2:	4299      	cmp	r1, r3
   202c4:	d002      	beq.n	202cc <__swsetup_r+0x5c>
   202c6:	4630      	mov	r0, r6
   202c8:	f7fd faa8 	bl	1d81c <_free_r>
   202cc:	2300      	movs	r3, #0
   202ce:	6363      	str	r3, [r4, #52]	; 0x34
   202d0:	89a3      	ldrh	r3, [r4, #12]
   202d2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   202d6:	81a3      	strh	r3, [r4, #12]
   202d8:	2300      	movs	r3, #0
   202da:	6063      	str	r3, [r4, #4]
   202dc:	6923      	ldr	r3, [r4, #16]
   202de:	6023      	str	r3, [r4, #0]
   202e0:	89a3      	ldrh	r3, [r4, #12]
   202e2:	f043 0308 	orr.w	r3, r3, #8
   202e6:	81a3      	strh	r3, [r4, #12]
   202e8:	6923      	ldr	r3, [r4, #16]
   202ea:	b94b      	cbnz	r3, 20300 <__swsetup_r+0x90>
   202ec:	89a3      	ldrh	r3, [r4, #12]
   202ee:	f403 7320 	and.w	r3, r3, #640	; 0x280
   202f2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   202f6:	d003      	beq.n	20300 <__swsetup_r+0x90>
   202f8:	4621      	mov	r1, r4
   202fa:	4630      	mov	r0, r6
   202fc:	f001 fbb6 	bl	21a6c <__smakebuf_r>
   20300:	89a2      	ldrh	r2, [r4, #12]
   20302:	f012 0301 	ands.w	r3, r2, #1
   20306:	d005      	beq.n	20314 <__swsetup_r+0xa4>
   20308:	2300      	movs	r3, #0
   2030a:	60a3      	str	r3, [r4, #8]
   2030c:	6963      	ldr	r3, [r4, #20]
   2030e:	425b      	negs	r3, r3
   20310:	61a3      	str	r3, [r4, #24]
   20312:	e003      	b.n	2031c <__swsetup_r+0xac>
   20314:	0792      	lsls	r2, r2, #30
   20316:	bf58      	it	pl
   20318:	6963      	ldrpl	r3, [r4, #20]
   2031a:	60a3      	str	r3, [r4, #8]
   2031c:	6923      	ldr	r3, [r4, #16]
   2031e:	b95b      	cbnz	r3, 20338 <__swsetup_r+0xc8>
   20320:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   20324:	f003 0080 	and.w	r0, r3, #128	; 0x80
   20328:	b280      	uxth	r0, r0
   2032a:	b130      	cbz	r0, 2033a <__swsetup_r+0xca>
   2032c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   20330:	81a3      	strh	r3, [r4, #12]
   20332:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20336:	bd70      	pop	{r4, r5, r6, pc}
   20338:	2000      	movs	r0, #0
   2033a:	bd70      	pop	{r4, r5, r6, pc}
   2033c:	2007c140 	.word	0x2007c140
   20340:	00026334 	.word	0x00026334
   20344:	00026354 	.word	0x00026354
   20348:	00026374 	.word	0x00026374

0002034c <asctime>:
asctime():
   2034c:	4b09      	ldr	r3, [pc, #36]	; (20374 <asctime+0x28>)
   2034e:	b570      	push	{r4, r5, r6, lr}
   20350:	681c      	ldr	r4, [r3, #0]
   20352:	4606      	mov	r6, r0
   20354:	6c25      	ldr	r5, [r4, #64]	; 0x40
   20356:	b93d      	cbnz	r5, 20368 <asctime+0x1c>
   20358:	201a      	movs	r0, #26
   2035a:	f7fc ffab 	bl	1d2b4 <malloc>
   2035e:	221a      	movs	r2, #26
   20360:	6420      	str	r0, [r4, #64]	; 0x40
   20362:	4629      	mov	r1, r5
   20364:	f7fc fff9 	bl	1d35a <memset>
   20368:	6c21      	ldr	r1, [r4, #64]	; 0x40
   2036a:	4630      	mov	r0, r6
   2036c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   20370:	f000 b802 	b.w	20378 <asctime_r>
   20374:	2007c140 	.word	0x2007c140

00020378 <asctime_r>:
asctime_r():
   20378:	b510      	push	{r4, lr}
   2037a:	460c      	mov	r4, r1
   2037c:	6941      	ldr	r1, [r0, #20]
   2037e:	b086      	sub	sp, #24
   20380:	f201 716c 	addw	r1, r1, #1900	; 0x76c
   20384:	6903      	ldr	r3, [r0, #16]
   20386:	6982      	ldr	r2, [r0, #24]
   20388:	9104      	str	r1, [sp, #16]
   2038a:	6801      	ldr	r1, [r0, #0]
   2038c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   20390:	9103      	str	r1, [sp, #12]
   20392:	6841      	ldr	r1, [r0, #4]
   20394:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   20398:	9102      	str	r1, [sp, #8]
   2039a:	6881      	ldr	r1, [r0, #8]
   2039c:	9101      	str	r1, [sp, #4]
   2039e:	68c1      	ldr	r1, [r0, #12]
   203a0:	4620      	mov	r0, r4
   203a2:	9100      	str	r1, [sp, #0]
   203a4:	4904      	ldr	r1, [pc, #16]	; (203b8 <asctime_r+0x40>)
   203a6:	440b      	add	r3, r1
   203a8:	4904      	ldr	r1, [pc, #16]	; (203bc <asctime_r+0x44>)
   203aa:	440a      	add	r2, r1
   203ac:	4904      	ldr	r1, [pc, #16]	; (203c0 <asctime_r+0x48>)
   203ae:	f7fe fbf3 	bl	1eb98 <siprintf>
   203b2:	4620      	mov	r0, r4
   203b4:	b006      	add	sp, #24
   203b6:	bd10      	pop	{r4, pc}
   203b8:	00026559 	.word	0x00026559
   203bc:	00026524 	.word	0x00026524
   203c0:	00026539 	.word	0x00026539

000203c4 <_close_r>:
_close_r():
   203c4:	b538      	push	{r3, r4, r5, lr}
   203c6:	4c06      	ldr	r4, [pc, #24]	; (203e0 <_close_r+0x1c>)
   203c8:	2300      	movs	r3, #0
   203ca:	4605      	mov	r5, r0
   203cc:	4608      	mov	r0, r1
   203ce:	6023      	str	r3, [r4, #0]
   203d0:	f7f1 f8c2 	bl	11558 <_close>
   203d4:	1c43      	adds	r3, r0, #1
   203d6:	d102      	bne.n	203de <_close_r+0x1a>
   203d8:	6823      	ldr	r3, [r4, #0]
   203da:	b103      	cbz	r3, 203de <_close_r+0x1a>
   203dc:	602b      	str	r3, [r5, #0]
   203de:	bd38      	pop	{r3, r4, r5, pc}
   203e0:	2007c790 	.word	0x2007c790

000203e4 <div>:
div():
   203e4:	b510      	push	{r4, lr}
   203e6:	fb91 f4f2 	sdiv	r4, r1, r2
   203ea:	2900      	cmp	r1, #0
   203ec:	fb02 1314 	mls	r3, r2, r4, r1
   203f0:	db04      	blt.n	203fc <div+0x18>
   203f2:	2b00      	cmp	r3, #0
   203f4:	da07      	bge.n	20406 <div+0x22>
   203f6:	3401      	adds	r4, #1
   203f8:	1a9b      	subs	r3, r3, r2
   203fa:	e004      	b.n	20406 <div+0x22>
   203fc:	2b00      	cmp	r3, #0
   203fe:	bfc4      	itt	gt
   20400:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   20404:	189b      	addgt	r3, r3, r2
   20406:	6004      	str	r4, [r0, #0]
   20408:	6043      	str	r3, [r0, #4]
   2040a:	bd10      	pop	{r4, pc}

0002040c <quorem>:
quorem():
   2040c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20410:	6903      	ldr	r3, [r0, #16]
   20412:	690c      	ldr	r4, [r1, #16]
   20414:	4680      	mov	r8, r0
   20416:	429c      	cmp	r4, r3
   20418:	dc7f      	bgt.n	2051a <quorem+0x10e>
   2041a:	3c01      	subs	r4, #1
   2041c:	f101 0714 	add.w	r7, r1, #20
   20420:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   20424:	f100 0614 	add.w	r6, r0, #20
   20428:	eb06 030e 	add.w	r3, r6, lr
   2042c:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   20430:	9301      	str	r3, [sp, #4]
   20432:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
   20436:	3501      	adds	r5, #1
   20438:	fbb3 f5f5 	udiv	r5, r3, r5
   2043c:	eb07 090e 	add.w	r9, r7, lr
   20440:	b3c5      	cbz	r5, 204b4 <quorem+0xa8>
   20442:	f04f 0a00 	mov.w	sl, #0
   20446:	4638      	mov	r0, r7
   20448:	46b4      	mov	ip, r6
   2044a:	46d3      	mov	fp, sl
   2044c:	f850 3b04 	ldr.w	r3, [r0], #4
   20450:	b29a      	uxth	r2, r3
   20452:	fb05 a202 	mla	r2, r5, r2, sl
   20456:	0c1b      	lsrs	r3, r3, #16
   20458:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   2045c:	fb05 a303 	mla	r3, r5, r3, sl
   20460:	b292      	uxth	r2, r2
   20462:	ebc2 0b0b 	rsb	fp, r2, fp
   20466:	f8bc 2000 	ldrh.w	r2, [ip]
   2046a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   2046e:	445a      	add	r2, fp
   20470:	fa1f fb83 	uxth.w	fp, r3
   20474:	f8dc 3000 	ldr.w	r3, [ip]
   20478:	4581      	cmp	r9, r0
   2047a:	ebcb 4313 	rsb	r3, fp, r3, lsr #16
   2047e:	eb03 4322 	add.w	r3, r3, r2, asr #16
   20482:	b292      	uxth	r2, r2
   20484:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   20488:	ea4f 4b23 	mov.w	fp, r3, asr #16
   2048c:	f84c 2b04 	str.w	r2, [ip], #4
   20490:	d2dc      	bcs.n	2044c <quorem+0x40>
   20492:	f856 300e 	ldr.w	r3, [r6, lr]
   20496:	b96b      	cbnz	r3, 204b4 <quorem+0xa8>
   20498:	9b01      	ldr	r3, [sp, #4]
   2049a:	3b04      	subs	r3, #4
   2049c:	429e      	cmp	r6, r3
   2049e:	461a      	mov	r2, r3
   204a0:	d302      	bcc.n	204a8 <quorem+0x9c>
   204a2:	f8c8 4010 	str.w	r4, [r8, #16]
   204a6:	e005      	b.n	204b4 <quorem+0xa8>
   204a8:	6812      	ldr	r2, [r2, #0]
   204aa:	3b04      	subs	r3, #4
   204ac:	2a00      	cmp	r2, #0
   204ae:	d1f8      	bne.n	204a2 <quorem+0x96>
   204b0:	3c01      	subs	r4, #1
   204b2:	e7f3      	b.n	2049c <quorem+0x90>
   204b4:	4640      	mov	r0, r8
   204b6:	f001 fd60 	bl	21f7a <__mcmp>
   204ba:	2800      	cmp	r0, #0
   204bc:	db2b      	blt.n	20516 <quorem+0x10a>
   204be:	4630      	mov	r0, r6
   204c0:	3501      	adds	r5, #1
   204c2:	f04f 0e00 	mov.w	lr, #0
   204c6:	f857 2b04 	ldr.w	r2, [r7], #4
   204ca:	6803      	ldr	r3, [r0, #0]
   204cc:	b291      	uxth	r1, r2
   204ce:	ebc1 0e0e 	rsb	lr, r1, lr
   204d2:	0c12      	lsrs	r2, r2, #16
   204d4:	b299      	uxth	r1, r3
   204d6:	4471      	add	r1, lr
   204d8:	ebc2 4313 	rsb	r3, r2, r3, lsr #16
   204dc:	eb03 4321 	add.w	r3, r3, r1, asr #16
   204e0:	b289      	uxth	r1, r1
   204e2:	ea4f 4e23 	mov.w	lr, r3, asr #16
   204e6:	45b9      	cmp	r9, r7
   204e8:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
   204ec:	f840 3b04 	str.w	r3, [r0], #4
   204f0:	d2e9      	bcs.n	204c6 <quorem+0xba>
   204f2:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   204f6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   204fa:	b962      	cbnz	r2, 20516 <quorem+0x10a>
   204fc:	3b04      	subs	r3, #4
   204fe:	429e      	cmp	r6, r3
   20500:	461a      	mov	r2, r3
   20502:	d302      	bcc.n	2050a <quorem+0xfe>
   20504:	f8c8 4010 	str.w	r4, [r8, #16]
   20508:	e005      	b.n	20516 <quorem+0x10a>
   2050a:	6812      	ldr	r2, [r2, #0]
   2050c:	3b04      	subs	r3, #4
   2050e:	2a00      	cmp	r2, #0
   20510:	d1f8      	bne.n	20504 <quorem+0xf8>
   20512:	3c01      	subs	r4, #1
   20514:	e7f3      	b.n	204fe <quorem+0xf2>
   20516:	4628      	mov	r0, r5
   20518:	e000      	b.n	2051c <quorem+0x110>
   2051a:	2000      	movs	r0, #0
   2051c:	b003      	add	sp, #12
   2051e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20522:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
   20526:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

00020528 <_dtoa_r>:
_dtoa_r():
   20528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2052c:	6a45      	ldr	r5, [r0, #36]	; 0x24
   2052e:	b095      	sub	sp, #84	; 0x54
   20530:	4682      	mov	sl, r0
   20532:	9c21      	ldr	r4, [sp, #132]	; 0x84
   20534:	e9cd 2302 	strd	r2, r3, [sp, #8]
   20538:	b945      	cbnz	r5, 2054c <_dtoa_r+0x24>
   2053a:	2010      	movs	r0, #16
   2053c:	f7fc feba 	bl	1d2b4 <malloc>
   20540:	f8ca 0024 	str.w	r0, [sl, #36]	; 0x24
   20544:	6045      	str	r5, [r0, #4]
   20546:	6085      	str	r5, [r0, #8]
   20548:	6005      	str	r5, [r0, #0]
   2054a:	60c5      	str	r5, [r0, #12]
   2054c:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   20550:	6819      	ldr	r1, [r3, #0]
   20552:	b159      	cbz	r1, 2056c <_dtoa_r+0x44>
   20554:	685a      	ldr	r2, [r3, #4]
   20556:	2301      	movs	r3, #1
   20558:	4093      	lsls	r3, r2
   2055a:	604a      	str	r2, [r1, #4]
   2055c:	608b      	str	r3, [r1, #8]
   2055e:	4650      	mov	r0, sl
   20560:	f001 faf5 	bl	21b4e <_Bfree>
   20564:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   20568:	2200      	movs	r2, #0
   2056a:	601a      	str	r2, [r3, #0]
   2056c:	9b03      	ldr	r3, [sp, #12]
   2056e:	4aa0      	ldr	r2, [pc, #640]	; (207f0 <_dtoa_r+0x2c8>)
   20570:	2b00      	cmp	r3, #0
   20572:	bfbd      	ittte	lt
   20574:	2301      	movlt	r3, #1
   20576:	6023      	strlt	r3, [r4, #0]
   20578:	9b03      	ldrlt	r3, [sp, #12]
   2057a:	2300      	movge	r3, #0
   2057c:	bfbc      	itt	lt
   2057e:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   20582:	9303      	strlt	r3, [sp, #12]
   20584:	f8dd 800c 	ldr.w	r8, [sp, #12]
   20588:	bfa8      	it	ge
   2058a:	6023      	strge	r3, [r4, #0]
   2058c:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
   20590:	0d1b      	lsrs	r3, r3, #20
   20592:	051b      	lsls	r3, r3, #20
   20594:	4293      	cmp	r3, r2
   20596:	d11d      	bne.n	205d4 <_dtoa_r+0xac>
   20598:	f242 730f 	movw	r3, #9999	; 0x270f
   2059c:	9a20      	ldr	r2, [sp, #128]	; 0x80
   2059e:	6013      	str	r3, [r2, #0]
   205a0:	9b02      	ldr	r3, [sp, #8]
   205a2:	b943      	cbnz	r3, 205b6 <_dtoa_r+0x8e>
   205a4:	4a93      	ldr	r2, [pc, #588]	; (207f4 <_dtoa_r+0x2cc>)
   205a6:	4b94      	ldr	r3, [pc, #592]	; (207f8 <_dtoa_r+0x2d0>)
   205a8:	f3c8 0013 	ubfx	r0, r8, #0, #20
   205ac:	2800      	cmp	r0, #0
   205ae:	bf14      	ite	ne
   205b0:	4618      	movne	r0, r3
   205b2:	4610      	moveq	r0, r2
   205b4:	e000      	b.n	205b8 <_dtoa_r+0x90>
   205b6:	4890      	ldr	r0, [pc, #576]	; (207f8 <_dtoa_r+0x2d0>)
   205b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   205ba:	2b00      	cmp	r3, #0
   205bc:	f000 8546 	beq.w	2104c <_dtoa_r+0xb24>
   205c0:	78c3      	ldrb	r3, [r0, #3]
   205c2:	b113      	cbz	r3, 205ca <_dtoa_r+0xa2>
   205c4:	f100 0308 	add.w	r3, r0, #8
   205c8:	e000      	b.n	205cc <_dtoa_r+0xa4>
   205ca:	1cc3      	adds	r3, r0, #3
   205cc:	9a22      	ldr	r2, [sp, #136]	; 0x88
   205ce:	6013      	str	r3, [r2, #0]
   205d0:	f000 bd3c 	b.w	2104c <_dtoa_r+0xb24>
   205d4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
   205d8:	2200      	movs	r2, #0
   205da:	2300      	movs	r3, #0
   205dc:	4620      	mov	r0, r4
   205de:	4629      	mov	r1, r5
   205e0:	f7fb ff54 	bl	1c48c <__aeabi_dcmpeq>
   205e4:	4607      	mov	r7, r0
   205e6:	b158      	cbz	r0, 20600 <_dtoa_r+0xd8>
   205e8:	9a20      	ldr	r2, [sp, #128]	; 0x80
   205ea:	2301      	movs	r3, #1
   205ec:	6013      	str	r3, [r2, #0]
   205ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
   205f0:	2b00      	cmp	r3, #0
   205f2:	f000 851e 	beq.w	21032 <_dtoa_r+0xb0a>
   205f6:	4881      	ldr	r0, [pc, #516]	; (207fc <_dtoa_r+0x2d4>)
   205f8:	6018      	str	r0, [r3, #0]
   205fa:	3801      	subs	r0, #1
   205fc:	f000 bd26 	b.w	2104c <_dtoa_r+0xb24>
   20600:	ab12      	add	r3, sp, #72	; 0x48
   20602:	9301      	str	r3, [sp, #4]
   20604:	ab13      	add	r3, sp, #76	; 0x4c
   20606:	9300      	str	r3, [sp, #0]
   20608:	4622      	mov	r2, r4
   2060a:	462b      	mov	r3, r5
   2060c:	4650      	mov	r0, sl
   2060e:	f001 fda0 	bl	22152 <__d2b>
   20612:	f3c8 560a 	ubfx	r6, r8, #20, #11
   20616:	9004      	str	r0, [sp, #16]
   20618:	b156      	cbz	r6, 20630 <_dtoa_r+0x108>
   2061a:	f3c5 0313 	ubfx	r3, r5, #0, #20
   2061e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   20622:	4620      	mov	r0, r4
   20624:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   20628:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   2062c:	9711      	str	r7, [sp, #68]	; 0x44
   2062e:	e01d      	b.n	2066c <_dtoa_r+0x144>
   20630:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   20632:	9e12      	ldr	r6, [sp, #72]	; 0x48
   20634:	441e      	add	r6, r3
   20636:	f206 4332 	addw	r3, r6, #1074	; 0x432
   2063a:	2b20      	cmp	r3, #32
   2063c:	dd0a      	ble.n	20654 <_dtoa_r+0x12c>
   2063e:	9a02      	ldr	r2, [sp, #8]
   20640:	f206 4012 	addw	r0, r6, #1042	; 0x412
   20644:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   20648:	fa22 f000 	lsr.w	r0, r2, r0
   2064c:	fa08 f303 	lsl.w	r3, r8, r3
   20650:	4318      	orrs	r0, r3
   20652:	e004      	b.n	2065e <_dtoa_r+0x136>
   20654:	f1c3 0020 	rsb	r0, r3, #32
   20658:	9b02      	ldr	r3, [sp, #8]
   2065a:	fa03 f000 	lsl.w	r0, r3, r0
   2065e:	f7fb fc37 	bl	1bed0 <__aeabi_ui2d>
   20662:	2301      	movs	r3, #1
   20664:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   20668:	3e01      	subs	r6, #1
   2066a:	9311      	str	r3, [sp, #68]	; 0x44
   2066c:	2200      	movs	r2, #0
   2066e:	4b64      	ldr	r3, [pc, #400]	; (20800 <_dtoa_r+0x2d8>)
   20670:	f7fb faf0 	bl	1bc54 <__aeabi_dsub>
   20674:	a358      	add	r3, pc, #352	; (adr r3, 207d8 <_dtoa_r+0x2b0>)
   20676:	e9d3 2300 	ldrd	r2, r3, [r3]
   2067a:	f7fb fc9f 	bl	1bfbc <__aeabi_dmul>
   2067e:	a358      	add	r3, pc, #352	; (adr r3, 207e0 <_dtoa_r+0x2b8>)
   20680:	e9d3 2300 	ldrd	r2, r3, [r3]
   20684:	f7fb fae8 	bl	1bc58 <__adddf3>
   20688:	4604      	mov	r4, r0
   2068a:	4630      	mov	r0, r6
   2068c:	460d      	mov	r5, r1
   2068e:	f7fb fc2f 	bl	1bef0 <__aeabi_i2d>
   20692:	a355      	add	r3, pc, #340	; (adr r3, 207e8 <_dtoa_r+0x2c0>)
   20694:	e9d3 2300 	ldrd	r2, r3, [r3]
   20698:	f7fb fc90 	bl	1bfbc <__aeabi_dmul>
   2069c:	4602      	mov	r2, r0
   2069e:	460b      	mov	r3, r1
   206a0:	4620      	mov	r0, r4
   206a2:	4629      	mov	r1, r5
   206a4:	f7fb fad8 	bl	1bc58 <__adddf3>
   206a8:	4604      	mov	r4, r0
   206aa:	460d      	mov	r5, r1
   206ac:	f7fb ff20 	bl	1c4f0 <__aeabi_d2iz>
   206b0:	2200      	movs	r2, #0
   206b2:	4683      	mov	fp, r0
   206b4:	2300      	movs	r3, #0
   206b6:	4620      	mov	r0, r4
   206b8:	4629      	mov	r1, r5
   206ba:	f7fb fef1 	bl	1c4a0 <__aeabi_dcmplt>
   206be:	b158      	cbz	r0, 206d8 <_dtoa_r+0x1b0>
   206c0:	4658      	mov	r0, fp
   206c2:	f7fb fc15 	bl	1bef0 <__aeabi_i2d>
   206c6:	4602      	mov	r2, r0
   206c8:	460b      	mov	r3, r1
   206ca:	4620      	mov	r0, r4
   206cc:	4629      	mov	r1, r5
   206ce:	f7fb fedd 	bl	1c48c <__aeabi_dcmpeq>
   206d2:	b908      	cbnz	r0, 206d8 <_dtoa_r+0x1b0>
   206d4:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   206d8:	f1bb 0f16 	cmp.w	fp, #22
   206dc:	d80d      	bhi.n	206fa <_dtoa_r+0x1d2>
   206de:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   206e2:	4948      	ldr	r1, [pc, #288]	; (20804 <_dtoa_r+0x2dc>)
   206e4:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   206e8:	e9d1 0100 	ldrd	r0, r1, [r1]
   206ec:	f7fb fef6 	bl	1c4dc <__aeabi_dcmpgt>
   206f0:	b130      	cbz	r0, 20700 <_dtoa_r+0x1d8>
   206f2:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   206f6:	2300      	movs	r3, #0
   206f8:	e000      	b.n	206fc <_dtoa_r+0x1d4>
   206fa:	2301      	movs	r3, #1
   206fc:	9310      	str	r3, [sp, #64]	; 0x40
   206fe:	e000      	b.n	20702 <_dtoa_r+0x1da>
   20700:	9010      	str	r0, [sp, #64]	; 0x40
   20702:	9b12      	ldr	r3, [sp, #72]	; 0x48
   20704:	1b9e      	subs	r6, r3, r6
   20706:	1e73      	subs	r3, r6, #1
   20708:	9307      	str	r3, [sp, #28]
   2070a:	bf43      	ittte	mi
   2070c:	f1c3 0800 	rsbmi	r8, r3, #0
   20710:	2300      	movmi	r3, #0
   20712:	9307      	strmi	r3, [sp, #28]
   20714:	f04f 0800 	movpl.w	r8, #0
   20718:	f1bb 0f00 	cmp.w	fp, #0
   2071c:	db06      	blt.n	2072c <_dtoa_r+0x204>
   2071e:	9b07      	ldr	r3, [sp, #28]
   20720:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
   20724:	445b      	add	r3, fp
   20726:	9307      	str	r3, [sp, #28]
   20728:	2700      	movs	r7, #0
   2072a:	e005      	b.n	20738 <_dtoa_r+0x210>
   2072c:	2300      	movs	r3, #0
   2072e:	ebcb 0808 	rsb	r8, fp, r8
   20732:	f1cb 0700 	rsb	r7, fp, #0
   20736:	930b      	str	r3, [sp, #44]	; 0x2c
   20738:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   2073a:	2b09      	cmp	r3, #9
   2073c:	d828      	bhi.n	20790 <_dtoa_r+0x268>
   2073e:	2b05      	cmp	r3, #5
   20740:	bfc4      	itt	gt
   20742:	3b04      	subgt	r3, #4
   20744:	931e      	strgt	r3, [sp, #120]	; 0x78
   20746:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   20748:	bfc8      	it	gt
   2074a:	2500      	movgt	r5, #0
   2074c:	f1a3 0302 	sub.w	r3, r3, #2
   20750:	bfd8      	it	le
   20752:	2501      	movle	r5, #1
   20754:	2b03      	cmp	r3, #3
   20756:	d820      	bhi.n	2079a <_dtoa_r+0x272>
   20758:	e8df f003 	tbb	[pc, r3]
   2075c:	04020e06 	.word	0x04020e06
   20760:	2301      	movs	r3, #1
   20762:	e002      	b.n	2076a <_dtoa_r+0x242>
   20764:	2301      	movs	r3, #1
   20766:	e008      	b.n	2077a <_dtoa_r+0x252>
   20768:	2300      	movs	r3, #0
   2076a:	930a      	str	r3, [sp, #40]	; 0x28
   2076c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   2076e:	2b00      	cmp	r3, #0
   20770:	dd1d      	ble.n	207ae <_dtoa_r+0x286>
   20772:	4699      	mov	r9, r3
   20774:	9305      	str	r3, [sp, #20]
   20776:	e021      	b.n	207bc <_dtoa_r+0x294>
   20778:	2300      	movs	r3, #0
   2077a:	930a      	str	r3, [sp, #40]	; 0x28
   2077c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   2077e:	eb0b 0903 	add.w	r9, fp, r3
   20782:	f109 0301 	add.w	r3, r9, #1
   20786:	2b01      	cmp	r3, #1
   20788:	9305      	str	r3, [sp, #20]
   2078a:	bfb8      	it	lt
   2078c:	2301      	movlt	r3, #1
   2078e:	e015      	b.n	207bc <_dtoa_r+0x294>
   20790:	2501      	movs	r5, #1
   20792:	2300      	movs	r3, #0
   20794:	931e      	str	r3, [sp, #120]	; 0x78
   20796:	950a      	str	r5, [sp, #40]	; 0x28
   20798:	e001      	b.n	2079e <_dtoa_r+0x276>
   2079a:	2301      	movs	r3, #1
   2079c:	930a      	str	r3, [sp, #40]	; 0x28
   2079e:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
   207a2:	2200      	movs	r2, #0
   207a4:	f8cd 9014 	str.w	r9, [sp, #20]
   207a8:	2312      	movs	r3, #18
   207aa:	921f      	str	r2, [sp, #124]	; 0x7c
   207ac:	e006      	b.n	207bc <_dtoa_r+0x294>
   207ae:	f04f 0901 	mov.w	r9, #1
   207b2:	464b      	mov	r3, r9
   207b4:	f8cd 9014 	str.w	r9, [sp, #20]
   207b8:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
   207bc:	f8da 4024 	ldr.w	r4, [sl, #36]	; 0x24
   207c0:	2200      	movs	r2, #0
   207c2:	6062      	str	r2, [r4, #4]
   207c4:	2104      	movs	r1, #4
   207c6:	f101 0214 	add.w	r2, r1, #20
   207ca:	429a      	cmp	r2, r3
   207cc:	d81c      	bhi.n	20808 <_dtoa_r+0x2e0>
   207ce:	6862      	ldr	r2, [r4, #4]
   207d0:	0049      	lsls	r1, r1, #1
   207d2:	3201      	adds	r2, #1
   207d4:	6062      	str	r2, [r4, #4]
   207d6:	e7f6      	b.n	207c6 <_dtoa_r+0x29e>
   207d8:	636f4361 	.word	0x636f4361
   207dc:	3fd287a7 	.word	0x3fd287a7
   207e0:	8b60c8b3 	.word	0x8b60c8b3
   207e4:	3fc68a28 	.word	0x3fc68a28
   207e8:	509f79fb 	.word	0x509f79fb
   207ec:	3fd34413 	.word	0x3fd34413
   207f0:	7ff00000 	.word	0x7ff00000
   207f4:	0002657d 	.word	0x0002657d
   207f8:	00026586 	.word	0x00026586
   207fc:	0002375b 	.word	0x0002375b
   20800:	3ff80000 	.word	0x3ff80000
   20804:	00026590 	.word	0x00026590
   20808:	6861      	ldr	r1, [r4, #4]
   2080a:	4650      	mov	r0, sl
   2080c:	f001 f96a 	bl	21ae4 <_Balloc>
   20810:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   20814:	6020      	str	r0, [r4, #0]
   20816:	681b      	ldr	r3, [r3, #0]
   20818:	9306      	str	r3, [sp, #24]
   2081a:	9b05      	ldr	r3, [sp, #20]
   2081c:	2b0e      	cmp	r3, #14
   2081e:	f200 815b 	bhi.w	20ad8 <_dtoa_r+0x5b0>
   20822:	2d00      	cmp	r5, #0
   20824:	f000 8158 	beq.w	20ad8 <_dtoa_r+0x5b0>
   20828:	e9dd 3402 	ldrd	r3, r4, [sp, #8]
   2082c:	f1bb 0f00 	cmp.w	fp, #0
   20830:	e9cd 340e 	strd	r3, r4, [sp, #56]	; 0x38
   20834:	dd30      	ble.n	20898 <_dtoa_r+0x370>
   20836:	4a9f      	ldr	r2, [pc, #636]	; (20ab4 <_dtoa_r+0x58c>)
   20838:	f00b 030f 	and.w	r3, fp, #15
   2083c:	ea4f 152b 	mov.w	r5, fp, asr #4
   20840:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   20844:	06e8      	lsls	r0, r5, #27
   20846:	cb18      	ldmia	r3, {r3, r4}
   20848:	e9cd 3408 	strd	r3, r4, [sp, #32]
   2084c:	d50c      	bpl.n	20868 <_dtoa_r+0x340>
   2084e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   20852:	4b99      	ldr	r3, [pc, #612]	; (20ab8 <_dtoa_r+0x590>)
   20854:	f005 050f 	and.w	r5, r5, #15
   20858:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   2085c:	f7fb fcd8 	bl	1c210 <__aeabi_ddiv>
   20860:	2403      	movs	r4, #3
   20862:	e9cd 0102 	strd	r0, r1, [sp, #8]
   20866:	e000      	b.n	2086a <_dtoa_r+0x342>
   20868:	2402      	movs	r4, #2
   2086a:	4e93      	ldr	r6, [pc, #588]	; (20ab8 <_dtoa_r+0x590>)
   2086c:	b16d      	cbz	r5, 2088a <_dtoa_r+0x362>
   2086e:	07e9      	lsls	r1, r5, #31
   20870:	d508      	bpl.n	20884 <_dtoa_r+0x35c>
   20872:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   20876:	e9d6 2300 	ldrd	r2, r3, [r6]
   2087a:	f7fb fb9f 	bl	1bfbc <__aeabi_dmul>
   2087e:	e9cd 0108 	strd	r0, r1, [sp, #32]
   20882:	3401      	adds	r4, #1
   20884:	106d      	asrs	r5, r5, #1
   20886:	3608      	adds	r6, #8
   20888:	e7f0      	b.n	2086c <_dtoa_r+0x344>
   2088a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   2088e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   20892:	f7fb fcbd 	bl	1c210 <__aeabi_ddiv>
   20896:	e020      	b.n	208da <_dtoa_r+0x3b2>
   20898:	f1cb 0500 	rsb	r5, fp, #0
   2089c:	b305      	cbz	r5, 208e0 <_dtoa_r+0x3b8>
   2089e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   208a2:	4b84      	ldr	r3, [pc, #528]	; (20ab4 <_dtoa_r+0x58c>)
   208a4:	f005 020f 	and.w	r2, r5, #15
   208a8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   208ac:	e9d3 2300 	ldrd	r2, r3, [r3]
   208b0:	f7fb fb84 	bl	1bfbc <__aeabi_dmul>
   208b4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   208b8:	4e7f      	ldr	r6, [pc, #508]	; (20ab8 <_dtoa_r+0x590>)
   208ba:	112d      	asrs	r5, r5, #4
   208bc:	2300      	movs	r3, #0
   208be:	2402      	movs	r4, #2
   208c0:	b155      	cbz	r5, 208d8 <_dtoa_r+0x3b0>
   208c2:	07ea      	lsls	r2, r5, #31
   208c4:	d505      	bpl.n	208d2 <_dtoa_r+0x3aa>
   208c6:	e9d6 2300 	ldrd	r2, r3, [r6]
   208ca:	f7fb fb77 	bl	1bfbc <__aeabi_dmul>
   208ce:	3401      	adds	r4, #1
   208d0:	2301      	movs	r3, #1
   208d2:	106d      	asrs	r5, r5, #1
   208d4:	3608      	adds	r6, #8
   208d6:	e7f3      	b.n	208c0 <_dtoa_r+0x398>
   208d8:	b11b      	cbz	r3, 208e2 <_dtoa_r+0x3ba>
   208da:	e9cd 0102 	strd	r0, r1, [sp, #8]
   208de:	e000      	b.n	208e2 <_dtoa_r+0x3ba>
   208e0:	2402      	movs	r4, #2
   208e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   208e4:	b1e3      	cbz	r3, 20920 <_dtoa_r+0x3f8>
   208e6:	e9dd 5602 	ldrd	r5, r6, [sp, #8]
   208ea:	2200      	movs	r2, #0
   208ec:	4b73      	ldr	r3, [pc, #460]	; (20abc <_dtoa_r+0x594>)
   208ee:	4628      	mov	r0, r5
   208f0:	4631      	mov	r1, r6
   208f2:	f7fb fdd5 	bl	1c4a0 <__aeabi_dcmplt>
   208f6:	b198      	cbz	r0, 20920 <_dtoa_r+0x3f8>
   208f8:	9b05      	ldr	r3, [sp, #20]
   208fa:	b18b      	cbz	r3, 20920 <_dtoa_r+0x3f8>
   208fc:	f1b9 0f00 	cmp.w	r9, #0
   20900:	f340 80e6 	ble.w	20ad0 <_dtoa_r+0x5a8>
   20904:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   20908:	9308      	str	r3, [sp, #32]
   2090a:	4631      	mov	r1, r6
   2090c:	2200      	movs	r2, #0
   2090e:	4b6c      	ldr	r3, [pc, #432]	; (20ac0 <_dtoa_r+0x598>)
   20910:	4628      	mov	r0, r5
   20912:	f7fb fb53 	bl	1bfbc <__aeabi_dmul>
   20916:	3401      	adds	r4, #1
   20918:	e9cd 0102 	strd	r0, r1, [sp, #8]
   2091c:	464e      	mov	r6, r9
   2091e:	e002      	b.n	20926 <_dtoa_r+0x3fe>
   20920:	9e05      	ldr	r6, [sp, #20]
   20922:	f8cd b020 	str.w	fp, [sp, #32]
   20926:	4620      	mov	r0, r4
   20928:	f7fb fae2 	bl	1bef0 <__aeabi_i2d>
   2092c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   20930:	f7fb fb44 	bl	1bfbc <__aeabi_dmul>
   20934:	4b63      	ldr	r3, [pc, #396]	; (20ac4 <_dtoa_r+0x59c>)
   20936:	2200      	movs	r2, #0
   20938:	f7fb f98e 	bl	1bc58 <__adddf3>
   2093c:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   20940:	4604      	mov	r4, r0
   20942:	930c      	str	r3, [sp, #48]	; 0x30
   20944:	461d      	mov	r5, r3
   20946:	b9d6      	cbnz	r6, 2097e <_dtoa_r+0x456>
   20948:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   2094c:	2200      	movs	r2, #0
   2094e:	4b5e      	ldr	r3, [pc, #376]	; (20ac8 <_dtoa_r+0x5a0>)
   20950:	f7fb f980 	bl	1bc54 <__aeabi_dsub>
   20954:	4622      	mov	r2, r4
   20956:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20958:	e9cd 0102 	strd	r0, r1, [sp, #8]
   2095c:	f7fb fdbe 	bl	1c4dc <__aeabi_dcmpgt>
   20960:	2800      	cmp	r0, #0
   20962:	f040 823f 	bne.w	20de4 <_dtoa_r+0x8bc>
   20966:	990c      	ldr	r1, [sp, #48]	; 0x30
   20968:	4622      	mov	r2, r4
   2096a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   2096e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   20972:	f7fb fd95 	bl	1c4a0 <__aeabi_dcmplt>
   20976:	2800      	cmp	r0, #0
   20978:	f040 822b 	bne.w	20dd2 <_dtoa_r+0x8aa>
   2097c:	e0a8      	b.n	20ad0 <_dtoa_r+0x5a8>
   2097e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   20980:	4b4c      	ldr	r3, [pc, #304]	; (20ab4 <_dtoa_r+0x58c>)
   20982:	1e71      	subs	r1, r6, #1
   20984:	2a00      	cmp	r2, #0
   20986:	d049      	beq.n	20a1c <_dtoa_r+0x4f4>
   20988:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   2098c:	e9d3 2300 	ldrd	r2, r3, [r3]
   20990:	2000      	movs	r0, #0
   20992:	494e      	ldr	r1, [pc, #312]	; (20acc <_dtoa_r+0x5a4>)
   20994:	f7fb fc3c 	bl	1c210 <__aeabi_ddiv>
   20998:	4622      	mov	r2, r4
   2099a:	462b      	mov	r3, r5
   2099c:	f7fb f95a 	bl	1bc54 <__aeabi_dsub>
   209a0:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   209a4:	9c06      	ldr	r4, [sp, #24]
   209a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   209aa:	f7fb fda1 	bl	1c4f0 <__aeabi_d2iz>
   209ae:	4605      	mov	r5, r0
   209b0:	f7fb fa9e 	bl	1bef0 <__aeabi_i2d>
   209b4:	4602      	mov	r2, r0
   209b6:	460b      	mov	r3, r1
   209b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   209bc:	f7fb f94a 	bl	1bc54 <__aeabi_dsub>
   209c0:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   209c4:	3530      	adds	r5, #48	; 0x30
   209c6:	f804 5b01 	strb.w	r5, [r4], #1
   209ca:	e9cd 0102 	strd	r0, r1, [sp, #8]
   209ce:	f7fb fd67 	bl	1c4a0 <__aeabi_dcmplt>
   209d2:	2800      	cmp	r0, #0
   209d4:	f040 831d 	bne.w	21012 <_dtoa_r+0xaea>
   209d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   209dc:	2000      	movs	r0, #0
   209de:	4937      	ldr	r1, [pc, #220]	; (20abc <_dtoa_r+0x594>)
   209e0:	f7fb f938 	bl	1bc54 <__aeabi_dsub>
   209e4:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   209e8:	f7fb fd5a 	bl	1c4a0 <__aeabi_dcmplt>
   209ec:	2800      	cmp	r0, #0
   209ee:	f040 80d1 	bne.w	20b94 <_dtoa_r+0x66c>
   209f2:	9b06      	ldr	r3, [sp, #24]
   209f4:	1ae3      	subs	r3, r4, r3
   209f6:	42b3      	cmp	r3, r6
   209f8:	da6a      	bge.n	20ad0 <_dtoa_r+0x5a8>
   209fa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   209fe:	2200      	movs	r2, #0
   20a00:	4b2f      	ldr	r3, [pc, #188]	; (20ac0 <_dtoa_r+0x598>)
   20a02:	f7fb fadb 	bl	1bfbc <__aeabi_dmul>
   20a06:	2200      	movs	r2, #0
   20a08:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   20a0c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   20a10:	4b2b      	ldr	r3, [pc, #172]	; (20ac0 <_dtoa_r+0x598>)
   20a12:	f7fb fad3 	bl	1bfbc <__aeabi_dmul>
   20a16:	e9cd 0102 	strd	r0, r1, [sp, #8]
   20a1a:	e7c4      	b.n	209a6 <_dtoa_r+0x47e>
   20a1c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   20a20:	4622      	mov	r2, r4
   20a22:	e9d1 0100 	ldrd	r0, r1, [r1]
   20a26:	462b      	mov	r3, r5
   20a28:	f7fb fac8 	bl	1bfbc <__aeabi_dmul>
   20a2c:	9b06      	ldr	r3, [sp, #24]
   20a2e:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   20a32:	461d      	mov	r5, r3
   20a34:	199c      	adds	r4, r3, r6
   20a36:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   20a3a:	f7fb fd59 	bl	1c4f0 <__aeabi_d2iz>
   20a3e:	4606      	mov	r6, r0
   20a40:	f7fb fa56 	bl	1bef0 <__aeabi_i2d>
   20a44:	4602      	mov	r2, r0
   20a46:	460b      	mov	r3, r1
   20a48:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   20a4c:	f7fb f902 	bl	1bc54 <__aeabi_dsub>
   20a50:	3630      	adds	r6, #48	; 0x30
   20a52:	f805 6b01 	strb.w	r6, [r5], #1
   20a56:	42ac      	cmp	r4, r5
   20a58:	e9cd 0102 	strd	r0, r1, [sp, #8]
   20a5c:	f04f 0200 	mov.w	r2, #0
   20a60:	d122      	bne.n	20aa8 <_dtoa_r+0x580>
   20a62:	4b1a      	ldr	r3, [pc, #104]	; (20acc <_dtoa_r+0x5a4>)
   20a64:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   20a68:	f7fb f8f6 	bl	1bc58 <__adddf3>
   20a6c:	4602      	mov	r2, r0
   20a6e:	460b      	mov	r3, r1
   20a70:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   20a74:	f7fb fd32 	bl	1c4dc <__aeabi_dcmpgt>
   20a78:	2800      	cmp	r0, #0
   20a7a:	f040 808b 	bne.w	20b94 <_dtoa_r+0x66c>
   20a7e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   20a82:	2000      	movs	r0, #0
   20a84:	4911      	ldr	r1, [pc, #68]	; (20acc <_dtoa_r+0x5a4>)
   20a86:	f7fb f8e5 	bl	1bc54 <__aeabi_dsub>
   20a8a:	4602      	mov	r2, r0
   20a8c:	460b      	mov	r3, r1
   20a8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   20a92:	f7fb fd05 	bl	1c4a0 <__aeabi_dcmplt>
   20a96:	b1d8      	cbz	r0, 20ad0 <_dtoa_r+0x5a8>
   20a98:	f814 3c01 	ldrb.w	r3, [r4, #-1]
   20a9c:	1e62      	subs	r2, r4, #1
   20a9e:	2b30      	cmp	r3, #48	; 0x30
   20aa0:	f040 82b7 	bne.w	21012 <_dtoa_r+0xaea>
   20aa4:	4614      	mov	r4, r2
   20aa6:	e7f7      	b.n	20a98 <_dtoa_r+0x570>
   20aa8:	4b05      	ldr	r3, [pc, #20]	; (20ac0 <_dtoa_r+0x598>)
   20aaa:	f7fb fa87 	bl	1bfbc <__aeabi_dmul>
   20aae:	e9cd 0102 	strd	r0, r1, [sp, #8]
   20ab2:	e7c0      	b.n	20a36 <_dtoa_r+0x50e>
   20ab4:	00026590 	.word	0x00026590
   20ab8:	00026668 	.word	0x00026668
   20abc:	3ff00000 	.word	0x3ff00000
   20ac0:	40240000 	.word	0x40240000
   20ac4:	401c0000 	.word	0x401c0000
   20ac8:	40140000 	.word	0x40140000
   20acc:	3fe00000 	.word	0x3fe00000
   20ad0:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
   20ad4:	e9cd 3402 	strd	r3, r4, [sp, #8]
   20ad8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   20ada:	2b00      	cmp	r3, #0
   20adc:	db7c      	blt.n	20bd8 <_dtoa_r+0x6b0>
   20ade:	f1bb 0f0e 	cmp.w	fp, #14
   20ae2:	dc79      	bgt.n	20bd8 <_dtoa_r+0x6b0>
   20ae4:	4bab      	ldr	r3, [pc, #684]	; (20d94 <_dtoa_r+0x86c>)
   20ae6:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   20aea:	e9d3 6700 	ldrd	r6, r7, [r3]
   20aee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   20af0:	2b00      	cmp	r3, #0
   20af2:	da14      	bge.n	20b1e <_dtoa_r+0x5f6>
   20af4:	9b05      	ldr	r3, [sp, #20]
   20af6:	2b00      	cmp	r3, #0
   20af8:	dc11      	bgt.n	20b1e <_dtoa_r+0x5f6>
   20afa:	f040 816c 	bne.w	20dd6 <_dtoa_r+0x8ae>
   20afe:	2200      	movs	r2, #0
   20b00:	4ba5      	ldr	r3, [pc, #660]	; (20d98 <_dtoa_r+0x870>)
   20b02:	4630      	mov	r0, r6
   20b04:	4639      	mov	r1, r7
   20b06:	f7fb fa59 	bl	1bfbc <__aeabi_dmul>
   20b0a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   20b0e:	f7fb fcdb 	bl	1c4c8 <__aeabi_dcmpge>
   20b12:	9d05      	ldr	r5, [sp, #20]
   20b14:	462e      	mov	r6, r5
   20b16:	2800      	cmp	r0, #0
   20b18:	f040 815f 	bne.w	20dda <_dtoa_r+0x8b2>
   20b1c:	e165      	b.n	20dea <_dtoa_r+0x8c2>
   20b1e:	9c06      	ldr	r4, [sp, #24]
   20b20:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
   20b24:	4632      	mov	r2, r6
   20b26:	463b      	mov	r3, r7
   20b28:	4640      	mov	r0, r8
   20b2a:	4649      	mov	r1, r9
   20b2c:	f7fb fb70 	bl	1c210 <__aeabi_ddiv>
   20b30:	f7fb fcde 	bl	1c4f0 <__aeabi_d2iz>
   20b34:	4605      	mov	r5, r0
   20b36:	f7fb f9db 	bl	1bef0 <__aeabi_i2d>
   20b3a:	4632      	mov	r2, r6
   20b3c:	463b      	mov	r3, r7
   20b3e:	f7fb fa3d 	bl	1bfbc <__aeabi_dmul>
   20b42:	460b      	mov	r3, r1
   20b44:	4602      	mov	r2, r0
   20b46:	4649      	mov	r1, r9
   20b48:	4640      	mov	r0, r8
   20b4a:	f7fb f883 	bl	1bc54 <__aeabi_dsub>
   20b4e:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   20b52:	9b06      	ldr	r3, [sp, #24]
   20b54:	f804 eb01 	strb.w	lr, [r4], #1
   20b58:	ebc3 0e04 	rsb	lr, r3, r4
   20b5c:	9b05      	ldr	r3, [sp, #20]
   20b5e:	4573      	cmp	r3, lr
   20b60:	d12d      	bne.n	20bbe <_dtoa_r+0x696>
   20b62:	4602      	mov	r2, r0
   20b64:	460b      	mov	r3, r1
   20b66:	f7fb f877 	bl	1bc58 <__adddf3>
   20b6a:	4680      	mov	r8, r0
   20b6c:	4689      	mov	r9, r1
   20b6e:	4602      	mov	r2, r0
   20b70:	460b      	mov	r3, r1
   20b72:	4630      	mov	r0, r6
   20b74:	4639      	mov	r1, r7
   20b76:	f7fb fc93 	bl	1c4a0 <__aeabi_dcmplt>
   20b7a:	b978      	cbnz	r0, 20b9c <_dtoa_r+0x674>
   20b7c:	4642      	mov	r2, r8
   20b7e:	464b      	mov	r3, r9
   20b80:	4630      	mov	r0, r6
   20b82:	4639      	mov	r1, r7
   20b84:	f7fb fc82 	bl	1c48c <__aeabi_dcmpeq>
   20b88:	2800      	cmp	r0, #0
   20b8a:	f000 8244 	beq.w	21016 <_dtoa_r+0xaee>
   20b8e:	07eb      	lsls	r3, r5, #31
   20b90:	d404      	bmi.n	20b9c <_dtoa_r+0x674>
   20b92:	e240      	b.n	21016 <_dtoa_r+0xaee>
   20b94:	f8dd b020 	ldr.w	fp, [sp, #32]
   20b98:	e000      	b.n	20b9c <_dtoa_r+0x674>
   20b9a:	461c      	mov	r4, r3
   20b9c:	f814 2c01 	ldrb.w	r2, [r4, #-1]
   20ba0:	1e63      	subs	r3, r4, #1
   20ba2:	2a39      	cmp	r2, #57	; 0x39
   20ba4:	d107      	bne.n	20bb6 <_dtoa_r+0x68e>
   20ba6:	9a06      	ldr	r2, [sp, #24]
   20ba8:	429a      	cmp	r2, r3
   20baa:	d1f6      	bne.n	20b9a <_dtoa_r+0x672>
   20bac:	9906      	ldr	r1, [sp, #24]
   20bae:	2230      	movs	r2, #48	; 0x30
   20bb0:	f10b 0b01 	add.w	fp, fp, #1
   20bb4:	700a      	strb	r2, [r1, #0]
   20bb6:	781a      	ldrb	r2, [r3, #0]
   20bb8:	3201      	adds	r2, #1
   20bba:	701a      	strb	r2, [r3, #0]
   20bbc:	e22b      	b.n	21016 <_dtoa_r+0xaee>
   20bbe:	2200      	movs	r2, #0
   20bc0:	4b76      	ldr	r3, [pc, #472]	; (20d9c <_dtoa_r+0x874>)
   20bc2:	f7fb f9fb 	bl	1bfbc <__aeabi_dmul>
   20bc6:	2200      	movs	r2, #0
   20bc8:	2300      	movs	r3, #0
   20bca:	4680      	mov	r8, r0
   20bcc:	4689      	mov	r9, r1
   20bce:	f7fb fc5d 	bl	1c48c <__aeabi_dcmpeq>
   20bd2:	2800      	cmp	r0, #0
   20bd4:	d0a6      	beq.n	20b24 <_dtoa_r+0x5fc>
   20bd6:	e21e      	b.n	21016 <_dtoa_r+0xaee>
   20bd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   20bda:	2a00      	cmp	r2, #0
   20bdc:	d02b      	beq.n	20c36 <_dtoa_r+0x70e>
   20bde:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   20be0:	2a01      	cmp	r2, #1
   20be2:	dc0a      	bgt.n	20bfa <_dtoa_r+0x6d2>
   20be4:	9a11      	ldr	r2, [sp, #68]	; 0x44
   20be6:	b112      	cbz	r2, 20bee <_dtoa_r+0x6c6>
   20be8:	f203 4333 	addw	r3, r3, #1075	; 0x433
   20bec:	e002      	b.n	20bf4 <_dtoa_r+0x6cc>
   20bee:	9b12      	ldr	r3, [sp, #72]	; 0x48
   20bf0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   20bf4:	463d      	mov	r5, r7
   20bf6:	4644      	mov	r4, r8
   20bf8:	e013      	b.n	20c22 <_dtoa_r+0x6fa>
   20bfa:	9b05      	ldr	r3, [sp, #20]
   20bfc:	1e5d      	subs	r5, r3, #1
   20bfe:	42af      	cmp	r7, r5
   20c00:	bfbf      	itttt	lt
   20c02:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
   20c04:	1bea      	sublt	r2, r5, r7
   20c06:	189b      	addlt	r3, r3, r2
   20c08:	930b      	strlt	r3, [sp, #44]	; 0x2c
   20c0a:	9b05      	ldr	r3, [sp, #20]
   20c0c:	bfb6      	itet	lt
   20c0e:	462f      	movlt	r7, r5
   20c10:	1b7d      	subge	r5, r7, r5
   20c12:	2500      	movlt	r5, #0
   20c14:	2b00      	cmp	r3, #0
   20c16:	bfa7      	ittee	ge
   20c18:	4644      	movge	r4, r8
   20c1a:	9b05      	ldrge	r3, [sp, #20]
   20c1c:	ebc3 0408 	rsblt	r4, r3, r8
   20c20:	2300      	movlt	r3, #0
   20c22:	9a07      	ldr	r2, [sp, #28]
   20c24:	2101      	movs	r1, #1
   20c26:	441a      	add	r2, r3
   20c28:	4650      	mov	r0, sl
   20c2a:	4498      	add	r8, r3
   20c2c:	9207      	str	r2, [sp, #28]
   20c2e:	f001 f86b 	bl	21d08 <__i2b>
   20c32:	4606      	mov	r6, r0
   20c34:	e002      	b.n	20c3c <_dtoa_r+0x714>
   20c36:	463d      	mov	r5, r7
   20c38:	4644      	mov	r4, r8
   20c3a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   20c3c:	b15c      	cbz	r4, 20c56 <_dtoa_r+0x72e>
   20c3e:	9b07      	ldr	r3, [sp, #28]
   20c40:	2b00      	cmp	r3, #0
   20c42:	dd08      	ble.n	20c56 <_dtoa_r+0x72e>
   20c44:	42a3      	cmp	r3, r4
   20c46:	bfa8      	it	ge
   20c48:	4623      	movge	r3, r4
   20c4a:	9a07      	ldr	r2, [sp, #28]
   20c4c:	ebc3 0808 	rsb	r8, r3, r8
   20c50:	1ae4      	subs	r4, r4, r3
   20c52:	1ad3      	subs	r3, r2, r3
   20c54:	9307      	str	r3, [sp, #28]
   20c56:	2f00      	cmp	r7, #0
   20c58:	dd1d      	ble.n	20c96 <_dtoa_r+0x76e>
   20c5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   20c5c:	b1ab      	cbz	r3, 20c8a <_dtoa_r+0x762>
   20c5e:	b18d      	cbz	r5, 20c84 <_dtoa_r+0x75c>
   20c60:	4631      	mov	r1, r6
   20c62:	462a      	mov	r2, r5
   20c64:	4650      	mov	r0, sl
   20c66:	f001 f8e9 	bl	21e3c <__pow5mult>
   20c6a:	9a04      	ldr	r2, [sp, #16]
   20c6c:	4601      	mov	r1, r0
   20c6e:	4606      	mov	r6, r0
   20c70:	4650      	mov	r0, sl
   20c72:	f001 f852 	bl	21d1a <__multiply>
   20c76:	9904      	ldr	r1, [sp, #16]
   20c78:	9008      	str	r0, [sp, #32]
   20c7a:	4650      	mov	r0, sl
   20c7c:	f000 ff67 	bl	21b4e <_Bfree>
   20c80:	9b08      	ldr	r3, [sp, #32]
   20c82:	9304      	str	r3, [sp, #16]
   20c84:	1b7a      	subs	r2, r7, r5
   20c86:	d006      	beq.n	20c96 <_dtoa_r+0x76e>
   20c88:	e000      	b.n	20c8c <_dtoa_r+0x764>
   20c8a:	463a      	mov	r2, r7
   20c8c:	9904      	ldr	r1, [sp, #16]
   20c8e:	4650      	mov	r0, sl
   20c90:	f001 f8d4 	bl	21e3c <__pow5mult>
   20c94:	9004      	str	r0, [sp, #16]
   20c96:	2101      	movs	r1, #1
   20c98:	4650      	mov	r0, sl
   20c9a:	f001 f835 	bl	21d08 <__i2b>
   20c9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   20ca0:	4605      	mov	r5, r0
   20ca2:	b35b      	cbz	r3, 20cfc <_dtoa_r+0x7d4>
   20ca4:	461a      	mov	r2, r3
   20ca6:	4601      	mov	r1, r0
   20ca8:	4650      	mov	r0, sl
   20caa:	f001 f8c7 	bl	21e3c <__pow5mult>
   20cae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   20cb0:	4605      	mov	r5, r0
   20cb2:	2b01      	cmp	r3, #1
   20cb4:	dc18      	bgt.n	20ce8 <_dtoa_r+0x7c0>
   20cb6:	9b02      	ldr	r3, [sp, #8]
   20cb8:	b983      	cbnz	r3, 20cdc <_dtoa_r+0x7b4>
   20cba:	9b03      	ldr	r3, [sp, #12]
   20cbc:	f3c3 0313 	ubfx	r3, r3, #0, #20
   20cc0:	b973      	cbnz	r3, 20ce0 <_dtoa_r+0x7b8>
   20cc2:	9b03      	ldr	r3, [sp, #12]
   20cc4:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
   20cc8:	0d3f      	lsrs	r7, r7, #20
   20cca:	053f      	lsls	r7, r7, #20
   20ccc:	b14f      	cbz	r7, 20ce2 <_dtoa_r+0x7ba>
   20cce:	9b07      	ldr	r3, [sp, #28]
   20cd0:	f108 0801 	add.w	r8, r8, #1
   20cd4:	3301      	adds	r3, #1
   20cd6:	9307      	str	r3, [sp, #28]
   20cd8:	2701      	movs	r7, #1
   20cda:	e002      	b.n	20ce2 <_dtoa_r+0x7ba>
   20cdc:	2700      	movs	r7, #0
   20cde:	e000      	b.n	20ce2 <_dtoa_r+0x7ba>
   20ce0:	9f02      	ldr	r7, [sp, #8]
   20ce2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   20ce4:	b173      	cbz	r3, 20d04 <_dtoa_r+0x7dc>
   20ce6:	e000      	b.n	20cea <_dtoa_r+0x7c2>
   20ce8:	2700      	movs	r7, #0
   20cea:	692b      	ldr	r3, [r5, #16]
   20cec:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   20cf0:	6918      	ldr	r0, [r3, #16]
   20cf2:	f000 ffbc 	bl	21c6e <__hi0bits>
   20cf6:	f1c0 0020 	rsb	r0, r0, #32
   20cfa:	e004      	b.n	20d06 <_dtoa_r+0x7de>
   20cfc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   20cfe:	2b01      	cmp	r3, #1
   20d00:	ddd9      	ble.n	20cb6 <_dtoa_r+0x78e>
   20d02:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
   20d04:	2001      	movs	r0, #1
   20d06:	9b07      	ldr	r3, [sp, #28]
   20d08:	4418      	add	r0, r3
   20d0a:	f010 001f 	ands.w	r0, r0, #31
   20d0e:	d008      	beq.n	20d22 <_dtoa_r+0x7fa>
   20d10:	f1c0 0320 	rsb	r3, r0, #32
   20d14:	2b04      	cmp	r3, #4
   20d16:	dd02      	ble.n	20d1e <_dtoa_r+0x7f6>
   20d18:	f1c0 001c 	rsb	r0, r0, #28
   20d1c:	e002      	b.n	20d24 <_dtoa_r+0x7fc>
   20d1e:	d006      	beq.n	20d2e <_dtoa_r+0x806>
   20d20:	4618      	mov	r0, r3
   20d22:	301c      	adds	r0, #28
   20d24:	9b07      	ldr	r3, [sp, #28]
   20d26:	4480      	add	r8, r0
   20d28:	4403      	add	r3, r0
   20d2a:	4404      	add	r4, r0
   20d2c:	9307      	str	r3, [sp, #28]
   20d2e:	f1b8 0f00 	cmp.w	r8, #0
   20d32:	dd05      	ble.n	20d40 <_dtoa_r+0x818>
   20d34:	4642      	mov	r2, r8
   20d36:	9904      	ldr	r1, [sp, #16]
   20d38:	4650      	mov	r0, sl
   20d3a:	f001 f8cd 	bl	21ed8 <__lshift>
   20d3e:	9004      	str	r0, [sp, #16]
   20d40:	9b07      	ldr	r3, [sp, #28]
   20d42:	2b00      	cmp	r3, #0
   20d44:	dd05      	ble.n	20d52 <_dtoa_r+0x82a>
   20d46:	4629      	mov	r1, r5
   20d48:	461a      	mov	r2, r3
   20d4a:	4650      	mov	r0, sl
   20d4c:	f001 f8c4 	bl	21ed8 <__lshift>
   20d50:	4605      	mov	r5, r0
   20d52:	9b10      	ldr	r3, [sp, #64]	; 0x40
   20d54:	b323      	cbz	r3, 20da0 <_dtoa_r+0x878>
   20d56:	4629      	mov	r1, r5
   20d58:	9804      	ldr	r0, [sp, #16]
   20d5a:	f001 f90e 	bl	21f7a <__mcmp>
   20d5e:	2800      	cmp	r0, #0
   20d60:	da1e      	bge.n	20da0 <_dtoa_r+0x878>
   20d62:	2300      	movs	r3, #0
   20d64:	220a      	movs	r2, #10
   20d66:	9904      	ldr	r1, [sp, #16]
   20d68:	4650      	mov	r0, sl
   20d6a:	f000 ff07 	bl	21b7c <__multadd>
   20d6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   20d70:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   20d74:	9004      	str	r0, [sp, #16]
   20d76:	2b00      	cmp	r3, #0
   20d78:	f000 815f 	beq.w	2103a <_dtoa_r+0xb12>
   20d7c:	4631      	mov	r1, r6
   20d7e:	2300      	movs	r3, #0
   20d80:	220a      	movs	r2, #10
   20d82:	4650      	mov	r0, sl
   20d84:	f000 fefa 	bl	21b7c <__multadd>
   20d88:	f1b9 0f00 	cmp.w	r9, #0
   20d8c:	4606      	mov	r6, r0
   20d8e:	dc3f      	bgt.n	20e10 <_dtoa_r+0x8e8>
   20d90:	e03b      	b.n	20e0a <_dtoa_r+0x8e2>
   20d92:	bf00      	nop
   20d94:	00026590 	.word	0x00026590
   20d98:	40140000 	.word	0x40140000
   20d9c:	40240000 	.word	0x40240000
   20da0:	9b05      	ldr	r3, [sp, #20]
   20da2:	2b00      	cmp	r3, #0
   20da4:	dc2b      	bgt.n	20dfe <_dtoa_r+0x8d6>
   20da6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   20da8:	2b02      	cmp	r3, #2
   20daa:	dd28      	ble.n	20dfe <_dtoa_r+0x8d6>
   20dac:	f8dd 9014 	ldr.w	r9, [sp, #20]
   20db0:	f1b9 0f00 	cmp.w	r9, #0
   20db4:	d111      	bne.n	20dda <_dtoa_r+0x8b2>
   20db6:	4629      	mov	r1, r5
   20db8:	464b      	mov	r3, r9
   20dba:	2205      	movs	r2, #5
   20dbc:	4650      	mov	r0, sl
   20dbe:	f000 fedd 	bl	21b7c <__multadd>
   20dc2:	4601      	mov	r1, r0
   20dc4:	4605      	mov	r5, r0
   20dc6:	9804      	ldr	r0, [sp, #16]
   20dc8:	f001 f8d7 	bl	21f7a <__mcmp>
   20dcc:	2800      	cmp	r0, #0
   20dce:	dc0c      	bgt.n	20dea <_dtoa_r+0x8c2>
   20dd0:	e003      	b.n	20dda <_dtoa_r+0x8b2>
   20dd2:	4635      	mov	r5, r6
   20dd4:	e000      	b.n	20dd8 <_dtoa_r+0x8b0>
   20dd6:	2500      	movs	r5, #0
   20dd8:	462e      	mov	r6, r5
   20dda:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   20ddc:	9c06      	ldr	r4, [sp, #24]
   20dde:	ea6f 0b03 	mvn.w	fp, r3
   20de2:	e009      	b.n	20df8 <_dtoa_r+0x8d0>
   20de4:	4635      	mov	r5, r6
   20de6:	f8dd b020 	ldr.w	fp, [sp, #32]
   20dea:	9b06      	ldr	r3, [sp, #24]
   20dec:	9a06      	ldr	r2, [sp, #24]
   20dee:	1c5c      	adds	r4, r3, #1
   20df0:	2331      	movs	r3, #49	; 0x31
   20df2:	7013      	strb	r3, [r2, #0]
   20df4:	f10b 0b01 	add.w	fp, fp, #1
   20df8:	9605      	str	r6, [sp, #20]
   20dfa:	2600      	movs	r6, #0
   20dfc:	e0f7      	b.n	20fee <_dtoa_r+0xac6>
   20dfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   20e00:	f8dd 9014 	ldr.w	r9, [sp, #20]
   20e04:	b923      	cbnz	r3, 20e10 <_dtoa_r+0x8e8>
   20e06:	9c06      	ldr	r4, [sp, #24]
   20e08:	e0b2      	b.n	20f70 <_dtoa_r+0xa48>
   20e0a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   20e0c:	2b02      	cmp	r3, #2
   20e0e:	dccf      	bgt.n	20db0 <_dtoa_r+0x888>
   20e10:	2c00      	cmp	r4, #0
   20e12:	dd05      	ble.n	20e20 <_dtoa_r+0x8f8>
   20e14:	4631      	mov	r1, r6
   20e16:	4622      	mov	r2, r4
   20e18:	4650      	mov	r0, sl
   20e1a:	f001 f85d 	bl	21ed8 <__lshift>
   20e1e:	4606      	mov	r6, r0
   20e20:	b19f      	cbz	r7, 20e4a <_dtoa_r+0x922>
   20e22:	6871      	ldr	r1, [r6, #4]
   20e24:	4650      	mov	r0, sl
   20e26:	f000 fe5d 	bl	21ae4 <_Balloc>
   20e2a:	4604      	mov	r4, r0
   20e2c:	6932      	ldr	r2, [r6, #16]
   20e2e:	f106 010c 	add.w	r1, r6, #12
   20e32:	3202      	adds	r2, #2
   20e34:	0092      	lsls	r2, r2, #2
   20e36:	300c      	adds	r0, #12
   20e38:	f7fc fa69 	bl	1d30e <memcpy>
   20e3c:	2201      	movs	r2, #1
   20e3e:	4621      	mov	r1, r4
   20e40:	4650      	mov	r0, sl
   20e42:	f001 f849 	bl	21ed8 <__lshift>
   20e46:	9005      	str	r0, [sp, #20]
   20e48:	e000      	b.n	20e4c <_dtoa_r+0x924>
   20e4a:	9605      	str	r6, [sp, #20]
   20e4c:	9b02      	ldr	r3, [sp, #8]
   20e4e:	9f06      	ldr	r7, [sp, #24]
   20e50:	f003 0301 	and.w	r3, r3, #1
   20e54:	9307      	str	r3, [sp, #28]
   20e56:	4629      	mov	r1, r5
   20e58:	9804      	ldr	r0, [sp, #16]
   20e5a:	f7ff fad7 	bl	2040c <quorem>
   20e5e:	4631      	mov	r1, r6
   20e60:	4604      	mov	r4, r0
   20e62:	f100 0830 	add.w	r8, r0, #48	; 0x30
   20e66:	9804      	ldr	r0, [sp, #16]
   20e68:	f001 f887 	bl	21f7a <__mcmp>
   20e6c:	9a05      	ldr	r2, [sp, #20]
   20e6e:	9002      	str	r0, [sp, #8]
   20e70:	4629      	mov	r1, r5
   20e72:	4650      	mov	r0, sl
   20e74:	f001 f89d 	bl	21fb2 <__mdiff>
   20e78:	68c3      	ldr	r3, [r0, #12]
   20e7a:	4602      	mov	r2, r0
   20e7c:	b93b      	cbnz	r3, 20e8e <_dtoa_r+0x966>
   20e7e:	4601      	mov	r1, r0
   20e80:	900a      	str	r0, [sp, #40]	; 0x28
   20e82:	9804      	ldr	r0, [sp, #16]
   20e84:	f001 f879 	bl	21f7a <__mcmp>
   20e88:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   20e8a:	4603      	mov	r3, r0
   20e8c:	e000      	b.n	20e90 <_dtoa_r+0x968>
   20e8e:	2301      	movs	r3, #1
   20e90:	4611      	mov	r1, r2
   20e92:	4650      	mov	r0, sl
   20e94:	930a      	str	r3, [sp, #40]	; 0x28
   20e96:	f000 fe5a 	bl	21b4e <_Bfree>
   20e9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   20e9c:	b953      	cbnz	r3, 20eb4 <_dtoa_r+0x98c>
   20e9e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   20ea0:	b942      	cbnz	r2, 20eb4 <_dtoa_r+0x98c>
   20ea2:	9a07      	ldr	r2, [sp, #28]
   20ea4:	b932      	cbnz	r2, 20eb4 <_dtoa_r+0x98c>
   20ea6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   20eaa:	d02a      	beq.n	20f02 <_dtoa_r+0x9da>
   20eac:	9b02      	ldr	r3, [sp, #8]
   20eae:	2b00      	cmp	r3, #0
   20eb0:	dc1c      	bgt.n	20eec <_dtoa_r+0x9c4>
   20eb2:	e01d      	b.n	20ef0 <_dtoa_r+0x9c8>
   20eb4:	9a02      	ldr	r2, [sp, #8]
   20eb6:	2a00      	cmp	r2, #0
   20eb8:	db04      	blt.n	20ec4 <_dtoa_r+0x99c>
   20eba:	d11b      	bne.n	20ef4 <_dtoa_r+0x9cc>
   20ebc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   20ebe:	b9ca      	cbnz	r2, 20ef4 <_dtoa_r+0x9cc>
   20ec0:	9a07      	ldr	r2, [sp, #28]
   20ec2:	b9ba      	cbnz	r2, 20ef4 <_dtoa_r+0x9cc>
   20ec4:	2b00      	cmp	r3, #0
   20ec6:	dd13      	ble.n	20ef0 <_dtoa_r+0x9c8>
   20ec8:	2201      	movs	r2, #1
   20eca:	9904      	ldr	r1, [sp, #16]
   20ecc:	4650      	mov	r0, sl
   20ece:	f001 f803 	bl	21ed8 <__lshift>
   20ed2:	4629      	mov	r1, r5
   20ed4:	9004      	str	r0, [sp, #16]
   20ed6:	f001 f850 	bl	21f7a <__mcmp>
   20eda:	2800      	cmp	r0, #0
   20edc:	dc03      	bgt.n	20ee6 <_dtoa_r+0x9be>
   20ede:	d107      	bne.n	20ef0 <_dtoa_r+0x9c8>
   20ee0:	f018 0f01 	tst.w	r8, #1
   20ee4:	d004      	beq.n	20ef0 <_dtoa_r+0x9c8>
   20ee6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   20eea:	d00a      	beq.n	20f02 <_dtoa_r+0x9da>
   20eec:	f104 0831 	add.w	r8, r4, #49	; 0x31
   20ef0:	1c7c      	adds	r4, r7, #1
   20ef2:	e00c      	b.n	20f0e <_dtoa_r+0x9e6>
   20ef4:	2b00      	cmp	r3, #0
   20ef6:	f107 0401 	add.w	r4, r7, #1
   20efa:	dd0b      	ble.n	20f14 <_dtoa_r+0x9ec>
   20efc:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   20f00:	d103      	bne.n	20f0a <_dtoa_r+0x9e2>
   20f02:	2339      	movs	r3, #57	; 0x39
   20f04:	703b      	strb	r3, [r7, #0]
   20f06:	3701      	adds	r7, #1
   20f08:	e056      	b.n	20fb8 <_dtoa_r+0xa90>
   20f0a:	f108 0801 	add.w	r8, r8, #1
   20f0e:	f887 8000 	strb.w	r8, [r7]
   20f12:	e06c      	b.n	20fee <_dtoa_r+0xac6>
   20f14:	9b06      	ldr	r3, [sp, #24]
   20f16:	4627      	mov	r7, r4
   20f18:	1ae3      	subs	r3, r4, r3
   20f1a:	454b      	cmp	r3, r9
   20f1c:	f804 8c01 	strb.w	r8, [r4, #-1]
   20f20:	d03b      	beq.n	20f9a <_dtoa_r+0xa72>
   20f22:	2300      	movs	r3, #0
   20f24:	220a      	movs	r2, #10
   20f26:	9904      	ldr	r1, [sp, #16]
   20f28:	4650      	mov	r0, sl
   20f2a:	f000 fe27 	bl	21b7c <__multadd>
   20f2e:	9b05      	ldr	r3, [sp, #20]
   20f30:	9004      	str	r0, [sp, #16]
   20f32:	429e      	cmp	r6, r3
   20f34:	f04f 020a 	mov.w	r2, #10
   20f38:	f04f 0300 	mov.w	r3, #0
   20f3c:	4631      	mov	r1, r6
   20f3e:	4650      	mov	r0, sl
   20f40:	d104      	bne.n	20f4c <_dtoa_r+0xa24>
   20f42:	f000 fe1b 	bl	21b7c <__multadd>
   20f46:	4606      	mov	r6, r0
   20f48:	9005      	str	r0, [sp, #20]
   20f4a:	e784      	b.n	20e56 <_dtoa_r+0x92e>
   20f4c:	f000 fe16 	bl	21b7c <__multadd>
   20f50:	2300      	movs	r3, #0
   20f52:	4606      	mov	r6, r0
   20f54:	220a      	movs	r2, #10
   20f56:	9905      	ldr	r1, [sp, #20]
   20f58:	4650      	mov	r0, sl
   20f5a:	f000 fe0f 	bl	21b7c <__multadd>
   20f5e:	9005      	str	r0, [sp, #20]
   20f60:	e779      	b.n	20e56 <_dtoa_r+0x92e>
   20f62:	2300      	movs	r3, #0
   20f64:	220a      	movs	r2, #10
   20f66:	9904      	ldr	r1, [sp, #16]
   20f68:	4650      	mov	r0, sl
   20f6a:	f000 fe07 	bl	21b7c <__multadd>
   20f6e:	9004      	str	r0, [sp, #16]
   20f70:	4629      	mov	r1, r5
   20f72:	9804      	ldr	r0, [sp, #16]
   20f74:	f7ff fa4a 	bl	2040c <quorem>
   20f78:	9b06      	ldr	r3, [sp, #24]
   20f7a:	f100 0830 	add.w	r8, r0, #48	; 0x30
   20f7e:	f804 8b01 	strb.w	r8, [r4], #1
   20f82:	1ae3      	subs	r3, r4, r3
   20f84:	454b      	cmp	r3, r9
   20f86:	dbec      	blt.n	20f62 <_dtoa_r+0xa3a>
   20f88:	9b06      	ldr	r3, [sp, #24]
   20f8a:	9605      	str	r6, [sp, #20]
   20f8c:	f1b9 0f01 	cmp.w	r9, #1
   20f90:	bfac      	ite	ge
   20f92:	444b      	addge	r3, r9
   20f94:	3301      	addlt	r3, #1
   20f96:	461f      	mov	r7, r3
   20f98:	2600      	movs	r6, #0
   20f9a:	2201      	movs	r2, #1
   20f9c:	9904      	ldr	r1, [sp, #16]
   20f9e:	4650      	mov	r0, sl
   20fa0:	f000 ff9a 	bl	21ed8 <__lshift>
   20fa4:	4629      	mov	r1, r5
   20fa6:	9004      	str	r0, [sp, #16]
   20fa8:	f000 ffe7 	bl	21f7a <__mcmp>
   20fac:	2800      	cmp	r0, #0
   20fae:	dc03      	bgt.n	20fb8 <_dtoa_r+0xa90>
   20fb0:	d115      	bne.n	20fde <_dtoa_r+0xab6>
   20fb2:	f018 0f01 	tst.w	r8, #1
   20fb6:	d012      	beq.n	20fde <_dtoa_r+0xab6>
   20fb8:	463c      	mov	r4, r7
   20fba:	f814 3c01 	ldrb.w	r3, [r4, #-1]
   20fbe:	1e62      	subs	r2, r4, #1
   20fc0:	2b39      	cmp	r3, #57	; 0x39
   20fc2:	d109      	bne.n	20fd8 <_dtoa_r+0xab0>
   20fc4:	9b06      	ldr	r3, [sp, #24]
   20fc6:	4293      	cmp	r3, r2
   20fc8:	d104      	bne.n	20fd4 <_dtoa_r+0xaac>
   20fca:	f10b 0b01 	add.w	fp, fp, #1
   20fce:	2331      	movs	r3, #49	; 0x31
   20fd0:	9a06      	ldr	r2, [sp, #24]
   20fd2:	e002      	b.n	20fda <_dtoa_r+0xab2>
   20fd4:	4614      	mov	r4, r2
   20fd6:	e7f0      	b.n	20fba <_dtoa_r+0xa92>
   20fd8:	3301      	adds	r3, #1
   20fda:	7013      	strb	r3, [r2, #0]
   20fdc:	e007      	b.n	20fee <_dtoa_r+0xac6>
   20fde:	463c      	mov	r4, r7
   20fe0:	f814 3c01 	ldrb.w	r3, [r4, #-1]
   20fe4:	1e62      	subs	r2, r4, #1
   20fe6:	2b30      	cmp	r3, #48	; 0x30
   20fe8:	d101      	bne.n	20fee <_dtoa_r+0xac6>
   20fea:	4614      	mov	r4, r2
   20fec:	e7f8      	b.n	20fe0 <_dtoa_r+0xab8>
   20fee:	4629      	mov	r1, r5
   20ff0:	4650      	mov	r0, sl
   20ff2:	f000 fdac 	bl	21b4e <_Bfree>
   20ff6:	9b05      	ldr	r3, [sp, #20]
   20ff8:	b16b      	cbz	r3, 21016 <_dtoa_r+0xaee>
   20ffa:	b12e      	cbz	r6, 21008 <_dtoa_r+0xae0>
   20ffc:	429e      	cmp	r6, r3
   20ffe:	d003      	beq.n	21008 <_dtoa_r+0xae0>
   21000:	4631      	mov	r1, r6
   21002:	4650      	mov	r0, sl
   21004:	f000 fda3 	bl	21b4e <_Bfree>
   21008:	9905      	ldr	r1, [sp, #20]
   2100a:	4650      	mov	r0, sl
   2100c:	f000 fd9f 	bl	21b4e <_Bfree>
   21010:	e001      	b.n	21016 <_dtoa_r+0xaee>
   21012:	f8dd b020 	ldr.w	fp, [sp, #32]
   21016:	9904      	ldr	r1, [sp, #16]
   21018:	4650      	mov	r0, sl
   2101a:	f000 fd98 	bl	21b4e <_Bfree>
   2101e:	2300      	movs	r3, #0
   21020:	9a20      	ldr	r2, [sp, #128]	; 0x80
   21022:	7023      	strb	r3, [r4, #0]
   21024:	f10b 0301 	add.w	r3, fp, #1
   21028:	6013      	str	r3, [r2, #0]
   2102a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   2102c:	b11b      	cbz	r3, 21036 <_dtoa_r+0xb0e>
   2102e:	601c      	str	r4, [r3, #0]
   21030:	e001      	b.n	21036 <_dtoa_r+0xb0e>
   21032:	4808      	ldr	r0, [pc, #32]	; (21054 <_dtoa_r+0xb2c>)
   21034:	e00a      	b.n	2104c <_dtoa_r+0xb24>
   21036:	9806      	ldr	r0, [sp, #24]
   21038:	e008      	b.n	2104c <_dtoa_r+0xb24>
   2103a:	f1b9 0f00 	cmp.w	r9, #0
   2103e:	f73f aee2 	bgt.w	20e06 <_dtoa_r+0x8de>
   21042:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   21044:	2b02      	cmp	r3, #2
   21046:	f77f aede 	ble.w	20e06 <_dtoa_r+0x8de>
   2104a:	e6b1      	b.n	20db0 <_dtoa_r+0x888>
   2104c:	b015      	add	sp, #84	; 0x54
   2104e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21052:	bf00      	nop
   21054:	0002375a 	.word	0x0002375a

00021058 <__sflush_r>:
__sflush_r():
   21058:	898a      	ldrh	r2, [r1, #12]
   2105a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2105e:	4605      	mov	r5, r0
   21060:	0710      	lsls	r0, r2, #28
   21062:	460c      	mov	r4, r1
   21064:	d459      	bmi.n	2111a <__sflush_r+0xc2>
   21066:	684b      	ldr	r3, [r1, #4]
   21068:	2b00      	cmp	r3, #0
   2106a:	dc02      	bgt.n	21072 <__sflush_r+0x1a>
   2106c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   2106e:	2b00      	cmp	r3, #0
   21070:	dd17      	ble.n	210a2 <__sflush_r+0x4a>
   21072:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   21074:	b1ae      	cbz	r6, 210a2 <__sflush_r+0x4a>
   21076:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
   2107a:	2300      	movs	r3, #0
   2107c:	b292      	uxth	r2, r2
   2107e:	682f      	ldr	r7, [r5, #0]
   21080:	602b      	str	r3, [r5, #0]
   21082:	b10a      	cbz	r2, 21088 <__sflush_r+0x30>
   21084:	6d60      	ldr	r0, [r4, #84]	; 0x54
   21086:	e015      	b.n	210b4 <__sflush_r+0x5c>
   21088:	6a21      	ldr	r1, [r4, #32]
   2108a:	2301      	movs	r3, #1
   2108c:	4628      	mov	r0, r5
   2108e:	47b0      	blx	r6
   21090:	1c41      	adds	r1, r0, #1
   21092:	d10f      	bne.n	210b4 <__sflush_r+0x5c>
   21094:	682b      	ldr	r3, [r5, #0]
   21096:	b16b      	cbz	r3, 210b4 <__sflush_r+0x5c>
   21098:	2b1d      	cmp	r3, #29
   2109a:	d001      	beq.n	210a0 <__sflush_r+0x48>
   2109c:	2b16      	cmp	r3, #22
   2109e:	d103      	bne.n	210a8 <__sflush_r+0x50>
   210a0:	602f      	str	r7, [r5, #0]
   210a2:	2000      	movs	r0, #0
   210a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   210a8:	89a3      	ldrh	r3, [r4, #12]
   210aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   210ae:	81a3      	strh	r3, [r4, #12]
   210b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   210b4:	89a3      	ldrh	r3, [r4, #12]
   210b6:	075a      	lsls	r2, r3, #29
   210b8:	d505      	bpl.n	210c6 <__sflush_r+0x6e>
   210ba:	6863      	ldr	r3, [r4, #4]
   210bc:	1ac0      	subs	r0, r0, r3
   210be:	6b63      	ldr	r3, [r4, #52]	; 0x34
   210c0:	b10b      	cbz	r3, 210c6 <__sflush_r+0x6e>
   210c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
   210c4:	1ac0      	subs	r0, r0, r3
   210c6:	2300      	movs	r3, #0
   210c8:	4602      	mov	r2, r0
   210ca:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   210cc:	6a21      	ldr	r1, [r4, #32]
   210ce:	4628      	mov	r0, r5
   210d0:	47b0      	blx	r6
   210d2:	1c43      	adds	r3, r0, #1
   210d4:	89a3      	ldrh	r3, [r4, #12]
   210d6:	d106      	bne.n	210e6 <__sflush_r+0x8e>
   210d8:	6829      	ldr	r1, [r5, #0]
   210da:	291d      	cmp	r1, #29
   210dc:	d839      	bhi.n	21152 <__sflush_r+0xfa>
   210de:	4a20      	ldr	r2, [pc, #128]	; (21160 <__sflush_r+0x108>)
   210e0:	40ca      	lsrs	r2, r1
   210e2:	07d6      	lsls	r6, r2, #31
   210e4:	d535      	bpl.n	21152 <__sflush_r+0xfa>
   210e6:	2200      	movs	r2, #0
   210e8:	6062      	str	r2, [r4, #4]
   210ea:	6922      	ldr	r2, [r4, #16]
   210ec:	04d9      	lsls	r1, r3, #19
   210ee:	6022      	str	r2, [r4, #0]
   210f0:	d504      	bpl.n	210fc <__sflush_r+0xa4>
   210f2:	1c42      	adds	r2, r0, #1
   210f4:	d101      	bne.n	210fa <__sflush_r+0xa2>
   210f6:	682b      	ldr	r3, [r5, #0]
   210f8:	b903      	cbnz	r3, 210fc <__sflush_r+0xa4>
   210fa:	6560      	str	r0, [r4, #84]	; 0x54
   210fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
   210fe:	602f      	str	r7, [r5, #0]
   21100:	2900      	cmp	r1, #0
   21102:	d0ce      	beq.n	210a2 <__sflush_r+0x4a>
   21104:	f104 0344 	add.w	r3, r4, #68	; 0x44
   21108:	4299      	cmp	r1, r3
   2110a:	d002      	beq.n	21112 <__sflush_r+0xba>
   2110c:	4628      	mov	r0, r5
   2110e:	f7fc fb85 	bl	1d81c <_free_r>
   21112:	2000      	movs	r0, #0
   21114:	6360      	str	r0, [r4, #52]	; 0x34
   21116:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2111a:	690f      	ldr	r7, [r1, #16]
   2111c:	2f00      	cmp	r7, #0
   2111e:	d0c0      	beq.n	210a2 <__sflush_r+0x4a>
   21120:	0793      	lsls	r3, r2, #30
   21122:	680e      	ldr	r6, [r1, #0]
   21124:	bf0c      	ite	eq
   21126:	694b      	ldreq	r3, [r1, #20]
   21128:	2300      	movne	r3, #0
   2112a:	ebc7 0806 	rsb	r8, r7, r6
   2112e:	600f      	str	r7, [r1, #0]
   21130:	608b      	str	r3, [r1, #8]
   21132:	e002      	b.n	2113a <__sflush_r+0xe2>
   21134:	4407      	add	r7, r0
   21136:	ebc0 0808 	rsb	r8, r0, r8
   2113a:	f1b8 0f00 	cmp.w	r8, #0
   2113e:	ddb0      	ble.n	210a2 <__sflush_r+0x4a>
   21140:	4643      	mov	r3, r8
   21142:	463a      	mov	r2, r7
   21144:	6a21      	ldr	r1, [r4, #32]
   21146:	4628      	mov	r0, r5
   21148:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   2114a:	47b0      	blx	r6
   2114c:	2800      	cmp	r0, #0
   2114e:	dcf1      	bgt.n	21134 <__sflush_r+0xdc>
   21150:	89a3      	ldrh	r3, [r4, #12]
   21152:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   21156:	81a3      	strh	r3, [r4, #12]
   21158:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2115c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   21160:	20400001 	.word	0x20400001

00021164 <_fflush_r>:
_fflush_r():
   21164:	b538      	push	{r3, r4, r5, lr}
   21166:	690b      	ldr	r3, [r1, #16]
   21168:	4605      	mov	r5, r0
   2116a:	460c      	mov	r4, r1
   2116c:	b1db      	cbz	r3, 211a6 <_fflush_r+0x42>
   2116e:	b118      	cbz	r0, 21178 <_fflush_r+0x14>
   21170:	6983      	ldr	r3, [r0, #24]
   21172:	b90b      	cbnz	r3, 21178 <_fflush_r+0x14>
   21174:	f7fb feda 	bl	1cf2c <__sinit>
   21178:	4b0c      	ldr	r3, [pc, #48]	; (211ac <_fflush_r+0x48>)
   2117a:	429c      	cmp	r4, r3
   2117c:	d101      	bne.n	21182 <_fflush_r+0x1e>
   2117e:	686c      	ldr	r4, [r5, #4]
   21180:	e008      	b.n	21194 <_fflush_r+0x30>
   21182:	4b0b      	ldr	r3, [pc, #44]	; (211b0 <_fflush_r+0x4c>)
   21184:	429c      	cmp	r4, r3
   21186:	d101      	bne.n	2118c <_fflush_r+0x28>
   21188:	68ac      	ldr	r4, [r5, #8]
   2118a:	e003      	b.n	21194 <_fflush_r+0x30>
   2118c:	4b09      	ldr	r3, [pc, #36]	; (211b4 <_fflush_r+0x50>)
   2118e:	429c      	cmp	r4, r3
   21190:	bf08      	it	eq
   21192:	68ec      	ldreq	r4, [r5, #12]
   21194:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   21198:	b12b      	cbz	r3, 211a6 <_fflush_r+0x42>
   2119a:	4621      	mov	r1, r4
   2119c:	4628      	mov	r0, r5
   2119e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   211a2:	f7ff bf59 	b.w	21058 <__sflush_r>
   211a6:	2000      	movs	r0, #0
   211a8:	bd38      	pop	{r3, r4, r5, pc}
   211aa:	bf00      	nop
   211ac:	00026334 	.word	0x00026334
   211b0:	00026354 	.word	0x00026354
   211b4:	00026374 	.word	0x00026374

000211b8 <fflush>:
fflush():
   211b8:	4601      	mov	r1, r0
   211ba:	b920      	cbnz	r0, 211c6 <fflush+0xe>
   211bc:	4b04      	ldr	r3, [pc, #16]	; (211d0 <fflush+0x18>)
   211be:	4905      	ldr	r1, [pc, #20]	; (211d4 <fflush+0x1c>)
   211c0:	6818      	ldr	r0, [r3, #0]
   211c2:	f7fb bf3b 	b.w	1d03c <_fwalk_reent>
   211c6:	4b04      	ldr	r3, [pc, #16]	; (211d8 <fflush+0x20>)
   211c8:	6818      	ldr	r0, [r3, #0]
   211ca:	f7ff bfcb 	b.w	21164 <_fflush_r>
   211ce:	bf00      	nop
   211d0:	00026398 	.word	0x00026398
   211d4:	00021165 	.word	0x00021165
   211d8:	2007c140 	.word	0x2007c140

000211dc <rshift>:
rshift():
   211dc:	b5f0      	push	{r4, r5, r6, r7, lr}
   211de:	6906      	ldr	r6, [r0, #16]
   211e0:	114b      	asrs	r3, r1, #5
   211e2:	42b3      	cmp	r3, r6
   211e4:	f100 0514 	add.w	r5, r0, #20
   211e8:	da27      	bge.n	2123a <rshift+0x5e>
   211ea:	f011 011f 	ands.w	r1, r1, #31
   211ee:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   211f2:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   211f6:	d101      	bne.n	211fc <rshift+0x20>
   211f8:	4629      	mov	r1, r5
   211fa:	e016      	b.n	2122a <rshift+0x4e>
   211fc:	1d14      	adds	r4, r2, #4
   211fe:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
   21202:	462b      	mov	r3, r5
   21204:	f1c1 0e20 	rsb	lr, r1, #32
   21208:	40ca      	lsrs	r2, r1
   2120a:	42b4      	cmp	r4, r6
   2120c:	d209      	bcs.n	21222 <rshift+0x46>
   2120e:	6827      	ldr	r7, [r4, #0]
   21210:	fa07 f70e 	lsl.w	r7, r7, lr
   21214:	433a      	orrs	r2, r7
   21216:	f843 2b04 	str.w	r2, [r3], #4
   2121a:	f854 2b04 	ldr.w	r2, [r4], #4
   2121e:	40ca      	lsrs	r2, r1
   21220:	e7f3      	b.n	2120a <rshift+0x2e>
   21222:	601a      	str	r2, [r3, #0]
   21224:	b152      	cbz	r2, 2123c <rshift+0x60>
   21226:	3304      	adds	r3, #4
   21228:	e008      	b.n	2123c <rshift+0x60>
   2122a:	42b2      	cmp	r2, r6
   2122c:	460b      	mov	r3, r1
   2122e:	d205      	bcs.n	2123c <rshift+0x60>
   21230:	f852 3b04 	ldr.w	r3, [r2], #4
   21234:	f841 3b04 	str.w	r3, [r1], #4
   21238:	e7f7      	b.n	2122a <rshift+0x4e>
   2123a:	462b      	mov	r3, r5
   2123c:	1b5b      	subs	r3, r3, r5
   2123e:	109b      	asrs	r3, r3, #2
   21240:	6103      	str	r3, [r0, #16]
   21242:	b903      	cbnz	r3, 21246 <rshift+0x6a>
   21244:	6143      	str	r3, [r0, #20]
   21246:	bdf0      	pop	{r4, r5, r6, r7, pc}

00021248 <__hexdig_fun>:
__hexdig_fun():
   21248:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   2124c:	2b09      	cmp	r3, #9
   2124e:	d801      	bhi.n	21254 <__hexdig_fun+0xc>
   21250:	3820      	subs	r0, #32
   21252:	e00a      	b.n	2126a <__hexdig_fun+0x22>
   21254:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   21258:	2b05      	cmp	r3, #5
   2125a:	d801      	bhi.n	21260 <__hexdig_fun+0x18>
   2125c:	3847      	subs	r0, #71	; 0x47
   2125e:	e004      	b.n	2126a <__hexdig_fun+0x22>
   21260:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   21264:	2b05      	cmp	r3, #5
   21266:	d802      	bhi.n	2126e <__hexdig_fun+0x26>
   21268:	3827      	subs	r0, #39	; 0x27
   2126a:	b2c0      	uxtb	r0, r0
   2126c:	4770      	bx	lr
   2126e:	2000      	movs	r0, #0
   21270:	4770      	bx	lr

00021272 <__gethex>:
__gethex():
   21272:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21276:	b08b      	sub	sp, #44	; 0x2c
   21278:	468a      	mov	sl, r1
   2127a:	4690      	mov	r8, r2
   2127c:	9306      	str	r3, [sp, #24]
   2127e:	9002      	str	r0, [sp, #8]
   21280:	f000 fbba 	bl	219f8 <_localeconv_r>
   21284:	6803      	ldr	r3, [r0, #0]
   21286:	f04f 0b00 	mov.w	fp, #0
   2128a:	4618      	mov	r0, r3
   2128c:	9303      	str	r3, [sp, #12]
   2128e:	f7fd fd64 	bl	1ed5a <strlen>
   21292:	9b03      	ldr	r3, [sp, #12]
   21294:	9001      	str	r0, [sp, #4]
   21296:	4403      	add	r3, r0
   21298:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   2129c:	9307      	str	r3, [sp, #28]
   2129e:	f8da 3000 	ldr.w	r3, [sl]
   212a2:	3302      	adds	r3, #2
   212a4:	461f      	mov	r7, r3
   212a6:	f813 0b01 	ldrb.w	r0, [r3], #1
   212aa:	2830      	cmp	r0, #48	; 0x30
   212ac:	d102      	bne.n	212b4 <__gethex+0x42>
   212ae:	f10b 0b01 	add.w	fp, fp, #1
   212b2:	e7f7      	b.n	212a4 <__gethex+0x32>
   212b4:	f7ff ffc8 	bl	21248 <__hexdig_fun>
   212b8:	4604      	mov	r4, r0
   212ba:	b9e0      	cbnz	r0, 212f6 <__gethex+0x84>
   212bc:	9a01      	ldr	r2, [sp, #4]
   212be:	9903      	ldr	r1, [sp, #12]
   212c0:	4638      	mov	r0, r7
   212c2:	f7fd fd75 	bl	1edb0 <strncmp>
   212c6:	2800      	cmp	r0, #0
   212c8:	d134      	bne.n	21334 <__gethex+0xc2>
   212ca:	9b01      	ldr	r3, [sp, #4]
   212cc:	5cf8      	ldrb	r0, [r7, r3]
   212ce:	18fe      	adds	r6, r7, r3
   212d0:	f7ff ffba 	bl	21248 <__hexdig_fun>
   212d4:	b380      	cbz	r0, 21338 <__gethex+0xc6>
   212d6:	4633      	mov	r3, r6
   212d8:	7818      	ldrb	r0, [r3, #0]
   212da:	461f      	mov	r7, r3
   212dc:	2830      	cmp	r0, #48	; 0x30
   212de:	f103 0301 	add.w	r3, r3, #1
   212e2:	d0f9      	beq.n	212d8 <__gethex+0x66>
   212e4:	f7ff ffb0 	bl	21248 <__hexdig_fun>
   212e8:	fab0 f580 	clz	r5, r0
   212ec:	4634      	mov	r4, r6
   212ee:	096d      	lsrs	r5, r5, #5
   212f0:	f04f 0b01 	mov.w	fp, #1
   212f4:	e001      	b.n	212fa <__gethex+0x88>
   212f6:	2500      	movs	r5, #0
   212f8:	462c      	mov	r4, r5
   212fa:	463a      	mov	r2, r7
   212fc:	4616      	mov	r6, r2
   212fe:	7830      	ldrb	r0, [r6, #0]
   21300:	3201      	adds	r2, #1
   21302:	f7ff ffa1 	bl	21248 <__hexdig_fun>
   21306:	2800      	cmp	r0, #0
   21308:	d1f8      	bne.n	212fc <__gethex+0x8a>
   2130a:	9a01      	ldr	r2, [sp, #4]
   2130c:	9903      	ldr	r1, [sp, #12]
   2130e:	4630      	mov	r0, r6
   21310:	f7fd fd4e 	bl	1edb0 <strncmp>
   21314:	b950      	cbnz	r0, 2132c <__gethex+0xba>
   21316:	b954      	cbnz	r4, 2132e <__gethex+0xbc>
   21318:	9b01      	ldr	r3, [sp, #4]
   2131a:	18f4      	adds	r4, r6, r3
   2131c:	4622      	mov	r2, r4
   2131e:	4616      	mov	r6, r2
   21320:	7830      	ldrb	r0, [r6, #0]
   21322:	3201      	adds	r2, #1
   21324:	f7ff ff90 	bl	21248 <__hexdig_fun>
   21328:	2800      	cmp	r0, #0
   2132a:	d1f8      	bne.n	2131e <__gethex+0xac>
   2132c:	b134      	cbz	r4, 2133c <__gethex+0xca>
   2132e:	1ba4      	subs	r4, r4, r6
   21330:	00a4      	lsls	r4, r4, #2
   21332:	e003      	b.n	2133c <__gethex+0xca>
   21334:	463e      	mov	r6, r7
   21336:	e000      	b.n	2133a <__gethex+0xc8>
   21338:	4604      	mov	r4, r0
   2133a:	2501      	movs	r5, #1
   2133c:	7833      	ldrb	r3, [r6, #0]
   2133e:	2b50      	cmp	r3, #80	; 0x50
   21340:	d001      	beq.n	21346 <__gethex+0xd4>
   21342:	2b70      	cmp	r3, #112	; 0x70
   21344:	d12a      	bne.n	2139c <__gethex+0x12a>
   21346:	7873      	ldrb	r3, [r6, #1]
   21348:	2b2b      	cmp	r3, #43	; 0x2b
   2134a:	d008      	beq.n	2135e <__gethex+0xec>
   2134c:	2b2d      	cmp	r3, #45	; 0x2d
   2134e:	d003      	beq.n	21358 <__gethex+0xe6>
   21350:	1c71      	adds	r1, r6, #1
   21352:	f04f 0900 	mov.w	r9, #0
   21356:	e005      	b.n	21364 <__gethex+0xf2>
   21358:	f04f 0901 	mov.w	r9, #1
   2135c:	e001      	b.n	21362 <__gethex+0xf0>
   2135e:	f04f 0900 	mov.w	r9, #0
   21362:	1cb1      	adds	r1, r6, #2
   21364:	7808      	ldrb	r0, [r1, #0]
   21366:	f7ff ff6f 	bl	21248 <__hexdig_fun>
   2136a:	1e43      	subs	r3, r0, #1
   2136c:	b2db      	uxtb	r3, r3
   2136e:	2b18      	cmp	r3, #24
   21370:	d814      	bhi.n	2139c <__gethex+0x12a>
   21372:	f1a0 0210 	sub.w	r2, r0, #16
   21376:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   2137a:	f7ff ff65 	bl	21248 <__hexdig_fun>
   2137e:	1e43      	subs	r3, r0, #1
   21380:	b2db      	uxtb	r3, r3
   21382:	2b18      	cmp	r3, #24
   21384:	d804      	bhi.n	21390 <__gethex+0x11e>
   21386:	230a      	movs	r3, #10
   21388:	fb03 0202 	mla	r2, r3, r2, r0
   2138c:	3a10      	subs	r2, #16
   2138e:	e7f2      	b.n	21376 <__gethex+0x104>
   21390:	f1b9 0f00 	cmp.w	r9, #0
   21394:	d000      	beq.n	21398 <__gethex+0x126>
   21396:	4252      	negs	r2, r2
   21398:	4414      	add	r4, r2
   2139a:	e000      	b.n	2139e <__gethex+0x12c>
   2139c:	4631      	mov	r1, r6
   2139e:	f8ca 1000 	str.w	r1, [sl]
   213a2:	b12d      	cbz	r5, 213b0 <__gethex+0x13e>
   213a4:	f1bb 0f00 	cmp.w	fp, #0
   213a8:	bf14      	ite	ne
   213aa:	2000      	movne	r0, #0
   213ac:	2006      	moveq	r0, #6
   213ae:	e17c      	b.n	216aa <__gethex+0x438>
   213b0:	4629      	mov	r1, r5
   213b2:	1bf3      	subs	r3, r6, r7
   213b4:	3b01      	subs	r3, #1
   213b6:	2b07      	cmp	r3, #7
   213b8:	dd02      	ble.n	213c0 <__gethex+0x14e>
   213ba:	3101      	adds	r1, #1
   213bc:	105b      	asrs	r3, r3, #1
   213be:	e7fa      	b.n	213b6 <__gethex+0x144>
   213c0:	9802      	ldr	r0, [sp, #8]
   213c2:	f000 fb8f 	bl	21ae4 <_Balloc>
   213c6:	f04f 0900 	mov.w	r9, #0
   213ca:	4605      	mov	r5, r0
   213cc:	46cb      	mov	fp, r9
   213ce:	9b01      	ldr	r3, [sp, #4]
   213d0:	f100 0a14 	add.w	sl, r0, #20
   213d4:	f1c3 0301 	rsb	r3, r3, #1
   213d8:	f8cd a010 	str.w	sl, [sp, #16]
   213dc:	9308      	str	r3, [sp, #32]
   213de:	42b7      	cmp	r7, r6
   213e0:	d22f      	bcs.n	21442 <__gethex+0x1d0>
   213e2:	1e73      	subs	r3, r6, #1
   213e4:	9305      	str	r3, [sp, #20]
   213e6:	9a07      	ldr	r2, [sp, #28]
   213e8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   213ec:	4293      	cmp	r3, r2
   213ee:	d00b      	beq.n	21408 <__gethex+0x196>
   213f0:	f1bb 0f20 	cmp.w	fp, #32
   213f4:	d116      	bne.n	21424 <__gethex+0x1b2>
   213f6:	9b04      	ldr	r3, [sp, #16]
   213f8:	f8c3 9000 	str.w	r9, [r3]
   213fc:	3304      	adds	r3, #4
   213fe:	f04f 0900 	mov.w	r9, #0
   21402:	9304      	str	r3, [sp, #16]
   21404:	46cb      	mov	fp, r9
   21406:	e00d      	b.n	21424 <__gethex+0x1b2>
   21408:	9b05      	ldr	r3, [sp, #20]
   2140a:	9a08      	ldr	r2, [sp, #32]
   2140c:	4413      	add	r3, r2
   2140e:	429f      	cmp	r7, r3
   21410:	d8ee      	bhi.n	213f0 <__gethex+0x17e>
   21412:	4618      	mov	r0, r3
   21414:	9a01      	ldr	r2, [sp, #4]
   21416:	9903      	ldr	r1, [sp, #12]
   21418:	9309      	str	r3, [sp, #36]	; 0x24
   2141a:	f7fd fcc9 	bl	1edb0 <strncmp>
   2141e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21420:	b168      	cbz	r0, 2143e <__gethex+0x1cc>
   21422:	e7e5      	b.n	213f0 <__gethex+0x17e>
   21424:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   21428:	f7ff ff0e 	bl	21248 <__hexdig_fun>
   2142c:	f000 000f 	and.w	r0, r0, #15
   21430:	fa00 f00b 	lsl.w	r0, r0, fp
   21434:	9b05      	ldr	r3, [sp, #20]
   21436:	ea49 0900 	orr.w	r9, r9, r0
   2143a:	f10b 0b04 	add.w	fp, fp, #4
   2143e:	461e      	mov	r6, r3
   21440:	e7cd      	b.n	213de <__gethex+0x16c>
   21442:	9804      	ldr	r0, [sp, #16]
   21444:	f840 9b04 	str.w	r9, [r0], #4
   21448:	ebca 0000 	rsb	r0, sl, r0
   2144c:	1080      	asrs	r0, r0, #2
   2144e:	6128      	str	r0, [r5, #16]
   21450:	0147      	lsls	r7, r0, #5
   21452:	4648      	mov	r0, r9
   21454:	f000 fc0b 	bl	21c6e <__hi0bits>
   21458:	f8d8 6000 	ldr.w	r6, [r8]
   2145c:	1a38      	subs	r0, r7, r0
   2145e:	42b0      	cmp	r0, r6
   21460:	dd26      	ble.n	214b0 <__gethex+0x23e>
   21462:	1b87      	subs	r7, r0, r6
   21464:	4639      	mov	r1, r7
   21466:	4628      	mov	r0, r5
   21468:	f000 ff03 	bl	22272 <__any_on>
   2146c:	b1c8      	cbz	r0, 214a2 <__gethex+0x230>
   2146e:	1e7b      	subs	r3, r7, #1
   21470:	1159      	asrs	r1, r3, #5
   21472:	f003 021f 	and.w	r2, r3, #31
   21476:	f04f 0901 	mov.w	r9, #1
   2147a:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
   2147e:	fa09 f202 	lsl.w	r2, r9, r2
   21482:	420a      	tst	r2, r1
   21484:	d00e      	beq.n	214a4 <__gethex+0x232>
   21486:	454b      	cmp	r3, r9
   21488:	dc02      	bgt.n	21490 <__gethex+0x21e>
   2148a:	f04f 0902 	mov.w	r9, #2
   2148e:	e009      	b.n	214a4 <__gethex+0x232>
   21490:	1eb9      	subs	r1, r7, #2
   21492:	4628      	mov	r0, r5
   21494:	f000 feed 	bl	22272 <__any_on>
   21498:	2800      	cmp	r0, #0
   2149a:	d0f6      	beq.n	2148a <__gethex+0x218>
   2149c:	f04f 0903 	mov.w	r9, #3
   214a0:	e000      	b.n	214a4 <__gethex+0x232>
   214a2:	4681      	mov	r9, r0
   214a4:	4639      	mov	r1, r7
   214a6:	4628      	mov	r0, r5
   214a8:	f7ff fe98 	bl	211dc <rshift>
   214ac:	443c      	add	r4, r7
   214ae:	e00c      	b.n	214ca <__gethex+0x258>
   214b0:	da09      	bge.n	214c6 <__gethex+0x254>
   214b2:	1a37      	subs	r7, r6, r0
   214b4:	4629      	mov	r1, r5
   214b6:	463a      	mov	r2, r7
   214b8:	9802      	ldr	r0, [sp, #8]
   214ba:	f000 fd0d 	bl	21ed8 <__lshift>
   214be:	4605      	mov	r5, r0
   214c0:	1be4      	subs	r4, r4, r7
   214c2:	f100 0a14 	add.w	sl, r0, #20
   214c6:	f04f 0900 	mov.w	r9, #0
   214ca:	f8d8 3008 	ldr.w	r3, [r8, #8]
   214ce:	429c      	cmp	r4, r3
   214d0:	dd08      	ble.n	214e4 <__gethex+0x272>
   214d2:	9802      	ldr	r0, [sp, #8]
   214d4:	4629      	mov	r1, r5
   214d6:	f000 fb3a 	bl	21b4e <_Bfree>
   214da:	9a14      	ldr	r2, [sp, #80]	; 0x50
   214dc:	2300      	movs	r3, #0
   214de:	6013      	str	r3, [r2, #0]
   214e0:	20a3      	movs	r0, #163	; 0xa3
   214e2:	e0e2      	b.n	216aa <__gethex+0x438>
   214e4:	f8d8 0004 	ldr.w	r0, [r8, #4]
   214e8:	4284      	cmp	r4, r0
   214ea:	da53      	bge.n	21594 <__gethex+0x322>
   214ec:	1b04      	subs	r4, r0, r4
   214ee:	42a6      	cmp	r6, r4
   214f0:	dc2e      	bgt.n	21550 <__gethex+0x2de>
   214f2:	f8d8 300c 	ldr.w	r3, [r8, #12]
   214f6:	2b02      	cmp	r3, #2
   214f8:	d01a      	beq.n	21530 <__gethex+0x2be>
   214fa:	2b03      	cmp	r3, #3
   214fc:	d01c      	beq.n	21538 <__gethex+0x2c6>
   214fe:	2b01      	cmp	r3, #1
   21500:	d11d      	bne.n	2153e <__gethex+0x2cc>
   21502:	42a6      	cmp	r6, r4
   21504:	d11b      	bne.n	2153e <__gethex+0x2cc>
   21506:	2e01      	cmp	r6, #1
   21508:	dc0b      	bgt.n	21522 <__gethex+0x2b0>
   2150a:	f8d8 3004 	ldr.w	r3, [r8, #4]
   2150e:	9a06      	ldr	r2, [sp, #24]
   21510:	2062      	movs	r0, #98	; 0x62
   21512:	6013      	str	r3, [r2, #0]
   21514:	2301      	movs	r3, #1
   21516:	612b      	str	r3, [r5, #16]
   21518:	f8ca 3000 	str.w	r3, [sl]
   2151c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   2151e:	601d      	str	r5, [r3, #0]
   21520:	e0c3      	b.n	216aa <__gethex+0x438>
   21522:	1e71      	subs	r1, r6, #1
   21524:	4628      	mov	r0, r5
   21526:	f000 fea4 	bl	22272 <__any_on>
   2152a:	2800      	cmp	r0, #0
   2152c:	d1ed      	bne.n	2150a <__gethex+0x298>
   2152e:	e006      	b.n	2153e <__gethex+0x2cc>
   21530:	9b15      	ldr	r3, [sp, #84]	; 0x54
   21532:	2b00      	cmp	r3, #0
   21534:	d0e9      	beq.n	2150a <__gethex+0x298>
   21536:	e002      	b.n	2153e <__gethex+0x2cc>
   21538:	9b15      	ldr	r3, [sp, #84]	; 0x54
   2153a:	2b00      	cmp	r3, #0
   2153c:	d1e5      	bne.n	2150a <__gethex+0x298>
   2153e:	9802      	ldr	r0, [sp, #8]
   21540:	4629      	mov	r1, r5
   21542:	f000 fb04 	bl	21b4e <_Bfree>
   21546:	9a14      	ldr	r2, [sp, #80]	; 0x50
   21548:	2300      	movs	r3, #0
   2154a:	6013      	str	r3, [r2, #0]
   2154c:	2050      	movs	r0, #80	; 0x50
   2154e:	e0ac      	b.n	216aa <__gethex+0x438>
   21550:	1e67      	subs	r7, r4, #1
   21552:	f1b9 0f00 	cmp.w	r9, #0
   21556:	d106      	bne.n	21566 <__gethex+0x2f4>
   21558:	b13f      	cbz	r7, 2156a <__gethex+0x2f8>
   2155a:	4639      	mov	r1, r7
   2155c:	4628      	mov	r0, r5
   2155e:	f000 fe88 	bl	22272 <__any_on>
   21562:	4681      	mov	r9, r0
   21564:	e001      	b.n	2156a <__gethex+0x2f8>
   21566:	f04f 0901 	mov.w	r9, #1
   2156a:	117a      	asrs	r2, r7, #5
   2156c:	2301      	movs	r3, #1
   2156e:	f007 071f 	and.w	r7, r7, #31
   21572:	fa03 f707 	lsl.w	r7, r3, r7
   21576:	f85a 3022 	ldr.w	r3, [sl, r2, lsl #2]
   2157a:	4621      	mov	r1, r4
   2157c:	421f      	tst	r7, r3
   2157e:	4628      	mov	r0, r5
   21580:	bf18      	it	ne
   21582:	f049 0902 	orrne.w	r9, r9, #2
   21586:	1b36      	subs	r6, r6, r4
   21588:	f7ff fe28 	bl	211dc <rshift>
   2158c:	2702      	movs	r7, #2
   2158e:	f8d8 4004 	ldr.w	r4, [r8, #4]
   21592:	e000      	b.n	21596 <__gethex+0x324>
   21594:	2701      	movs	r7, #1
   21596:	f1b9 0f00 	cmp.w	r9, #0
   2159a:	f000 8081 	beq.w	216a0 <__gethex+0x42e>
   2159e:	f8d8 300c 	ldr.w	r3, [r8, #12]
   215a2:	2b02      	cmp	r3, #2
   215a4:	d00e      	beq.n	215c4 <__gethex+0x352>
   215a6:	2b03      	cmp	r3, #3
   215a8:	d010      	beq.n	215cc <__gethex+0x35a>
   215aa:	2b01      	cmp	r3, #1
   215ac:	d176      	bne.n	2169c <__gethex+0x42a>
   215ae:	f019 0f02 	tst.w	r9, #2
   215b2:	d073      	beq.n	2169c <__gethex+0x42a>
   215b4:	f8da 0000 	ldr.w	r0, [sl]
   215b8:	ea49 0900 	orr.w	r9, r9, r0
   215bc:	f019 0f01 	tst.w	r9, #1
   215c0:	d107      	bne.n	215d2 <__gethex+0x360>
   215c2:	e06b      	b.n	2169c <__gethex+0x42a>
   215c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   215c6:	f1c3 0301 	rsb	r3, r3, #1
   215ca:	9315      	str	r3, [sp, #84]	; 0x54
   215cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   215ce:	2b00      	cmp	r3, #0
   215d0:	d064      	beq.n	2169c <__gethex+0x42a>
   215d2:	f8d5 a010 	ldr.w	sl, [r5, #16]
   215d6:	f105 0314 	add.w	r3, r5, #20
   215da:	ea4f 098a 	mov.w	r9, sl, lsl #2
   215de:	eb03 0109 	add.w	r1, r3, r9
   215e2:	2000      	movs	r0, #0
   215e4:	681a      	ldr	r2, [r3, #0]
   215e6:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   215ea:	d002      	beq.n	215f2 <__gethex+0x380>
   215ec:	3201      	adds	r2, #1
   215ee:	601a      	str	r2, [r3, #0]
   215f0:	e020      	b.n	21634 <__gethex+0x3c2>
   215f2:	f843 0b04 	str.w	r0, [r3], #4
   215f6:	4299      	cmp	r1, r3
   215f8:	d8f4      	bhi.n	215e4 <__gethex+0x372>
   215fa:	68ab      	ldr	r3, [r5, #8]
   215fc:	459a      	cmp	sl, r3
   215fe:	db12      	blt.n	21626 <__gethex+0x3b4>
   21600:	6869      	ldr	r1, [r5, #4]
   21602:	9802      	ldr	r0, [sp, #8]
   21604:	3101      	adds	r1, #1
   21606:	f000 fa6d 	bl	21ae4 <_Balloc>
   2160a:	4683      	mov	fp, r0
   2160c:	692a      	ldr	r2, [r5, #16]
   2160e:	f105 010c 	add.w	r1, r5, #12
   21612:	3202      	adds	r2, #2
   21614:	0092      	lsls	r2, r2, #2
   21616:	300c      	adds	r0, #12
   21618:	f7fb fe79 	bl	1d30e <memcpy>
   2161c:	4629      	mov	r1, r5
   2161e:	9802      	ldr	r0, [sp, #8]
   21620:	f000 fa95 	bl	21b4e <_Bfree>
   21624:	465d      	mov	r5, fp
   21626:	692b      	ldr	r3, [r5, #16]
   21628:	1c5a      	adds	r2, r3, #1
   2162a:	612a      	str	r2, [r5, #16]
   2162c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   21630:	2201      	movs	r2, #1
   21632:	615a      	str	r2, [r3, #20]
   21634:	2f02      	cmp	r7, #2
   21636:	f105 0214 	add.w	r2, r5, #20
   2163a:	d111      	bne.n	21660 <__gethex+0x3ee>
   2163c:	f8d8 3000 	ldr.w	r3, [r8]
   21640:	3b01      	subs	r3, #1
   21642:	429e      	cmp	r6, r3
   21644:	d127      	bne.n	21696 <__gethex+0x424>
   21646:	1171      	asrs	r1, r6, #5
   21648:	2301      	movs	r3, #1
   2164a:	f006 061f 	and.w	r6, r6, #31
   2164e:	fa03 f606 	lsl.w	r6, r3, r6
   21652:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   21656:	421e      	tst	r6, r3
   21658:	bf0c      	ite	eq
   2165a:	2702      	moveq	r7, #2
   2165c:	2701      	movne	r7, #1
   2165e:	e01a      	b.n	21696 <__gethex+0x424>
   21660:	692b      	ldr	r3, [r5, #16]
   21662:	459a      	cmp	sl, r3
   21664:	da0a      	bge.n	2167c <__gethex+0x40a>
   21666:	2101      	movs	r1, #1
   21668:	4628      	mov	r0, r5
   2166a:	f7ff fdb7 	bl	211dc <rshift>
   2166e:	f8d8 3008 	ldr.w	r3, [r8, #8]
   21672:	3401      	adds	r4, #1
   21674:	429c      	cmp	r4, r3
   21676:	f73f af2c 	bgt.w	214d2 <__gethex+0x260>
   2167a:	e00b      	b.n	21694 <__gethex+0x422>
   2167c:	f016 061f 	ands.w	r6, r6, #31
   21680:	d008      	beq.n	21694 <__gethex+0x422>
   21682:	4491      	add	r9, r2
   21684:	f859 0c04 	ldr.w	r0, [r9, #-4]
   21688:	f000 faf1 	bl	21c6e <__hi0bits>
   2168c:	f1c6 0620 	rsb	r6, r6, #32
   21690:	42b0      	cmp	r0, r6
   21692:	dbe8      	blt.n	21666 <__gethex+0x3f4>
   21694:	2701      	movs	r7, #1
   21696:	f047 0720 	orr.w	r7, r7, #32
   2169a:	e001      	b.n	216a0 <__gethex+0x42e>
   2169c:	f047 0710 	orr.w	r7, r7, #16
   216a0:	4638      	mov	r0, r7
   216a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   216a4:	601d      	str	r5, [r3, #0]
   216a6:	9b06      	ldr	r3, [sp, #24]
   216a8:	601c      	str	r4, [r3, #0]
   216aa:	b00b      	add	sp, #44	; 0x2c
   216ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000216b0 <L_shift>:
L_shift():
   216b0:	f1c2 0208 	rsb	r2, r2, #8
   216b4:	0092      	lsls	r2, r2, #2
   216b6:	b570      	push	{r4, r5, r6, lr}
   216b8:	f1c2 0620 	rsb	r6, r2, #32
   216bc:	6843      	ldr	r3, [r0, #4]
   216be:	6805      	ldr	r5, [r0, #0]
   216c0:	fa03 f406 	lsl.w	r4, r3, r6
   216c4:	432c      	orrs	r4, r5
   216c6:	40d3      	lsrs	r3, r2
   216c8:	6004      	str	r4, [r0, #0]
   216ca:	f840 3f04 	str.w	r3, [r0, #4]!
   216ce:	4288      	cmp	r0, r1
   216d0:	d3f4      	bcc.n	216bc <L_shift+0xc>
   216d2:	bd70      	pop	{r4, r5, r6, pc}

000216d4 <__match>:
__match():
   216d4:	b530      	push	{r4, r5, lr}
   216d6:	6803      	ldr	r3, [r0, #0]
   216d8:	f811 4b01 	ldrb.w	r4, [r1], #1
   216dc:	3301      	adds	r3, #1
   216de:	b14c      	cbz	r4, 216f4 <__match+0x20>
   216e0:	781a      	ldrb	r2, [r3, #0]
   216e2:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   216e6:	2d19      	cmp	r5, #25
   216e8:	bf98      	it	ls
   216ea:	3220      	addls	r2, #32
   216ec:	42a2      	cmp	r2, r4
   216ee:	d0f3      	beq.n	216d8 <__match+0x4>
   216f0:	2000      	movs	r0, #0
   216f2:	bd30      	pop	{r4, r5, pc}
   216f4:	6003      	str	r3, [r0, #0]
   216f6:	2001      	movs	r0, #1
   216f8:	bd30      	pop	{r4, r5, pc}

000216fa <__hexnan>:
__hexnan():
   216fa:	680b      	ldr	r3, [r1, #0]
   216fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21700:	115e      	asrs	r6, r3, #5
   21702:	eb02 0686 	add.w	r6, r2, r6, lsl #2
   21706:	f013 031f 	ands.w	r3, r3, #31
   2170a:	bf18      	it	ne
   2170c:	3604      	addne	r6, #4
   2170e:	1f35      	subs	r5, r6, #4
   21710:	4617      	mov	r7, r2
   21712:	2200      	movs	r2, #0
   21714:	4682      	mov	sl, r0
   21716:	46a8      	mov	r8, r5
   21718:	462c      	mov	r4, r5
   2171a:	4691      	mov	r9, r2
   2171c:	b085      	sub	sp, #20
   2171e:	f8d0 b000 	ldr.w	fp, [r0]
   21722:	9301      	str	r3, [sp, #4]
   21724:	f846 2c04 	str.w	r2, [r6, #-4]
   21728:	9200      	str	r2, [sp, #0]
   2172a:	f81b 1f01 	ldrb.w	r1, [fp, #1]!
   2172e:	2900      	cmp	r1, #0
   21730:	d03c      	beq.n	217ac <__hexnan+0xb2>
   21732:	4608      	mov	r0, r1
   21734:	9203      	str	r2, [sp, #12]
   21736:	9102      	str	r1, [sp, #8]
   21738:	f7ff fd86 	bl	21248 <__hexdig_fun>
   2173c:	9a03      	ldr	r2, [sp, #12]
   2173e:	bb00      	cbnz	r0, 21782 <__hexnan+0x88>
   21740:	9902      	ldr	r1, [sp, #8]
   21742:	2920      	cmp	r1, #32
   21744:	d816      	bhi.n	21774 <__hexnan+0x7a>
   21746:	9b00      	ldr	r3, [sp, #0]
   21748:	4599      	cmp	r9, r3
   2174a:	ddee      	ble.n	2172a <__hexnan+0x30>
   2174c:	4544      	cmp	r4, r8
   2174e:	d205      	bcs.n	2175c <__hexnan+0x62>
   21750:	2a07      	cmp	r2, #7
   21752:	dc03      	bgt.n	2175c <__hexnan+0x62>
   21754:	4641      	mov	r1, r8
   21756:	4620      	mov	r0, r4
   21758:	f7ff ffaa 	bl	216b0 <L_shift>
   2175c:	42bc      	cmp	r4, r7
   2175e:	d923      	bls.n	217a8 <__hexnan+0xae>
   21760:	2300      	movs	r3, #0
   21762:	f1a4 0804 	sub.w	r8, r4, #4
   21766:	f844 3c04 	str.w	r3, [r4, #-4]
   2176a:	f8cd 9000 	str.w	r9, [sp]
   2176e:	4644      	mov	r4, r8
   21770:	461a      	mov	r2, r3
   21772:	e7da      	b.n	2172a <__hexnan+0x30>
   21774:	2929      	cmp	r1, #41	; 0x29
   21776:	d148      	bne.n	2180a <__hexnan+0x110>
   21778:	f10b 0301 	add.w	r3, fp, #1
   2177c:	f8ca 3000 	str.w	r3, [sl]
   21780:	e014      	b.n	217ac <__hexnan+0xb2>
   21782:	3201      	adds	r2, #1
   21784:	2a08      	cmp	r2, #8
   21786:	f109 0901 	add.w	r9, r9, #1
   2178a:	dd06      	ble.n	2179a <__hexnan+0xa0>
   2178c:	42bc      	cmp	r4, r7
   2178e:	d9cc      	bls.n	2172a <__hexnan+0x30>
   21790:	2300      	movs	r3, #0
   21792:	f844 3c04 	str.w	r3, [r4, #-4]
   21796:	2201      	movs	r2, #1
   21798:	3c04      	subs	r4, #4
   2179a:	6821      	ldr	r1, [r4, #0]
   2179c:	f000 000f 	and.w	r0, r0, #15
   217a0:	ea40 1001 	orr.w	r0, r0, r1, lsl #4
   217a4:	6020      	str	r0, [r4, #0]
   217a6:	e7c0      	b.n	2172a <__hexnan+0x30>
   217a8:	2208      	movs	r2, #8
   217aa:	e7be      	b.n	2172a <__hexnan+0x30>
   217ac:	f1b9 0f00 	cmp.w	r9, #0
   217b0:	d02b      	beq.n	2180a <__hexnan+0x110>
   217b2:	4544      	cmp	r4, r8
   217b4:	d205      	bcs.n	217c2 <__hexnan+0xc8>
   217b6:	2a07      	cmp	r2, #7
   217b8:	dc03      	bgt.n	217c2 <__hexnan+0xc8>
   217ba:	4641      	mov	r1, r8
   217bc:	4620      	mov	r0, r4
   217be:	f7ff ff77 	bl	216b0 <L_shift>
   217c2:	42bc      	cmp	r4, r7
   217c4:	d90c      	bls.n	217e0 <__hexnan+0xe6>
   217c6:	463b      	mov	r3, r7
   217c8:	f854 2b04 	ldr.w	r2, [r4], #4
   217cc:	42a5      	cmp	r5, r4
   217ce:	f843 2b04 	str.w	r2, [r3], #4
   217d2:	d2f9      	bcs.n	217c8 <__hexnan+0xce>
   217d4:	2200      	movs	r2, #0
   217d6:	f843 2b04 	str.w	r2, [r3], #4
   217da:	429d      	cmp	r5, r3
   217dc:	d2fb      	bcs.n	217d6 <__hexnan+0xdc>
   217de:	e00b      	b.n	217f8 <__hexnan+0xfe>
   217e0:	9b01      	ldr	r3, [sp, #4]
   217e2:	b14b      	cbz	r3, 217f8 <__hexnan+0xfe>
   217e4:	f1c3 0220 	rsb	r2, r3, #32
   217e8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   217ec:	40d3      	lsrs	r3, r2
   217ee:	f856 2c04 	ldr.w	r2, [r6, #-4]
   217f2:	4013      	ands	r3, r2
   217f4:	f846 3c04 	str.w	r3, [r6, #-4]
   217f8:	682b      	ldr	r3, [r5, #0]
   217fa:	b943      	cbnz	r3, 2180e <__hexnan+0x114>
   217fc:	42bd      	cmp	r5, r7
   217fe:	d102      	bne.n	21806 <__hexnan+0x10c>
   21800:	2301      	movs	r3, #1
   21802:	602b      	str	r3, [r5, #0]
   21804:	e003      	b.n	2180e <__hexnan+0x114>
   21806:	3d04      	subs	r5, #4
   21808:	e7f6      	b.n	217f8 <__hexnan+0xfe>
   2180a:	2004      	movs	r0, #4
   2180c:	e000      	b.n	21810 <__hexnan+0x116>
   2180e:	2005      	movs	r0, #5
   21810:	b005      	add	sp, #20
   21812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21816:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

00021818 <_findenv_r>:
_findenv_r():
   21818:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2181c:	4607      	mov	r7, r0
   2181e:	468b      	mov	fp, r1
   21820:	4690      	mov	r8, r2
   21822:	f001 fe07 	bl	23434 <__env_lock>
   21826:	4b19      	ldr	r3, [pc, #100]	; (2188c <_findenv_r+0x74>)
   21828:	681d      	ldr	r5, [r3, #0]
   2182a:	469a      	mov	sl, r3
   2182c:	b13d      	cbz	r5, 2183e <_findenv_r+0x26>
   2182e:	465c      	mov	r4, fp
   21830:	4623      	mov	r3, r4
   21832:	f813 2b01 	ldrb.w	r2, [r3], #1
   21836:	b142      	cbz	r2, 2184a <_findenv_r+0x32>
   21838:	2a3d      	cmp	r2, #61	; 0x3d
   2183a:	461c      	mov	r4, r3
   2183c:	d1f8      	bne.n	21830 <_findenv_r+0x18>
   2183e:	4638      	mov	r0, r7
   21840:	f001 fdf9 	bl	23436 <__env_unlock>
   21844:	2000      	movs	r0, #0
   21846:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2184a:	ebcb 0404 	rsb	r4, fp, r4
   2184e:	46a9      	mov	r9, r5
   21850:	f859 0b04 	ldr.w	r0, [r9], #4
   21854:	2800      	cmp	r0, #0
   21856:	d0f2      	beq.n	2183e <_findenv_r+0x26>
   21858:	4622      	mov	r2, r4
   2185a:	4659      	mov	r1, fp
   2185c:	f7fd faa8 	bl	1edb0 <strncmp>
   21860:	b988      	cbnz	r0, 21886 <_findenv_r+0x6e>
   21862:	f859 3c04 	ldr.w	r3, [r9, #-4]
   21866:	191e      	adds	r6, r3, r4
   21868:	5d1b      	ldrb	r3, [r3, r4]
   2186a:	2b3d      	cmp	r3, #61	; 0x3d
   2186c:	d10b      	bne.n	21886 <_findenv_r+0x6e>
   2186e:	f8da 3000 	ldr.w	r3, [sl]
   21872:	4638      	mov	r0, r7
   21874:	1aed      	subs	r5, r5, r3
   21876:	10ad      	asrs	r5, r5, #2
   21878:	f8c8 5000 	str.w	r5, [r8]
   2187c:	f001 fddb 	bl	23436 <__env_unlock>
   21880:	1c70      	adds	r0, r6, #1
   21882:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21886:	464d      	mov	r5, r9
   21888:	e7e1      	b.n	2184e <_findenv_r+0x36>
   2188a:	bf00      	nop
   2188c:	2007c1c4 	.word	0x2007c1c4

00021890 <_getenv_r>:
_getenv_r():
   21890:	b507      	push	{r0, r1, r2, lr}
   21892:	aa01      	add	r2, sp, #4
   21894:	f7ff ffc0 	bl	21818 <_findenv_r>
   21898:	b003      	add	sp, #12
   2189a:	f85d fb04 	ldr.w	pc, [sp], #4
   2189e:	ffff b538 	vsli.32	d27, d24, #31

000218a0 <_gettimeofday_r>:
_gettimeofday_r():
   218a0:	b538      	push	{r3, r4, r5, lr}
   218a2:	4c07      	ldr	r4, [pc, #28]	; (218c0 <_gettimeofday_r+0x20>)
   218a4:	2300      	movs	r3, #0
   218a6:	4605      	mov	r5, r0
   218a8:	4608      	mov	r0, r1
   218aa:	4611      	mov	r1, r2
   218ac:	6023      	str	r3, [r4, #0]
   218ae:	f7ef fdb3 	bl	11418 <_gettimeofday>
   218b2:	1c43      	adds	r3, r0, #1
   218b4:	d102      	bne.n	218bc <_gettimeofday_r+0x1c>
   218b6:	6823      	ldr	r3, [r4, #0]
   218b8:	b103      	cbz	r3, 218bc <_gettimeofday_r+0x1c>
   218ba:	602b      	str	r3, [r5, #0]
   218bc:	bd38      	pop	{r3, r4, r5, pc}
   218be:	bf00      	nop
   218c0:	2007c790 	.word	0x2007c790

000218c4 <__gettzinfo>:
__gettzinfo():
   218c4:	4800      	ldr	r0, [pc, #0]	; (218c8 <__gettzinfo+0x4>)
   218c6:	4770      	bx	lr
   218c8:	2007c14c 	.word	0x2007c14c

000218cc <gmtime_r>:
gmtime_r():
   218cc:	6802      	ldr	r2, [r0, #0]
   218ce:	4b46      	ldr	r3, [pc, #280]	; (219e8 <gmtime_r+0x11c>)
   218d0:	b5f0      	push	{r4, r5, r6, r7, lr}
   218d2:	fb92 f4f3 	sdiv	r4, r2, r3
   218d6:	fb03 2214 	mls	r2, r3, r4, r2
   218da:	2a00      	cmp	r2, #0
   218dc:	bfbc      	itt	lt
   218de:	f502 32a8 	addlt.w	r2, r2, #86016	; 0x15000
   218e2:	f502 72c0 	addlt.w	r2, r2, #384	; 0x180
   218e6:	f44f 6061 	mov.w	r0, #3600	; 0xe10
   218ea:	fb92 f3f0 	sdiv	r3, r2, r0
   218ee:	fb00 2213 	mls	r2, r0, r3, r2
   218f2:	f04f 003c 	mov.w	r0, #60	; 0x3c
   218f6:	608b      	str	r3, [r1, #8]
   218f8:	fb92 f3f0 	sdiv	r3, r2, r0
   218fc:	fb00 2213 	mls	r2, r0, r3, r2
   21900:	f504 242f 	add.w	r4, r4, #716800	; 0xaf000
   21904:	bfac      	ite	ge
   21906:	f604 246c 	addwge	r4, r4, #2668	; 0xa6c
   2190a:	f604 246b 	addwlt	r4, r4, #2667	; 0xa6b
   2190e:	604b      	str	r3, [r1, #4]
   21910:	600a      	str	r2, [r1, #0]
   21912:	2307      	movs	r3, #7
   21914:	1ce2      	adds	r2, r4, #3
   21916:	fb92 f3f3 	sdiv	r3, r2, r3
   2191a:	4d34      	ldr	r5, [pc, #208]	; (219ec <gmtime_r+0x120>)
   2191c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   21920:	fb94 f5f5 	sdiv	r5, r4, r5
   21924:	1ad3      	subs	r3, r2, r3
   21926:	f648 62ac 	movw	r2, #36524	; 0x8eac
   2192a:	f240 57b4 	movw	r7, #1460	; 0x5b4
   2192e:	618b      	str	r3, [r1, #24]
   21930:	4b2f      	ldr	r3, [pc, #188]	; (219f0 <gmtime_r+0x124>)
   21932:	4830      	ldr	r0, [pc, #192]	; (219f4 <gmtime_r+0x128>)
   21934:	fb03 4405 	mla	r4, r3, r5, r4
   21938:	fbb4 f2f2 	udiv	r2, r4, r2
   2193c:	fbb4 f3f7 	udiv	r3, r4, r7
   21940:	fbb4 f0f0 	udiv	r0, r4, r0
   21944:	4422      	add	r2, r4
   21946:	1ad2      	subs	r2, r2, r3
   21948:	f648 6694 	movw	r6, #36500	; 0x8e94
   2194c:	1a13      	subs	r3, r2, r0
   2194e:	f240 126d 	movw	r2, #365	; 0x16d
   21952:	fbb3 f6f6 	udiv	r6, r3, r6
   21956:	fbb3 f0f2 	udiv	r0, r3, r2
   2195a:	fbb3 f3f7 	udiv	r3, r3, r7
   2195e:	4434      	add	r4, r6
   21960:	1ae3      	subs	r3, r4, r3
   21962:	fb02 3310 	mls	r3, r2, r0, r3
   21966:	eb03 0283 	add.w	r2, r3, r3, lsl #2
   2196a:	2499      	movs	r4, #153	; 0x99
   2196c:	3202      	adds	r2, #2
   2196e:	fbb2 f2f4 	udiv	r2, r2, r4
   21972:	4354      	muls	r4, r2
   21974:	1ca6      	adds	r6, r4, #2
   21976:	2405      	movs	r4, #5
   21978:	fbb6 f4f4 	udiv	r4, r6, r4
   2197c:	2a0a      	cmp	r2, #10
   2197e:	bf34      	ite	cc
   21980:	2602      	movcc	r6, #2
   21982:	f06f 0609 	mvncs.w	r6, #9
   21986:	4416      	add	r6, r2
   21988:	f44f 72c8 	mov.w	r2, #400	; 0x190
   2198c:	fb02 0505 	mla	r5, r2, r5, r0
   21990:	1c5f      	adds	r7, r3, #1
   21992:	2e01      	cmp	r6, #1
   21994:	bf98      	it	ls
   21996:	3501      	addls	r5, #1
   21998:	f5b3 7f99 	cmp.w	r3, #306	; 0x132
   2199c:	eba7 0704 	sub.w	r7, r7, r4
   219a0:	d302      	bcc.n	219a8 <gmtime_r+0xdc>
   219a2:	f5a3 7299 	sub.w	r2, r3, #306	; 0x132
   219a6:	e014      	b.n	219d2 <gmtime_r+0x106>
   219a8:	0782      	lsls	r2, r0, #30
   219aa:	d105      	bne.n	219b8 <gmtime_r+0xec>
   219ac:	2464      	movs	r4, #100	; 0x64
   219ae:	fbb0 f2f4 	udiv	r2, r0, r4
   219b2:	fb04 0212 	mls	r2, r4, r2, r0
   219b6:	b94a      	cbnz	r2, 219cc <gmtime_r+0x100>
   219b8:	f44f 72c8 	mov.w	r2, #400	; 0x190
   219bc:	fbb0 f4f2 	udiv	r4, r0, r2
   219c0:	fb02 0014 	mls	r0, r2, r4, r0
   219c4:	fab0 f280 	clz	r2, r0
   219c8:	0952      	lsrs	r2, r2, #5
   219ca:	e000      	b.n	219ce <gmtime_r+0x102>
   219cc:	2201      	movs	r2, #1
   219ce:	333b      	adds	r3, #59	; 0x3b
   219d0:	441a      	add	r2, r3
   219d2:	f2a5 756c 	subw	r5, r5, #1900	; 0x76c
   219d6:	2300      	movs	r3, #0
   219d8:	61ca      	str	r2, [r1, #28]
   219da:	614d      	str	r5, [r1, #20]
   219dc:	610e      	str	r6, [r1, #16]
   219de:	60cf      	str	r7, [r1, #12]
   219e0:	620b      	str	r3, [r1, #32]
   219e2:	4608      	mov	r0, r1
   219e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   219e6:	bf00      	nop
   219e8:	00015180 	.word	0x00015180
   219ec:	00023ab1 	.word	0x00023ab1
   219f0:	fffdc54f 	.word	0xfffdc54f
   219f4:	00023ab0 	.word	0x00023ab0

000219f8 <_localeconv_r>:
_localeconv_r():
   219f8:	4800      	ldr	r0, [pc, #0]	; (219fc <_localeconv_r+0x4>)
   219fa:	4770      	bx	lr
   219fc:	2007c18c 	.word	0x2007c18c

00021a00 <_lseek_r>:
_lseek_r():
   21a00:	b538      	push	{r3, r4, r5, lr}
   21a02:	4c07      	ldr	r4, [pc, #28]	; (21a20 <_lseek_r+0x20>)
   21a04:	4605      	mov	r5, r0
   21a06:	4608      	mov	r0, r1
   21a08:	4611      	mov	r1, r2
   21a0a:	2200      	movs	r2, #0
   21a0c:	6022      	str	r2, [r4, #0]
   21a0e:	461a      	mov	r2, r3
   21a10:	f7ef fda0 	bl	11554 <_lseek>
   21a14:	1c43      	adds	r3, r0, #1
   21a16:	d102      	bne.n	21a1e <_lseek_r+0x1e>
   21a18:	6823      	ldr	r3, [r4, #0]
   21a1a:	b103      	cbz	r3, 21a1e <_lseek_r+0x1e>
   21a1c:	602b      	str	r3, [r5, #0]
   21a1e:	bd38      	pop	{r3, r4, r5, pc}
   21a20:	2007c790 	.word	0x2007c790

00021a24 <__swhatbuf_r>:
__swhatbuf_r():
   21a24:	b570      	push	{r4, r5, r6, lr}
   21a26:	460e      	mov	r6, r1
   21a28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   21a2c:	b090      	sub	sp, #64	; 0x40
   21a2e:	2900      	cmp	r1, #0
   21a30:	4614      	mov	r4, r2
   21a32:	461d      	mov	r5, r3
   21a34:	da06      	bge.n	21a44 <__swhatbuf_r+0x20>
   21a36:	2300      	movs	r3, #0
   21a38:	602b      	str	r3, [r5, #0]
   21a3a:	89b3      	ldrh	r3, [r6, #12]
   21a3c:	061a      	lsls	r2, r3, #24
   21a3e:	d50e      	bpl.n	21a5e <__swhatbuf_r+0x3a>
   21a40:	2340      	movs	r3, #64	; 0x40
   21a42:	e00e      	b.n	21a62 <__swhatbuf_r+0x3e>
   21a44:	aa01      	add	r2, sp, #4
   21a46:	f001 fcf7 	bl	23438 <_fstat_r>
   21a4a:	2800      	cmp	r0, #0
   21a4c:	dbf3      	blt.n	21a36 <__swhatbuf_r+0x12>
   21a4e:	9a02      	ldr	r2, [sp, #8]
   21a50:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   21a54:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   21a58:	425a      	negs	r2, r3
   21a5a:	415a      	adcs	r2, r3
   21a5c:	602a      	str	r2, [r5, #0]
   21a5e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   21a62:	2000      	movs	r0, #0
   21a64:	6023      	str	r3, [r4, #0]
   21a66:	b010      	add	sp, #64	; 0x40
   21a68:	bd70      	pop	{r4, r5, r6, pc}
   21a6a:	ffff 898b 	vtbl.8	d24, {d31-<overflow reg d32}, d11

00021a6c <__smakebuf_r>:
__smakebuf_r():
   21a6c:	898b      	ldrh	r3, [r1, #12]
   21a6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
   21a70:	079e      	lsls	r6, r3, #30
   21a72:	4605      	mov	r5, r0
   21a74:	460c      	mov	r4, r1
   21a76:	d410      	bmi.n	21a9a <__smakebuf_r+0x2e>
   21a78:	ab01      	add	r3, sp, #4
   21a7a:	466a      	mov	r2, sp
   21a7c:	f7ff ffd2 	bl	21a24 <__swhatbuf_r>
   21a80:	9900      	ldr	r1, [sp, #0]
   21a82:	4606      	mov	r6, r0
   21a84:	4628      	mov	r0, r5
   21a86:	f7fb ff47 	bl	1d918 <_malloc_r>
   21a8a:	b968      	cbnz	r0, 21aa8 <__smakebuf_r+0x3c>
   21a8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   21a90:	059a      	lsls	r2, r3, #22
   21a92:	d422      	bmi.n	21ada <__smakebuf_r+0x6e>
   21a94:	f043 0302 	orr.w	r3, r3, #2
   21a98:	81a3      	strh	r3, [r4, #12]
   21a9a:	f104 0347 	add.w	r3, r4, #71	; 0x47
   21a9e:	6023      	str	r3, [r4, #0]
   21aa0:	6123      	str	r3, [r4, #16]
   21aa2:	2301      	movs	r3, #1
   21aa4:	6163      	str	r3, [r4, #20]
   21aa6:	e018      	b.n	21ada <__smakebuf_r+0x6e>
   21aa8:	4b0d      	ldr	r3, [pc, #52]	; (21ae0 <__smakebuf_r+0x74>)
   21aaa:	62ab      	str	r3, [r5, #40]	; 0x28
   21aac:	89a3      	ldrh	r3, [r4, #12]
   21aae:	6020      	str	r0, [r4, #0]
   21ab0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   21ab4:	81a3      	strh	r3, [r4, #12]
   21ab6:	9b00      	ldr	r3, [sp, #0]
   21ab8:	6120      	str	r0, [r4, #16]
   21aba:	6163      	str	r3, [r4, #20]
   21abc:	9b01      	ldr	r3, [sp, #4]
   21abe:	b14b      	cbz	r3, 21ad4 <__smakebuf_r+0x68>
   21ac0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   21ac4:	4628      	mov	r0, r5
   21ac6:	f001 fcc9 	bl	2345c <_isatty_r>
   21aca:	b118      	cbz	r0, 21ad4 <__smakebuf_r+0x68>
   21acc:	89a3      	ldrh	r3, [r4, #12]
   21ace:	f043 0301 	orr.w	r3, r3, #1
   21ad2:	81a3      	strh	r3, [r4, #12]
   21ad4:	89a0      	ldrh	r0, [r4, #12]
   21ad6:	4330      	orrs	r0, r6
   21ad8:	81a0      	strh	r0, [r4, #12]
   21ada:	b002      	add	sp, #8
   21adc:	bd70      	pop	{r4, r5, r6, pc}
   21ade:	bf00      	nop
   21ae0:	0001cead 	.word	0x0001cead

00021ae4 <_Balloc>:
_Balloc():
   21ae4:	b570      	push	{r4, r5, r6, lr}
   21ae6:	6a45      	ldr	r5, [r0, #36]	; 0x24
   21ae8:	4604      	mov	r4, r0
   21aea:	460e      	mov	r6, r1
   21aec:	b93d      	cbnz	r5, 21afe <_Balloc+0x1a>
   21aee:	2010      	movs	r0, #16
   21af0:	f7fb fbe0 	bl	1d2b4 <malloc>
   21af4:	6260      	str	r0, [r4, #36]	; 0x24
   21af6:	6045      	str	r5, [r0, #4]
   21af8:	6085      	str	r5, [r0, #8]
   21afa:	6005      	str	r5, [r0, #0]
   21afc:	60c5      	str	r5, [r0, #12]
   21afe:	6a65      	ldr	r5, [r4, #36]	; 0x24
   21b00:	68eb      	ldr	r3, [r5, #12]
   21b02:	b143      	cbz	r3, 21b16 <_Balloc+0x32>
   21b04:	6a63      	ldr	r3, [r4, #36]	; 0x24
   21b06:	68db      	ldr	r3, [r3, #12]
   21b08:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   21b0c:	b178      	cbz	r0, 21b2e <_Balloc+0x4a>
   21b0e:	6802      	ldr	r2, [r0, #0]
   21b10:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   21b14:	e017      	b.n	21b46 <_Balloc+0x62>
   21b16:	2221      	movs	r2, #33	; 0x21
   21b18:	2104      	movs	r1, #4
   21b1a:	4620      	mov	r0, r4
   21b1c:	f000 fbcb 	bl	222b6 <_calloc_r>
   21b20:	6a63      	ldr	r3, [r4, #36]	; 0x24
   21b22:	60e8      	str	r0, [r5, #12]
   21b24:	68db      	ldr	r3, [r3, #12]
   21b26:	2b00      	cmp	r3, #0
   21b28:	d1ec      	bne.n	21b04 <_Balloc+0x20>
   21b2a:	2000      	movs	r0, #0
   21b2c:	bd70      	pop	{r4, r5, r6, pc}
   21b2e:	2101      	movs	r1, #1
   21b30:	fa01 f506 	lsl.w	r5, r1, r6
   21b34:	1d6a      	adds	r2, r5, #5
   21b36:	0092      	lsls	r2, r2, #2
   21b38:	4620      	mov	r0, r4
   21b3a:	f000 fbbc 	bl	222b6 <_calloc_r>
   21b3e:	2800      	cmp	r0, #0
   21b40:	d0f3      	beq.n	21b2a <_Balloc+0x46>
   21b42:	6046      	str	r6, [r0, #4]
   21b44:	6085      	str	r5, [r0, #8]
   21b46:	2300      	movs	r3, #0
   21b48:	6103      	str	r3, [r0, #16]
   21b4a:	60c3      	str	r3, [r0, #12]
   21b4c:	bd70      	pop	{r4, r5, r6, pc}

00021b4e <_Bfree>:
_Bfree():
   21b4e:	b570      	push	{r4, r5, r6, lr}
   21b50:	6a44      	ldr	r4, [r0, #36]	; 0x24
   21b52:	4606      	mov	r6, r0
   21b54:	460d      	mov	r5, r1
   21b56:	b93c      	cbnz	r4, 21b68 <_Bfree+0x1a>
   21b58:	2010      	movs	r0, #16
   21b5a:	f7fb fbab 	bl	1d2b4 <malloc>
   21b5e:	6270      	str	r0, [r6, #36]	; 0x24
   21b60:	6044      	str	r4, [r0, #4]
   21b62:	6084      	str	r4, [r0, #8]
   21b64:	6004      	str	r4, [r0, #0]
   21b66:	60c4      	str	r4, [r0, #12]
   21b68:	b13d      	cbz	r5, 21b7a <_Bfree+0x2c>
   21b6a:	6a73      	ldr	r3, [r6, #36]	; 0x24
   21b6c:	686a      	ldr	r2, [r5, #4]
   21b6e:	68db      	ldr	r3, [r3, #12]
   21b70:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   21b74:	6029      	str	r1, [r5, #0]
   21b76:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   21b7a:	bd70      	pop	{r4, r5, r6, pc}

00021b7c <__multadd>:
__multadd():
   21b7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   21b80:	4606      	mov	r6, r0
   21b82:	460c      	mov	r4, r1
   21b84:	690d      	ldr	r5, [r1, #16]
   21b86:	461f      	mov	r7, r3
   21b88:	f101 0e14 	add.w	lr, r1, #20
   21b8c:	2300      	movs	r3, #0
   21b8e:	f8de 0000 	ldr.w	r0, [lr]
   21b92:	3301      	adds	r3, #1
   21b94:	b281      	uxth	r1, r0
   21b96:	fb02 7101 	mla	r1, r2, r1, r7
   21b9a:	0c00      	lsrs	r0, r0, #16
   21b9c:	0c0f      	lsrs	r7, r1, #16
   21b9e:	fb02 7000 	mla	r0, r2, r0, r7
   21ba2:	b289      	uxth	r1, r1
   21ba4:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   21ba8:	429d      	cmp	r5, r3
   21baa:	ea4f 4710 	mov.w	r7, r0, lsr #16
   21bae:	f84e 1b04 	str.w	r1, [lr], #4
   21bb2:	dcec      	bgt.n	21b8e <__multadd+0x12>
   21bb4:	b1d7      	cbz	r7, 21bec <__multadd+0x70>
   21bb6:	68a3      	ldr	r3, [r4, #8]
   21bb8:	429d      	cmp	r5, r3
   21bba:	db12      	blt.n	21be2 <__multadd+0x66>
   21bbc:	6861      	ldr	r1, [r4, #4]
   21bbe:	4630      	mov	r0, r6
   21bc0:	3101      	adds	r1, #1
   21bc2:	f7ff ff8f 	bl	21ae4 <_Balloc>
   21bc6:	4680      	mov	r8, r0
   21bc8:	6922      	ldr	r2, [r4, #16]
   21bca:	f104 010c 	add.w	r1, r4, #12
   21bce:	3202      	adds	r2, #2
   21bd0:	0092      	lsls	r2, r2, #2
   21bd2:	300c      	adds	r0, #12
   21bd4:	f7fb fb9b 	bl	1d30e <memcpy>
   21bd8:	4621      	mov	r1, r4
   21bda:	4630      	mov	r0, r6
   21bdc:	f7ff ffb7 	bl	21b4e <_Bfree>
   21be0:	4644      	mov	r4, r8
   21be2:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   21be6:	3501      	adds	r5, #1
   21be8:	615f      	str	r7, [r3, #20]
   21bea:	6125      	str	r5, [r4, #16]
   21bec:	4620      	mov	r0, r4
   21bee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00021bf2 <__s2b>:
__s2b():
   21bf2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   21bf6:	4606      	mov	r6, r0
   21bf8:	4615      	mov	r5, r2
   21bfa:	461f      	mov	r7, r3
   21bfc:	2209      	movs	r2, #9
   21bfe:	3308      	adds	r3, #8
   21c00:	460c      	mov	r4, r1
   21c02:	fb93 f3f2 	sdiv	r3, r3, r2
   21c06:	2100      	movs	r1, #0
   21c08:	2201      	movs	r2, #1
   21c0a:	429a      	cmp	r2, r3
   21c0c:	da02      	bge.n	21c14 <__s2b+0x22>
   21c0e:	0052      	lsls	r2, r2, #1
   21c10:	3101      	adds	r1, #1
   21c12:	e7fa      	b.n	21c0a <__s2b+0x18>
   21c14:	4630      	mov	r0, r6
   21c16:	f7ff ff65 	bl	21ae4 <_Balloc>
   21c1a:	9b08      	ldr	r3, [sp, #32]
   21c1c:	2d09      	cmp	r5, #9
   21c1e:	6143      	str	r3, [r0, #20]
   21c20:	f04f 0301 	mov.w	r3, #1
   21c24:	6103      	str	r3, [r0, #16]
   21c26:	dd11      	ble.n	21c4c <__s2b+0x5a>
   21c28:	f104 0809 	add.w	r8, r4, #9
   21c2c:	46c1      	mov	r9, r8
   21c2e:	442c      	add	r4, r5
   21c30:	f819 3b01 	ldrb.w	r3, [r9], #1
   21c34:	4601      	mov	r1, r0
   21c36:	3b30      	subs	r3, #48	; 0x30
   21c38:	220a      	movs	r2, #10
   21c3a:	4630      	mov	r0, r6
   21c3c:	f7ff ff9e 	bl	21b7c <__multadd>
   21c40:	45a1      	cmp	r9, r4
   21c42:	d1f5      	bne.n	21c30 <__s2b+0x3e>
   21c44:	eb08 0405 	add.w	r4, r8, r5
   21c48:	3c08      	subs	r4, #8
   21c4a:	e001      	b.n	21c50 <__s2b+0x5e>
   21c4c:	340a      	adds	r4, #10
   21c4e:	2509      	movs	r5, #9
   21c50:	1b2d      	subs	r5, r5, r4
   21c52:	1963      	adds	r3, r4, r5
   21c54:	429f      	cmp	r7, r3
   21c56:	dd08      	ble.n	21c6a <__s2b+0x78>
   21c58:	f814 3b01 	ldrb.w	r3, [r4], #1
   21c5c:	4601      	mov	r1, r0
   21c5e:	3b30      	subs	r3, #48	; 0x30
   21c60:	220a      	movs	r2, #10
   21c62:	4630      	mov	r0, r6
   21c64:	f7ff ff8a 	bl	21b7c <__multadd>
   21c68:	e7f3      	b.n	21c52 <__s2b+0x60>
   21c6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00021c6e <__hi0bits>:
__hi0bits():
   21c6e:	0c03      	lsrs	r3, r0, #16
   21c70:	041b      	lsls	r3, r3, #16
   21c72:	b913      	cbnz	r3, 21c7a <__hi0bits+0xc>
   21c74:	0400      	lsls	r0, r0, #16
   21c76:	2310      	movs	r3, #16
   21c78:	e000      	b.n	21c7c <__hi0bits+0xe>
   21c7a:	2300      	movs	r3, #0
   21c7c:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   21c80:	bf04      	itt	eq
   21c82:	0200      	lsleq	r0, r0, #8
   21c84:	3308      	addeq	r3, #8
   21c86:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   21c8a:	bf04      	itt	eq
   21c8c:	0100      	lsleq	r0, r0, #4
   21c8e:	3304      	addeq	r3, #4
   21c90:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   21c94:	bf04      	itt	eq
   21c96:	0080      	lsleq	r0, r0, #2
   21c98:	3302      	addeq	r3, #2
   21c9a:	2800      	cmp	r0, #0
   21c9c:	db03      	blt.n	21ca6 <__hi0bits+0x38>
   21c9e:	0042      	lsls	r2, r0, #1
   21ca0:	d503      	bpl.n	21caa <__hi0bits+0x3c>
   21ca2:	1c58      	adds	r0, r3, #1
   21ca4:	4770      	bx	lr
   21ca6:	4618      	mov	r0, r3
   21ca8:	4770      	bx	lr
   21caa:	2020      	movs	r0, #32
   21cac:	4770      	bx	lr

00021cae <__lo0bits>:
__lo0bits():
   21cae:	6803      	ldr	r3, [r0, #0]
   21cb0:	f013 0207 	ands.w	r2, r3, #7
   21cb4:	d00b      	beq.n	21cce <__lo0bits+0x20>
   21cb6:	07d9      	lsls	r1, r3, #31
   21cb8:	d422      	bmi.n	21d00 <__lo0bits+0x52>
   21cba:	079a      	lsls	r2, r3, #30
   21cbc:	bf4b      	itete	mi
   21cbe:	085b      	lsrmi	r3, r3, #1
   21cc0:	089b      	lsrpl	r3, r3, #2
   21cc2:	6003      	strmi	r3, [r0, #0]
   21cc4:	6003      	strpl	r3, [r0, #0]
   21cc6:	bf4c      	ite	mi
   21cc8:	2001      	movmi	r0, #1
   21cca:	2002      	movpl	r0, #2
   21ccc:	4770      	bx	lr
   21cce:	b299      	uxth	r1, r3
   21cd0:	b909      	cbnz	r1, 21cd6 <__lo0bits+0x28>
   21cd2:	0c1b      	lsrs	r3, r3, #16
   21cd4:	2210      	movs	r2, #16
   21cd6:	f013 0fff 	tst.w	r3, #255	; 0xff
   21cda:	bf04      	itt	eq
   21cdc:	0a1b      	lsreq	r3, r3, #8
   21cde:	3208      	addeq	r2, #8
   21ce0:	0719      	lsls	r1, r3, #28
   21ce2:	bf04      	itt	eq
   21ce4:	091b      	lsreq	r3, r3, #4
   21ce6:	3204      	addeq	r2, #4
   21ce8:	0799      	lsls	r1, r3, #30
   21cea:	bf04      	itt	eq
   21cec:	089b      	lsreq	r3, r3, #2
   21cee:	3202      	addeq	r2, #2
   21cf0:	07d9      	lsls	r1, r3, #31
   21cf2:	d402      	bmi.n	21cfa <__lo0bits+0x4c>
   21cf4:	085b      	lsrs	r3, r3, #1
   21cf6:	d005      	beq.n	21d04 <__lo0bits+0x56>
   21cf8:	3201      	adds	r2, #1
   21cfa:	6003      	str	r3, [r0, #0]
   21cfc:	4610      	mov	r0, r2
   21cfe:	4770      	bx	lr
   21d00:	2000      	movs	r0, #0
   21d02:	4770      	bx	lr
   21d04:	2020      	movs	r0, #32
   21d06:	4770      	bx	lr

00021d08 <__i2b>:
__i2b():
   21d08:	b510      	push	{r4, lr}
   21d0a:	460c      	mov	r4, r1
   21d0c:	2101      	movs	r1, #1
   21d0e:	f7ff fee9 	bl	21ae4 <_Balloc>
   21d12:	2201      	movs	r2, #1
   21d14:	6144      	str	r4, [r0, #20]
   21d16:	6102      	str	r2, [r0, #16]
   21d18:	bd10      	pop	{r4, pc}

00021d1a <__multiply>:
__multiply():
   21d1a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d1e:	4614      	mov	r4, r2
   21d20:	690a      	ldr	r2, [r1, #16]
   21d22:	6923      	ldr	r3, [r4, #16]
   21d24:	4688      	mov	r8, r1
   21d26:	429a      	cmp	r2, r3
   21d28:	bfbe      	ittt	lt
   21d2a:	460b      	movlt	r3, r1
   21d2c:	46a0      	movlt	r8, r4
   21d2e:	461c      	movlt	r4, r3
   21d30:	f8d8 7010 	ldr.w	r7, [r8, #16]
   21d34:	f8d4 9010 	ldr.w	r9, [r4, #16]
   21d38:	f8d8 3008 	ldr.w	r3, [r8, #8]
   21d3c:	f8d8 1004 	ldr.w	r1, [r8, #4]
   21d40:	eb07 0609 	add.w	r6, r7, r9
   21d44:	429e      	cmp	r6, r3
   21d46:	bfc8      	it	gt
   21d48:	3101      	addgt	r1, #1
   21d4a:	f7ff fecb 	bl	21ae4 <_Balloc>
   21d4e:	f100 0514 	add.w	r5, r0, #20
   21d52:	462b      	mov	r3, r5
   21d54:	eb05 0c86 	add.w	ip, r5, r6, lsl #2
   21d58:	2200      	movs	r2, #0
   21d5a:	4563      	cmp	r3, ip
   21d5c:	d202      	bcs.n	21d64 <__multiply+0x4a>
   21d5e:	f843 2b04 	str.w	r2, [r3], #4
   21d62:	e7fa      	b.n	21d5a <__multiply+0x40>
   21d64:	f104 0214 	add.w	r2, r4, #20
   21d68:	f108 0114 	add.w	r1, r8, #20
   21d6c:	eb02 0389 	add.w	r3, r2, r9, lsl #2
   21d70:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   21d74:	9300      	str	r3, [sp, #0]
   21d76:	9b00      	ldr	r3, [sp, #0]
   21d78:	9201      	str	r2, [sp, #4]
   21d7a:	4293      	cmp	r3, r2
   21d7c:	d957      	bls.n	21e2e <__multiply+0x114>
   21d7e:	f8b2 b000 	ldrh.w	fp, [r2]
   21d82:	f1bb 0f00 	cmp.w	fp, #0
   21d86:	d023      	beq.n	21dd0 <__multiply+0xb6>
   21d88:	4689      	mov	r9, r1
   21d8a:	46ae      	mov	lr, r5
   21d8c:	f04f 0800 	mov.w	r8, #0
   21d90:	f859 4b04 	ldr.w	r4, [r9], #4
   21d94:	f8be a000 	ldrh.w	sl, [lr]
   21d98:	b2a3      	uxth	r3, r4
   21d9a:	fb0b a303 	mla	r3, fp, r3, sl
   21d9e:	ea4f 4a14 	mov.w	sl, r4, lsr #16
   21da2:	f8de 4000 	ldr.w	r4, [lr]
   21da6:	4443      	add	r3, r8
   21da8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   21dac:	fb0b 840a 	mla	r4, fp, sl, r8
   21db0:	46f2      	mov	sl, lr
   21db2:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   21db6:	b29b      	uxth	r3, r3
   21db8:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   21dbc:	454f      	cmp	r7, r9
   21dbe:	ea4f 4814 	mov.w	r8, r4, lsr #16
   21dc2:	f84a 3b04 	str.w	r3, [sl], #4
   21dc6:	d901      	bls.n	21dcc <__multiply+0xb2>
   21dc8:	46d6      	mov	lr, sl
   21dca:	e7e1      	b.n	21d90 <__multiply+0x76>
   21dcc:	f8ce 8004 	str.w	r8, [lr, #4]
   21dd0:	9b01      	ldr	r3, [sp, #4]
   21dd2:	3204      	adds	r2, #4
   21dd4:	f8b3 a002 	ldrh.w	sl, [r3, #2]
   21dd8:	f1ba 0f00 	cmp.w	sl, #0
   21ddc:	d021      	beq.n	21e22 <__multiply+0x108>
   21dde:	462c      	mov	r4, r5
   21de0:	4689      	mov	r9, r1
   21de2:	682b      	ldr	r3, [r5, #0]
   21de4:	f04f 0800 	mov.w	r8, #0
   21de8:	f8b9 e000 	ldrh.w	lr, [r9]
   21dec:	f8b4 b002 	ldrh.w	fp, [r4, #2]
   21df0:	b29b      	uxth	r3, r3
   21df2:	fb0a be0e 	mla	lr, sl, lr, fp
   21df6:	46a3      	mov	fp, r4
   21df8:	44f0      	add	r8, lr
   21dfa:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   21dfe:	f84b 3b04 	str.w	r3, [fp], #4
   21e02:	f859 3b04 	ldr.w	r3, [r9], #4
   21e06:	f8b4 e004 	ldrh.w	lr, [r4, #4]
   21e0a:	0c1b      	lsrs	r3, r3, #16
   21e0c:	fb0a e303 	mla	r3, sl, r3, lr
   21e10:	454f      	cmp	r7, r9
   21e12:	eb03 4318 	add.w	r3, r3, r8, lsr #16
   21e16:	ea4f 4813 	mov.w	r8, r3, lsr #16
   21e1a:	d901      	bls.n	21e20 <__multiply+0x106>
   21e1c:	465c      	mov	r4, fp
   21e1e:	e7e3      	b.n	21de8 <__multiply+0xce>
   21e20:	6063      	str	r3, [r4, #4]
   21e22:	3504      	adds	r5, #4
   21e24:	e7a7      	b.n	21d76 <__multiply+0x5c>
   21e26:	f85c 3d04 	ldr.w	r3, [ip, #-4]!
   21e2a:	b913      	cbnz	r3, 21e32 <__multiply+0x118>
   21e2c:	3e01      	subs	r6, #1
   21e2e:	2e00      	cmp	r6, #0
   21e30:	dcf9      	bgt.n	21e26 <__multiply+0x10c>
   21e32:	6106      	str	r6, [r0, #16]
   21e34:	b003      	add	sp, #12
   21e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e3a:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

00021e3c <__pow5mult>:
__pow5mult():
   21e3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   21e40:	4615      	mov	r5, r2
   21e42:	f012 0203 	ands.w	r2, r2, #3
   21e46:	4606      	mov	r6, r0
   21e48:	460f      	mov	r7, r1
   21e4a:	d007      	beq.n	21e5c <__pow5mult+0x20>
   21e4c:	4c21      	ldr	r4, [pc, #132]	; (21ed4 <__pow5mult+0x98>)
   21e4e:	3a01      	subs	r2, #1
   21e50:	2300      	movs	r3, #0
   21e52:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   21e56:	f7ff fe91 	bl	21b7c <__multadd>
   21e5a:	4607      	mov	r7, r0
   21e5c:	10ad      	asrs	r5, r5, #2
   21e5e:	d036      	beq.n	21ece <__pow5mult+0x92>
   21e60:	6a74      	ldr	r4, [r6, #36]	; 0x24
   21e62:	b93c      	cbnz	r4, 21e74 <__pow5mult+0x38>
   21e64:	2010      	movs	r0, #16
   21e66:	f7fb fa25 	bl	1d2b4 <malloc>
   21e6a:	6270      	str	r0, [r6, #36]	; 0x24
   21e6c:	6044      	str	r4, [r0, #4]
   21e6e:	6084      	str	r4, [r0, #8]
   21e70:	6004      	str	r4, [r0, #0]
   21e72:	60c4      	str	r4, [r0, #12]
   21e74:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   21e78:	f8d8 4008 	ldr.w	r4, [r8, #8]
   21e7c:	b94c      	cbnz	r4, 21e92 <__pow5mult+0x56>
   21e7e:	f240 2171 	movw	r1, #625	; 0x271
   21e82:	4630      	mov	r0, r6
   21e84:	f7ff ff40 	bl	21d08 <__i2b>
   21e88:	4604      	mov	r4, r0
   21e8a:	2300      	movs	r3, #0
   21e8c:	f8c8 0008 	str.w	r0, [r8, #8]
   21e90:	6003      	str	r3, [r0, #0]
   21e92:	f04f 0800 	mov.w	r8, #0
   21e96:	07eb      	lsls	r3, r5, #31
   21e98:	d50a      	bpl.n	21eb0 <__pow5mult+0x74>
   21e9a:	4639      	mov	r1, r7
   21e9c:	4622      	mov	r2, r4
   21e9e:	4630      	mov	r0, r6
   21ea0:	f7ff ff3b 	bl	21d1a <__multiply>
   21ea4:	4681      	mov	r9, r0
   21ea6:	4639      	mov	r1, r7
   21ea8:	4630      	mov	r0, r6
   21eaa:	f7ff fe50 	bl	21b4e <_Bfree>
   21eae:	464f      	mov	r7, r9
   21eb0:	106d      	asrs	r5, r5, #1
   21eb2:	d00c      	beq.n	21ece <__pow5mult+0x92>
   21eb4:	6820      	ldr	r0, [r4, #0]
   21eb6:	b108      	cbz	r0, 21ebc <__pow5mult+0x80>
   21eb8:	4604      	mov	r4, r0
   21eba:	e7ec      	b.n	21e96 <__pow5mult+0x5a>
   21ebc:	4622      	mov	r2, r4
   21ebe:	4621      	mov	r1, r4
   21ec0:	4630      	mov	r0, r6
   21ec2:	f7ff ff2a 	bl	21d1a <__multiply>
   21ec6:	6020      	str	r0, [r4, #0]
   21ec8:	f8c0 8000 	str.w	r8, [r0]
   21ecc:	e7f4      	b.n	21eb8 <__pow5mult+0x7c>
   21ece:	4638      	mov	r0, r7
   21ed0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   21ed4:	00026658 	.word	0x00026658

00021ed8 <__lshift>:
__lshift():
   21ed8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   21edc:	460c      	mov	r4, r1
   21ede:	4607      	mov	r7, r0
   21ee0:	4691      	mov	r9, r2
   21ee2:	6926      	ldr	r6, [r4, #16]
   21ee4:	ea4f 1a62 	mov.w	sl, r2, asr #5
   21ee8:	4456      	add	r6, sl
   21eea:	6849      	ldr	r1, [r1, #4]
   21eec:	68a3      	ldr	r3, [r4, #8]
   21eee:	1c75      	adds	r5, r6, #1
   21ef0:	42ab      	cmp	r3, r5
   21ef2:	da02      	bge.n	21efa <__lshift+0x22>
   21ef4:	3101      	adds	r1, #1
   21ef6:	005b      	lsls	r3, r3, #1
   21ef8:	e7fa      	b.n	21ef0 <__lshift+0x18>
   21efa:	4638      	mov	r0, r7
   21efc:	f7ff fdf2 	bl	21ae4 <_Balloc>
   21f00:	2300      	movs	r3, #0
   21f02:	4680      	mov	r8, r0
   21f04:	461a      	mov	r2, r3
   21f06:	f100 0114 	add.w	r1, r0, #20
   21f0a:	4553      	cmp	r3, sl
   21f0c:	da03      	bge.n	21f16 <__lshift+0x3e>
   21f0e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
   21f12:	3301      	adds	r3, #1
   21f14:	e7f9      	b.n	21f0a <__lshift+0x32>
   21f16:	ea2a 73ea 	bic.w	r3, sl, sl, asr #31
   21f1a:	6920      	ldr	r0, [r4, #16]
   21f1c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   21f20:	f019 091f 	ands.w	r9, r9, #31
   21f24:	f104 0114 	add.w	r1, r4, #20
   21f28:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   21f2c:	d014      	beq.n	21f58 <__lshift+0x80>
   21f2e:	f1c9 0c20 	rsb	ip, r9, #32
   21f32:	2200      	movs	r2, #0
   21f34:	6808      	ldr	r0, [r1, #0]
   21f36:	469a      	mov	sl, r3
   21f38:	fa00 f009 	lsl.w	r0, r0, r9
   21f3c:	4302      	orrs	r2, r0
   21f3e:	f843 2b04 	str.w	r2, [r3], #4
   21f42:	f851 2b04 	ldr.w	r2, [r1], #4
   21f46:	458e      	cmp	lr, r1
   21f48:	fa22 f20c 	lsr.w	r2, r2, ip
   21f4c:	d8f2      	bhi.n	21f34 <__lshift+0x5c>
   21f4e:	f8ca 2004 	str.w	r2, [sl, #4]
   21f52:	b142      	cbz	r2, 21f66 <__lshift+0x8e>
   21f54:	1cb5      	adds	r5, r6, #2
   21f56:	e006      	b.n	21f66 <__lshift+0x8e>
   21f58:	3b04      	subs	r3, #4
   21f5a:	f851 2b04 	ldr.w	r2, [r1], #4
   21f5e:	458e      	cmp	lr, r1
   21f60:	f843 2f04 	str.w	r2, [r3, #4]!
   21f64:	d8f9      	bhi.n	21f5a <__lshift+0x82>
   21f66:	3d01      	subs	r5, #1
   21f68:	4638      	mov	r0, r7
   21f6a:	f8c8 5010 	str.w	r5, [r8, #16]
   21f6e:	4621      	mov	r1, r4
   21f70:	f7ff fded 	bl	21b4e <_Bfree>
   21f74:	4640      	mov	r0, r8
   21f76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00021f7a <__mcmp>:
__mcmp():
   21f7a:	6903      	ldr	r3, [r0, #16]
   21f7c:	690a      	ldr	r2, [r1, #16]
   21f7e:	b510      	push	{r4, lr}
   21f80:	1a9b      	subs	r3, r3, r2
   21f82:	d111      	bne.n	21fa8 <__mcmp+0x2e>
   21f84:	0092      	lsls	r2, r2, #2
   21f86:	3014      	adds	r0, #20
   21f88:	3114      	adds	r1, #20
   21f8a:	1883      	adds	r3, r0, r2
   21f8c:	440a      	add	r2, r1
   21f8e:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   21f92:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   21f96:	428c      	cmp	r4, r1
   21f98:	d002      	beq.n	21fa0 <__mcmp+0x26>
   21f9a:	d307      	bcc.n	21fac <__mcmp+0x32>
   21f9c:	2001      	movs	r0, #1
   21f9e:	bd10      	pop	{r4, pc}
   21fa0:	4298      	cmp	r0, r3
   21fa2:	d3f4      	bcc.n	21f8e <__mcmp+0x14>
   21fa4:	2000      	movs	r0, #0
   21fa6:	bd10      	pop	{r4, pc}
   21fa8:	4618      	mov	r0, r3
   21faa:	bd10      	pop	{r4, pc}
   21fac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   21fb0:	bd10      	pop	{r4, pc}

00021fb2 <__mdiff>:
__mdiff():
   21fb2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   21fb6:	460c      	mov	r4, r1
   21fb8:	4607      	mov	r7, r0
   21fba:	4611      	mov	r1, r2
   21fbc:	4620      	mov	r0, r4
   21fbe:	4615      	mov	r5, r2
   21fc0:	f7ff ffdb 	bl	21f7a <__mcmp>
   21fc4:	1e06      	subs	r6, r0, #0
   21fc6:	d108      	bne.n	21fda <__mdiff+0x28>
   21fc8:	4631      	mov	r1, r6
   21fca:	4638      	mov	r0, r7
   21fcc:	f7ff fd8a 	bl	21ae4 <_Balloc>
   21fd0:	2301      	movs	r3, #1
   21fd2:	6103      	str	r3, [r0, #16]
   21fd4:	6146      	str	r6, [r0, #20]
   21fd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   21fda:	bfbc      	itt	lt
   21fdc:	4623      	movlt	r3, r4
   21fde:	462c      	movlt	r4, r5
   21fe0:	4638      	mov	r0, r7
   21fe2:	6861      	ldr	r1, [r4, #4]
   21fe4:	bfba      	itte	lt
   21fe6:	461d      	movlt	r5, r3
   21fe8:	2601      	movlt	r6, #1
   21fea:	2600      	movge	r6, #0
   21fec:	f7ff fd7a 	bl	21ae4 <_Balloc>
   21ff0:	692b      	ldr	r3, [r5, #16]
   21ff2:	60c6      	str	r6, [r0, #12]
   21ff4:	6926      	ldr	r6, [r4, #16]
   21ff6:	f105 0914 	add.w	r9, r5, #20
   21ffa:	f104 0114 	add.w	r1, r4, #20
   21ffe:	eb01 0786 	add.w	r7, r1, r6, lsl #2
   22002:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   22006:	f100 0514 	add.w	r5, r0, #20
   2200a:	f04f 0c00 	mov.w	ip, #0
   2200e:	f851 2b04 	ldr.w	r2, [r1], #4
   22012:	f859 4b04 	ldr.w	r4, [r9], #4
   22016:	b293      	uxth	r3, r2
   22018:	449c      	add	ip, r3
   2201a:	b2a3      	uxth	r3, r4
   2201c:	0c24      	lsrs	r4, r4, #16
   2201e:	ebc3 030c 	rsb	r3, r3, ip
   22022:	ebc4 4212 	rsb	r2, r4, r2, lsr #16
   22026:	eb02 4223 	add.w	r2, r2, r3, asr #16
   2202a:	b29b      	uxth	r3, r3
   2202c:	ea4f 4c22 	mov.w	ip, r2, asr #16
   22030:	45c8      	cmp	r8, r9
   22032:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   22036:	468e      	mov	lr, r1
   22038:	f845 2b04 	str.w	r2, [r5], #4
   2203c:	d8e7      	bhi.n	2200e <__mdiff+0x5c>
   2203e:	45be      	cmp	lr, r7
   22040:	d20e      	bcs.n	22060 <__mdiff+0xae>
   22042:	f85e 1b04 	ldr.w	r1, [lr], #4
   22046:	b28a      	uxth	r2, r1
   22048:	4462      	add	r2, ip
   2204a:	1413      	asrs	r3, r2, #16
   2204c:	eb03 4311 	add.w	r3, r3, r1, lsr #16
   22050:	b292      	uxth	r2, r2
   22052:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   22056:	ea4f 4c23 	mov.w	ip, r3, asr #16
   2205a:	f845 2b04 	str.w	r2, [r5], #4
   2205e:	e7ee      	b.n	2203e <__mdiff+0x8c>
   22060:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   22064:	b90b      	cbnz	r3, 2206a <__mdiff+0xb8>
   22066:	3e01      	subs	r6, #1
   22068:	e7fa      	b.n	22060 <__mdiff+0xae>
   2206a:	6106      	str	r6, [r0, #16]
   2206c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00022070 <__ulp>:
__ulp():
   22070:	4b10      	ldr	r3, [pc, #64]	; (220b4 <__ulp+0x44>)
   22072:	400b      	ands	r3, r1
   22074:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   22078:	2b00      	cmp	r3, #0
   2207a:	dd02      	ble.n	22082 <__ulp+0x12>
   2207c:	2000      	movs	r0, #0
   2207e:	4619      	mov	r1, r3
   22080:	4770      	bx	lr
   22082:	425b      	negs	r3, r3
   22084:	151b      	asrs	r3, r3, #20
   22086:	2b13      	cmp	r3, #19
   22088:	f04f 0000 	mov.w	r0, #0
   2208c:	f04f 0100 	mov.w	r1, #0
   22090:	dc04      	bgt.n	2209c <__ulp+0x2c>
   22092:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   22096:	fa42 f103 	asr.w	r1, r2, r3
   2209a:	4770      	bx	lr
   2209c:	3b14      	subs	r3, #20
   2209e:	2b1e      	cmp	r3, #30
   220a0:	f04f 0201 	mov.w	r2, #1
   220a4:	bfce      	itee	gt
   220a6:	4613      	movgt	r3, r2
   220a8:	f1c3 031f 	rsble	r3, r3, #31
   220ac:	fa02 f303 	lslle.w	r3, r2, r3
   220b0:	4618      	mov	r0, r3
   220b2:	4770      	bx	lr
   220b4:	7ff00000 	.word	0x7ff00000

000220b8 <__b2d>:
__b2d():
   220b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   220ba:	6905      	ldr	r5, [r0, #16]
   220bc:	f100 0614 	add.w	r6, r0, #20
   220c0:	eb06 0585 	add.w	r5, r6, r5, lsl #2
   220c4:	f855 4c04 	ldr.w	r4, [r5, #-4]
   220c8:	1f2f      	subs	r7, r5, #4
   220ca:	4620      	mov	r0, r4
   220cc:	f7ff fdcf 	bl	21c6e <__hi0bits>
   220d0:	f1c0 0320 	rsb	r3, r0, #32
   220d4:	280a      	cmp	r0, #10
   220d6:	600b      	str	r3, [r1, #0]
   220d8:	dc14      	bgt.n	22104 <__b2d+0x4c>
   220da:	f1c0 0e0b 	rsb	lr, r0, #11
   220de:	fa24 f10e 	lsr.w	r1, r4, lr
   220e2:	42be      	cmp	r6, r7
   220e4:	f041 537f 	orr.w	r3, r1, #1069547520	; 0x3fc00000
   220e8:	bf34      	ite	cc
   220ea:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
   220ee:	2100      	movcs	r1, #0
   220f0:	3015      	adds	r0, #21
   220f2:	fa04 f000 	lsl.w	r0, r4, r0
   220f6:	fa21 f10e 	lsr.w	r1, r1, lr
   220fa:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   220fe:	ea40 0201 	orr.w	r2, r0, r1
   22102:	e023      	b.n	2214c <__b2d+0x94>
   22104:	42be      	cmp	r6, r7
   22106:	bf3a      	itte	cc
   22108:	f1a5 0708 	subcc.w	r7, r5, #8
   2210c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
   22110:	2100      	movcs	r1, #0
   22112:	380b      	subs	r0, #11
   22114:	d015      	beq.n	22142 <__b2d+0x8a>
   22116:	4084      	lsls	r4, r0
   22118:	f1c0 0520 	rsb	r5, r0, #32
   2211c:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
   22120:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
   22124:	42b7      	cmp	r7, r6
   22126:	fa21 fe05 	lsr.w	lr, r1, r5
   2212a:	ea44 030e 	orr.w	r3, r4, lr
   2212e:	bf8c      	ite	hi
   22130:	f857 4c04 	ldrhi.w	r4, [r7, #-4]
   22134:	2400      	movls	r4, #0
   22136:	fa01 f000 	lsl.w	r0, r1, r0
   2213a:	40ec      	lsrs	r4, r5
   2213c:	ea40 0204 	orr.w	r2, r0, r4
   22140:	e004      	b.n	2214c <__b2d+0x94>
   22142:	460a      	mov	r2, r1
   22144:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
   22148:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   2214c:	4610      	mov	r0, r2
   2214e:	4619      	mov	r1, r3
   22150:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00022152 <__d2b>:
__d2b():
   22152:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   22156:	461c      	mov	r4, r3
   22158:	2101      	movs	r1, #1
   2215a:	4690      	mov	r8, r2
   2215c:	9e08      	ldr	r6, [sp, #32]
   2215e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   22160:	f7ff fcc0 	bl	21ae4 <_Balloc>
   22164:	f3c4 0213 	ubfx	r2, r4, #0, #20
   22168:	f3c4 540a 	ubfx	r4, r4, #20, #11
   2216c:	4607      	mov	r7, r0
   2216e:	b10c      	cbz	r4, 22174 <__d2b+0x22>
   22170:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   22174:	9201      	str	r2, [sp, #4]
   22176:	f1b8 0f00 	cmp.w	r8, #0
   2217a:	d019      	beq.n	221b0 <__d2b+0x5e>
   2217c:	a802      	add	r0, sp, #8
   2217e:	f840 8d08 	str.w	r8, [r0, #-8]!
   22182:	f7ff fd94 	bl	21cae <__lo0bits>
   22186:	9b00      	ldr	r3, [sp, #0]
   22188:	b148      	cbz	r0, 2219e <__d2b+0x4c>
   2218a:	9a01      	ldr	r2, [sp, #4]
   2218c:	f1c0 0120 	rsb	r1, r0, #32
   22190:	fa02 f101 	lsl.w	r1, r2, r1
   22194:	430b      	orrs	r3, r1
   22196:	40c2      	lsrs	r2, r0
   22198:	617b      	str	r3, [r7, #20]
   2219a:	9201      	str	r2, [sp, #4]
   2219c:	e000      	b.n	221a0 <__d2b+0x4e>
   2219e:	617b      	str	r3, [r7, #20]
   221a0:	9b01      	ldr	r3, [sp, #4]
   221a2:	2b00      	cmp	r3, #0
   221a4:	bf14      	ite	ne
   221a6:	2102      	movne	r1, #2
   221a8:	2101      	moveq	r1, #1
   221aa:	61bb      	str	r3, [r7, #24]
   221ac:	6139      	str	r1, [r7, #16]
   221ae:	e007      	b.n	221c0 <__d2b+0x6e>
   221b0:	a801      	add	r0, sp, #4
   221b2:	f7ff fd7c 	bl	21cae <__lo0bits>
   221b6:	9b01      	ldr	r3, [sp, #4]
   221b8:	2101      	movs	r1, #1
   221ba:	617b      	str	r3, [r7, #20]
   221bc:	6139      	str	r1, [r7, #16]
   221be:	3020      	adds	r0, #32
   221c0:	b134      	cbz	r4, 221d0 <__d2b+0x7e>
   221c2:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   221c6:	4404      	add	r4, r0
   221c8:	6034      	str	r4, [r6, #0]
   221ca:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   221ce:	e009      	b.n	221e4 <__d2b+0x92>
   221d0:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   221d4:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   221d8:	6030      	str	r0, [r6, #0]
   221da:	6918      	ldr	r0, [r3, #16]
   221dc:	f7ff fd47 	bl	21c6e <__hi0bits>
   221e0:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   221e4:	6028      	str	r0, [r5, #0]
   221e6:	4638      	mov	r0, r7
   221e8:	b002      	add	sp, #8
   221ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000221ee <__ratio>:
__ratio():
   221ee:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   221f2:	4688      	mov	r8, r1
   221f4:	4669      	mov	r1, sp
   221f6:	4681      	mov	r9, r0
   221f8:	f7ff ff5e 	bl	220b8 <__b2d>
   221fc:	460d      	mov	r5, r1
   221fe:	4604      	mov	r4, r0
   22200:	a901      	add	r1, sp, #4
   22202:	4640      	mov	r0, r8
   22204:	f7ff ff58 	bl	220b8 <__b2d>
   22208:	460f      	mov	r7, r1
   2220a:	4606      	mov	r6, r0
   2220c:	f8d9 3010 	ldr.w	r3, [r9, #16]
   22210:	f8d8 2010 	ldr.w	r2, [r8, #16]
   22214:	4620      	mov	r0, r4
   22216:	1a9a      	subs	r2, r3, r2
   22218:	e89d 000a 	ldmia.w	sp, {r1, r3}
   2221c:	1ac9      	subs	r1, r1, r3
   2221e:	eb01 1342 	add.w	r3, r1, r2, lsl #5
   22222:	2b00      	cmp	r3, #0
   22224:	bfcc      	ite	gt
   22226:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   2222a:	eba7 5703 	suble.w	r7, r7, r3, lsl #20
   2222e:	4632      	mov	r2, r6
   22230:	463b      	mov	r3, r7
   22232:	4629      	mov	r1, r5
   22234:	f7f9 ffec 	bl	1c210 <__aeabi_ddiv>
   22238:	b003      	add	sp, #12
   2223a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0002223e <__copybits>:
__copybits():
   2223e:	3901      	subs	r1, #1
   22240:	b510      	push	{r4, lr}
   22242:	1149      	asrs	r1, r1, #5
   22244:	6914      	ldr	r4, [r2, #16]
   22246:	3101      	adds	r1, #1
   22248:	f102 0314 	add.w	r3, r2, #20
   2224c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   22250:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   22254:	42a3      	cmp	r3, r4
   22256:	4602      	mov	r2, r0
   22258:	d204      	bcs.n	22264 <__copybits+0x26>
   2225a:	f853 2b04 	ldr.w	r2, [r3], #4
   2225e:	f840 2b04 	str.w	r2, [r0], #4
   22262:	e7f7      	b.n	22254 <__copybits+0x16>
   22264:	2300      	movs	r3, #0
   22266:	428a      	cmp	r2, r1
   22268:	d202      	bcs.n	22270 <__copybits+0x32>
   2226a:	f842 3b04 	str.w	r3, [r2], #4
   2226e:	e7fa      	b.n	22266 <__copybits+0x28>
   22270:	bd10      	pop	{r4, pc}

00022272 <__any_on>:
__any_on():
   22272:	f100 0214 	add.w	r2, r0, #20
   22276:	6900      	ldr	r0, [r0, #16]
   22278:	114b      	asrs	r3, r1, #5
   2227a:	4298      	cmp	r0, r3
   2227c:	b510      	push	{r4, lr}
   2227e:	db0c      	blt.n	2229a <__any_on+0x28>
   22280:	dd0c      	ble.n	2229c <__any_on+0x2a>
   22282:	f011 011f 	ands.w	r1, r1, #31
   22286:	d009      	beq.n	2229c <__any_on+0x2a>
   22288:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   2228c:	fa24 f001 	lsr.w	r0, r4, r1
   22290:	fa00 f101 	lsl.w	r1, r0, r1
   22294:	428c      	cmp	r4, r1
   22296:	d10c      	bne.n	222b2 <__any_on+0x40>
   22298:	e000      	b.n	2229c <__any_on+0x2a>
   2229a:	4603      	mov	r3, r0
   2229c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   222a0:	4293      	cmp	r3, r2
   222a2:	d904      	bls.n	222ae <__any_on+0x3c>
   222a4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   222a8:	2900      	cmp	r1, #0
   222aa:	d0f9      	beq.n	222a0 <__any_on+0x2e>
   222ac:	e001      	b.n	222b2 <__any_on+0x40>
   222ae:	2000      	movs	r0, #0
   222b0:	bd10      	pop	{r4, pc}
   222b2:	2001      	movs	r0, #1
   222b4:	bd10      	pop	{r4, pc}

000222b6 <_calloc_r>:
_calloc_r():
   222b6:	b538      	push	{r3, r4, r5, lr}
   222b8:	fb02 f401 	mul.w	r4, r2, r1
   222bc:	4621      	mov	r1, r4
   222be:	f7fb fb2b 	bl	1d918 <_malloc_r>
   222c2:	4605      	mov	r5, r0
   222c4:	b118      	cbz	r0, 222ce <_calloc_r+0x18>
   222c6:	4622      	mov	r2, r4
   222c8:	2100      	movs	r1, #0
   222ca:	f7fb f846 	bl	1d35a <memset>
   222ce:	4628      	mov	r0, r5
   222d0:	bd38      	pop	{r3, r4, r5, pc}

000222d2 <_realloc_r>:
_realloc_r():
   222d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   222d4:	4607      	mov	r7, r0
   222d6:	4615      	mov	r5, r2
   222d8:	460e      	mov	r6, r1
   222da:	b921      	cbnz	r1, 222e6 <_realloc_r+0x14>
   222dc:	4611      	mov	r1, r2
   222de:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   222e2:	f7fb bb19 	b.w	1d918 <_malloc_r>
   222e6:	b91a      	cbnz	r2, 222f0 <_realloc_r+0x1e>
   222e8:	f7fb fa98 	bl	1d81c <_free_r>
   222ec:	4628      	mov	r0, r5
   222ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   222f0:	f001 f8c4 	bl	2347c <_malloc_usable_size_r>
   222f4:	4285      	cmp	r5, r0
   222f6:	d90e      	bls.n	22316 <_realloc_r+0x44>
   222f8:	4629      	mov	r1, r5
   222fa:	4638      	mov	r0, r7
   222fc:	f7fb fb0c 	bl	1d918 <_malloc_r>
   22300:	4604      	mov	r4, r0
   22302:	b150      	cbz	r0, 2231a <_realloc_r+0x48>
   22304:	4631      	mov	r1, r6
   22306:	462a      	mov	r2, r5
   22308:	f7fb f801 	bl	1d30e <memcpy>
   2230c:	4631      	mov	r1, r6
   2230e:	4638      	mov	r0, r7
   22310:	f7fb fa84 	bl	1d81c <_free_r>
   22314:	e001      	b.n	2231a <_realloc_r+0x48>
   22316:	4630      	mov	r0, r6
   22318:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   2231a:	4620      	mov	r0, r4
   2231c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0002231e <__ssputs_r>:
__ssputs_r():
   2231e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   22322:	688e      	ldr	r6, [r1, #8]
   22324:	4682      	mov	sl, r0
   22326:	429e      	cmp	r6, r3
   22328:	460c      	mov	r4, r1
   2232a:	4691      	mov	r9, r2
   2232c:	4698      	mov	r8, r3
   2232e:	d83e      	bhi.n	223ae <__ssputs_r+0x90>
   22330:	898a      	ldrh	r2, [r1, #12]
   22332:	f412 6f90 	tst.w	r2, #1152	; 0x480
   22336:	d03a      	beq.n	223ae <__ssputs_r+0x90>
   22338:	6825      	ldr	r5, [r4, #0]
   2233a:	6909      	ldr	r1, [r1, #16]
   2233c:	2302      	movs	r3, #2
   2233e:	1a6f      	subs	r7, r5, r1
   22340:	6965      	ldr	r5, [r4, #20]
   22342:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   22346:	fb95 f5f3 	sdiv	r5, r5, r3
   2234a:	1c7b      	adds	r3, r7, #1
   2234c:	4443      	add	r3, r8
   2234e:	429d      	cmp	r5, r3
   22350:	bf38      	it	cc
   22352:	461d      	movcc	r5, r3
   22354:	0553      	lsls	r3, r2, #21
   22356:	d50f      	bpl.n	22378 <__ssputs_r+0x5a>
   22358:	4629      	mov	r1, r5
   2235a:	f7fb fadd 	bl	1d918 <_malloc_r>
   2235e:	4606      	mov	r6, r0
   22360:	b198      	cbz	r0, 2238a <__ssputs_r+0x6c>
   22362:	463a      	mov	r2, r7
   22364:	6921      	ldr	r1, [r4, #16]
   22366:	f7fa ffd2 	bl	1d30e <memcpy>
   2236a:	89a3      	ldrh	r3, [r4, #12]
   2236c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   22370:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   22374:	81a3      	strh	r3, [r4, #12]
   22376:	e013      	b.n	223a0 <__ssputs_r+0x82>
   22378:	462a      	mov	r2, r5
   2237a:	f7ff ffaa 	bl	222d2 <_realloc_r>
   2237e:	4606      	mov	r6, r0
   22380:	b970      	cbnz	r0, 223a0 <__ssputs_r+0x82>
   22382:	6921      	ldr	r1, [r4, #16]
   22384:	4650      	mov	r0, sl
   22386:	f7fb fa49 	bl	1d81c <_free_r>
   2238a:	230c      	movs	r3, #12
   2238c:	f8ca 3000 	str.w	r3, [sl]
   22390:	89a3      	ldrh	r3, [r4, #12]
   22392:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   22396:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   2239a:	81a3      	strh	r3, [r4, #12]
   2239c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   223a0:	6126      	str	r6, [r4, #16]
   223a2:	443e      	add	r6, r7
   223a4:	6026      	str	r6, [r4, #0]
   223a6:	4646      	mov	r6, r8
   223a8:	6165      	str	r5, [r4, #20]
   223aa:	1bed      	subs	r5, r5, r7
   223ac:	60a5      	str	r5, [r4, #8]
   223ae:	4546      	cmp	r6, r8
   223b0:	bf28      	it	cs
   223b2:	4646      	movcs	r6, r8
   223b4:	4649      	mov	r1, r9
   223b6:	4632      	mov	r2, r6
   223b8:	6820      	ldr	r0, [r4, #0]
   223ba:	f7fa ffb3 	bl	1d324 <memmove>
   223be:	68a3      	ldr	r3, [r4, #8]
   223c0:	2000      	movs	r0, #0
   223c2:	1b9b      	subs	r3, r3, r6
   223c4:	60a3      	str	r3, [r4, #8]
   223c6:	6823      	ldr	r3, [r4, #0]
   223c8:	441e      	add	r6, r3
   223ca:	6026      	str	r6, [r4, #0]
   223cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000223d0 <_svfiprintf_r>:
_svfprintf_r():
   223d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223d4:	b09d      	sub	sp, #116	; 0x74
   223d6:	9303      	str	r3, [sp, #12]
   223d8:	898b      	ldrh	r3, [r1, #12]
   223da:	4680      	mov	r8, r0
   223dc:	061c      	lsls	r4, r3, #24
   223de:	460d      	mov	r5, r1
   223e0:	4616      	mov	r6, r2
   223e2:	d50d      	bpl.n	22400 <_svfiprintf_r+0x30>
   223e4:	690b      	ldr	r3, [r1, #16]
   223e6:	b95b      	cbnz	r3, 22400 <_svfiprintf_r+0x30>
   223e8:	2140      	movs	r1, #64	; 0x40
   223ea:	f7fb fa95 	bl	1d918 <_malloc_r>
   223ee:	6028      	str	r0, [r5, #0]
   223f0:	6128      	str	r0, [r5, #16]
   223f2:	b918      	cbnz	r0, 223fc <_svfiprintf_r+0x2c>
   223f4:	230c      	movs	r3, #12
   223f6:	f8c8 3000 	str.w	r3, [r8]
   223fa:	e0cd      	b.n	22598 <_svfiprintf_r+0x1c8>
   223fc:	2340      	movs	r3, #64	; 0x40
   223fe:	616b      	str	r3, [r5, #20]
   22400:	2300      	movs	r3, #0
   22402:	9309      	str	r3, [sp, #36]	; 0x24
   22404:	2320      	movs	r3, #32
   22406:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   2240a:	f8df b19c 	ldr.w	fp, [pc, #412]	; 225a8 <_svfiprintf_r+0x1d8>
   2240e:	2330      	movs	r3, #48	; 0x30
   22410:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   22414:	4637      	mov	r7, r6
   22416:	463c      	mov	r4, r7
   22418:	f814 3b01 	ldrb.w	r3, [r4], #1
   2241c:	b91b      	cbnz	r3, 22426 <_svfiprintf_r+0x56>
   2241e:	ebb7 0906 	subs.w	r9, r7, r6
   22422:	d010      	beq.n	22446 <_svfiprintf_r+0x76>
   22424:	e003      	b.n	2242e <_svfiprintf_r+0x5e>
   22426:	2b25      	cmp	r3, #37	; 0x25
   22428:	d0f9      	beq.n	2241e <_svfiprintf_r+0x4e>
   2242a:	4627      	mov	r7, r4
   2242c:	e7f3      	b.n	22416 <_svfiprintf_r+0x46>
   2242e:	464b      	mov	r3, r9
   22430:	4632      	mov	r2, r6
   22432:	4629      	mov	r1, r5
   22434:	4640      	mov	r0, r8
   22436:	f7ff ff72 	bl	2231e <__ssputs_r>
   2243a:	3001      	adds	r0, #1
   2243c:	f000 80a7 	beq.w	2258e <_svfiprintf_r+0x1be>
   22440:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22442:	444b      	add	r3, r9
   22444:	9309      	str	r3, [sp, #36]	; 0x24
   22446:	783b      	ldrb	r3, [r7, #0]
   22448:	2b00      	cmp	r3, #0
   2244a:	f000 80a0 	beq.w	2258e <_svfiprintf_r+0x1be>
   2244e:	2300      	movs	r3, #0
   22450:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   22454:	9304      	str	r3, [sp, #16]
   22456:	9307      	str	r3, [sp, #28]
   22458:	9205      	str	r2, [sp, #20]
   2245a:	9306      	str	r3, [sp, #24]
   2245c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   22460:	931a      	str	r3, [sp, #104]	; 0x68
   22462:	2601      	movs	r6, #1
   22464:	2205      	movs	r2, #5
   22466:	7821      	ldrb	r1, [r4, #0]
   22468:	484e      	ldr	r0, [pc, #312]	; (225a4 <_svfiprintf_r+0x1d4>)
   2246a:	f7fa ff33 	bl	1d2d4 <memchr>
   2246e:	1c67      	adds	r7, r4, #1
   22470:	9b04      	ldr	r3, [sp, #16]
   22472:	b138      	cbz	r0, 22484 <_svfiprintf_r+0xb4>
   22474:	4a4b      	ldr	r2, [pc, #300]	; (225a4 <_svfiprintf_r+0x1d4>)
   22476:	463c      	mov	r4, r7
   22478:	1a80      	subs	r0, r0, r2
   2247a:	fa06 f000 	lsl.w	r0, r6, r0
   2247e:	4318      	orrs	r0, r3
   22480:	9004      	str	r0, [sp, #16]
   22482:	e7ef      	b.n	22464 <_svfiprintf_r+0x94>
   22484:	06d9      	lsls	r1, r3, #27
   22486:	bf44      	itt	mi
   22488:	2220      	movmi	r2, #32
   2248a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   2248e:	071a      	lsls	r2, r3, #28
   22490:	bf44      	itt	mi
   22492:	222b      	movmi	r2, #43	; 0x2b
   22494:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   22498:	7822      	ldrb	r2, [r4, #0]
   2249a:	2a2a      	cmp	r2, #42	; 0x2a
   2249c:	d003      	beq.n	224a6 <_svfiprintf_r+0xd6>
   2249e:	9a07      	ldr	r2, [sp, #28]
   224a0:	2100      	movs	r1, #0
   224a2:	200a      	movs	r0, #10
   224a4:	e00b      	b.n	224be <_svfiprintf_r+0xee>
   224a6:	9a03      	ldr	r2, [sp, #12]
   224a8:	1d11      	adds	r1, r2, #4
   224aa:	6812      	ldr	r2, [r2, #0]
   224ac:	9103      	str	r1, [sp, #12]
   224ae:	2a00      	cmp	r2, #0
   224b0:	da10      	bge.n	224d4 <_svfiprintf_r+0x104>
   224b2:	4252      	negs	r2, r2
   224b4:	f043 0002 	orr.w	r0, r3, #2
   224b8:	9207      	str	r2, [sp, #28]
   224ba:	9004      	str	r0, [sp, #16]
   224bc:	e00b      	b.n	224d6 <_svfiprintf_r+0x106>
   224be:	4627      	mov	r7, r4
   224c0:	783b      	ldrb	r3, [r7, #0]
   224c2:	3401      	adds	r4, #1
   224c4:	3b30      	subs	r3, #48	; 0x30
   224c6:	2b09      	cmp	r3, #9
   224c8:	d803      	bhi.n	224d2 <_svfiprintf_r+0x102>
   224ca:	fb00 3202 	mla	r2, r0, r2, r3
   224ce:	2101      	movs	r1, #1
   224d0:	e7f5      	b.n	224be <_svfiprintf_r+0xee>
   224d2:	b101      	cbz	r1, 224d6 <_svfiprintf_r+0x106>
   224d4:	9207      	str	r2, [sp, #28]
   224d6:	783b      	ldrb	r3, [r7, #0]
   224d8:	2b2e      	cmp	r3, #46	; 0x2e
   224da:	d11e      	bne.n	2251a <_svfiprintf_r+0x14a>
   224dc:	787b      	ldrb	r3, [r7, #1]
   224de:	2b2a      	cmp	r3, #42	; 0x2a
   224e0:	d10a      	bne.n	224f8 <_svfiprintf_r+0x128>
   224e2:	9b03      	ldr	r3, [sp, #12]
   224e4:	3702      	adds	r7, #2
   224e6:	1d1a      	adds	r2, r3, #4
   224e8:	681b      	ldr	r3, [r3, #0]
   224ea:	9203      	str	r2, [sp, #12]
   224ec:	2b00      	cmp	r3, #0
   224ee:	bfb8      	it	lt
   224f0:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   224f4:	9305      	str	r3, [sp, #20]
   224f6:	e010      	b.n	2251a <_svfiprintf_r+0x14a>
   224f8:	2300      	movs	r3, #0
   224fa:	4619      	mov	r1, r3
   224fc:	9305      	str	r3, [sp, #20]
   224fe:	1c78      	adds	r0, r7, #1
   22500:	240a      	movs	r4, #10
   22502:	4607      	mov	r7, r0
   22504:	783a      	ldrb	r2, [r7, #0]
   22506:	3001      	adds	r0, #1
   22508:	3a30      	subs	r2, #48	; 0x30
   2250a:	2a09      	cmp	r2, #9
   2250c:	d803      	bhi.n	22516 <_svfiprintf_r+0x146>
   2250e:	fb04 2101 	mla	r1, r4, r1, r2
   22512:	2301      	movs	r3, #1
   22514:	e7f5      	b.n	22502 <_svfiprintf_r+0x132>
   22516:	b103      	cbz	r3, 2251a <_svfiprintf_r+0x14a>
   22518:	9105      	str	r1, [sp, #20]
   2251a:	2203      	movs	r2, #3
   2251c:	7839      	ldrb	r1, [r7, #0]
   2251e:	4822      	ldr	r0, [pc, #136]	; (225a8 <_svfiprintf_r+0x1d8>)
   22520:	f7fa fed8 	bl	1d2d4 <memchr>
   22524:	b140      	cbz	r0, 22538 <_svfiprintf_r+0x168>
   22526:	2340      	movs	r3, #64	; 0x40
   22528:	ebcb 0000 	rsb	r0, fp, r0
   2252c:	fa03 f000 	lsl.w	r0, r3, r0
   22530:	9b04      	ldr	r3, [sp, #16]
   22532:	3701      	adds	r7, #1
   22534:	4318      	orrs	r0, r3
   22536:	9004      	str	r0, [sp, #16]
   22538:	7839      	ldrb	r1, [r7, #0]
   2253a:	2206      	movs	r2, #6
   2253c:	481b      	ldr	r0, [pc, #108]	; (225ac <_svfiprintf_r+0x1dc>)
   2253e:	1c7e      	adds	r6, r7, #1
   22540:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   22544:	f7fa fec6 	bl	1d2d4 <memchr>
   22548:	b188      	cbz	r0, 2256e <_svfiprintf_r+0x19e>
   2254a:	4b19      	ldr	r3, [pc, #100]	; (225b0 <_svfiprintf_r+0x1e0>)
   2254c:	b933      	cbnz	r3, 2255c <_svfiprintf_r+0x18c>
   2254e:	9b03      	ldr	r3, [sp, #12]
   22550:	3307      	adds	r3, #7
   22552:	f023 0307 	bic.w	r3, r3, #7
   22556:	3308      	adds	r3, #8
   22558:	9303      	str	r3, [sp, #12]
   2255a:	e014      	b.n	22586 <_svfiprintf_r+0x1b6>
   2255c:	ab03      	add	r3, sp, #12
   2255e:	9300      	str	r3, [sp, #0]
   22560:	462a      	mov	r2, r5
   22562:	4b14      	ldr	r3, [pc, #80]	; (225b4 <_svfiprintf_r+0x1e4>)
   22564:	a904      	add	r1, sp, #16
   22566:	4640      	mov	r0, r8
   22568:	f7fb fac6 	bl	1daf8 <_printf_float>
   2256c:	e007      	b.n	2257e <_svfiprintf_r+0x1ae>
   2256e:	ab03      	add	r3, sp, #12
   22570:	9300      	str	r3, [sp, #0]
   22572:	462a      	mov	r2, r5
   22574:	4b0f      	ldr	r3, [pc, #60]	; (225b4 <_svfiprintf_r+0x1e4>)
   22576:	a904      	add	r1, sp, #16
   22578:	4640      	mov	r0, r8
   2257a:	f7fb fd77 	bl	1e06c <_printf_i>
   2257e:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   22582:	4682      	mov	sl, r0
   22584:	d003      	beq.n	2258e <_svfiprintf_r+0x1be>
   22586:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22588:	4453      	add	r3, sl
   2258a:	9309      	str	r3, [sp, #36]	; 0x24
   2258c:	e742      	b.n	22414 <_svfiprintf_r+0x44>
   2258e:	89ab      	ldrh	r3, [r5, #12]
   22590:	065b      	lsls	r3, r3, #25
   22592:	d401      	bmi.n	22598 <_svfiprintf_r+0x1c8>
   22594:	9809      	ldr	r0, [sp, #36]	; 0x24
   22596:	e001      	b.n	2259c <_svfiprintf_r+0x1cc>
   22598:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2259c:	b01d      	add	sp, #116	; 0x74
   2259e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   225a2:	bf00      	nop
   225a4:	00026690 	.word	0x00026690
   225a8:	00026696 	.word	0x00026696
   225ac:	0002669a 	.word	0x0002669a
   225b0:	0001daf9 	.word	0x0001daf9
   225b4:	0002231f 	.word	0x0002231f

000225b8 <_sungetc_r>:
_sungetc_r():
   225b8:	1c4b      	adds	r3, r1, #1
   225ba:	b570      	push	{r4, r5, r6, lr}
   225bc:	460e      	mov	r6, r1
   225be:	4614      	mov	r4, r2
   225c0:	d102      	bne.n	225c8 <_sungetc_r+0x10>
   225c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   225c6:	bd70      	pop	{r4, r5, r6, pc}
   225c8:	8993      	ldrh	r3, [r2, #12]
   225ca:	b2cd      	uxtb	r5, r1
   225cc:	f023 0320 	bic.w	r3, r3, #32
   225d0:	8193      	strh	r3, [r2, #12]
   225d2:	6b53      	ldr	r3, [r2, #52]	; 0x34
   225d4:	6852      	ldr	r2, [r2, #4]
   225d6:	b183      	cbz	r3, 225fa <_sungetc_r+0x42>
   225d8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   225da:	429a      	cmp	r2, r3
   225dc:	da07      	bge.n	225ee <_sungetc_r+0x36>
   225de:	6823      	ldr	r3, [r4, #0]
   225e0:	1e5a      	subs	r2, r3, #1
   225e2:	6022      	str	r2, [r4, #0]
   225e4:	f803 6c01 	strb.w	r6, [r3, #-1]
   225e8:	6863      	ldr	r3, [r4, #4]
   225ea:	3301      	adds	r3, #1
   225ec:	e01f      	b.n	2262e <_sungetc_r+0x76>
   225ee:	4621      	mov	r1, r4
   225f0:	f000 fe74 	bl	232dc <__submore>
   225f4:	2800      	cmp	r0, #0
   225f6:	d0f2      	beq.n	225de <_sungetc_r+0x26>
   225f8:	e7e3      	b.n	225c2 <_sungetc_r+0xa>
   225fa:	6921      	ldr	r1, [r4, #16]
   225fc:	6823      	ldr	r3, [r4, #0]
   225fe:	b151      	cbz	r1, 22616 <_sungetc_r+0x5e>
   22600:	4299      	cmp	r1, r3
   22602:	d208      	bcs.n	22616 <_sungetc_r+0x5e>
   22604:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   22608:	428d      	cmp	r5, r1
   2260a:	d104      	bne.n	22616 <_sungetc_r+0x5e>
   2260c:	3b01      	subs	r3, #1
   2260e:	3201      	adds	r2, #1
   22610:	6023      	str	r3, [r4, #0]
   22612:	6062      	str	r2, [r4, #4]
   22614:	e00c      	b.n	22630 <_sungetc_r+0x78>
   22616:	63e3      	str	r3, [r4, #60]	; 0x3c
   22618:	f104 0344 	add.w	r3, r4, #68	; 0x44
   2261c:	6363      	str	r3, [r4, #52]	; 0x34
   2261e:	2303      	movs	r3, #3
   22620:	63a3      	str	r3, [r4, #56]	; 0x38
   22622:	4623      	mov	r3, r4
   22624:	6422      	str	r2, [r4, #64]	; 0x40
   22626:	f803 6f46 	strb.w	r6, [r3, #70]!
   2262a:	6023      	str	r3, [r4, #0]
   2262c:	2301      	movs	r3, #1
   2262e:	6063      	str	r3, [r4, #4]
   22630:	4628      	mov	r0, r5
   22632:	bd70      	pop	{r4, r5, r6, pc}

00022634 <__ssrefill_r>:
__ssrefill_r():
   22634:	b510      	push	{r4, lr}
   22636:	460c      	mov	r4, r1
   22638:	6b49      	ldr	r1, [r1, #52]	; 0x34
   2263a:	b169      	cbz	r1, 22658 <__ssrefill_r+0x24>
   2263c:	f104 0344 	add.w	r3, r4, #68	; 0x44
   22640:	4299      	cmp	r1, r3
   22642:	d001      	beq.n	22648 <__ssrefill_r+0x14>
   22644:	f7fb f8ea 	bl	1d81c <_free_r>
   22648:	6c23      	ldr	r3, [r4, #64]	; 0x40
   2264a:	2000      	movs	r0, #0
   2264c:	6360      	str	r0, [r4, #52]	; 0x34
   2264e:	6063      	str	r3, [r4, #4]
   22650:	b113      	cbz	r3, 22658 <__ssrefill_r+0x24>
   22652:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   22654:	6023      	str	r3, [r4, #0]
   22656:	bd10      	pop	{r4, pc}
   22658:	6923      	ldr	r3, [r4, #16]
   2265a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2265e:	6023      	str	r3, [r4, #0]
   22660:	2300      	movs	r3, #0
   22662:	6063      	str	r3, [r4, #4]
   22664:	89a3      	ldrh	r3, [r4, #12]
   22666:	f043 0320 	orr.w	r3, r3, #32
   2266a:	81a3      	strh	r3, [r4, #12]
   2266c:	bd10      	pop	{r4, pc}
   2266e:	ffff e92d 	vtbl.8	d30, {d15-d16}, d29

00022670 <__ssvfiscanf_r>:
__ssvfscanf_r():
   22670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22674:	f8df 929c 	ldr.w	r9, [pc, #668]	; 22914 <__ssvfiscanf_r+0x2a4>
   22678:	4607      	mov	r7, r0
   2267a:	460d      	mov	r5, r1
   2267c:	46ca      	mov	sl, r9
   2267e:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   22682:	9301      	str	r3, [sp, #4]
   22684:	2300      	movs	r3, #0
   22686:	9346      	str	r3, [sp, #280]	; 0x118
   22688:	9347      	str	r3, [sp, #284]	; 0x11c
   2268a:	4b9e      	ldr	r3, [pc, #632]	; (22904 <__ssvfiscanf_r+0x294>)
   2268c:	f10d 080c 	add.w	r8, sp, #12
   22690:	93a2      	str	r3, [sp, #648]	; 0x288
   22692:	4b9d      	ldr	r3, [pc, #628]	; (22908 <__ssvfiscanf_r+0x298>)
   22694:	f8df b274 	ldr.w	fp, [pc, #628]	; 2290c <__ssvfiscanf_r+0x29c>
   22698:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   2269c:	93a3      	str	r3, [sp, #652]	; 0x28c
   2269e:	7814      	ldrb	r4, [r2, #0]
   226a0:	2c00      	cmp	r4, #0
   226a2:	f000 8127 	beq.w	228f4 <__ssvfiscanf_r+0x284>
   226a6:	f8d9 3000 	ldr.w	r3, [r9]
   226aa:	4423      	add	r3, r4
   226ac:	785b      	ldrb	r3, [r3, #1]
   226ae:	f003 0308 	and.w	r3, r3, #8
   226b2:	f003 01ff 	and.w	r1, r3, #255	; 0xff
   226b6:	b1f3      	cbz	r3, 226f6 <__ssvfiscanf_r+0x86>
   226b8:	686b      	ldr	r3, [r5, #4]
   226ba:	2b00      	cmp	r3, #0
   226bc:	dd10      	ble.n	226e0 <__ssvfiscanf_r+0x70>
   226be:	682b      	ldr	r3, [r5, #0]
   226c0:	f8da 0000 	ldr.w	r0, [sl]
   226c4:	7819      	ldrb	r1, [r3, #0]
   226c6:	4401      	add	r1, r0
   226c8:	7849      	ldrb	r1, [r1, #1]
   226ca:	070c      	lsls	r4, r1, #28
   226cc:	d510      	bpl.n	226f0 <__ssvfiscanf_r+0x80>
   226ce:	9947      	ldr	r1, [sp, #284]	; 0x11c
   226d0:	3301      	adds	r3, #1
   226d2:	3101      	adds	r1, #1
   226d4:	9147      	str	r1, [sp, #284]	; 0x11c
   226d6:	6869      	ldr	r1, [r5, #4]
   226d8:	602b      	str	r3, [r5, #0]
   226da:	3901      	subs	r1, #1
   226dc:	6069      	str	r1, [r5, #4]
   226de:	e7eb      	b.n	226b8 <__ssvfiscanf_r+0x48>
   226e0:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   226e2:	4629      	mov	r1, r5
   226e4:	4638      	mov	r0, r7
   226e6:	9200      	str	r2, [sp, #0]
   226e8:	4798      	blx	r3
   226ea:	9a00      	ldr	r2, [sp, #0]
   226ec:	2800      	cmp	r0, #0
   226ee:	d0e6      	beq.n	226be <__ssvfiscanf_r+0x4e>
   226f0:	1c56      	adds	r6, r2, #1
   226f2:	4632      	mov	r2, r6
   226f4:	e7d3      	b.n	2269e <__ssvfiscanf_r+0x2e>
   226f6:	2c25      	cmp	r4, #37	; 0x25
   226f8:	f102 0601 	add.w	r6, r2, #1
   226fc:	d152      	bne.n	227a4 <__ssvfiscanf_r+0x134>
   226fe:	9143      	str	r1, [sp, #268]	; 0x10c
   22700:	9145      	str	r1, [sp, #276]	; 0x114
   22702:	7853      	ldrb	r3, [r2, #1]
   22704:	2b2a      	cmp	r3, #42	; 0x2a
   22706:	bf02      	ittt	eq
   22708:	2310      	moveq	r3, #16
   2270a:	1c96      	addeq	r6, r2, #2
   2270c:	9343      	streq	r3, [sp, #268]	; 0x10c
   2270e:	220a      	movs	r2, #10
   22710:	7831      	ldrb	r1, [r6, #0]
   22712:	4634      	mov	r4, r6
   22714:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   22718:	2b09      	cmp	r3, #9
   2271a:	f106 0601 	add.w	r6, r6, #1
   2271e:	d805      	bhi.n	2272c <__ssvfiscanf_r+0xbc>
   22720:	9b45      	ldr	r3, [sp, #276]	; 0x114
   22722:	fb02 1303 	mla	r3, r2, r3, r1
   22726:	3b30      	subs	r3, #48	; 0x30
   22728:	9345      	str	r3, [sp, #276]	; 0x114
   2272a:	e7f1      	b.n	22710 <__ssvfiscanf_r+0xa0>
   2272c:	2203      	movs	r2, #3
   2272e:	4877      	ldr	r0, [pc, #476]	; (2290c <__ssvfiscanf_r+0x29c>)
   22730:	f7fa fdd0 	bl	1d2d4 <memchr>
   22734:	b140      	cbz	r0, 22748 <__ssvfiscanf_r+0xd8>
   22736:	4634      	mov	r4, r6
   22738:	2301      	movs	r3, #1
   2273a:	ebcb 0000 	rsb	r0, fp, r0
   2273e:	fa03 f000 	lsl.w	r0, r3, r0
   22742:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22744:	4303      	orrs	r3, r0
   22746:	9343      	str	r3, [sp, #268]	; 0x10c
   22748:	1c66      	adds	r6, r4, #1
   2274a:	7824      	ldrb	r4, [r4, #0]
   2274c:	2c67      	cmp	r4, #103	; 0x67
   2274e:	d816      	bhi.n	2277e <__ssvfiscanf_r+0x10e>
   22750:	2c65      	cmp	r4, #101	; 0x65
   22752:	d27f      	bcs.n	22854 <__ssvfiscanf_r+0x1e4>
   22754:	2c47      	cmp	r4, #71	; 0x47
   22756:	d807      	bhi.n	22768 <__ssvfiscanf_r+0xf8>
   22758:	2c45      	cmp	r4, #69	; 0x45
   2275a:	d27b      	bcs.n	22854 <__ssvfiscanf_r+0x1e4>
   2275c:	2c00      	cmp	r4, #0
   2275e:	f000 80cb 	beq.w	228f8 <__ssvfiscanf_r+0x288>
   22762:	2c25      	cmp	r4, #37	; 0x25
   22764:	d01e      	beq.n	227a4 <__ssvfiscanf_r+0x134>
   22766:	e077      	b.n	22858 <__ssvfiscanf_r+0x1e8>
   22768:	2c5b      	cmp	r4, #91	; 0x5b
   2276a:	d051      	beq.n	22810 <__ssvfiscanf_r+0x1a0>
   2276c:	d802      	bhi.n	22774 <__ssvfiscanf_r+0x104>
   2276e:	2c58      	cmp	r4, #88	; 0x58
   22770:	d03e      	beq.n	227f0 <__ssvfiscanf_r+0x180>
   22772:	e071      	b.n	22858 <__ssvfiscanf_r+0x1e8>
   22774:	2c63      	cmp	r4, #99	; 0x63
   22776:	d057      	beq.n	22828 <__ssvfiscanf_r+0x1b8>
   22778:	2c64      	cmp	r4, #100	; 0x64
   2277a:	d03f      	beq.n	227fc <__ssvfiscanf_r+0x18c>
   2277c:	e06c      	b.n	22858 <__ssvfiscanf_r+0x1e8>
   2277e:	2c70      	cmp	r4, #112	; 0x70
   22780:	d032      	beq.n	227e8 <__ssvfiscanf_r+0x178>
   22782:	d807      	bhi.n	22794 <__ssvfiscanf_r+0x124>
   22784:	2c6e      	cmp	r4, #110	; 0x6e
   22786:	d055      	beq.n	22834 <__ssvfiscanf_r+0x1c4>
   22788:	d83a      	bhi.n	22800 <__ssvfiscanf_r+0x190>
   2278a:	2c69      	cmp	r4, #105	; 0x69
   2278c:	d164      	bne.n	22858 <__ssvfiscanf_r+0x1e8>
   2278e:	2300      	movs	r3, #0
   22790:	9344      	str	r3, [sp, #272]	; 0x110
   22792:	e03b      	b.n	2280c <__ssvfiscanf_r+0x19c>
   22794:	2c75      	cmp	r4, #117	; 0x75
   22796:	d031      	beq.n	227fc <__ssvfiscanf_r+0x18c>
   22798:	2c78      	cmp	r4, #120	; 0x78
   2279a:	d029      	beq.n	227f0 <__ssvfiscanf_r+0x180>
   2279c:	2c73      	cmp	r4, #115	; 0x73
   2279e:	d15b      	bne.n	22858 <__ssvfiscanf_r+0x1e8>
   227a0:	2302      	movs	r3, #2
   227a2:	e03f      	b.n	22824 <__ssvfiscanf_r+0x1b4>
   227a4:	686b      	ldr	r3, [r5, #4]
   227a6:	2b00      	cmp	r3, #0
   227a8:	dd0d      	ble.n	227c6 <__ssvfiscanf_r+0x156>
   227aa:	682b      	ldr	r3, [r5, #0]
   227ac:	781a      	ldrb	r2, [r3, #0]
   227ae:	4294      	cmp	r4, r2
   227b0:	f040 80a0 	bne.w	228f4 <__ssvfiscanf_r+0x284>
   227b4:	3301      	adds	r3, #1
   227b6:	686a      	ldr	r2, [r5, #4]
   227b8:	602b      	str	r3, [r5, #0]
   227ba:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   227bc:	3a01      	subs	r2, #1
   227be:	3301      	adds	r3, #1
   227c0:	606a      	str	r2, [r5, #4]
   227c2:	9347      	str	r3, [sp, #284]	; 0x11c
   227c4:	e795      	b.n	226f2 <__ssvfiscanf_r+0x82>
   227c6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   227c8:	4629      	mov	r1, r5
   227ca:	4638      	mov	r0, r7
   227cc:	4798      	blx	r3
   227ce:	2800      	cmp	r0, #0
   227d0:	d0eb      	beq.n	227aa <__ssvfiscanf_r+0x13a>
   227d2:	9846      	ldr	r0, [sp, #280]	; 0x118
   227d4:	2800      	cmp	r0, #0
   227d6:	f000 808f 	beq.w	228f8 <__ssvfiscanf_r+0x288>
   227da:	89ab      	ldrh	r3, [r5, #12]
   227dc:	f013 0f40 	tst.w	r3, #64	; 0x40
   227e0:	bf18      	it	ne
   227e2:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   227e6:	e089      	b.n	228fc <__ssvfiscanf_r+0x28c>
   227e8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   227ea:	f043 0320 	orr.w	r3, r3, #32
   227ee:	9343      	str	r3, [sp, #268]	; 0x10c
   227f0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   227f2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   227f6:	9343      	str	r3, [sp, #268]	; 0x10c
   227f8:	2310      	movs	r3, #16
   227fa:	e002      	b.n	22802 <__ssvfiscanf_r+0x192>
   227fc:	230a      	movs	r3, #10
   227fe:	e000      	b.n	22802 <__ssvfiscanf_r+0x192>
   22800:	2308      	movs	r3, #8
   22802:	2c6e      	cmp	r4, #110	; 0x6e
   22804:	9344      	str	r3, [sp, #272]	; 0x110
   22806:	dd01      	ble.n	2280c <__ssvfiscanf_r+0x19c>
   22808:	2304      	movs	r3, #4
   2280a:	e00b      	b.n	22824 <__ssvfiscanf_r+0x1b4>
   2280c:	2303      	movs	r3, #3
   2280e:	e009      	b.n	22824 <__ssvfiscanf_r+0x1b4>
   22810:	4631      	mov	r1, r6
   22812:	4640      	mov	r0, r8
   22814:	f000 fcaa 	bl	2316c <__sccl>
   22818:	4606      	mov	r6, r0
   2281a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   2281c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   22820:	9343      	str	r3, [sp, #268]	; 0x10c
   22822:	2301      	movs	r3, #1
   22824:	9349      	str	r3, [sp, #292]	; 0x124
   22826:	e01b      	b.n	22860 <__ssvfiscanf_r+0x1f0>
   22828:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   2282a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   2282e:	9343      	str	r3, [sp, #268]	; 0x10c
   22830:	2300      	movs	r3, #0
   22832:	e7f7      	b.n	22824 <__ssvfiscanf_r+0x1b4>
   22834:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   22836:	06d0      	lsls	r0, r2, #27
   22838:	f53f af5b 	bmi.w	226f2 <__ssvfiscanf_r+0x82>
   2283c:	f012 0f01 	tst.w	r2, #1
   22840:	9a01      	ldr	r2, [sp, #4]
   22842:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   22844:	f102 0104 	add.w	r1, r2, #4
   22848:	9101      	str	r1, [sp, #4]
   2284a:	6812      	ldr	r2, [r2, #0]
   2284c:	bf14      	ite	ne
   2284e:	8013      	strhne	r3, [r2, #0]
   22850:	6013      	streq	r3, [r2, #0]
   22852:	e74e      	b.n	226f2 <__ssvfiscanf_r+0x82>
   22854:	2305      	movs	r3, #5
   22856:	e7e5      	b.n	22824 <__ssvfiscanf_r+0x1b4>
   22858:	2303      	movs	r3, #3
   2285a:	9349      	str	r3, [sp, #292]	; 0x124
   2285c:	230a      	movs	r3, #10
   2285e:	9344      	str	r3, [sp, #272]	; 0x110
   22860:	686b      	ldr	r3, [r5, #4]
   22862:	2b00      	cmp	r3, #0
   22864:	dd03      	ble.n	2286e <__ssvfiscanf_r+0x1fe>
   22866:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22868:	0659      	lsls	r1, r3, #25
   2286a:	d511      	bpl.n	22890 <__ssvfiscanf_r+0x220>
   2286c:	e018      	b.n	228a0 <__ssvfiscanf_r+0x230>
   2286e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   22870:	4629      	mov	r1, r5
   22872:	4638      	mov	r0, r7
   22874:	4798      	blx	r3
   22876:	2800      	cmp	r0, #0
   22878:	d0f5      	beq.n	22866 <__ssvfiscanf_r+0x1f6>
   2287a:	e7aa      	b.n	227d2 <__ssvfiscanf_r+0x162>
   2287c:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   2287e:	3201      	adds	r2, #1
   22880:	9247      	str	r2, [sp, #284]	; 0x11c
   22882:	686a      	ldr	r2, [r5, #4]
   22884:	3a01      	subs	r2, #1
   22886:	2a00      	cmp	r2, #0
   22888:	606a      	str	r2, [r5, #4]
   2288a:	dd13      	ble.n	228b4 <__ssvfiscanf_r+0x244>
   2288c:	3301      	adds	r3, #1
   2288e:	602b      	str	r3, [r5, #0]
   22890:	682b      	ldr	r3, [r5, #0]
   22892:	f8da 1000 	ldr.w	r1, [sl]
   22896:	781a      	ldrb	r2, [r3, #0]
   22898:	440a      	add	r2, r1
   2289a:	7852      	ldrb	r2, [r2, #1]
   2289c:	0712      	lsls	r2, r2, #28
   2289e:	d4ed      	bmi.n	2287c <__ssvfiscanf_r+0x20c>
   228a0:	9b49      	ldr	r3, [sp, #292]	; 0x124
   228a2:	2b02      	cmp	r3, #2
   228a4:	dc0d      	bgt.n	228c2 <__ssvfiscanf_r+0x252>
   228a6:	ab01      	add	r3, sp, #4
   228a8:	462a      	mov	r2, r5
   228aa:	a943      	add	r1, sp, #268	; 0x10c
   228ac:	4638      	mov	r0, r7
   228ae:	f000 faf3 	bl	22e98 <_scanf_chars>
   228b2:	e019      	b.n	228e8 <__ssvfiscanf_r+0x278>
   228b4:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   228b6:	4629      	mov	r1, r5
   228b8:	4638      	mov	r0, r7
   228ba:	4798      	blx	r3
   228bc:	2800      	cmp	r0, #0
   228be:	d0e7      	beq.n	22890 <__ssvfiscanf_r+0x220>
   228c0:	e787      	b.n	227d2 <__ssvfiscanf_r+0x162>
   228c2:	2b04      	cmp	r3, #4
   228c4:	dc06      	bgt.n	228d4 <__ssvfiscanf_r+0x264>
   228c6:	ab01      	add	r3, sp, #4
   228c8:	462a      	mov	r2, r5
   228ca:	a943      	add	r1, sp, #268	; 0x10c
   228cc:	4638      	mov	r0, r7
   228ce:	f000 fb49 	bl	22f64 <_scanf_i>
   228d2:	e009      	b.n	228e8 <__ssvfiscanf_r+0x278>
   228d4:	4b0e      	ldr	r3, [pc, #56]	; (22910 <__ssvfiscanf_r+0x2a0>)
   228d6:	2b00      	cmp	r3, #0
   228d8:	f43f af0b 	beq.w	226f2 <__ssvfiscanf_r+0x82>
   228dc:	ab01      	add	r3, sp, #4
   228de:	462a      	mov	r2, r5
   228e0:	a943      	add	r1, sp, #268	; 0x10c
   228e2:	4638      	mov	r0, r7
   228e4:	f7fb fce8 	bl	1e2b8 <_scanf_float>
   228e8:	2801      	cmp	r0, #1
   228ea:	d003      	beq.n	228f4 <__ssvfiscanf_r+0x284>
   228ec:	2802      	cmp	r0, #2
   228ee:	f47f af00 	bne.w	226f2 <__ssvfiscanf_r+0x82>
   228f2:	e76e      	b.n	227d2 <__ssvfiscanf_r+0x162>
   228f4:	9846      	ldr	r0, [sp, #280]	; 0x118
   228f6:	e001      	b.n	228fc <__ssvfiscanf_r+0x28c>
   228f8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   228fc:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   22900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22904:	000225b9 	.word	0x000225b9
   22908:	00022635 	.word	0x00022635
   2290c:	00026696 	.word	0x00026696
   22910:	0001e2b9 	.word	0x0001e2b9
   22914:	2007c0dc 	.word	0x2007c0dc

00022918 <__sfputc_r>:
__sfputc_r():
   22918:	6893      	ldr	r3, [r2, #8]
   2291a:	b410      	push	{r4}
   2291c:	3b01      	subs	r3, #1
   2291e:	2b00      	cmp	r3, #0
   22920:	6093      	str	r3, [r2, #8]
   22922:	da08      	bge.n	22936 <__sfputc_r+0x1e>
   22924:	6994      	ldr	r4, [r2, #24]
   22926:	42a3      	cmp	r3, r4
   22928:	db02      	blt.n	22930 <__sfputc_r+0x18>
   2292a:	b2cb      	uxtb	r3, r1
   2292c:	2b0a      	cmp	r3, #10
   2292e:	d102      	bne.n	22936 <__sfputc_r+0x1e>
   22930:	bc10      	pop	{r4}
   22932:	f7fd bc37 	b.w	201a4 <__swbuf_r>
   22936:	6813      	ldr	r3, [r2, #0]
   22938:	1c58      	adds	r0, r3, #1
   2293a:	6010      	str	r0, [r2, #0]
   2293c:	7019      	strb	r1, [r3, #0]
   2293e:	b2c8      	uxtb	r0, r1
   22940:	bc10      	pop	{r4}
   22942:	4770      	bx	lr

00022944 <__sfputs_r>:
__sfputs_r():
   22944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   22946:	4606      	mov	r6, r0
   22948:	460f      	mov	r7, r1
   2294a:	4614      	mov	r4, r2
   2294c:	18d5      	adds	r5, r2, r3
   2294e:	42ac      	cmp	r4, r5
   22950:	d008      	beq.n	22964 <__sfputs_r+0x20>
   22952:	463a      	mov	r2, r7
   22954:	f814 1b01 	ldrb.w	r1, [r4], #1
   22958:	4630      	mov	r0, r6
   2295a:	f7ff ffdd 	bl	22918 <__sfputc_r>
   2295e:	1c43      	adds	r3, r0, #1
   22960:	d1f5      	bne.n	2294e <__sfputs_r+0xa>
   22962:	e000      	b.n	22966 <__sfputs_r+0x22>
   22964:	2000      	movs	r0, #0
   22966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00022968 <_vfiprintf_r>:
_vfiprintf_r():
   22968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2296c:	b09d      	sub	sp, #116	; 0x74
   2296e:	460c      	mov	r4, r1
   22970:	4617      	mov	r7, r2
   22972:	9303      	str	r3, [sp, #12]
   22974:	4606      	mov	r6, r0
   22976:	b118      	cbz	r0, 22980 <_vfiprintf_r+0x18>
   22978:	6983      	ldr	r3, [r0, #24]
   2297a:	b90b      	cbnz	r3, 22980 <_vfiprintf_r+0x18>
   2297c:	f7fa fad6 	bl	1cf2c <__sinit>
   22980:	4b7f      	ldr	r3, [pc, #508]	; (22b80 <_vfiprintf_r+0x218>)
   22982:	429c      	cmp	r4, r3
   22984:	d101      	bne.n	2298a <_vfiprintf_r+0x22>
   22986:	6874      	ldr	r4, [r6, #4]
   22988:	e008      	b.n	2299c <_vfiprintf_r+0x34>
   2298a:	4b7e      	ldr	r3, [pc, #504]	; (22b84 <_vfiprintf_r+0x21c>)
   2298c:	429c      	cmp	r4, r3
   2298e:	d101      	bne.n	22994 <_vfiprintf_r+0x2c>
   22990:	68b4      	ldr	r4, [r6, #8]
   22992:	e003      	b.n	2299c <_vfiprintf_r+0x34>
   22994:	4b7c      	ldr	r3, [pc, #496]	; (22b88 <_vfiprintf_r+0x220>)
   22996:	429c      	cmp	r4, r3
   22998:	bf08      	it	eq
   2299a:	68f4      	ldreq	r4, [r6, #12]
   2299c:	89a3      	ldrh	r3, [r4, #12]
   2299e:	0718      	lsls	r0, r3, #28
   229a0:	d50c      	bpl.n	229bc <_vfiprintf_r+0x54>
   229a2:	6923      	ldr	r3, [r4, #16]
   229a4:	b153      	cbz	r3, 229bc <_vfiprintf_r+0x54>
   229a6:	2300      	movs	r3, #0
   229a8:	9309      	str	r3, [sp, #36]	; 0x24
   229aa:	2320      	movs	r3, #32
   229ac:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   229b0:	2330      	movs	r3, #48	; 0x30
   229b2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   229b6:	f8df b1d4 	ldr.w	fp, [pc, #468]	; 22b8c <_vfiprintf_r+0x224>
   229ba:	e044      	b.n	22a46 <_vfiprintf_r+0xde>
   229bc:	4621      	mov	r1, r4
   229be:	4630      	mov	r0, r6
   229c0:	f7fd fc56 	bl	20270 <__swsetup_r>
   229c4:	2800      	cmp	r0, #0
   229c6:	d0ee      	beq.n	229a6 <_vfiprintf_r+0x3e>
   229c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   229cc:	e0d5      	b.n	22b7a <_vfiprintf_r+0x212>
   229ce:	9a03      	ldr	r2, [sp, #12]
   229d0:	1d11      	adds	r1, r2, #4
   229d2:	6812      	ldr	r2, [r2, #0]
   229d4:	9103      	str	r1, [sp, #12]
   229d6:	2a00      	cmp	r2, #0
   229d8:	f280 808c 	bge.w	22af4 <_vfiprintf_r+0x18c>
   229dc:	4252      	negs	r2, r2
   229de:	f043 0002 	orr.w	r0, r3, #2
   229e2:	9207      	str	r2, [sp, #28]
   229e4:	9004      	str	r0, [sp, #16]
   229e6:	f898 3000 	ldrb.w	r3, [r8]
   229ea:	2b2e      	cmp	r3, #46	; 0x2e
   229ec:	f000 8084 	beq.w	22af8 <_vfiprintf_r+0x190>
   229f0:	2203      	movs	r2, #3
   229f2:	f898 1000 	ldrb.w	r1, [r8]
   229f6:	4865      	ldr	r0, [pc, #404]	; (22b8c <_vfiprintf_r+0x224>)
   229f8:	f7fa fc6c 	bl	1d2d4 <memchr>
   229fc:	b148      	cbz	r0, 22a12 <_vfiprintf_r+0xaa>
   229fe:	2340      	movs	r3, #64	; 0x40
   22a00:	ebcb 0000 	rsb	r0, fp, r0
   22a04:	fa03 f000 	lsl.w	r0, r3, r0
   22a08:	9b04      	ldr	r3, [sp, #16]
   22a0a:	f108 0801 	add.w	r8, r8, #1
   22a0e:	4318      	orrs	r0, r3
   22a10:	9004      	str	r0, [sp, #16]
   22a12:	f898 1000 	ldrb.w	r1, [r8]
   22a16:	2206      	movs	r2, #6
   22a18:	485d      	ldr	r0, [pc, #372]	; (22b90 <_vfiprintf_r+0x228>)
   22a1a:	f108 0701 	add.w	r7, r8, #1
   22a1e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   22a22:	f7fa fc57 	bl	1d2d4 <memchr>
   22a26:	2800      	cmp	r0, #0
   22a28:	f000 8095 	beq.w	22b56 <_vfiprintf_r+0x1ee>
   22a2c:	4b59      	ldr	r3, [pc, #356]	; (22b94 <_vfiprintf_r+0x22c>)
   22a2e:	2b00      	cmp	r3, #0
   22a30:	f040 8088 	bne.w	22b44 <_vfiprintf_r+0x1dc>
   22a34:	9b03      	ldr	r3, [sp, #12]
   22a36:	3307      	adds	r3, #7
   22a38:	f023 0307 	bic.w	r3, r3, #7
   22a3c:	3308      	adds	r3, #8
   22a3e:	9303      	str	r3, [sp, #12]
   22a40:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22a42:	4453      	add	r3, sl
   22a44:	9309      	str	r3, [sp, #36]	; 0x24
   22a46:	46b8      	mov	r8, r7
   22a48:	4645      	mov	r5, r8
   22a4a:	f815 3b01 	ldrb.w	r3, [r5], #1
   22a4e:	b91b      	cbnz	r3, 22a58 <_vfiprintf_r+0xf0>
   22a50:	ebb8 0907 	subs.w	r9, r8, r7
   22a54:	d00f      	beq.n	22a76 <_vfiprintf_r+0x10e>
   22a56:	e003      	b.n	22a60 <_vfiprintf_r+0xf8>
   22a58:	2b25      	cmp	r3, #37	; 0x25
   22a5a:	d0f9      	beq.n	22a50 <_vfiprintf_r+0xe8>
   22a5c:	46a8      	mov	r8, r5
   22a5e:	e7f3      	b.n	22a48 <_vfiprintf_r+0xe0>
   22a60:	464b      	mov	r3, r9
   22a62:	463a      	mov	r2, r7
   22a64:	4621      	mov	r1, r4
   22a66:	4630      	mov	r0, r6
   22a68:	f7ff ff6c 	bl	22944 <__sfputs_r>
   22a6c:	3001      	adds	r0, #1
   22a6e:	d07f      	beq.n	22b70 <_vfiprintf_r+0x208>
   22a70:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22a72:	444b      	add	r3, r9
   22a74:	9309      	str	r3, [sp, #36]	; 0x24
   22a76:	f898 3000 	ldrb.w	r3, [r8]
   22a7a:	2b00      	cmp	r3, #0
   22a7c:	d078      	beq.n	22b70 <_vfiprintf_r+0x208>
   22a7e:	2300      	movs	r3, #0
   22a80:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   22a84:	9304      	str	r3, [sp, #16]
   22a86:	9307      	str	r3, [sp, #28]
   22a88:	9205      	str	r2, [sp, #20]
   22a8a:	9306      	str	r3, [sp, #24]
   22a8c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   22a90:	931a      	str	r3, [sp, #104]	; 0x68
   22a92:	2701      	movs	r7, #1
   22a94:	2205      	movs	r2, #5
   22a96:	7829      	ldrb	r1, [r5, #0]
   22a98:	483f      	ldr	r0, [pc, #252]	; (22b98 <_vfiprintf_r+0x230>)
   22a9a:	f7fa fc1b 	bl	1d2d4 <memchr>
   22a9e:	f105 0801 	add.w	r8, r5, #1
   22aa2:	9b04      	ldr	r3, [sp, #16]
   22aa4:	b138      	cbz	r0, 22ab6 <_vfiprintf_r+0x14e>
   22aa6:	4a3c      	ldr	r2, [pc, #240]	; (22b98 <_vfiprintf_r+0x230>)
   22aa8:	4645      	mov	r5, r8
   22aaa:	1a80      	subs	r0, r0, r2
   22aac:	fa07 f000 	lsl.w	r0, r7, r0
   22ab0:	4318      	orrs	r0, r3
   22ab2:	9004      	str	r0, [sp, #16]
   22ab4:	e7ee      	b.n	22a94 <_vfiprintf_r+0x12c>
   22ab6:	06d9      	lsls	r1, r3, #27
   22ab8:	bf44      	itt	mi
   22aba:	2220      	movmi	r2, #32
   22abc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   22ac0:	071a      	lsls	r2, r3, #28
   22ac2:	bf44      	itt	mi
   22ac4:	222b      	movmi	r2, #43	; 0x2b
   22ac6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   22aca:	782a      	ldrb	r2, [r5, #0]
   22acc:	2a2a      	cmp	r2, #42	; 0x2a
   22ace:	f43f af7e 	beq.w	229ce <_vfiprintf_r+0x66>
   22ad2:	9a07      	ldr	r2, [sp, #28]
   22ad4:	2100      	movs	r1, #0
   22ad6:	200a      	movs	r0, #10
   22ad8:	46a8      	mov	r8, r5
   22ada:	f898 3000 	ldrb.w	r3, [r8]
   22ade:	3501      	adds	r5, #1
   22ae0:	3b30      	subs	r3, #48	; 0x30
   22ae2:	2b09      	cmp	r3, #9
   22ae4:	d803      	bhi.n	22aee <_vfiprintf_r+0x186>
   22ae6:	fb00 3202 	mla	r2, r0, r2, r3
   22aea:	2101      	movs	r1, #1
   22aec:	e7f4      	b.n	22ad8 <_vfiprintf_r+0x170>
   22aee:	2900      	cmp	r1, #0
   22af0:	f43f af79 	beq.w	229e6 <_vfiprintf_r+0x7e>
   22af4:	9207      	str	r2, [sp, #28]
   22af6:	e776      	b.n	229e6 <_vfiprintf_r+0x7e>
   22af8:	f898 3001 	ldrb.w	r3, [r8, #1]
   22afc:	2b2a      	cmp	r3, #42	; 0x2a
   22afe:	d10b      	bne.n	22b18 <_vfiprintf_r+0x1b0>
   22b00:	9b03      	ldr	r3, [sp, #12]
   22b02:	f108 0802 	add.w	r8, r8, #2
   22b06:	1d1a      	adds	r2, r3, #4
   22b08:	681b      	ldr	r3, [r3, #0]
   22b0a:	9203      	str	r2, [sp, #12]
   22b0c:	2b00      	cmp	r3, #0
   22b0e:	bfb8      	it	lt
   22b10:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   22b14:	9305      	str	r3, [sp, #20]
   22b16:	e76b      	b.n	229f0 <_vfiprintf_r+0x88>
   22b18:	2300      	movs	r3, #0
   22b1a:	4619      	mov	r1, r3
   22b1c:	9305      	str	r3, [sp, #20]
   22b1e:	f108 0001 	add.w	r0, r8, #1
   22b22:	250a      	movs	r5, #10
   22b24:	4680      	mov	r8, r0
   22b26:	f898 2000 	ldrb.w	r2, [r8]
   22b2a:	3001      	adds	r0, #1
   22b2c:	3a30      	subs	r2, #48	; 0x30
   22b2e:	2a09      	cmp	r2, #9
   22b30:	d803      	bhi.n	22b3a <_vfiprintf_r+0x1d2>
   22b32:	fb05 2101 	mla	r1, r5, r1, r2
   22b36:	2301      	movs	r3, #1
   22b38:	e7f4      	b.n	22b24 <_vfiprintf_r+0x1bc>
   22b3a:	2b00      	cmp	r3, #0
   22b3c:	f43f af58 	beq.w	229f0 <_vfiprintf_r+0x88>
   22b40:	9105      	str	r1, [sp, #20]
   22b42:	e755      	b.n	229f0 <_vfiprintf_r+0x88>
   22b44:	ab03      	add	r3, sp, #12
   22b46:	9300      	str	r3, [sp, #0]
   22b48:	4622      	mov	r2, r4
   22b4a:	4b14      	ldr	r3, [pc, #80]	; (22b9c <_vfiprintf_r+0x234>)
   22b4c:	a904      	add	r1, sp, #16
   22b4e:	4630      	mov	r0, r6
   22b50:	f7fa ffd2 	bl	1daf8 <_printf_float>
   22b54:	e007      	b.n	22b66 <_vfiprintf_r+0x1fe>
   22b56:	ab03      	add	r3, sp, #12
   22b58:	9300      	str	r3, [sp, #0]
   22b5a:	4622      	mov	r2, r4
   22b5c:	4b0f      	ldr	r3, [pc, #60]	; (22b9c <_vfiprintf_r+0x234>)
   22b5e:	a904      	add	r1, sp, #16
   22b60:	4630      	mov	r0, r6
   22b62:	f7fb fa83 	bl	1e06c <_printf_i>
   22b66:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   22b6a:	4682      	mov	sl, r0
   22b6c:	f47f af68 	bne.w	22a40 <_vfiprintf_r+0xd8>
   22b70:	89a3      	ldrh	r3, [r4, #12]
   22b72:	065b      	lsls	r3, r3, #25
   22b74:	f53f af28 	bmi.w	229c8 <_vfiprintf_r+0x60>
   22b78:	9809      	ldr	r0, [sp, #36]	; 0x24
   22b7a:	b01d      	add	sp, #116	; 0x74
   22b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b80:	00026334 	.word	0x00026334
   22b84:	00026354 	.word	0x00026354
   22b88:	00026374 	.word	0x00026374
   22b8c:	00026696 	.word	0x00026696
   22b90:	0002669a 	.word	0x0002669a
   22b94:	0001daf9 	.word	0x0001daf9
   22b98:	00026690 	.word	0x00026690
   22b9c:	00022945 	.word	0x00022945

00022ba0 <__svfiscanf_r>:
__svfiscanf_r():
   22ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ba4:	f8df 929c 	ldr.w	r9, [pc, #668]	; 22e44 <__svfiscanf_r+0x2a4>
   22ba8:	4607      	mov	r7, r0
   22baa:	460d      	mov	r5, r1
   22bac:	46ca      	mov	sl, r9
   22bae:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   22bb2:	9301      	str	r3, [sp, #4]
   22bb4:	2300      	movs	r3, #0
   22bb6:	9346      	str	r3, [sp, #280]	; 0x118
   22bb8:	9347      	str	r3, [sp, #284]	; 0x11c
   22bba:	4b9e      	ldr	r3, [pc, #632]	; (22e34 <__svfiscanf_r+0x294>)
   22bbc:	f10d 080c 	add.w	r8, sp, #12
   22bc0:	93a2      	str	r3, [sp, #648]	; 0x288
   22bc2:	4b9d      	ldr	r3, [pc, #628]	; (22e38 <__svfiscanf_r+0x298>)
   22bc4:	f8df b274 	ldr.w	fp, [pc, #628]	; 22e3c <__svfiscanf_r+0x29c>
   22bc8:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   22bcc:	93a3      	str	r3, [sp, #652]	; 0x28c
   22bce:	7814      	ldrb	r4, [r2, #0]
   22bd0:	2c00      	cmp	r4, #0
   22bd2:	f000 8127 	beq.w	22e24 <__svfiscanf_r+0x284>
   22bd6:	f8d9 3000 	ldr.w	r3, [r9]
   22bda:	4423      	add	r3, r4
   22bdc:	785b      	ldrb	r3, [r3, #1]
   22bde:	f003 0308 	and.w	r3, r3, #8
   22be2:	f003 01ff 	and.w	r1, r3, #255	; 0xff
   22be6:	b1f3      	cbz	r3, 22c26 <__svfiscanf_r+0x86>
   22be8:	686b      	ldr	r3, [r5, #4]
   22bea:	2b00      	cmp	r3, #0
   22bec:	dd10      	ble.n	22c10 <__svfiscanf_r+0x70>
   22bee:	682b      	ldr	r3, [r5, #0]
   22bf0:	f8da 0000 	ldr.w	r0, [sl]
   22bf4:	7819      	ldrb	r1, [r3, #0]
   22bf6:	4401      	add	r1, r0
   22bf8:	7849      	ldrb	r1, [r1, #1]
   22bfa:	070c      	lsls	r4, r1, #28
   22bfc:	d510      	bpl.n	22c20 <__svfiscanf_r+0x80>
   22bfe:	9947      	ldr	r1, [sp, #284]	; 0x11c
   22c00:	3301      	adds	r3, #1
   22c02:	3101      	adds	r1, #1
   22c04:	9147      	str	r1, [sp, #284]	; 0x11c
   22c06:	6869      	ldr	r1, [r5, #4]
   22c08:	602b      	str	r3, [r5, #0]
   22c0a:	3901      	subs	r1, #1
   22c0c:	6069      	str	r1, [r5, #4]
   22c0e:	e7eb      	b.n	22be8 <__svfiscanf_r+0x48>
   22c10:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   22c12:	4629      	mov	r1, r5
   22c14:	4638      	mov	r0, r7
   22c16:	9200      	str	r2, [sp, #0]
   22c18:	4798      	blx	r3
   22c1a:	9a00      	ldr	r2, [sp, #0]
   22c1c:	2800      	cmp	r0, #0
   22c1e:	d0e6      	beq.n	22bee <__svfiscanf_r+0x4e>
   22c20:	1c56      	adds	r6, r2, #1
   22c22:	4632      	mov	r2, r6
   22c24:	e7d3      	b.n	22bce <__svfiscanf_r+0x2e>
   22c26:	2c25      	cmp	r4, #37	; 0x25
   22c28:	f102 0601 	add.w	r6, r2, #1
   22c2c:	d152      	bne.n	22cd4 <__svfiscanf_r+0x134>
   22c2e:	9143      	str	r1, [sp, #268]	; 0x10c
   22c30:	9145      	str	r1, [sp, #276]	; 0x114
   22c32:	7853      	ldrb	r3, [r2, #1]
   22c34:	2b2a      	cmp	r3, #42	; 0x2a
   22c36:	bf02      	ittt	eq
   22c38:	2310      	moveq	r3, #16
   22c3a:	1c96      	addeq	r6, r2, #2
   22c3c:	9343      	streq	r3, [sp, #268]	; 0x10c
   22c3e:	220a      	movs	r2, #10
   22c40:	7831      	ldrb	r1, [r6, #0]
   22c42:	4634      	mov	r4, r6
   22c44:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   22c48:	2b09      	cmp	r3, #9
   22c4a:	f106 0601 	add.w	r6, r6, #1
   22c4e:	d805      	bhi.n	22c5c <__svfiscanf_r+0xbc>
   22c50:	9b45      	ldr	r3, [sp, #276]	; 0x114
   22c52:	fb02 1303 	mla	r3, r2, r3, r1
   22c56:	3b30      	subs	r3, #48	; 0x30
   22c58:	9345      	str	r3, [sp, #276]	; 0x114
   22c5a:	e7f1      	b.n	22c40 <__svfiscanf_r+0xa0>
   22c5c:	2203      	movs	r2, #3
   22c5e:	4877      	ldr	r0, [pc, #476]	; (22e3c <__svfiscanf_r+0x29c>)
   22c60:	f7fa fb38 	bl	1d2d4 <memchr>
   22c64:	b140      	cbz	r0, 22c78 <__svfiscanf_r+0xd8>
   22c66:	4634      	mov	r4, r6
   22c68:	2301      	movs	r3, #1
   22c6a:	ebcb 0000 	rsb	r0, fp, r0
   22c6e:	fa03 f000 	lsl.w	r0, r3, r0
   22c72:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22c74:	4303      	orrs	r3, r0
   22c76:	9343      	str	r3, [sp, #268]	; 0x10c
   22c78:	1c66      	adds	r6, r4, #1
   22c7a:	7824      	ldrb	r4, [r4, #0]
   22c7c:	2c67      	cmp	r4, #103	; 0x67
   22c7e:	d816      	bhi.n	22cae <__svfiscanf_r+0x10e>
   22c80:	2c65      	cmp	r4, #101	; 0x65
   22c82:	d27f      	bcs.n	22d84 <__svfiscanf_r+0x1e4>
   22c84:	2c47      	cmp	r4, #71	; 0x47
   22c86:	d807      	bhi.n	22c98 <__svfiscanf_r+0xf8>
   22c88:	2c45      	cmp	r4, #69	; 0x45
   22c8a:	d27b      	bcs.n	22d84 <__svfiscanf_r+0x1e4>
   22c8c:	2c00      	cmp	r4, #0
   22c8e:	f000 80cb 	beq.w	22e28 <__svfiscanf_r+0x288>
   22c92:	2c25      	cmp	r4, #37	; 0x25
   22c94:	d01e      	beq.n	22cd4 <__svfiscanf_r+0x134>
   22c96:	e077      	b.n	22d88 <__svfiscanf_r+0x1e8>
   22c98:	2c5b      	cmp	r4, #91	; 0x5b
   22c9a:	d051      	beq.n	22d40 <__svfiscanf_r+0x1a0>
   22c9c:	d802      	bhi.n	22ca4 <__svfiscanf_r+0x104>
   22c9e:	2c58      	cmp	r4, #88	; 0x58
   22ca0:	d03e      	beq.n	22d20 <__svfiscanf_r+0x180>
   22ca2:	e071      	b.n	22d88 <__svfiscanf_r+0x1e8>
   22ca4:	2c63      	cmp	r4, #99	; 0x63
   22ca6:	d057      	beq.n	22d58 <__svfiscanf_r+0x1b8>
   22ca8:	2c64      	cmp	r4, #100	; 0x64
   22caa:	d03f      	beq.n	22d2c <__svfiscanf_r+0x18c>
   22cac:	e06c      	b.n	22d88 <__svfiscanf_r+0x1e8>
   22cae:	2c70      	cmp	r4, #112	; 0x70
   22cb0:	d032      	beq.n	22d18 <__svfiscanf_r+0x178>
   22cb2:	d807      	bhi.n	22cc4 <__svfiscanf_r+0x124>
   22cb4:	2c6e      	cmp	r4, #110	; 0x6e
   22cb6:	d055      	beq.n	22d64 <__svfiscanf_r+0x1c4>
   22cb8:	d83a      	bhi.n	22d30 <__svfiscanf_r+0x190>
   22cba:	2c69      	cmp	r4, #105	; 0x69
   22cbc:	d164      	bne.n	22d88 <__svfiscanf_r+0x1e8>
   22cbe:	2300      	movs	r3, #0
   22cc0:	9344      	str	r3, [sp, #272]	; 0x110
   22cc2:	e03b      	b.n	22d3c <__svfiscanf_r+0x19c>
   22cc4:	2c75      	cmp	r4, #117	; 0x75
   22cc6:	d031      	beq.n	22d2c <__svfiscanf_r+0x18c>
   22cc8:	2c78      	cmp	r4, #120	; 0x78
   22cca:	d029      	beq.n	22d20 <__svfiscanf_r+0x180>
   22ccc:	2c73      	cmp	r4, #115	; 0x73
   22cce:	d15b      	bne.n	22d88 <__svfiscanf_r+0x1e8>
   22cd0:	2302      	movs	r3, #2
   22cd2:	e03f      	b.n	22d54 <__svfiscanf_r+0x1b4>
   22cd4:	686b      	ldr	r3, [r5, #4]
   22cd6:	2b00      	cmp	r3, #0
   22cd8:	dd0d      	ble.n	22cf6 <__svfiscanf_r+0x156>
   22cda:	682b      	ldr	r3, [r5, #0]
   22cdc:	781a      	ldrb	r2, [r3, #0]
   22cde:	4294      	cmp	r4, r2
   22ce0:	f040 80a0 	bne.w	22e24 <__svfiscanf_r+0x284>
   22ce4:	3301      	adds	r3, #1
   22ce6:	686a      	ldr	r2, [r5, #4]
   22ce8:	602b      	str	r3, [r5, #0]
   22cea:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   22cec:	3a01      	subs	r2, #1
   22cee:	3301      	adds	r3, #1
   22cf0:	606a      	str	r2, [r5, #4]
   22cf2:	9347      	str	r3, [sp, #284]	; 0x11c
   22cf4:	e795      	b.n	22c22 <__svfiscanf_r+0x82>
   22cf6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   22cf8:	4629      	mov	r1, r5
   22cfa:	4638      	mov	r0, r7
   22cfc:	4798      	blx	r3
   22cfe:	2800      	cmp	r0, #0
   22d00:	d0eb      	beq.n	22cda <__svfiscanf_r+0x13a>
   22d02:	9846      	ldr	r0, [sp, #280]	; 0x118
   22d04:	2800      	cmp	r0, #0
   22d06:	f000 808f 	beq.w	22e28 <__svfiscanf_r+0x288>
   22d0a:	89ab      	ldrh	r3, [r5, #12]
   22d0c:	f013 0f40 	tst.w	r3, #64	; 0x40
   22d10:	bf18      	it	ne
   22d12:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   22d16:	e089      	b.n	22e2c <__svfiscanf_r+0x28c>
   22d18:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22d1a:	f043 0320 	orr.w	r3, r3, #32
   22d1e:	9343      	str	r3, [sp, #268]	; 0x10c
   22d20:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22d22:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   22d26:	9343      	str	r3, [sp, #268]	; 0x10c
   22d28:	2310      	movs	r3, #16
   22d2a:	e002      	b.n	22d32 <__svfiscanf_r+0x192>
   22d2c:	230a      	movs	r3, #10
   22d2e:	e000      	b.n	22d32 <__svfiscanf_r+0x192>
   22d30:	2308      	movs	r3, #8
   22d32:	2c6e      	cmp	r4, #110	; 0x6e
   22d34:	9344      	str	r3, [sp, #272]	; 0x110
   22d36:	dd01      	ble.n	22d3c <__svfiscanf_r+0x19c>
   22d38:	2304      	movs	r3, #4
   22d3a:	e00b      	b.n	22d54 <__svfiscanf_r+0x1b4>
   22d3c:	2303      	movs	r3, #3
   22d3e:	e009      	b.n	22d54 <__svfiscanf_r+0x1b4>
   22d40:	4631      	mov	r1, r6
   22d42:	4640      	mov	r0, r8
   22d44:	f000 fa12 	bl	2316c <__sccl>
   22d48:	4606      	mov	r6, r0
   22d4a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22d4c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   22d50:	9343      	str	r3, [sp, #268]	; 0x10c
   22d52:	2301      	movs	r3, #1
   22d54:	9349      	str	r3, [sp, #292]	; 0x124
   22d56:	e01b      	b.n	22d90 <__svfiscanf_r+0x1f0>
   22d58:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22d5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   22d5e:	9343      	str	r3, [sp, #268]	; 0x10c
   22d60:	2300      	movs	r3, #0
   22d62:	e7f7      	b.n	22d54 <__svfiscanf_r+0x1b4>
   22d64:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   22d66:	06d0      	lsls	r0, r2, #27
   22d68:	f53f af5b 	bmi.w	22c22 <__svfiscanf_r+0x82>
   22d6c:	f012 0f01 	tst.w	r2, #1
   22d70:	9a01      	ldr	r2, [sp, #4]
   22d72:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   22d74:	f102 0104 	add.w	r1, r2, #4
   22d78:	9101      	str	r1, [sp, #4]
   22d7a:	6812      	ldr	r2, [r2, #0]
   22d7c:	bf14      	ite	ne
   22d7e:	8013      	strhne	r3, [r2, #0]
   22d80:	6013      	streq	r3, [r2, #0]
   22d82:	e74e      	b.n	22c22 <__svfiscanf_r+0x82>
   22d84:	2305      	movs	r3, #5
   22d86:	e7e5      	b.n	22d54 <__svfiscanf_r+0x1b4>
   22d88:	2303      	movs	r3, #3
   22d8a:	9349      	str	r3, [sp, #292]	; 0x124
   22d8c:	230a      	movs	r3, #10
   22d8e:	9344      	str	r3, [sp, #272]	; 0x110
   22d90:	686b      	ldr	r3, [r5, #4]
   22d92:	2b00      	cmp	r3, #0
   22d94:	dd03      	ble.n	22d9e <__svfiscanf_r+0x1fe>
   22d96:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22d98:	0659      	lsls	r1, r3, #25
   22d9a:	d511      	bpl.n	22dc0 <__svfiscanf_r+0x220>
   22d9c:	e018      	b.n	22dd0 <__svfiscanf_r+0x230>
   22d9e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   22da0:	4629      	mov	r1, r5
   22da2:	4638      	mov	r0, r7
   22da4:	4798      	blx	r3
   22da6:	2800      	cmp	r0, #0
   22da8:	d0f5      	beq.n	22d96 <__svfiscanf_r+0x1f6>
   22daa:	e7aa      	b.n	22d02 <__svfiscanf_r+0x162>
   22dac:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   22dae:	3201      	adds	r2, #1
   22db0:	9247      	str	r2, [sp, #284]	; 0x11c
   22db2:	686a      	ldr	r2, [r5, #4]
   22db4:	3a01      	subs	r2, #1
   22db6:	2a00      	cmp	r2, #0
   22db8:	606a      	str	r2, [r5, #4]
   22dba:	dd13      	ble.n	22de4 <__svfiscanf_r+0x244>
   22dbc:	3301      	adds	r3, #1
   22dbe:	602b      	str	r3, [r5, #0]
   22dc0:	682b      	ldr	r3, [r5, #0]
   22dc2:	f8da 1000 	ldr.w	r1, [sl]
   22dc6:	781a      	ldrb	r2, [r3, #0]
   22dc8:	440a      	add	r2, r1
   22dca:	7852      	ldrb	r2, [r2, #1]
   22dcc:	0712      	lsls	r2, r2, #28
   22dce:	d4ed      	bmi.n	22dac <__svfiscanf_r+0x20c>
   22dd0:	9b49      	ldr	r3, [sp, #292]	; 0x124
   22dd2:	2b02      	cmp	r3, #2
   22dd4:	dc0d      	bgt.n	22df2 <__svfiscanf_r+0x252>
   22dd6:	ab01      	add	r3, sp, #4
   22dd8:	462a      	mov	r2, r5
   22dda:	a943      	add	r1, sp, #268	; 0x10c
   22ddc:	4638      	mov	r0, r7
   22dde:	f000 f85b 	bl	22e98 <_scanf_chars>
   22de2:	e019      	b.n	22e18 <__svfiscanf_r+0x278>
   22de4:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   22de6:	4629      	mov	r1, r5
   22de8:	4638      	mov	r0, r7
   22dea:	4798      	blx	r3
   22dec:	2800      	cmp	r0, #0
   22dee:	d0e7      	beq.n	22dc0 <__svfiscanf_r+0x220>
   22df0:	e787      	b.n	22d02 <__svfiscanf_r+0x162>
   22df2:	2b04      	cmp	r3, #4
   22df4:	dc06      	bgt.n	22e04 <__svfiscanf_r+0x264>
   22df6:	ab01      	add	r3, sp, #4
   22df8:	462a      	mov	r2, r5
   22dfa:	a943      	add	r1, sp, #268	; 0x10c
   22dfc:	4638      	mov	r0, r7
   22dfe:	f000 f8b1 	bl	22f64 <_scanf_i>
   22e02:	e009      	b.n	22e18 <__svfiscanf_r+0x278>
   22e04:	4b0e      	ldr	r3, [pc, #56]	; (22e40 <__svfiscanf_r+0x2a0>)
   22e06:	2b00      	cmp	r3, #0
   22e08:	f43f af0b 	beq.w	22c22 <__svfiscanf_r+0x82>
   22e0c:	ab01      	add	r3, sp, #4
   22e0e:	462a      	mov	r2, r5
   22e10:	a943      	add	r1, sp, #268	; 0x10c
   22e12:	4638      	mov	r0, r7
   22e14:	f7fb fa50 	bl	1e2b8 <_scanf_float>
   22e18:	2801      	cmp	r0, #1
   22e1a:	d003      	beq.n	22e24 <__svfiscanf_r+0x284>
   22e1c:	2802      	cmp	r0, #2
   22e1e:	f47f af00 	bne.w	22c22 <__svfiscanf_r+0x82>
   22e22:	e76e      	b.n	22d02 <__svfiscanf_r+0x162>
   22e24:	9846      	ldr	r0, [sp, #280]	; 0x118
   22e26:	e001      	b.n	22e2c <__svfiscanf_r+0x28c>
   22e28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   22e2c:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   22e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e34:	00023351 	.word	0x00023351
   22e38:	0001e851 	.word	0x0001e851
   22e3c:	00026696 	.word	0x00026696
   22e40:	0001e2b9 	.word	0x0001e2b9
   22e44:	2007c0dc 	.word	0x2007c0dc

00022e48 <_vfiscanf_r>:
_vfiscanf_r():
   22e48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   22e4c:	460c      	mov	r4, r1
   22e4e:	4616      	mov	r6, r2
   22e50:	461f      	mov	r7, r3
   22e52:	4605      	mov	r5, r0
   22e54:	b118      	cbz	r0, 22e5e <_vfiscanf_r+0x16>
   22e56:	6983      	ldr	r3, [r0, #24]
   22e58:	b90b      	cbnz	r3, 22e5e <_vfiscanf_r+0x16>
   22e5a:	f7fa f867 	bl	1cf2c <__sinit>
   22e5e:	4b0b      	ldr	r3, [pc, #44]	; (22e8c <_vfiscanf_r+0x44>)
   22e60:	429c      	cmp	r4, r3
   22e62:	d101      	bne.n	22e68 <_vfiscanf_r+0x20>
   22e64:	686c      	ldr	r4, [r5, #4]
   22e66:	e008      	b.n	22e7a <_vfiscanf_r+0x32>
   22e68:	4b09      	ldr	r3, [pc, #36]	; (22e90 <_vfiscanf_r+0x48>)
   22e6a:	429c      	cmp	r4, r3
   22e6c:	d101      	bne.n	22e72 <_vfiscanf_r+0x2a>
   22e6e:	68ac      	ldr	r4, [r5, #8]
   22e70:	e003      	b.n	22e7a <_vfiscanf_r+0x32>
   22e72:	4b08      	ldr	r3, [pc, #32]	; (22e94 <_vfiscanf_r+0x4c>)
   22e74:	429c      	cmp	r4, r3
   22e76:	bf08      	it	eq
   22e78:	68ec      	ldreq	r4, [r5, #12]
   22e7a:	463b      	mov	r3, r7
   22e7c:	4632      	mov	r2, r6
   22e7e:	4621      	mov	r1, r4
   22e80:	4628      	mov	r0, r5
   22e82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   22e86:	f7ff be8b 	b.w	22ba0 <__svfiscanf_r>
   22e8a:	bf00      	nop
   22e8c:	00026334 	.word	0x00026334
   22e90:	00026354 	.word	0x00026354
   22e94:	00026374 	.word	0x00026374

00022e98 <_scanf_chars>:
_scanf_chars():
   22e98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   22e9c:	4615      	mov	r5, r2
   22e9e:	688a      	ldr	r2, [r1, #8]
   22ea0:	4680      	mov	r8, r0
   22ea2:	460c      	mov	r4, r1
   22ea4:	b932      	cbnz	r2, 22eb4 <_scanf_chars+0x1c>
   22ea6:	698a      	ldr	r2, [r1, #24]
   22ea8:	2a00      	cmp	r2, #0
   22eaa:	bf0c      	ite	eq
   22eac:	2201      	moveq	r2, #1
   22eae:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   22eb2:	608a      	str	r2, [r1, #8]
   22eb4:	6822      	ldr	r2, [r4, #0]
   22eb6:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 22f60 <_scanf_chars+0xc8>
   22eba:	06d1      	lsls	r1, r2, #27
   22ebc:	bf58      	it	pl
   22ebe:	681a      	ldrpl	r2, [r3, #0]
   22ec0:	f04f 0600 	mov.w	r6, #0
   22ec4:	bf5e      	ittt	pl
   22ec6:	1d11      	addpl	r1, r2, #4
   22ec8:	6019      	strpl	r1, [r3, #0]
   22eca:	6817      	ldrpl	r7, [r2, #0]
   22ecc:	69a0      	ldr	r0, [r4, #24]
   22ece:	b9f8      	cbnz	r0, 22f10 <_scanf_chars+0x78>
   22ed0:	6823      	ldr	r3, [r4, #0]
   22ed2:	3601      	adds	r6, #1
   22ed4:	06da      	lsls	r2, r3, #27
   22ed6:	bf5e      	ittt	pl
   22ed8:	682b      	ldrpl	r3, [r5, #0]
   22eda:	781b      	ldrbpl	r3, [r3, #0]
   22edc:	703b      	strbpl	r3, [r7, #0]
   22ede:	682a      	ldr	r2, [r5, #0]
   22ee0:	686b      	ldr	r3, [r5, #4]
   22ee2:	f102 0201 	add.w	r2, r2, #1
   22ee6:	602a      	str	r2, [r5, #0]
   22ee8:	68a2      	ldr	r2, [r4, #8]
   22eea:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   22eee:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   22ef2:	606b      	str	r3, [r5, #4]
   22ef4:	bf58      	it	pl
   22ef6:	3701      	addpl	r7, #1
   22ef8:	60a2      	str	r2, [r4, #8]
   22efa:	b1e2      	cbz	r2, 22f36 <_scanf_chars+0x9e>
   22efc:	2b00      	cmp	r3, #0
   22efe:	dce5      	bgt.n	22ecc <_scanf_chars+0x34>
   22f00:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   22f04:	4629      	mov	r1, r5
   22f06:	4640      	mov	r0, r8
   22f08:	4798      	blx	r3
   22f0a:	2800      	cmp	r0, #0
   22f0c:	d0de      	beq.n	22ecc <_scanf_chars+0x34>
   22f0e:	e012      	b.n	22f36 <_scanf_chars+0x9e>
   22f10:	2801      	cmp	r0, #1
   22f12:	d106      	bne.n	22f22 <_scanf_chars+0x8a>
   22f14:	682b      	ldr	r3, [r5, #0]
   22f16:	781a      	ldrb	r2, [r3, #0]
   22f18:	6963      	ldr	r3, [r4, #20]
   22f1a:	5c9b      	ldrb	r3, [r3, r2]
   22f1c:	2b00      	cmp	r3, #0
   22f1e:	d1d7      	bne.n	22ed0 <_scanf_chars+0x38>
   22f20:	e019      	b.n	22f56 <_scanf_chars+0xbe>
   22f22:	2802      	cmp	r0, #2
   22f24:	d107      	bne.n	22f36 <_scanf_chars+0x9e>
   22f26:	682b      	ldr	r3, [r5, #0]
   22f28:	f8d9 2000 	ldr.w	r2, [r9]
   22f2c:	781b      	ldrb	r3, [r3, #0]
   22f2e:	4413      	add	r3, r2
   22f30:	785b      	ldrb	r3, [r3, #1]
   22f32:	071b      	lsls	r3, r3, #28
   22f34:	d5cc      	bpl.n	22ed0 <_scanf_chars+0x38>
   22f36:	6823      	ldr	r3, [r4, #0]
   22f38:	f013 0310 	ands.w	r3, r3, #16
   22f3c:	d105      	bne.n	22f4a <_scanf_chars+0xb2>
   22f3e:	68e2      	ldr	r2, [r4, #12]
   22f40:	3201      	adds	r2, #1
   22f42:	60e2      	str	r2, [r4, #12]
   22f44:	69a2      	ldr	r2, [r4, #24]
   22f46:	b102      	cbz	r2, 22f4a <_scanf_chars+0xb2>
   22f48:	703b      	strb	r3, [r7, #0]
   22f4a:	6923      	ldr	r3, [r4, #16]
   22f4c:	2000      	movs	r0, #0
   22f4e:	441e      	add	r6, r3
   22f50:	6126      	str	r6, [r4, #16]
   22f52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   22f56:	2e00      	cmp	r6, #0
   22f58:	d1ed      	bne.n	22f36 <_scanf_chars+0x9e>
   22f5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   22f5e:	bf00      	nop
   22f60:	2007c0dc 	.word	0x2007c0dc

00022f64 <_scanf_i>:
_scanf_i():
   22f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f68:	460c      	mov	r4, r1
   22f6a:	469a      	mov	sl, r3
   22f6c:	4b72      	ldr	r3, [pc, #456]	; (23138 <_scanf_i+0x1d4>)
   22f6e:	b087      	sub	sp, #28
   22f70:	4683      	mov	fp, r0
   22f72:	4616      	mov	r6, r2
   22f74:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   22f78:	ab03      	add	r3, sp, #12
   22f7a:	68a7      	ldr	r7, [r4, #8]
   22f7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   22f80:	4b6e      	ldr	r3, [pc, #440]	; (2313c <_scanf_i+0x1d8>)
   22f82:	69a1      	ldr	r1, [r4, #24]
   22f84:	4a6e      	ldr	r2, [pc, #440]	; (23140 <_scanf_i+0x1dc>)
   22f86:	f104 091c 	add.w	r9, r4, #28
   22f8a:	2903      	cmp	r1, #3
   22f8c:	bf18      	it	ne
   22f8e:	461a      	movne	r2, r3
   22f90:	1e7b      	subs	r3, r7, #1
   22f92:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   22f96:	bf84      	itt	hi
   22f98:	f240 135d 	movwhi	r3, #349	; 0x15d
   22f9c:	60a3      	strhi	r3, [r4, #8]
   22f9e:	6823      	ldr	r3, [r4, #0]
   22fa0:	bf88      	it	hi
   22fa2:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   22fa6:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   22faa:	6023      	str	r3, [r4, #0]
   22fac:	464b      	mov	r3, r9
   22fae:	9200      	str	r2, [sp, #0]
   22fb0:	bf8c      	ite	hi
   22fb2:	197f      	addhi	r7, r7, r5
   22fb4:	2700      	movls	r7, #0
   22fb6:	f04f 0800 	mov.w	r8, #0
   22fba:	6831      	ldr	r1, [r6, #0]
   22fbc:	9301      	str	r3, [sp, #4]
   22fbe:	ab03      	add	r3, sp, #12
   22fc0:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   22fc4:	2202      	movs	r2, #2
   22fc6:	7809      	ldrb	r1, [r1, #0]
   22fc8:	f7fa f984 	bl	1d2d4 <memchr>
   22fcc:	9b01      	ldr	r3, [sp, #4]
   22fce:	2800      	cmp	r0, #0
   22fd0:	d033      	beq.n	2303a <_scanf_i+0xd6>
   22fd2:	f1b8 0f01 	cmp.w	r8, #1
   22fd6:	d10b      	bne.n	22ff0 <_scanf_i+0x8c>
   22fd8:	6862      	ldr	r2, [r4, #4]
   22fda:	b92a      	cbnz	r2, 22fe8 <_scanf_i+0x84>
   22fdc:	2208      	movs	r2, #8
   22fde:	6062      	str	r2, [r4, #4]
   22fe0:	6822      	ldr	r2, [r4, #0]
   22fe2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   22fe6:	6022      	str	r2, [r4, #0]
   22fe8:	6822      	ldr	r2, [r4, #0]
   22fea:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   22fee:	e00c      	b.n	2300a <_scanf_i+0xa6>
   22ff0:	f1b8 0f02 	cmp.w	r8, #2
   22ff4:	d10a      	bne.n	2300c <_scanf_i+0xa8>
   22ff6:	6822      	ldr	r2, [r4, #0]
   22ff8:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   22ffc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   23000:	d11b      	bne.n	2303a <_scanf_i+0xd6>
   23002:	2110      	movs	r1, #16
   23004:	6061      	str	r1, [r4, #4]
   23006:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   2300a:	6022      	str	r2, [r4, #0]
   2300c:	68a2      	ldr	r2, [r4, #8]
   2300e:	1e51      	subs	r1, r2, #1
   23010:	60a1      	str	r1, [r4, #8]
   23012:	b192      	cbz	r2, 2303a <_scanf_i+0xd6>
   23014:	6832      	ldr	r2, [r6, #0]
   23016:	1c5d      	adds	r5, r3, #1
   23018:	1c51      	adds	r1, r2, #1
   2301a:	6031      	str	r1, [r6, #0]
   2301c:	7812      	ldrb	r2, [r2, #0]
   2301e:	701a      	strb	r2, [r3, #0]
   23020:	6873      	ldr	r3, [r6, #4]
   23022:	3b01      	subs	r3, #1
   23024:	2b00      	cmp	r3, #0
   23026:	6073      	str	r3, [r6, #4]
   23028:	dc06      	bgt.n	23038 <_scanf_i+0xd4>
   2302a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2302e:	4631      	mov	r1, r6
   23030:	4658      	mov	r0, fp
   23032:	4798      	blx	r3
   23034:	2800      	cmp	r0, #0
   23036:	d141      	bne.n	230bc <_scanf_i+0x158>
   23038:	462b      	mov	r3, r5
   2303a:	f108 0801 	add.w	r8, r8, #1
   2303e:	f1b8 0f03 	cmp.w	r8, #3
   23042:	d1ba      	bne.n	22fba <_scanf_i+0x56>
   23044:	6862      	ldr	r2, [r4, #4]
   23046:	b90a      	cbnz	r2, 2304c <_scanf_i+0xe8>
   23048:	220a      	movs	r2, #10
   2304a:	6062      	str	r2, [r4, #4]
   2304c:	6862      	ldr	r2, [r4, #4]
   2304e:	493d      	ldr	r1, [pc, #244]	; (23144 <_scanf_i+0x1e0>)
   23050:	6960      	ldr	r0, [r4, #20]
   23052:	1a89      	subs	r1, r1, r2
   23054:	9301      	str	r3, [sp, #4]
   23056:	f000 f889 	bl	2316c <__sccl>
   2305a:	9b01      	ldr	r3, [sp, #4]
   2305c:	f04f 0800 	mov.w	r8, #0
   23060:	461d      	mov	r5, r3
   23062:	68a3      	ldr	r3, [r4, #8]
   23064:	b363      	cbz	r3, 230c0 <_scanf_i+0x15c>
   23066:	6831      	ldr	r1, [r6, #0]
   23068:	6960      	ldr	r0, [r4, #20]
   2306a:	780a      	ldrb	r2, [r1, #0]
   2306c:	5c80      	ldrb	r0, [r0, r2]
   2306e:	b338      	cbz	r0, 230c0 <_scanf_i+0x15c>
   23070:	2a30      	cmp	r2, #48	; 0x30
   23072:	6822      	ldr	r2, [r4, #0]
   23074:	d108      	bne.n	23088 <_scanf_i+0x124>
   23076:	0510      	lsls	r0, r2, #20
   23078:	d506      	bpl.n	23088 <_scanf_i+0x124>
   2307a:	f108 0801 	add.w	r8, r8, #1
   2307e:	b157      	cbz	r7, 23096 <_scanf_i+0x132>
   23080:	3301      	adds	r3, #1
   23082:	3f01      	subs	r7, #1
   23084:	60a3      	str	r3, [r4, #8]
   23086:	e006      	b.n	23096 <_scanf_i+0x132>
   23088:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   2308c:	6022      	str	r2, [r4, #0]
   2308e:	780b      	ldrb	r3, [r1, #0]
   23090:	3501      	adds	r5, #1
   23092:	f805 3c01 	strb.w	r3, [r5, #-1]
   23096:	6873      	ldr	r3, [r6, #4]
   23098:	3b01      	subs	r3, #1
   2309a:	2b00      	cmp	r3, #0
   2309c:	6073      	str	r3, [r6, #4]
   2309e:	dd03      	ble.n	230a8 <_scanf_i+0x144>
   230a0:	6833      	ldr	r3, [r6, #0]
   230a2:	3301      	adds	r3, #1
   230a4:	6033      	str	r3, [r6, #0]
   230a6:	e005      	b.n	230b4 <_scanf_i+0x150>
   230a8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   230ac:	4631      	mov	r1, r6
   230ae:	4658      	mov	r0, fp
   230b0:	4798      	blx	r3
   230b2:	b928      	cbnz	r0, 230c0 <_scanf_i+0x15c>
   230b4:	68a3      	ldr	r3, [r4, #8]
   230b6:	3b01      	subs	r3, #1
   230b8:	60a3      	str	r3, [r4, #8]
   230ba:	e7d2      	b.n	23062 <_scanf_i+0xfe>
   230bc:	f04f 0800 	mov.w	r8, #0
   230c0:	6823      	ldr	r3, [r4, #0]
   230c2:	05d9      	lsls	r1, r3, #23
   230c4:	d50c      	bpl.n	230e0 <_scanf_i+0x17c>
   230c6:	454d      	cmp	r5, r9
   230c8:	d908      	bls.n	230dc <_scanf_i+0x178>
   230ca:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   230ce:	1e6f      	subs	r7, r5, #1
   230d0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   230d4:	4632      	mov	r2, r6
   230d6:	4658      	mov	r0, fp
   230d8:	4798      	blx	r3
   230da:	463d      	mov	r5, r7
   230dc:	454d      	cmp	r5, r9
   230de:	d027      	beq.n	23130 <_scanf_i+0x1cc>
   230e0:	6822      	ldr	r2, [r4, #0]
   230e2:	f012 0210 	ands.w	r2, r2, #16
   230e6:	d11b      	bne.n	23120 <_scanf_i+0x1bc>
   230e8:	702a      	strb	r2, [r5, #0]
   230ea:	6863      	ldr	r3, [r4, #4]
   230ec:	4649      	mov	r1, r9
   230ee:	4658      	mov	r0, fp
   230f0:	9e00      	ldr	r6, [sp, #0]
   230f2:	47b0      	blx	r6
   230f4:	6822      	ldr	r2, [r4, #0]
   230f6:	f8da 3000 	ldr.w	r3, [sl]
   230fa:	f012 0f20 	tst.w	r2, #32
   230fe:	d107      	bne.n	23110 <_scanf_i+0x1ac>
   23100:	07d2      	lsls	r2, r2, #31
   23102:	d505      	bpl.n	23110 <_scanf_i+0x1ac>
   23104:	1d1a      	adds	r2, r3, #4
   23106:	f8ca 2000 	str.w	r2, [sl]
   2310a:	681b      	ldr	r3, [r3, #0]
   2310c:	8018      	strh	r0, [r3, #0]
   2310e:	e004      	b.n	2311a <_scanf_i+0x1b6>
   23110:	1d1a      	adds	r2, r3, #4
   23112:	f8ca 2000 	str.w	r2, [sl]
   23116:	681b      	ldr	r3, [r3, #0]
   23118:	6018      	str	r0, [r3, #0]
   2311a:	68e3      	ldr	r3, [r4, #12]
   2311c:	3301      	adds	r3, #1
   2311e:	60e3      	str	r3, [r4, #12]
   23120:	6923      	ldr	r3, [r4, #16]
   23122:	ebc9 0505 	rsb	r5, r9, r5
   23126:	4445      	add	r5, r8
   23128:	441d      	add	r5, r3
   2312a:	6125      	str	r5, [r4, #16]
   2312c:	2000      	movs	r0, #0
   2312e:	e000      	b.n	23132 <_scanf_i+0x1ce>
   23130:	2001      	movs	r0, #1
   23132:	b007      	add	sp, #28
   23134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23138:	000266a4 	.word	0x000266a4
   2313c:	000231cd 	.word	0x000231cd
   23140:	0001fafd 	.word	0x0001fafd
   23144:	000266c0 	.word	0x000266c0

00023148 <_read_r>:
_read_r():
   23148:	b538      	push	{r3, r4, r5, lr}
   2314a:	4c07      	ldr	r4, [pc, #28]	; (23168 <_read_r+0x20>)
   2314c:	4605      	mov	r5, r0
   2314e:	4608      	mov	r0, r1
   23150:	4611      	mov	r1, r2
   23152:	2200      	movs	r2, #0
   23154:	6022      	str	r2, [r4, #0]
   23156:	461a      	mov	r2, r3
   23158:	f7ee f9d0 	bl	114fc <_read>
   2315c:	1c43      	adds	r3, r0, #1
   2315e:	d102      	bne.n	23166 <_read_r+0x1e>
   23160:	6823      	ldr	r3, [r4, #0]
   23162:	b103      	cbz	r3, 23166 <_read_r+0x1e>
   23164:	602b      	str	r3, [r5, #0]
   23166:	bd38      	pop	{r3, r4, r5, pc}
   23168:	2007c790 	.word	0x2007c790

0002316c <__sccl>:
__sccl():
   2316c:	b570      	push	{r4, r5, r6, lr}
   2316e:	780b      	ldrb	r3, [r1, #0]
   23170:	1e44      	subs	r4, r0, #1
   23172:	2b5e      	cmp	r3, #94	; 0x5e
   23174:	bf13      	iteet	ne
   23176:	1c4a      	addne	r2, r1, #1
   23178:	1c8a      	addeq	r2, r1, #2
   2317a:	784b      	ldrbeq	r3, [r1, #1]
   2317c:	2100      	movne	r1, #0
   2317e:	bf08      	it	eq
   23180:	2101      	moveq	r1, #1
   23182:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   23186:	f804 1f01 	strb.w	r1, [r4, #1]!
   2318a:	42ac      	cmp	r4, r5
   2318c:	d1fb      	bne.n	23186 <__sccl+0x1a>
   2318e:	b90b      	cbnz	r3, 23194 <__sccl+0x28>
   23190:	1e50      	subs	r0, r2, #1
   23192:	bd70      	pop	{r4, r5, r6, pc}
   23194:	f081 0401 	eor.w	r4, r1, #1
   23198:	4611      	mov	r1, r2
   2319a:	54c4      	strb	r4, [r0, r3]
   2319c:	780d      	ldrb	r5, [r1, #0]
   2319e:	1c4a      	adds	r2, r1, #1
   231a0:	2d2d      	cmp	r5, #45	; 0x2d
   231a2:	d006      	beq.n	231b2 <__sccl+0x46>
   231a4:	2d5d      	cmp	r5, #93	; 0x5d
   231a6:	d00f      	beq.n	231c8 <__sccl+0x5c>
   231a8:	b10d      	cbz	r5, 231ae <__sccl+0x42>
   231aa:	462b      	mov	r3, r5
   231ac:	e7f4      	b.n	23198 <__sccl+0x2c>
   231ae:	4608      	mov	r0, r1
   231b0:	bd70      	pop	{r4, r5, r6, pc}
   231b2:	784e      	ldrb	r6, [r1, #1]
   231b4:	2e5d      	cmp	r6, #93	; 0x5d
   231b6:	d0f8      	beq.n	231aa <__sccl+0x3e>
   231b8:	42b3      	cmp	r3, r6
   231ba:	dcf6      	bgt.n	231aa <__sccl+0x3e>
   231bc:	3102      	adds	r1, #2
   231be:	3301      	adds	r3, #1
   231c0:	429e      	cmp	r6, r3
   231c2:	54c4      	strb	r4, [r0, r3]
   231c4:	dcfb      	bgt.n	231be <__sccl+0x52>
   231c6:	e7e9      	b.n	2319c <__sccl+0x30>
   231c8:	4610      	mov	r0, r2
   231ca:	bd70      	pop	{r4, r5, r6, pc}

000231cc <_strtoul_r>:
_strtoul_r():
   231cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   231d0:	460e      	mov	r6, r1
   231d2:	4680      	mov	r8, r0
   231d4:	483b      	ldr	r0, [pc, #236]	; (232c4 <_strtoul_r+0xf8>)
   231d6:	f8d0 9000 	ldr.w	r9, [r0]
   231da:	4635      	mov	r5, r6
   231dc:	f815 4b01 	ldrb.w	r4, [r5], #1
   231e0:	eb09 0004 	add.w	r0, r9, r4
   231e4:	7840      	ldrb	r0, [r0, #1]
   231e6:	f000 0008 	and.w	r0, r0, #8
   231ea:	f000 07ff 	and.w	r7, r0, #255	; 0xff
   231ee:	b108      	cbz	r0, 231f4 <_strtoul_r+0x28>
   231f0:	462e      	mov	r6, r5
   231f2:	e7f2      	b.n	231da <_strtoul_r+0xe>
   231f4:	2c2d      	cmp	r4, #45	; 0x2d
   231f6:	d103      	bne.n	23200 <_strtoul_r+0x34>
   231f8:	1cb5      	adds	r5, r6, #2
   231fa:	7874      	ldrb	r4, [r6, #1]
   231fc:	2701      	movs	r7, #1
   231fe:	e003      	b.n	23208 <_strtoul_r+0x3c>
   23200:	2c2b      	cmp	r4, #43	; 0x2b
   23202:	bf04      	itt	eq
   23204:	7874      	ldrbeq	r4, [r6, #1]
   23206:	1cb5      	addeq	r5, r6, #2
   23208:	b113      	cbz	r3, 23210 <_strtoul_r+0x44>
   2320a:	2b10      	cmp	r3, #16
   2320c:	d10a      	bne.n	23224 <_strtoul_r+0x58>
   2320e:	e053      	b.n	232b8 <_strtoul_r+0xec>
   23210:	2c30      	cmp	r4, #48	; 0x30
   23212:	d14f      	bne.n	232b4 <_strtoul_r+0xe8>
   23214:	7828      	ldrb	r0, [r5, #0]
   23216:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   2321a:	2858      	cmp	r0, #88	; 0x58
   2321c:	d145      	bne.n	232aa <_strtoul_r+0xde>
   2321e:	786c      	ldrb	r4, [r5, #1]
   23220:	2310      	movs	r3, #16
   23222:	3502      	adds	r5, #2
   23224:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   23228:	fbbc fcf3 	udiv	ip, ip, r3
   2322c:	fb03 fa0c 	mul.w	sl, r3, ip
   23230:	2600      	movs	r6, #0
   23232:	ea6f 0a0a 	mvn.w	sl, sl
   23236:	4630      	mov	r0, r6
   23238:	eb09 0e04 	add.w	lr, r9, r4
   2323c:	f89e e001 	ldrb.w	lr, [lr, #1]
   23240:	f01e 0f04 	tst.w	lr, #4
   23244:	d001      	beq.n	2324a <_strtoul_r+0x7e>
   23246:	3c30      	subs	r4, #48	; 0x30
   23248:	e00b      	b.n	23262 <_strtoul_r+0x96>
   2324a:	f01e 0e03 	ands.w	lr, lr, #3
   2324e:	d01a      	beq.n	23286 <_strtoul_r+0xba>
   23250:	f1be 0f01 	cmp.w	lr, #1
   23254:	bf0c      	ite	eq
   23256:	f04f 0e37 	moveq.w	lr, #55	; 0x37
   2325a:	f04f 0e57 	movne.w	lr, #87	; 0x57
   2325e:	ebce 0404 	rsb	r4, lr, r4
   23262:	42a3      	cmp	r3, r4
   23264:	dd0f      	ble.n	23286 <_strtoul_r+0xba>
   23266:	2e00      	cmp	r6, #0
   23268:	db08      	blt.n	2327c <_strtoul_r+0xb0>
   2326a:	4560      	cmp	r0, ip
   2326c:	d806      	bhi.n	2327c <_strtoul_r+0xb0>
   2326e:	d101      	bne.n	23274 <_strtoul_r+0xa8>
   23270:	4554      	cmp	r4, sl
   23272:	dc03      	bgt.n	2327c <_strtoul_r+0xb0>
   23274:	fb03 4000 	mla	r0, r3, r0, r4
   23278:	2601      	movs	r6, #1
   2327a:	e001      	b.n	23280 <_strtoul_r+0xb4>
   2327c:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
   23280:	f815 4b01 	ldrb.w	r4, [r5], #1
   23284:	e7d8      	b.n	23238 <_strtoul_r+0x6c>
   23286:	2e00      	cmp	r6, #0
   23288:	da07      	bge.n	2329a <_strtoul_r+0xce>
   2328a:	2322      	movs	r3, #34	; 0x22
   2328c:	f8c8 3000 	str.w	r3, [r8]
   23290:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23294:	b92a      	cbnz	r2, 232a2 <_strtoul_r+0xd6>
   23296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2329a:	b107      	cbz	r7, 2329e <_strtoul_r+0xd2>
   2329c:	4240      	negs	r0, r0
   2329e:	b172      	cbz	r2, 232be <_strtoul_r+0xf2>
   232a0:	b106      	cbz	r6, 232a4 <_strtoul_r+0xd8>
   232a2:	1e69      	subs	r1, r5, #1
   232a4:	6011      	str	r1, [r2, #0]
   232a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   232aa:	2430      	movs	r4, #48	; 0x30
   232ac:	2b00      	cmp	r3, #0
   232ae:	d1b9      	bne.n	23224 <_strtoul_r+0x58>
   232b0:	2308      	movs	r3, #8
   232b2:	e7b7      	b.n	23224 <_strtoul_r+0x58>
   232b4:	230a      	movs	r3, #10
   232b6:	e7b5      	b.n	23224 <_strtoul_r+0x58>
   232b8:	2c30      	cmp	r4, #48	; 0x30
   232ba:	d0ab      	beq.n	23214 <_strtoul_r+0x48>
   232bc:	e7b2      	b.n	23224 <_strtoul_r+0x58>
   232be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   232c2:	bf00      	nop
   232c4:	2007c0dc 	.word	0x2007c0dc

000232c8 <strtoul>:
strtoul():
   232c8:	4613      	mov	r3, r2
   232ca:	460a      	mov	r2, r1
   232cc:	4601      	mov	r1, r0
   232ce:	4802      	ldr	r0, [pc, #8]	; (232d8 <strtoul+0x10>)
   232d0:	6800      	ldr	r0, [r0, #0]
   232d2:	f7ff bf7b 	b.w	231cc <_strtoul_r>
   232d6:	bf00      	nop
   232d8:	2007c140 	.word	0x2007c140

000232dc <__submore>:
__submore():
   232dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   232e0:	460c      	mov	r4, r1
   232e2:	6b49      	ldr	r1, [r1, #52]	; 0x34
   232e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
   232e8:	4299      	cmp	r1, r3
   232ea:	d11a      	bne.n	23322 <__submore+0x46>
   232ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
   232f0:	f7fa fb12 	bl	1d918 <_malloc_r>
   232f4:	b918      	cbnz	r0, 232fe <__submore+0x22>
   232f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   232fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   232fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
   23302:	63a3      	str	r3, [r4, #56]	; 0x38
   23304:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   23308:	6360      	str	r0, [r4, #52]	; 0x34
   2330a:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   2330e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   23312:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   23316:	7043      	strb	r3, [r0, #1]
   23318:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   2331c:	7003      	strb	r3, [r0, #0]
   2331e:	6020      	str	r0, [r4, #0]
   23320:	e012      	b.n	23348 <__submore+0x6c>
   23322:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   23324:	0077      	lsls	r7, r6, #1
   23326:	463a      	mov	r2, r7
   23328:	f7fe ffd3 	bl	222d2 <_realloc_r>
   2332c:	4605      	mov	r5, r0
   2332e:	2800      	cmp	r0, #0
   23330:	d0e1      	beq.n	232f6 <__submore+0x1a>
   23332:	eb00 0806 	add.w	r8, r0, r6
   23336:	4601      	mov	r1, r0
   23338:	4632      	mov	r2, r6
   2333a:	4640      	mov	r0, r8
   2333c:	f7f9 ffe7 	bl	1d30e <memcpy>
   23340:	f8c4 8000 	str.w	r8, [r4]
   23344:	6365      	str	r5, [r4, #52]	; 0x34
   23346:	63a7      	str	r7, [r4, #56]	; 0x38
   23348:	2000      	movs	r0, #0
   2334a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2334e:	ffff b5f8 	vsli.64	<illegal reg q13.5>, q12, #63	; 0x3f

00023350 <_ungetc_r>:
_ungetc_r():
   23350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   23352:	1c4d      	adds	r5, r1, #1
   23354:	4606      	mov	r6, r0
   23356:	460f      	mov	r7, r1
   23358:	4614      	mov	r4, r2
   2335a:	d102      	bne.n	23362 <_ungetc_r+0x12>
   2335c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   23360:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   23362:	b118      	cbz	r0, 2336c <_ungetc_r+0x1c>
   23364:	6983      	ldr	r3, [r0, #24]
   23366:	b90b      	cbnz	r3, 2336c <_ungetc_r+0x1c>
   23368:	f7f9 fde0 	bl	1cf2c <__sinit>
   2336c:	4b2e      	ldr	r3, [pc, #184]	; (23428 <_ungetc_r+0xd8>)
   2336e:	429c      	cmp	r4, r3
   23370:	d101      	bne.n	23376 <_ungetc_r+0x26>
   23372:	6874      	ldr	r4, [r6, #4]
   23374:	e008      	b.n	23388 <_ungetc_r+0x38>
   23376:	4b2d      	ldr	r3, [pc, #180]	; (2342c <_ungetc_r+0xdc>)
   23378:	429c      	cmp	r4, r3
   2337a:	d101      	bne.n	23380 <_ungetc_r+0x30>
   2337c:	68b4      	ldr	r4, [r6, #8]
   2337e:	e003      	b.n	23388 <_ungetc_r+0x38>
   23380:	4b2b      	ldr	r3, [pc, #172]	; (23430 <_ungetc_r+0xe0>)
   23382:	429c      	cmp	r4, r3
   23384:	bf08      	it	eq
   23386:	68f4      	ldreq	r4, [r6, #12]
   23388:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   2338c:	f023 0320 	bic.w	r3, r3, #32
   23390:	81a3      	strh	r3, [r4, #12]
   23392:	b29b      	uxth	r3, r3
   23394:	0759      	lsls	r1, r3, #29
   23396:	d413      	bmi.n	233c0 <_ungetc_r+0x70>
   23398:	06da      	lsls	r2, r3, #27
   2339a:	d5df      	bpl.n	2335c <_ungetc_r+0xc>
   2339c:	071b      	lsls	r3, r3, #28
   2339e:	d50b      	bpl.n	233b8 <_ungetc_r+0x68>
   233a0:	4621      	mov	r1, r4
   233a2:	4630      	mov	r0, r6
   233a4:	f7fd fede 	bl	21164 <_fflush_r>
   233a8:	2800      	cmp	r0, #0
   233aa:	d1d7      	bne.n	2335c <_ungetc_r+0xc>
   233ac:	89a3      	ldrh	r3, [r4, #12]
   233ae:	60a0      	str	r0, [r4, #8]
   233b0:	f023 0308 	bic.w	r3, r3, #8
   233b4:	81a3      	strh	r3, [r4, #12]
   233b6:	61a0      	str	r0, [r4, #24]
   233b8:	89a3      	ldrh	r3, [r4, #12]
   233ba:	f043 0304 	orr.w	r3, r3, #4
   233be:	81a3      	strh	r3, [r4, #12]
   233c0:	6b63      	ldr	r3, [r4, #52]	; 0x34
   233c2:	b2fd      	uxtb	r5, r7
   233c4:	6862      	ldr	r2, [r4, #4]
   233c6:	b18b      	cbz	r3, 233ec <_ungetc_r+0x9c>
   233c8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   233ca:	429a      	cmp	r2, r3
   233cc:	da07      	bge.n	233de <_ungetc_r+0x8e>
   233ce:	6823      	ldr	r3, [r4, #0]
   233d0:	1e5a      	subs	r2, r3, #1
   233d2:	6022      	str	r2, [r4, #0]
   233d4:	f803 7c01 	strb.w	r7, [r3, #-1]
   233d8:	6863      	ldr	r3, [r4, #4]
   233da:	3301      	adds	r3, #1
   233dc:	e020      	b.n	23420 <_ungetc_r+0xd0>
   233de:	4621      	mov	r1, r4
   233e0:	4630      	mov	r0, r6
   233e2:	f7ff ff7b 	bl	232dc <__submore>
   233e6:	2800      	cmp	r0, #0
   233e8:	d0f1      	beq.n	233ce <_ungetc_r+0x7e>
   233ea:	e7b7      	b.n	2335c <_ungetc_r+0xc>
   233ec:	6921      	ldr	r1, [r4, #16]
   233ee:	6823      	ldr	r3, [r4, #0]
   233f0:	b151      	cbz	r1, 23408 <_ungetc_r+0xb8>
   233f2:	4299      	cmp	r1, r3
   233f4:	d208      	bcs.n	23408 <_ungetc_r+0xb8>
   233f6:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   233fa:	428d      	cmp	r5, r1
   233fc:	d104      	bne.n	23408 <_ungetc_r+0xb8>
   233fe:	3b01      	subs	r3, #1
   23400:	3201      	adds	r2, #1
   23402:	6023      	str	r3, [r4, #0]
   23404:	6062      	str	r2, [r4, #4]
   23406:	e00c      	b.n	23422 <_ungetc_r+0xd2>
   23408:	63e3      	str	r3, [r4, #60]	; 0x3c
   2340a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   2340e:	6363      	str	r3, [r4, #52]	; 0x34
   23410:	2303      	movs	r3, #3
   23412:	63a3      	str	r3, [r4, #56]	; 0x38
   23414:	4623      	mov	r3, r4
   23416:	6422      	str	r2, [r4, #64]	; 0x40
   23418:	f803 7f46 	strb.w	r7, [r3, #70]!
   2341c:	6023      	str	r3, [r4, #0]
   2341e:	2301      	movs	r3, #1
   23420:	6063      	str	r3, [r4, #4]
   23422:	4628      	mov	r0, r5
   23424:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   23426:	bf00      	nop
   23428:	00026334 	.word	0x00026334
   2342c:	00026354 	.word	0x00026354
   23430:	00026374 	.word	0x00026374

00023434 <__env_lock>:
__env_lock():
   23434:	4770      	bx	lr

00023436 <__env_unlock>:
__env_unlock():
   23436:	4770      	bx	lr

00023438 <_fstat_r>:
_fstat_r():
   23438:	b538      	push	{r3, r4, r5, lr}
   2343a:	4c07      	ldr	r4, [pc, #28]	; (23458 <_fstat_r+0x20>)
   2343c:	2300      	movs	r3, #0
   2343e:	4605      	mov	r5, r0
   23440:	4608      	mov	r0, r1
   23442:	4611      	mov	r1, r2
   23444:	6023      	str	r3, [r4, #0]
   23446:	f7ee f870 	bl	1152a <_fstat>
   2344a:	1c43      	adds	r3, r0, #1
   2344c:	d102      	bne.n	23454 <_fstat_r+0x1c>
   2344e:	6823      	ldr	r3, [r4, #0]
   23450:	b103      	cbz	r3, 23454 <_fstat_r+0x1c>
   23452:	602b      	str	r3, [r5, #0]
   23454:	bd38      	pop	{r3, r4, r5, pc}
   23456:	bf00      	nop
   23458:	2007c790 	.word	0x2007c790

0002345c <_isatty_r>:
_isatty_r():
   2345c:	b538      	push	{r3, r4, r5, lr}
   2345e:	4c06      	ldr	r4, [pc, #24]	; (23478 <_isatty_r+0x1c>)
   23460:	2300      	movs	r3, #0
   23462:	4605      	mov	r5, r0
   23464:	4608      	mov	r0, r1
   23466:	6023      	str	r3, [r4, #0]
   23468:	f7ee f862 	bl	11530 <_isatty>
   2346c:	1c43      	adds	r3, r0, #1
   2346e:	d102      	bne.n	23476 <_isatty_r+0x1a>
   23470:	6823      	ldr	r3, [r4, #0]
   23472:	b103      	cbz	r3, 23476 <_isatty_r+0x1a>
   23474:	602b      	str	r3, [r5, #0]
   23476:	bd38      	pop	{r3, r4, r5, pc}
   23478:	2007c790 	.word	0x2007c790

0002347c <_malloc_usable_size_r>:
_malloc_usable_size_r():
   2347c:	f851 0c04 	ldr.w	r0, [r1, #-4]
   23480:	2800      	cmp	r0, #0
   23482:	bfbe      	ittt	lt
   23484:	1809      	addlt	r1, r1, r0
   23486:	f851 3c04 	ldrlt.w	r3, [r1, #-4]
   2348a:	18c0      	addlt	r0, r0, r3
   2348c:	3804      	subs	r0, #4
   2348e:	4770      	bx	lr

00023490 <__aeabi_dcmpun>:
__aeabi_dcmpun():
   23490:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   23494:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   23498:	d102      	bne.n	234a0 <__aeabi_dcmpun+0x10>
   2349a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   2349e:	d10a      	bne.n	234b6 <__aeabi_dcmpun+0x26>
   234a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   234a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   234a8:	d102      	bne.n	234b0 <__aeabi_dcmpun+0x20>
   234aa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   234ae:	d102      	bne.n	234b6 <__aeabi_dcmpun+0x26>
   234b0:	f04f 0000 	mov.w	r0, #0
   234b4:	4770      	bx	lr
   234b6:	f04f 0001 	mov.w	r0, #1
   234ba:	4770      	bx	lr

000234bc <vtable for CharDev>:
$d():
   234bc:	0000 0000 34dc 0002 bc0b 0001 bc0b 0001     .....4..........
   234cc:	0205 0001 0000 0000 0000 0000 0a0d ff00     ................

000234dc <typeinfo for CharDev>:
   234dc:	61e0 0002 34e4 0002                         .a...4..

000234e4 <typeinfo name for CharDev>:
   234e4:	4337 6168 4472 7665 3700                         7CharDev.

000234ed <typeinfo name for UartDev>:
   234ed:	5537 7261 4474 7665 ff00 00ff                    7UartDev...

000234f8 <vtable for UartDev>:
   234f8:	0000 0000 3514 0002 03ed 0001 0393 0001     .....5..........
   23508:	0373 0001 034d 0001 0361 0001               s...M...a...

00023514 <typeinfo for UartDev>:
   23514:	6108 0002 34ed 0002 34dc 0002               .a...4...4..

00023520 <typeinfo name for SingletonTemplate<Uart0>>:
   23520:	3731 6953 676e 656c 6f74 546e 6d65 6c70     17SingletonTempl
   23530:	7461 4965 5535 7261 3074 0045               ateI5Uart0E.

0002353c <typeinfo for SingletonTemplate<Uart0>>:
   2353c:	61e0 0002 3520 0002                         .a.. 5..

00023544 <typeinfo name for Uart0>:
   23544:	5535 7261 3074 ff00                         5Uart0..

0002354c <typeinfo for Uart0>:
   2354c:	619c 0002 3544 0002 0000 0000 0002 0000     .a..D5..........
   2355c:	3514 0002 0002 0000 353c 0002 0002 0000     .5......<5......

0002356c <vtable for Uart0>:
   2356c:	0000 0000 354c 0002 03ed 0001 0393 0001     ....L5..........
   2357c:	0373 0001 0a3d 0001 0a51 0001 4000 4000     s...=...Q....@.@
   2358c:	8000 4000 0000 4009 4000 4009 0201 1716     ...@...@.@.@....

0002359c <typeinfo name for SingletonTemplate<Uart2>>:
   2359c:	3731 6953 676e 656c 6f74 546e 6d65 6c70     17SingletonTempl
   235ac:	7461 4965 5535 7261 3274 0045               ateI5Uart2E.

000235b8 <typeinfo for SingletonTemplate<Uart2>>:
   235b8:	61e0 0002 359c 0002                         .a...5..

000235c0 <typeinfo name for Uart2>:
   235c0:	5535 7261 3274 ff00                         5Uart2..

000235c8 <typeinfo for Uart2>:
   235c8:	619c 0002 35c0 0002 0000 0000 0002 0000     .a...5..........
   235d8:	3514 0002 0002 0000 35b8 0002 0002 0000     .5.......5......

000235e8 <vtable for Uart2>:
   235e8:	0000 0000 35c8 0002 03ed 0001 0393 0001     .....5..........
   235f8:	0373 0001 0d0d 0001 0d21 0001               s.......!...

00023604 <typeinfo name for SingletonTemplate<Uart3>>:
   23604:	3731 6953 676e 656c 6f74 546e 6d65 6c70     17SingletonTempl
   23614:	7461 4965 5535 7261 3374 0045               ateI5Uart3E.

00023620 <typeinfo for SingletonTemplate<Uart3>>:
   23620:	61e0 0002 3604 0002                         .a...6..

00023628 <typeinfo name for Uart3>:
   23628:	5535 7261 3374 ff00                         5Uart3..

00023630 <typeinfo for Uart3>:
   23630:	619c 0002 3628 0002 0000 0000 0002 0000     .a..(6..........
   23640:	3514 0002 0002 0000 3620 0002 0002 0000     .5...... 6......

00023650 <vtable for Uart3>:
   23650:	0000 0000 3630 0002 03ed 0001 0393 0001     ....06..........
   23660:	0373 0001 11f5 0001 1209 0001               s...........

0002366c <typeinfo name for SingletonTemplate<NordicStream>>:
   2366c:	3731 6953 676e 656c 6f74 546e 6d65 6c70     17SingletonTempl
   2367c:	7461 4965 3231 6f4e 6472 6369 7453 6572     ateI12NordicStre
   2368c:	6d61 0045                                   amE.

00023690 <typeinfo for SingletonTemplate<NordicStream>>:
   23690:	61e0 0002 366c 0002                         .a..l6..

00023698 <typeinfo name for NordicStream>:
   23698:	3231 6f4e 6472 6369 7453 6572 6d61 ff00     12NordicStream..

000236a8 <vtable for NordicStream>:
   236a8:	0000 0000 36c4 0002 131f 0001 1363 0001     .....6......c...
   236b8:	129d 0001 12f9 0001 130d 0001               ............

000236c4 <typeinfo for NordicStream>:
   236c4:	619c 0002 3698 0002 0000 0000 0002 0000     .a...6..........
   236d4:	34dc 0002 0002 0000 3690 0002 0002 0000     .4.......6......
   236e4:	6e55 7865 6570 7463 6465 6320 6c61 206c     Unexpected call 
   236f4:	6f74 6b20 6c69 286c 0029 6e55 7865 6570     to kill().Unexpe
   23704:	7463 6465 6320 6c61 206c 6f74 6520 6978     cted call to exi
   23714:	2874 0029 6f6e 6564 e700 adde e7e7 4548     t().node......HE
   23724:	4c4c 0a4f ff00                              LLO...

0002372a <cst.6335>:
   2372a:	8000 4000 2000 1000 0800 4000 2000 1000     ...@. .....@. ..
   2373a:	0800 0400 0200 2a22 3c3a 3f3e 7f7c 2b00     ......"*:<>?|..+
   2374a:	3b2c 5b3d 005d feeb 4d90 4453 534f 2e35     ,;=[]....MSDOS5.
   2375a:	0030 4f4e 4e20 4d41 2045 2020 4620 5441     0.NO NAME    FAT
   2376a:	3233 2020 0020 4f4e 4e20 4d41 2045 2020     32   .NO NAME   
   2377a:	4620 5441 2020 2020 0020                     FAT     .

00023784 <ExCvt>:
   23784:	9a80 4190 418e 808f 4545 4945 4949 8f8e     ...A.A..EEEIII..
   23794:	9290 4f92 4f99 5555 9959 9b9a 9d9c 9f9e     ...O.OUUY.......
   237a4:	4941 554f a5a5 a7a6 a9a8 abaa 21ac afae     AIOU.........!..
   237b4:	b1b0 b3b2 b5b4 b7b6 b9b8 bbba bdbc bfbe     ................
   237c4:	c1c0 c3c2 c5c4 c7c6 c9c8 cbca cdcc cfce     ................
   237d4:	d1d0 d3d2 d5d4 d7d6 d9d8 dbda dddc dfde     ................
   237e4:	e1e0 e3e2 e5e4 e7e6 e9e8 ebea edec efee     ................
   237f4:	f1f0 f3f2 f5f4 f7f6 f9f8 fbfa fdfc fffe     ................

00023804 <LfnOfs>:
   23804:	0301 0705 0e09 1210 1614 1c18 ff1e          ..............

00023812 <vst.6334>:
   23812:	0400 0200 0100 0080 0040 0020 0010 0008     ........@. .....
   23822:	0004 0002 0000                              ......

00023828 <tbl_lower.5762>:
   23828:	0061 0062 0063 0064 0065 0066 0067 0068     a.b.c.d.e.f.g.h.
   23838:	0069 006a 006b 006c 006d 006e 006f 0070     i.j.k.l.m.n.o.p.
   23848:	0071 0072 0073 0074 0075 0076 0077 0078     q.r.s.t.u.v.w.x.
   23858:	0079 007a 00a1 00a2 00a3 00a5 00ac 00af     y.z.............
   23868:	00e0 00e1 00e2 00e3 00e4 00e5 00e6 00e7     ................
   23878:	00e8 00e9 00ea 00eb 00ec 00ed 00ee 00ef     ................
   23888:	00f0 00f1 00f2 00f3 00f4 00f5 00f6 00f8     ................
   23898:	00f9 00fa 00fb 00fc 00fd 00fe 00ff 0101     ................
   238a8:	0103 0105 0107 0109 010b 010d 010f 0111     ................
   238b8:	0113 0115 0117 0119 011b 011d 011f 0121     ..............!.
   238c8:	0123 0125 0127 0129 012b 012d 012f 0131     #.%.'.).+.-./.1.
   238d8:	0133 0135 0137 013a 013c 013e 0140 0142     3.5.7.:.<.>.@.B.
   238e8:	0144 0146 0148 014b 014d 014f 0151 0153     D.F.H.K.M.O.Q.S.
   238f8:	0155 0157 0159 015b 015d 015f 0161 0163     U.W.Y.[.]._.a.c.
   23908:	0165 0167 0169 016b 016d 016f 0171 0173     e.g.i.k.m.o.q.s.
   23918:	0175 0177 017a 017c 017e 0192 03b1 03b2     u.w.z.|.~.......
   23928:	03b3 03b4 03b5 03b6 03b7 03b8 03b9 03ba     ................
   23938:	03bb 03bc 03bd 03be 03bf 03c0 03c1 03c3     ................
   23948:	03c4 03c5 03c6 03c7 03c8 03c9 03ca 0430     ..............0.
   23958:	0431 0432 0433 0434 0435 0436 0437 0438     1.2.3.4.5.6.7.8.
   23968:	0439 043a 043b 043c 043d 043e 043f 0440     9.:.;.<.=.>.?.@.
   23978:	0441 0442 0443 0444 0445 0446 0447 0448     A.B.C.D.E.F.G.H.
   23988:	0449 044a 044b 044c 044d 044e 044f 0451     I.J.K.L.M.N.O.Q.
   23998:	0452 0453 0454 0455 0456 0457 0458 0459     R.S.T.U.V.W.X.Y.
   239a8:	045a 045b 045c 045e 045f 2170 2171 2172     Z.[.\.^._.p!q!r!
   239b8:	2173 2174 2175 2176 2177 2178 2179 217a     s!t!u!v!w!x!y!z!
   239c8:	217b 217c 217d 217e 217f ff41 ff42 ff43     {!|!}!~!.!A.B.C.
   239d8:	ff44 ff45 ff46 ff47 ff48 ff49 ff4a ff4b     D.E.F.G.H.I.J.K.
   239e8:	ff4c ff4d ff4e ff4f ff50 ff51 ff52 ff53     L.M.N.O.P.Q.R.S.
   239f8:	ff54 ff55 ff56 ff57 ff58 ff59 ff5a 0000     T.U.V.W.X.Y.Z...

00023a08 <Tbl>:
   23a08:	00c7 00fc 00e9 00e2 00e4 00e0 00e5 00e7     ................
   23a18:	00ea 00eb 00e8 00ef 00ee 00ec 00c4 00c5     ................
   23a28:	00c9 00e6 00c6 00f4 00f6 00f2 00fb 00f9     ................
   23a38:	00ff 00d6 00dc 00a2 00a3 00a5 20a7 0192     ............. ..
   23a48:	00e1 00ed 00f3 00fa 00f1 00d1 00aa 00ba     ................
   23a58:	00bf 2310 00ac 00bd 00bc 00a1 00ab 00bb     ...#............
   23a68:	2591 2592 2593 2502 2524 2561 2562 2556     .%.%.%.%$%a%b%V%
   23a78:	2555 2563 2551 2557 255d 255c 255b 2510     U%c%Q%W%]%\%[%.%
   23a88:	2514 2534 252c 251c 2500 253c 255e 255f     .%4%,%.%.%<%^%_%
   23a98:	255a 2554 2569 2566 2560 2550 256c 2567     Z%T%i%f%`%P%l%g%
   23aa8:	2568 2564 2565 2559 2558 2552 2553 256b     h%d%e%Y%X%R%S%k%
   23ab8:	256a 2518 250c 2588 2584 258c 2590 2580     j%.%.%.%.%.%.%.%
   23ac8:	03b1 00df 0393 03c0 03a3 03c3 00b5 03c4     ................
   23ad8:	03a6 0398 03a9 03b4 221e 03c6 03b5 2229     ........."....)"
   23ae8:	2261 00b1 2265 2264 2320 2321 00f7 2248     a"..e"d" #!#..H"
   23af8:	00b0 2219 00b7 221a 207f 00b2 25a0 00a0     ..."...". ...%..

00023b08 <tbl_upper.5763>:
   23b08:	0041 0042 0043 0044 0045 0046 0047 0048     A.B.C.D.E.F.G.H.
   23b18:	0049 004a 004b 004c 004d 004e 004f 0050     I.J.K.L.M.N.O.P.
   23b28:	0051 0052 0053 0054 0055 0056 0057 0058     Q.R.S.T.U.V.W.X.
   23b38:	0059 005a 0021 ffe0 ffe1 ffe5 ffe2 ffe3     Y.Z.!...........
   23b48:	00c0 00c1 00c2 00c3 00c4 00c5 00c6 00c7     ................
   23b58:	00c8 00c9 00ca 00cb 00cc 00cd 00ce 00cf     ................
   23b68:	00d0 00d1 00d2 00d3 00d4 00d5 00d6 00d8     ................
   23b78:	00d9 00da 00db 00dc 00dd 00de 0178 0100     ............x...
   23b88:	0102 0104 0106 0108 010a 010c 010e 0110     ................
   23b98:	0112 0114 0116 0118 011a 011c 011e 0120     .............. .
   23ba8:	0122 0124 0126 0128 012a 012c 012e 0130     ".$.&.(.*.,...0.
   23bb8:	0132 0134 0136 0139 013b 013d 013f 0141     2.4.6.9.;.=.?.A.
   23bc8:	0143 0145 0147 014a 014c 014e 0150 0152     C.E.G.J.L.N.P.R.
   23bd8:	0154 0156 0158 015a 015c 015e 0160 0162     T.V.X.Z.\.^.`.b.
   23be8:	0164 0166 0168 016a 016c 016e 0170 0172     d.f.h.j.l.n.p.r.
   23bf8:	0174 0176 0179 017b 017d 0191 0391 0392     t.v.y.{.}.......
   23c08:	0393 0394 0395 0396 0397 0398 0399 039a     ................
   23c18:	039b 039c 039d 039e 039f 03a0 03a1 03a3     ................
   23c28:	03a4 03a5 03a6 03a7 03a8 03a9 03aa 0410     ................
   23c38:	0411 0412 0413 0414 0415 0416 0417 0418     ................
   23c48:	0419 041a 041b 041c 041d 041e 041f 0420     .............. .
   23c58:	0421 0422 0423 0424 0425 0426 0427 0428     !.".#.$.%.&.'.(.
   23c68:	0429 042a 042b 042c 042d 042e 042f 0401     ).*.+.,.-.../...
   23c78:	0402 0403 0404 0405 0406 0407 0408 0409     ................
   23c88:	040a 040b 040c 040e 040f 2160 2161 2162     ..........`!a!b!
   23c98:	2163 2164 2165 2166 2167 2168 2169 216a     c!d!e!f!g!h!i!j!
   23ca8:	216b 216c 216d 216e 216f ff21 ff22 ff23     k!l!m!n!o!!.".#.
   23cb8:	ff24 ff25 ff26 ff27 ff28 ff29 ff2a ff2b     $.%.&.'.(.).*.+.
   23cc8:	ff2c ff2d ff2e ff2f ff30 ff31 ff32 ff33     ,.-.../.0.1.2.3.
   23cd8:	ff34 ff35 ff36 ff37 ff38 ff39 ff3a 0000     4.5.6.7.8.9.:...
   23ce8:	ff9f c7ff 8094 ff9a                         ........

00023cf0 <CSWTCH.71>:
   23cf0:	0000 0010 0000 0020 0000 0040 0000 0080     ...... ...@.....

00023d00 <LED_DISPLAY_CHARMAP>:
	...
   23d20:	8600 0000 0000 0000 0000 0000 4000 0080     .............@..
   23d30:	303f 4f5b 6d66 077c 677f 0000 0000 0000     ?0[Ofm|..g......
   23d40:	7700 397f 793f 3d71 3076 001f 0038 3f00     .w.9?yq=v0..8..?
   23d50:	0073 6d00 3f00 0000 0000 0000 0000 0000     s..m.?..........
   23d60:	7700 397f 793f 3d71 3076 001f 0038 3f00     .w.9?yq=v0..8..?
   23d70:	0073 6d00 3f00 0000 0000 0000 0000 0000     s..m.?..........

00023d80 <typeinfo name for scheduler_task>:
   23d80:	3431 6373 6568 7564 656c 5f72 6174 6b73     14scheduler_task
   23d90:	ff00 ffff                                   ....

00023d94 <typeinfo for scheduler_task>:
   23d94:	61e0 0002 3d80 0002 0303 0404               .a...=......

00023da0 <vtable for terminalTask>:
   23da0:	0000 0000 4454 0002 5be1 0001 5c29 0001     ....TD...[..)\..
   23db0:	5bd1 0001 5bdd 0001 5ff9 0001 5f05 0001     .[...[..._..._..
   23dc0:	6574 6d72 6e69 6c61 0800 0020 504c 3a43     terminal.. .LPC:
   23dd0:	0020 2020 4620 6e69 7369 6568 2064 6e69      .   Finished in
   23de0:	2520 2075 7375 000a 6e4f 4420 6d65 6e61      %u us..On Deman
   23df0:	2064 6554 706d 7265 7461 7275 2065 6553     d Temperature Se
   23e00:	736e 726f 6420 7461 0061 6574 706d 5400     nsor data.temp.T
   23e10:	7361 2f6b 5043 2055 6e49 6f66 202e 5520     ask/CPU Info.  U
   23e20:	6573 2720 6e69 6f66 3220 3030 2027 6f74     se 'info 200' to
   23e30:	6720 7465 4320 5550 6420 7275 6e69 2067      get CPU during 
   23e40:	3032 6d30 0073 6553 2065 656d 6f6d 7972     200ms.See memory
   23e50:	6920 666e 006f 656d 696d 666e 006f 754f      info.meminfo.Ou
   23e60:	7074 7475 7320 7379 6574 206d 6568 6c61     tput system heal
   23e70:	6874 2700 6974 656d 2027 6f74 7620 6569     th.'time' to vie
   23e80:	2077 6974 656d 202e 2720 6974 656d 7320     w time.  'time s
   23e90:	7465 4d20 204d 4444 5920 5959 2059 4848     et MM DD YYYY HH
   23ea0:	4d20 204d 5353 5720 6164 2779 7420 206f      MM SS Wday' to 
   23eb0:	6573 2074 6974 656d 5200 6165 2064 2061     set time.Read a 
   23ec0:	6966 656c 202e 4520 3a78 2720 6163 2074     file.  Ex: 'cat 
   23ed0:	3a30 6966 656c 742e 7478 2027 726f 2720     0:file.txt' or '
   23ee0:	6163 2074 3a30 6966 656c 742e 7478 2d20     cat 0:file.txt -
   23ef0:	6f6e 7270 6e69 2774 7420 206f 6574 7473     noprint' to test
   23f00:	6920 2066 6966 656c 6320 6e61 6220 2065      if file can be 
   23f10:	6572 6461 6300 7461 4300 706f 2079 6966     read.cat.Copy fi
   23f20:	656c 2073 7266 6d6f 742f 206f 6c46 7361     les from/to Flas
   23f30:	2f68 4453 4320 7261 2e64 2020 7845 203a     h/SD Card.  Ex: 
   23f40:	6327 2070 3a30 6966 656c 742e 7478 3120     'cp 0:file.txt 1
   23f50:	663a 6c69 2e65 7874 2774 4300 706f 2079     :file.txt'.Copy 
   23f60:	6c61 206c 6966 656c 2073 666f 6120 6420     all files of a d
   23f70:	7269 6365 6f74 7972 7420 206f 6e61 746f     irectory to anot
   23f80:	6568 2072 6964 6572 7463 726f 2e79 2020     her directory.  
   23f90:	7845 203a 6427 7063 3020 733a 6372 3120     Ex: 'dcp 0:src 1
   23fa0:	643a 7473 0027 6364 0070 7355 2065 6c27     :dst'.dcp.Use 'l
   23fb0:	2073 3a30 2027 6f66 2072 6c46 7361 2c68     s 0:' for Flash,
   23fc0:	6f20 2072 6c27 2073 3a31 2027 6f66 2072      or 'ls 1:' for 
   23fd0:	4453 4320 7261 0064 736c 4300 6572 7461     SD Card.ls.Creat
   23fe0:	2065 2061 6964 6572 7463 726f 2e79 4520     e a directory. E
   23ff0:	3a78 2720 6b6d 6964 2072 6574 7473 0027     x: 'mkdir test'.
   24000:	6b6d 6964 0072 6552 616e 656d 6120 6620     mkdir.Rename a f
   24010:	6c69 2e65 4520 3a78 2720 6d72 3020 663a     ile. Ex: 'rm 0:f
   24020:	6c69 2e65 7874 2074 3a30 656e 2e77 7874     ile.txt 0:new.tx
   24030:	2774 6d00 0076 7257 7469 2065 2061 656e     t'.mv.Write a ne
   24040:	2077 6966 656c 202e 7845 203a 6e27 2066     w file. Ex: 'nf 
   24050:	663c 6c69 2e65 7874 3e74 5200 6d65 766f     <file.txt>.Remov
   24060:	2065 2061 6966 656c 202e 7845 203a 7227     e a file. Ex: 'r
   24070:	206d 3a30 6966 656c 742e 7478 0027 6927     m 0:file.txt'.'i
   24080:	6332 7220 6165 2064 7830 3130 3020 3078     2c read 0x01 0x0
   24090:	2032 633c 756f 746e 273e 3a20 5220 6165     2 <count>' : Rea
   240a0:	7364 3c20 6f63 6e75 3e74 7220 6765 7369     ds <count> regis
   240b0:	6574 7372 6f20 2066 6564 6976 6563 3020     ters of device 0
   240c0:	3078 2031 7473 7261 6974 676e 6620 6f72     x01 starting fro
   240d0:	206d 7830 3230 270a 3269 2063 7277 7469     m 0x02.'i2c writ
   240e0:	2065 7830 3130 3020 3078 2032 7830 3330     e 0x01 0x02 0x03
   240f0:	2027 2020 203a 7257 7469 7365 3020 3078     '   : Writes 0x0
   24100:	2033 6f74 6420 7665 6369 2065 7830 3130     3 to device 0x01
   24110:	202c 6572 2067 7830 3230 270a 3269 2063     , reg 0x02.'i2c 
   24120:	6964 6373 766f 7265 2027 203a 6944 6373     discover' : Disc
   24130:	766f 7265 2073 6c61 206c 3249 2043 6564     overs all I2C de
   24140:	6976 6563 2073 6e6f 7420 6568 4220 5355     vices on the BUS
   24150:	6900 6332 5000 7261 6d61 7465 7265 3a73     .i2c.Parameters:
   24160:	2720 6f66 6d72 7461 7320 2764 202c 6627      'format sd', 'f
   24170:	726f 616d 2074 6c66 7361 2768 202c 6d27     ormat flash', 'm
   24180:	756f 746e 7320 2764 202c 6d27 756f 746e     ount sd', 'mount
   24190:	6620 616c 6873 0027 7473 726f 6761 0065      flash'.storage.
   241a0:	6552 6f62 746f 2073 6874 2065 7973 7473     Reboots the syst
   241b0:	6d65 7200 6265 6f6f 0074 6c27 676f 3c20     em.reboot.'log <
   241c0:	6568 6c6c 3e6f 3a27 6c20 676f 6120 206e     hello>': log an 
   241d0:	6e69 6f66 6d20 7365 6173 6567 270a 6f6c     info message.'lo
   241e0:	2067 6c66 7375 2768 2020 203a 6c66 7375     g flush'  : flus
   241f0:	2068 6874 2065 6f6c 7367 270a 6f6c 2067     h the logs.'log 
   24200:	7473 7461 7375 2027 203a 6567 2074 7473     status' : get st
   24210:	7461 7375 6f20 2066 6874 2065 6f6c 6767     atus of the logg
   24220:	7265 270a 6f6c 2067 6e65 6261 656c 7020     er.'log enable p
   24230:	6972 746e 6420 6265 6775 692f 666e 2f6f     rint debug/info/
   24240:	6177 6e72 652f 7272 726f 2027 203a 6e45     warn/error' : En
   24250:	6261 656c 2073 6f6c 6767 7265 6320 6c61     ables logger cal
   24260:	736c 7420 206f 7270 6e69 6674 270a 6f6c     ls to printf.'lo
   24270:	2067 6964 6173 6c62 2065 7270 6e69 2074     g disable print 
   24280:	6564 7562 2f67 6e69 6f66 772f 7261 2f6e     debug/info/warn/
   24290:	7265 6f72 2772 203a 6944 6173 6c62 7365     error': Disables
   242a0:	6c20 676f 6567 2072 6163 6c6c 2073 6f74      logger calls to
   242b0:	7020 6972 746e 0a66 6c00 676f 4200 6765      printf..log.Beg
   242c0:	6e69 7420 206f 656c 7261 206e 5249 6320     in to learn IR c
   242d0:	646f 7365 6620 726f 6e20 6d75 6562 7372     odes for numbers
   242e0:	3020 392d 6c00 6165 6e72 5500 6573 2720      0-9.learn.Use '
   242f0:	6977 6572 656c 7373 2027 6f74 7320 6565     wireless' to see
   24300:	7420 6568 6e20 7365 6574 2064 6f63 6d6d      the nested comm
   24310:	6e61 7364 4700 7465 6120 6620 6c69 2065     ands.Get a file 
   24320:	7375 6e69 2067 656e 6c74 616f 2e64 7865     using netload.ex
   24330:	2065 726f 6220 2079 7375 6e69 2067 6874     e or by using th
   24340:	2065 6f66 6c6c 776f 6e69 2067 7270 746f     e following prot
   24350:	636f 6c6f 0a3a 7257 7469 2065 7562 6666     ocol:.Write buff
   24360:	7265 203a 7562 6666 7265 3c20 666f 7366     er: buffer <offs
   24370:	7465 203e 6e3c 6d75 6220 7479 7365 203e     et> <num bytes> 
   24380:	2e2e 0a2e 7257 7469 2065 7562 6666 7265     ....Write buffer
   24390:	7420 206f 6966 656c 203a 6f63 6d6d 7469      to file: commit
   243a0:	3c20 6966 656c 616e 656d 203e 663c 6c69      <filename> <fil
   243b0:	2065 666f 7366 7465 203e 6e3c 6d75 6220     e offset> <num b
   243c0:	7479 7365 6620 6f72 206d 7562 6666 7265     ytes from buffer
   243d0:	003e 6627 616c 6873 3c20 6966 656c 616e     >.'flash <filena
   243e0:	656d 273e 5720 6c69 206c 6c66 7361 2068     me>' Will flash 
   243f0:	5043 2055 6977 6874 7420 6968 2073 656e     CPU with this ne
   24400:	2077 6962 616e 7972 6620 6c69 0065 4155     w binary file.UA
   24410:	5452 4320 4d4f 4820 6e61 6c64 7265 6620     RT COM Handler f
   24420:	726f 7420 676f 6c67 6e69 2067 656c 7364     or toggling leds
   24430:	6120 646e 6720 7465 6974 676e 7020 7469      and getting pit
   24440:	6863 6420 7461 2e61 7500 7261 0074 6568     ch data..uart.he
   24450:	706c ff00                                   lp..

00024454 <typeinfo for terminalTask>:
   24454:	6108 0002 4460 0002 3d94 0002               .a..`D...=..

00024460 <typeinfo name for terminalTask>:
   24460:	3231 6574 6d72 6e69 6c61 6154 6b73 0300     12terminalTask..
   24470:	0403 4604 4941 454c 0044 6553 2074 6461     ...FAILED.Set ad
   24480:	7264 7365 2073 6f74 2520 3a69 2520 0a73     dress to %i: %s.
   24490:	4e00 7525 203a 7852 542f 2c78 5220 6574     .N%u: Rx/Tx, Rte
   244a0:	4f2f 7476 202c 6552 7274 6569 2f64 654d     /Ovt, Retried/Me
   244b0:	6873 5220 7465 6972 6465 522f 7065 6165     sh Retried/Repea
   244c0:	6574 3a64 0a20 2000 2020 2520 7533 252f     ted: ..    %3u/%
   244d0:	332d 2075 7525 252f 2c75 2520 2f75 7525     -3u %u/%u, %u/%u
   244e0:	252f 0a75 4400 7369 6163 6472 6465 6120     /%u..Discarded a
   244f0:	7320 6174 656c 7720 7269 6c65 7365 2073      stale wireless 
   24500:	6170 6b63 7465 4500 7272 726f 7320 6e65     packet.Error sen
   24510:	6964 676e 7020 6361 656b 2c74 6320 6568     ding packet, che
   24520:	6b63 7020 7261 6d61 7465 7265 2173 5200     ck parameters!.R
   24530:	6d65 746f 2065 6f6e 6564 6e20 6d61 3a65     emote node name:
   24540:	2720 5200 6365 6965 6576 2064 6874 2065      '.Received the 
   24550:	6361 6e6b 776f 656c 6764 656d 746e 0021     acknowledgment!.
   24560:	6150 6b63 7465 7320 6e65 2074 6f74 2520     Packet sent to %
   24570:	2073 7562 2074 6f6e 4120 4b43 7220 6365     s but no ACK rec
   24580:	6965 6576 0064 6552 6563 7669 6465 6420     eived.Received d
   24590:	7461 2061 7266 6d6f 2520 0a69 4e00 206f     ata from %i..No 
   245a0:	6164 6174 7220 6365 6965 6576 0064 2d2d     data received.--
   245b0:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   245c0:	2d2d 2d2d 2d2d 0a2d 5200 756f 6974 676e     -------..Routing
   245d0:	7420 6261 656c 7320 7a69 2065 7369 2520      table size is %
   245e0:	0a69 7c00 4420 5453 7c20 4e20 7865 2074     i..| DST | Next 
   245f0:	4f48 2050 207c 4f48 5350 7c20 000a 207c     HOP | HOPS |..| 
   24600:	3325 2069 207c 2020 3325 2069 2020 7c20     %3i |   %3i    |
   24610:	2520 6933 2020 0a7c 2700 7473 6572 6d61      %3i  |..'stream
   24620:	3c20 6461 7264 203e 6d3c 6773 273e 3a20      <addr> <msg>' :
   24630:	5320 7274 6165 206d 2061 6f63 6d6d 6e61      Stream a comman
   24640:	2064 6f74 6120 6f6e 6874 7265 6220 616f     d to another boa
   24650:	6472 7300 7274 6165 006d 7427 6172 736e     rd.stream.'trans
   24660:	6566 2072 733c 6372 6620 6c69 6e65 6d61     fer <src filenam
   24670:	3e65 3c20 7364 2074 6966 656c 616e 656d     e> <dst filename
   24680:	203e 6e3c 6461 7264 273e 3a20 5420 6172     > <naddr>' : Tra
   24690:	736e 6566 2072 2061 6966 656c 7420 206f     nsfer a file to 
   246a0:	6e61 746f 6568 2072 6f62 7261 0064 7274     another board.tr
   246b0:	6e61 6673 7265 2700 7872 3c20 6974 656d     ansfer.'rx <time
   246c0:	6d5f 3e73 2027 203a 6f50 6c6c 6620 726f     _ms>' : Poll for
   246d0:	6120 7020 6361 656b 0074 6127 6464 2072      a packet.'addr 
   246e0:	613c 6464 3e72 2020 3a20 5320 7465 7420     <addr>   : Set t
   246f0:	6568 7720 7269 6c65 7365 2073 6461 7264     he wireless addr
   24700:	7365 0073 7227 756f 6574 2773 3a20 5320     ess.'routes' : S
   24710:	6565 7420 6568 7720 7269 6c65 7365 2073     ee the wireless 
   24720:	6f72 7475 7365 2700 6361 206b 613c 6464     routes.'ack <add
   24730:	3e72 3c20 6164 6174 273e 2020 203a 6553     r> <data>'  : Se
   24740:	646e 6120 7020 6361 656b 2074 6e61 2064     nd a packet and 
   24750:	6177 7469 6620 726f 6120 6b63 6f6e 6c77     wait for acknowl
   24760:	6465 6d67 6e65 0074 6e27 6361 206b 613c     edgment.'nack <a
   24770:	6464 3e72 3c20 6164 6174 273e 3a20 5320     ddr> <data>' : S
   24780:	6e65 2064 2061 6170 6b63 7465 6e00 6361     end a packet.nac
   24790:	006b 7327 6174 7374 2027 203a 6553 2065     k.'stats' : See 
   247a0:	6874 2065 6977 6572 656c 7373 7320 6174     the wireless sta
   247b0:	7374 2500 3231 7338 2520 3231 7338 2520     ts.%128s %128s %
   247c0:	0069 7254 6e61 6673 7265 2520 2073 2d2d     i.Transfer %s --
   247d0:	203e 6925 253a 0a73 6600 6c69 2065 7562     > %i:%s..file bu
   247e0:	6666 7265 3020 2520 0a69 4500 5252 524f     ffer 0 %i..ERROR
   247f0:	203a 6843 6365 736b 6d75 4520 7078 6365     : Checksum Expec
   24800:	6574 2064 6925 4120 7463 6175 206c 6925     ted %i Actual %i
   24810:	000a 6966 656c 6320 6d6f 696d 2074 7325     ..file commit %s
   24820:	2520 2069 6925 000a 6b6f 4500 5252 524f      %i %i..ok.ERROR
   24830:	203a 6552 6f6d 6574 6e20 646f 2065 6964     : Remote node di
   24840:	2064 6f6e 2074 6361 6e6b 776f 656c 6764     d not acknowledg
   24850:	2065 6966 656c 7720 6972 6574 2820 7325     e file write (%s
   24860:	0a29 5300 6e65 2074 6925 252f 0a69 2000     )..Sent %i/%i.. 
   24870:	2020 5220 6365 6965 6576 2064 6925 6220        Received %i b
   24880:	7479 7365 6f20 6576 2072 6925 7020 6361     ytes over %i pac
   24890:	656b 7374 000a 354c 415f 7070 696c 6163     kets..L5_Applica
   248a0:	6974 6e6f 732f 756f 6372 2f65 6d63 5f64     tion/source/cmd_
   248b0:	6168 646e 656c 7372 772f 7269 6c65 7365     handlers/wireles
   248c0:	5f73 6168 646e 656c 7372 632e 7070 5700     s_handlers.cpp.W
   248d0:	6f68 706f 2173 2020 7041 7270 786f 6d69     hoops!  Approxim
   248e0:	7461 6c65 2079 6925 6220 7479 7365 6320     ately %i bytes c
   248f0:	756f 646c 6e20 746f 6220 2065 7270 6e69     ould not be prin
   24900:	6574 2064 6562 6163 7375 2065 6874 2065     ted because the 
   24910:	756f 7074 7475 6320 6168 6e6e 6c65 6920     output channel i
   24920:	2073 6f74 206f 6c73 776f 202e 5020 656c     s too slow.  Ple
   24930:	7361 2065 6f66 6c6c 776f 7420 6568 7320     ase follow the s
   24940:	6775 6567 7473 6f69 736e 6120 2074 6966     uggestions at fi
   24950:	656c 203a 7325 6120 6c20 7469 6c74 2065     le: %s a little 
   24960:	6962 2074 6261 766f 2065 6877 6c69 2065     bit above while 
   24970:	6f6c 706f 6120 2074 696c 656e 6e20 6d75     loop at line num
   24980:	6562 2072 6925 000a 6150 7372 2065 7265     ber %i..Parse er
   24990:	6f72 3a72 7420 7972 203a 7327 7274 6165     ror: try: 'strea
   249a0:	206d 613c 6464 3e72 3c20 6f63 6d6d 6e61     m <addr> <comman
   249b0:	3e64 0027 5163 0002 5167 0002 516b 0002     d>'.cQ..gQ..kQ..
   249c0:	516f 0002 5173 0002                         oQ..sQ..

000249c8 <logHandler(str&, CharDev&, void*)::__FUNCTION__>:
   249c8:	6f6c 4867 6e61 6c64 7265 3100 3300 3400     logHandler.1.3.4
   249d8:	6400 7369 6174 636e 0065 614e 656d 2500     .distance.Name.%
   249e8:	3031 2073 7453 2061 7250 5320 6174 6b63     10s Sta Pr Stack
   249f8:	4320 5550 2525 2020 2020 2020 2020 2020      CPU%%          
   24a08:	6954 656d 000a 3125 7330 2520 2073 3225     Time..%10s %s %2
   24a18:	2075 3525 2075 3425 2075 3125 7530 7520     u %5u %4u %10u u
   24a28:	0a73 2800 766f 7265 6568 6461 0029 3125     s..(overhead).%1
   24a38:	7330 2d20 2d2d 2d20 202d 2d2d 2d2d 202d     0s --- -- ----- 
   24a48:	3425 2075 3125 7530 7520 0a53 2a00 202a     %4u %10u uS..** 
   24a58:	4157 4e52 4e49 3a47 4f20 6c6e 2079 6572     WARNING: Only re
   24a68:	6f70 7472 6465 6620 7269 7473 2520 2075     ported first %u 
   24a78:	6174 6b73 0a73 2500 732a 2520 2075 7525     tasks..%*s %u %u
   24a88:	2520 2075 7525 2520 2075 7525 2520 0075      %u %u %u %u %u.
   24a98:	6e45 6261 656c 0064 6944 6173 6c62 6465     Enabled.Disabled
   24aa8:	6400 6265 6775 6500 7272 726f 7700 7261     .debug.error.war
   24ab8:	006e 6c66 7375 0068 6f4c 2867 2973 6820     n.flush.Log(s) h
   24ac8:	7661 2065 6562 6e65 6620 756c 6873 6465     ave been flushed
   24ad8:	7300 6174 7574 0073 6c42 636f 656b 2064     .status.Blocked 
   24ae8:	6163 6c6c 2073 3a20 2520 0a75 5100 6575     calls  : %u..Que
   24af8:	6575 7720 7461 7265 616d 6b72 203a 7525     ue watermark: %u
   24b08:	000a 6948 6867 7365 2074 6966 656c 7720     ..Highest file w
   24b18:	6972 6574 7420 6d69 3a65 2520 6d75 0a73     rite time: %ums.
   24b28:	4300 6c61 206c 6f63 6e75 7374 2020 2020     .Call counts    
   24b38:	203a 7525 6420 6267 2520 2075 6e69 6f66     : %u dgb %u info
   24b48:	2520 2075 6177 6e72 2520 2075 7265 0a72      %u warn %u err.
   24b58:	7200 7761 6500 616e 6c62 2065 6400 7369     .raw.enable .dis
   24b68:	6261 656c 0020 7325 6c20 676f 6567 2072     able .%s logger 
   24b78:	7270 6e69 6674 6620 726f 2520 0a73 4c00     printf for %s..L
   24b88:	5f35 7041 6c70 6369 7461 6f69 2f6e 6f73     5_Application/so
   24b98:	7275 6563 632f 646d 685f 6e61 6c64 7265     urce/cmd_handler
   24ba8:	2f73 6168 646e 656c 7372 632e 7070 4c00     s/handlers.cpp.L
   24bb8:	676f 6567 3a64 7c20 7325 0a7c 4500 7272     ogged: |%s|..Err
   24bc8:	726f 2520 2075 6f63 7970 6e69 2067 257c     or %u copying |%
   24bd8:	7c73 2d20 203e 257c 7c73 000a 6946 696e     s| -> |%s|..Fini
   24be8:	6873 6465 2021 5220 6165 3a64 2520 2075     shed!  Read: %u 
   24bf8:	624b 732f 6365 202c 7257 7469 3a65 2520     Kb/sec, Write: %
   24c08:	2075 624b 732f 6365 000a 6e2d 706f 6972     u Kb/sec..-nopri
   24c18:	746e 4600 6961 656c 2064 6f74 6f20 6570     nt.Failed to ope
   24c28:	3a6e 2520 0a73 0a00 6552 6461 2520 2064     n: %s...Read %d 
   24c38:	7962 6574 2073 2040 6425 4b20 2f62 6573     bytes @ %d Kb/se
   24c48:	0063 3a30 4900 766e 6c61 6469 6420 7269     c.0:.Invalid dir
   24c58:	6365 6f74 7972 203a 257c 7c73 2820 7245     ectory: |%s| (Er
   24c68:	6f72 2072 6925 0a29 4400 7269 6365 6f74     ror %i)..Directo
   24c78:	7972 6c20 7369 6974 676e 6f20 3a66 2520     ry listing of: %
   24c88:	0a73 000a 6325 6325 6325 6325 6325 2520     s...%c%c%c%c%c %
   24c98:	2f75 3025 7532 252f 3230 2075 3025 7532     u/%02u/%02u %02u
   24ca8:	253a 3230 2075 3125 6c30 2075 3125 7333     :%02u %10lu %13s
   24cb8:	2000 202d 0a00 3425 2075 6946 656c 7328     . - ..%4u File(s
   24cc8:	2c29 2520 3031 2064 7962 6574 2073 6f74     ), %10d bytes to
   24cd8:	6174 0a6c 3425 2064 6944 2872 2973 2c00     tal.%4d Dir(s).,
   24ce8:	2520 3031 4b64 6220 7479 7365 6620 6572      %10dK bytes fre
   24cf8:	0a65 4300 6572 7461 2065 6964 6572 7463     e..Create direct
   24d08:	726f 2079 2527 2773 3a20 2520 0a73 4400     ory '%s' : %s..D
   24d18:	6c65 7465 2065 2527 2773 3a20 2520 0a73     elete '%s' : %s.
   24d28:	4d00 766f 2065 2527 2773 2d20 203e 2527     .Move '%s' -> '%
   24d38:	2773 3a20 2520 0a73 5500 616e 6c62 2065     s' : %s..Unable 
   24d48:	6f74 6f20 6570 206e 2527 2773 7420 206f     to open '%s' to 
   24d58:	7277 7469 2065 6874 2065 6966 656c 000a     write the file..
   24d68:	6e45 2064 6874 2065 6966 656c 6220 2079     End the file by 
   24d78:	7375 6e69 2067 6325 6320 6168 6172 7463     using %c charact
   24d88:	7265 202e 2520 2069 7369 7420 6568 7420     er.  %i is the t
   24d98:	6d69 6f65 7475 000a 6f53 7272 2c79 6e20     imeout..Sorry, n
   24da8:	206f 6162 6b63 7073 6361 2065 7573 7070     o backspace supp
   24db8:	726f 2074 283a 000a 7245 6f72 2072 636f     ort :(..Error oc
   24dc8:	7563 7272 6465 7720 6968 656c 7720 6972     curred while wri
   24dd8:	6974 676e 7420 6568 6620 6c69 0a65 4500     ting the file..E
   24de8:	5252 524f 203a 6947 6576 6d20 2065 6f73     RROR: Give me so
   24df8:	7275 6563 6120 646e 6420 7365 6974 616e     urce and destina
   24e08:	6974 6e6f 6420 7269 6365 6f74 7972 7320     tion directory s
   24e18:	7065 7261 7461 6465 6220 2079 2061 7073     eparated by a sp
   24e28:	6361 0065 6e49 6176 696c 2064 6564 7473     ace.Invalid dest
   24e38:	6e69 7461 6f69 206e 6964 6572 7463 726f     ination director
   24e48:	3a79 7c20 7325 0a7c 4900 766e 6c61 6469     y: |%s|..Invalid
   24e58:	7320 756f 6372 2065 6964 6572 7463 726f      source director
   24e68:	3a79 7c20 7325 0a7c 2500 2f73 7325 4300     y: |%s|..%s/%s.C
   24e78:	706f 2079 7325 2d20 203e 7325 3a20 2520     opy %s -> %s : %
   24e88:	2064 7942 6574 2073 203a 7325 000a 6f46     d Bytes : %s..Fo
   24e98:	6d72 7461 4f20 004b 6f46 6d72 7461 4520     rmat OK.Format E
   24ea8:	5252 524f 5300 2044 6143 6472 6d20 756f     RROR.SD Card mou
   24eb8:	746e 6465 4500 7272 726f 6d20 756f 746e     nted.Error mount
   24ec8:	6e69 2067 4453 4320 7261 0064 6c46 7361     ing SD Card.Flas
   24ed8:	2068 6f6d 6e75 6574 0064 7245 6f72 2072     h mounted.Error 
   24ee8:	6f6d 6e75 6974 676e 4620 616c 6873 4d20     mounting Flash M
   24ef8:	6d65 726f 0079 6f66 6d72 7461 7320 0064     emory.format sd.
   24f08:	6f66 6d72 7461 6620 616c 6873 6d00 756f     format flash.mou
   24f18:	746e 7320 0064 6f6d 6e75 2074 6c66 7361     nt sd.mount flas
   24f28:	0068 6552 6f62 746f 6e69 2067 7953 7473     h.Rebooting Syst
   24f38:	6d65 4c00 6165 6e72 6e69 2067 6f6d 6564     em.Learning mode
   24f48:	6520 616e 6c62 6465 4500 5252 524f 203a      enabled.ERROR: 
   24f58:	6553 616d 6870 726f 2065 6177 2073 554e     Semaphore was NU
   24f68:	4c4c 202c 7369 7420 6568 2720 6572 6f6d     LL, is the 'remo
   24f78:	6574 2027 6174 6b73 7220 6e75 696e 676e     te' task running
   24f88:	003f 7277 7469 0065 6964 6373 766f 7265     ?.write.discover
   24f98:	2500 732a 2520 7830 2520 7830 2520 0075     .%*s %0x %0x %u.
   24fa8:	654e 6465 6420 7665 6369 2065 6e61 2064     Need device and 
   24fb8:	6572 6967 7473 7265 6120 6464 6572 7373     register address
   24fc8:	5200 6165 2064 7473 7461 7375 6620 6f72     .Read status fro
   24fd8:	206d 6564 6976 6563 2520 3223 3a58 2520     m device %#2X: %
   24fe8:	3a73 0a20 2000 2020 2520 3223 3a58 2520     s: ..    %#2X: %
   24ff8:	3223 0a58 2500 732a 2520 7830 2520 7830     #2X..%*s %0x %0x
   25008:	2520 7830 4e00 6565 2064 6564 6976 6563      %0x.Need device
   25018:	202c 6572 6967 7473 7265 6120 6464 6572     , register addre
   25028:	7373 6120 646e 6420 7461 0061 7257 746f     ss and data.Wrot
   25038:	2065 2325 5832 7420 206f 2325 5832 3a3a     e %#2X to %#2X::
   25048:	2325 5832 000a 7245 6f72 2072 7277 7469     %#2X..Error writ
   25058:	6e69 2067 6f74 6420 7665 6369 2065 2325     ing to device %#
   25068:	0a78 4900 4332 6420 7665 6369 2065 6572     x..I2C device re
   25078:	7073 6e6f 6564 2064 6f74 6120 6464 6572     sponded to addre
   25088:	7373 2520 3423 0a78 4800 6c65 6f6c 5720     ss %#4x..Hello W
   25098:	726f 646c 003f 7543 7272 6e65 2074 6554     orld?.Current Te
   250a8:	706d 7265 7461 7275 2065 203d 6625 000a     mperature = %f..
   250b8:	6c46 7361 3a68 2520 2f75 7525 4c20 6669     Flash: %u/%u Lif
   250c8:	3a65 2520 2569 2025 7028 6761 2065 7525     e: %i%% (page %u
   250d8:	7720 6972 7474 6e65 2520 2075 6974 656d      written %u time
   250e8:	2973 000a 6c46 7361 3a68 2520 2f75 7525     s)..Flash: %u/%u
   250f8:	000a 6554 706d 3a20 2520 2e75 7525 4c0a     ..Temp : %u.%u.L
   25108:	6769 7468 203a 7525 540a 6d69 2065 203a     ight: %u.Time : 
   25118:	7325 6f42 746f 5420 6d69 3a65 2520 3230     %sBoot Time: %02
   25128:	2f75 3025 7532 252f 7534 252c 3230 3a75     u/%02u/%4u,%02u:
   25138:	3025 7532 253a 3230 0a75 6155 7472 2030     %02u:%02u.Uart0 
   25148:	6157 6574 6d72 7261 736b 203a 7525 252f     Watermarks: %u/%
   25158:	2075 7228 2f78 7874 0a29 5200 4e55 5200     u (rx/tx)..RUN.R
   25168:	5944 4200 4b4c 5300 5355 4400 4c45 4600     DY.BLK.SUS.DEL.F
   25178:	6c69 6e65 6d61 2065 6873 756f 646c 6220     ilename should b
   25188:	2065 656c 7373 7420 6168 206e 6925 6320     e less than %i c
   25198:	6168 7372 000a 7325 2820 7525 6220 7479     hars..%s (%u byt
   251a8:	7365 2029 6977 6c6c 6220 2065 7270 676f     es) will be prog
   251b8:	6172 6d6d 6465 0a2e 6552 6f62 746f 6e69     rammed..Rebootin
   251c8:	2067 6f6e 2077 6f74 7520 6770 6172 6564     g now to upgrade
   251d8:	6620 7269 776d 7261 2165 0a0a 5500 616e      firmware!...Una
   251e8:	6c62 2065 6f74 6f20 6570 206e 2527 2773     ble to open '%s'
   251f8:	000a 4b4f 000a 6946 656c 7720 6972 6574     ..OK..File write
   25208:	6520 7272 726f 000a 6f63 6d6d 7469 2500      error..commit.%
   25218:	732a 2520 3231 7338 2520 2069 6925 6200     *s %128s %i %i.b
   25228:	6675 6566 0072 2a25 2073 6925 2520 0069     uffer.%*s %i %i.
   25238:	5245 4f52 3a52 4d20 7861 6220 6675 6566     ERROR: Max buffe
   25248:	2072 6973 657a 6920 2073 6925 6220 7479     r size is %i byt
   25258:	7365 000a 5245 4f52 3a52 5420 4d49 4f45     es..ERROR: TIMEO
   25268:	5455 000a 6843 6365 736b 6d75 2520 0a69     UT..Checksum %i.
   25278:	2d00 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     .---------------
   25288:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   25298:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   252a8:	2d2d 2d2d 2d2d 2d2d 2d2d 002d 424b 4d00     -----------.KB.M
   252b8:	0042 6f4e 5900 7365 2500 3a73 4f20 204b     B.No.Yes.%s: OK 
   252c8:	2d2d 4320 7061 6361 7469 2079 2d25 6435     -- Capacity %-5d
   252d8:	7325 202c 7641 6961 616c 6c62 3a65 2520     %s, Available: %
   252e8:	352d 2575 0a73 2500 3a73 4520 7272 726f     -5u%s..%s: Error
   252f8:	6f20 2072 6f6e 2074 7270 7365 6e65 2e74      or not present.
   25308:	2020 7245 6f72 2072 2523 2c69 4d20 756f       Error #%i, Mou
   25318:	746e 6465 203a 7325 000a 6f44 656e 4500     nted: %s..Done.E
   25328:	7272 726f 4400 6e6f 2165 4500 5252 524f     rror.Done!.ERROR
   25338:	203a 6f50 7373 6269 656c 7320 6f68 7472     : Possible short
   25348:	6f20 206e 4453 2041 726f 5320 4c43 7720      on SDA or SCL w
   25358:	7269 2065 4928 4332 2932 0021 5245 4f52     ire (I2C2)!.ERRO
   25368:	3a52 4620 6961 656c 2064 6f74 6920 696e     R: Failed to ini
   25378:	6974 6c61 7a69 2065 6977 6572 656c 7373     tialize wireless
   25388:	5300 7379 6574 206d 6f42 746f 4020 2520     .System Boot @ %
   25398:	332e 2066 684d 0a7a 5300 7379 6574 206d     .3f Mhz..System 
   253a8:	6572 6f62 746f 6465 6120 7466 7265 6320     rebooted after c
   253b8:	6172 6873 202e 5220 6c65 7665 6e61 2074     rash.  Relevant 
   253c8:	6e69 6f66 0a3a 4350 203a 7830 3025 5838     info:.PC: 0x%08X
   253d8:	202e 4c20 3a52 3020 2578 3830 2e58 2020     .  LR: 0x%08X.  
   253e8:	5350 3a52 3020 2578 3830 0a58 6f50 7373     PSR: 0x%08X.Poss
   253f8:	6269 656c 6c20 7361 2074 7572 6e6e 6e69     ible last runnin
   25408:	2067 534f 5420 7361 3a6b 2720 7325 0a27     g OS Task: '%s'.
   25418:	2000 6c46 7361 2068 4500 6172 6973 676e     . Flash .Erasing
   25428:	6120 646e 6620 726f 616d 7474 6e69 2067      and formatting 
   25438:	5053 2049 6c66 7361 2c68 7420 6968 2073     SPI flash, this 
   25448:	6163 206e 6174 656b 6120 7720 6968 656c     can take a while
   25458:	2e20 2e2e 0020 5053 2049 4c46 5341 2048      ... .SPI FLASH 
   25468:	7369 7020 736f 6973 6c62 2079 6164 616d     is possibly dama
   25478:	6567 2164 5000 6761 2065 6973 657a 203a     ged!.Page size: 
   25488:	7525 000a 654d 206d 7320 7a69 3a65 2520     %u..Mem  size: %
   25498:	2075 7228 7761 6220 7479 7365 0a29 4500     u (raw bytes)..E
   254a8:	5252 524f 203a 6341 6563 656c 6172 6974     RROR: Accelerati
   254b8:	6e6f 5320 6e65 6f73 0072 5245 4f52 3a52     on Sensor.ERROR:
   254c8:	5420 6d65 6570 6172 7574 6572 5320 6e65      Temperature Sen
   254d8:	6f73 0072 5245 4f52 3a52 3720 532d 6765     sor.ERROR: 7-Seg
   254e8:	656d 746e 4420 7369 6c70 7961 6e00 6461     ment Display.nad
   254f8:	7264 5300 7465 7720 7269 6c65 7365 2073     dr.Set wireless 
   25508:	6f6e 6564 6120 6464 6572 7373 7420 206f     node address to 
   25518:	6925 6620 6f72 206d 2527 2773 6620 6c69     %i from '%s' fil
   25528:	3a65 2520 0a73 4200 616f 6472 4920 2044     e: %s..Board ID 
   25538:	7369 203a 2527 2773 2820 7830 3025 5832     is: '%s' (0x%02X
   25548:	0a29 4500 746e 7265 6120 6220 616f 6472     )..Enter a board
   25558:	4920 2044 3628 2034 6863 7261 2073 616d      ID (64 chars ma
   25568:	2978 203a 2500 3436 0073 6f42 7261 2064     x): .%64s.Board 
   25578:	4449 7420 206f 7270 676f 6172 3a6d 2720     ID to program: '
   25588:	7325 0a27 4500 746e 7265 2720 2759 7420     %s'..Enter 'Y' t
   25598:	206f 6f63 666e 7269 2e6d 2020 4f42 5241     o confirm.  BOAR
   255a8:	2044 4449 4320 4e41 4f4e 2054 4542 4320     D ID CANNOT BE C
   255b8:	4148 474e 4445 4120 444e 4920 2053 4550     HANGED AND IS PE
   255c8:	4d52 4e41 4e45 0054 3325 0073 6f42 7261     RMANENT.%3s.Boar
   255d8:	2064 4449 6e20 746f 7020 6f72 7267 6d61     d ID not program
   255e8:	656d 0064 6f59 2075 6163 206e 7270 676f     med.You can prog
   255f8:	6172 206d 2061 4550 4d52 4e41 4e45 2054     ram a PERMANENT 
   25608:	4449 6f20 2066 6f79 7275 6220 616f 6472     ID of your board
   25618:	002e 6f54 6420 206f 6874 7369 202c 6f68     ..To do this, ho
   25628:	646c 5320 3157 6120 646e 5320 3457 6120     ld SW1 and SW4 a
   25638:	646e 7220 7365 7465 7420 6568 6220 616f     nd reset the boa
   25648:	6472 002e 5043 2055 6c66 7361 2068 6c61     rd..CPU flash al
   25658:	6574 6572 2f64 7270 676f 6172 6d6d 6465     tered/programmed
   25668:	6320 756f 746e 3a73 2520 2f75 7525 000a      counts: %u/%u..
   25678:	5043 2055 7270 676f 6172 6d6d 6465 6620     CPU programmed f
   25688:	616c 6873 2820 696d 2f6e 616d 2978 203a     lash (min/max): 
   25698:	7525 624b 2d20 2520 4b75 0a62 4c00 7361     %uKb - %uKb..Las
   256a8:	2074 7270 676f 6172 6d6d 6e69 2067 6f74     t programming to
   256b8:	6b6f 2520 2075 736d 000a 6143 6c6c 6e69     ok %u ms..Callin
   256c8:	2067 6f79 7275 6d20 6961 286e 0029 ffff     g your main()...

000256d8 <periodicSchedulerTask::handlePeriodicSemaphore(unsigned char, unsigned char)::overrunMsg>:
   256d8:	5715 0002 5726 0002 5738 0002 574b 0002     .W..&W..8W..KW..
   256e8:	6964 7073 7461 6863 7265 3100 7a48 3100     dispatcher.1Hz.1
   256f8:	4830 007a 3031 4830 007a 3031 3030 7a48     0Hz.100Hz.1000Hz
   25708:	7200 7365 6174 7472 742e 7478 3100 7a48     .restart.txt.1Hz
   25718:	7420 7361 206b 766f 7265 7572 006e 3031      task overrun.10
   25728:	7a48 7420 7361 206b 766f 7265 7572 006e     Hz task overrun.
   25738:	3031 4830 207a 6174 6b73 6f20 6576 7272     100Hz task overr
   25748:	6e75 3100 3030 4830 207a 6174 6b73 6f20     un.1000Hz task o
   25758:	6576 7272 6e75 ff00                         verrun..

00025760 <typeinfo for periodicSchedulerTask>:
   25760:	6108 0002 576c 0002 3d94 0002               .a..lW...=..

0002576c <typeinfo name for periodicSchedulerTask>:
   2576c:	3132 6570 6972 646f 6369 6353 6568 7564     21periodicSchedu
   2577c:	656c 5472 7361 006b                         lerTask.

00025784 <vtable for periodicSchedulerTask>:
   25784:	0000 0000 5760 0002 8179 0001 8205 0001     ....`W..y.......
   25794:	81fd 0001 8201 0001 5bd9 0001 8385 0001     .........[......

000257a4 <PERIOD_TASKS_STACK_SIZE_BYTES>:
   257a4:	0800 0000                                   ....

000257a8 <PERIOD_DISPATCHER_TASK_STACK_SIZE_BYTES>:
   257a8:	0600 0000                                   ....

000257ac <typeinfo name for wirelessTask>:
   257ac:	3231 6977 6572 656c 7373 6154 6b73 ff00     12wirelessTask..

000257bc <typeinfo for wirelessTask>:
   257bc:	6108 0002 57ac 0002 3d94 0002               .a...W...=..

000257c8 <vtable for wirelessTask>:
   257c8:	0000 0000 57bc 0002 83c9 0001 83d5 0001     .....W..........
   257d8:	5bd1 0001 5bd5 0001 5bd9 0001 83cb 0001     .[...[...[......

000257e8 <typeinfo for ComTask>:
   257e8:	6108 0002 5ab8 0002 3d94 0002               .a...Z...=..

000257f4 <vtable for ComTask>:
   257f4:	0000 0000 57e8 0002 84cb 0001 84d9 0001     .....W..........
   25804:	5bd1 0001 5bd5 0001 5bd9 0001 8559 0001     .[...[...[..Y...
   25814:	6974 6b63 2520 2069 2d2d 0020 2041 696d     tick %i -- .A mi
   25824:	756e 6574 6820 7361 6520 616c 7370 6465     nute has elapsed
   25834:	0021 354c 415f 7070 696c 6163 6974 6e6f     !.L5_Application
   25844:	652f 6178 706d 656c 2f73 7865 6d61 6c70     /examples/exampl
   25854:	7365 632e 7070 4500 6178 706d 656c 6c20     es.cpp.Example l
   25864:	676f 6920 666e 006f 7845 6d61 6c70 2065     og info.Example 
   25874:	6f6c 2067 6177 6e72 6e69 0067 6e49 6f66     log warning.Info
   25884:	6d72 7461 6f69 206e 6177 2073 6f6c 6767     rmation was logg
   25894:	6465 7420 206f 2061 6966 656c 202e 5420     ed to a file.  T
   258a4:	7079 2065 6327 7461 6c20 676f 2027 6f74     ype 'cat log' to
   258b4:	7320 6565 6920 2e74 5300 7375 6570 646e      see it..Suspend
   258c4:	6e69 2067 6874 7369 7420 7361 206b 6e6f     ing this task on
   258d4:	7020 7275 6f70 6573 6d00 5f79 7571 7565      purpose.my_queu
   258e4:	0065 6f47 2074 6925 6620 6f72 206d 7571     e.Got %i from qu
   258f4:	7565 0065 7865 715f 7872 4100 6363 6c65     eue.ex_qrx.Accel
   25904:	7265 7461 6f69 206e 6573 736e 726f 5820     eration sensor X
   25914:	412d 6978 3a73 2520 0a69 4300 6d6f 756d     -Axis: %i..Commu
   25924:	696e 6163 6974 6e6f 5420 7361 006b 7865     nication Task.ex
   25934:	735f 6d69 6c70 0065 7865 645f 6d65 006f     _simple.ex_demo.
   25944:	7865 615f 616c 6d72 6500 5f78 6f6c 5f67     ex_alarm.ex_log_
   25954:	7371 7465 6e00 5f76 6176 7372 6500 5f78     qset.nv_vars.ex_
   25964:	7471 0078 7270 646f 6375 7265 6300 6e6f     qtx.producer.con
   25974:	7573 656d 0072 6325 253a 0a64 5000 736f     sumer.%c:%d..Pos
   25984:	7469 6f69 206e 203d 6425 000a 6f43 6d6d     ition = %d..Comm
   25994:	6e75 6369 7461 6f69 206e 6154 6b73 3220     unication Task 2
   259a4:	5000 736f 3d20 2520 0064 2d0a 2d2d 2d2d     .Pos = %d..-----
   259b4:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 2d2d     ----------------
   259c4:	2d2d 2d2d 2d2d 2d2d 2d2d 2d2d 530a 6174     ------------.Sta
   259d4:	7574 2073 6552 6f70 7472 203a 5400 6d65     tus Report: .Tem
   259e4:	6570 6172 7574 6572 203a 6925 4620 000a     perature: %i F..
   259f4:	5043 2055 7355 6761 2065 203a 6925 2520     CPU Usage : %i %
   25a04:	0a25 4600 6572 2065 7473 6361 3a6b 2520     %..Free stack: %
   25a14:	2069 7962 6574 0a73 4100 6363 6c65 7265     i bytes..Acceler
   25a24:	7461 6f69 3a6e 2520 6934 2520 6934 2520     ation: %4i %4i %
   25a34:	6934 000a 694c 6867 2074 203a 3425 0a64     4i..Light : %4d.
   25a44:	5400 6d65 6570 6172 7574 6572 203a 6925     .Temperature: %i
   25a54:	000a 6146 6c69 6465 7420 206f 6573 646e     ..Failed to send
   25a64:	7020 6361 656b 0074 7242 616f 6364 7361      packet.Broadcas
   25a74:	2074 656d 7373 6761 2065 6f6e 2074 6572     t message not re
   25a84:	6563 7669 6465 0021                         ceived!.

00025a8c <typeinfo for ComTask2>:
   25a8c:	6108 0002 5ac1 0002 3d94 0002               .a...Z...=..

00025a98 <vtable for ComTask2>:
   25a98:	0000 0000 5a8c 0002 84c9 0001 84cd 0001     .....Z..........
   25aa8:	5bd1 0001 5bd5 0001 5bd9 0001 87a1 0001     .[...[...[......

00025ab8 <typeinfo name for ComTask>:
   25ab8:	4337 6d6f 6154 6b73 3800                         7ComTask.

00025ac1 <typeinfo name for ComTask2>:
   25ac1:	4338 6d6f 6154 6b73 0032 00ff                    8ComTask2..

00025acc <vtable for scheduler_task>:
   25acc:	0000 0000 3d94 0002 0000 0000 0000 0000     .....=..........
   25adc:	5bd1 0001 5bd5 0001 5bd9 0001 bc0b 0001     .[...[...[......
   25aec:	202a 0020 7420 7361 206b 6163 6c6c 6e69     *  . task callin
   25afc:	2067 6174 6b73 6e45 7274 2879 2029 6f66     g taskEntry() fo
   25b0c:	2072 6c61 206c 6174 6b73 2073 2e2e 202e     r all tasks ... 
   25b1c:	2a00 2020 6145 6863 7420 7361 206b 6977     .*  Each task wi
   25b2c:	6c6c 7420 6568 206e 6e65 6574 2072 6874     ll then enter th
   25b3c:	2065 7572 286e 2029 6f6c 706f 000a 2020     e run() loop..  
   25b4c:	2d2d 203e 4146 4c49 4445 7420 7361 456b     --> FAILED taskE
   25b5c:	746e 7972 2928 4500 5252 524f 203a 694b     ntry().ERROR: Ki
   25b6c:	6c6c 6e69 2067 7246 6565 5452 534f 6420     lling FreeRTOS d
   25b7c:	6575 7420 206f 7265 6f72 2872 2973 2000     ue to error(s). 
   25b8c:	2d2d 203e 4146 4c49 5255 2045 6564 6574     --> FAILURE dete
   25b9c:	7463 6465 203b 7573 7073 6e65 6964 676e     cted; suspending
   25bac:	7420 6968 2073 6174 6b73 2e20 2e2e 4500      this task ....E
   25bbc:	5252 524f 203a 4f4e 7420 7361 736b 6120     RROR: NO tasks a
   25bcc:	6464 6465 6220 2079 6373 6568 7564 656c     dded by schedule
   25bdc:	5f72 6461 5f64 6174 6b73 2928 2a00 2020     r_add_task().*  
   25bec:	7243 6165 6974 676e 7420 7361 736b 2e20     Creating tasks .
   25bfc:	2e2e 000a 2020 2d2d 203e 4146 4c49 4445     ....  --> FAILED
   25c0c:	7820 6154 6b73 7243 6165 6574 2928 4500      xTaskCreate().E
   25c1c:	5252 524f 203a 7243 6165 6974 676e 6320     RROR: Creating c
   25c2c:	756f 746e 6e69 2067 6573 616d 6870 726f     ounting semaphor
   25c3c:	0065 202a 4920 696e 6974 6c61 7a69 6e69     e.*  Initializin
   25c4c:	2067 6174 6b73 2073 2e2e 0a2e 2000 2d20     g tasks .....  -
   25c5c:	3e2d 4620 4941 454c 2044 6e69 7469 2928     -> FAILED init()
   25c6c:	2a00 2020 7453 7261 6974 676e 7320 6863     .*  Starting sch
   25c7c:	6465 6c75 7265 2e20 2e2e 000a 5245 4f52     eduler .....ERRO
   25c8c:	3a52 5320 6d6f 6f65 656e 6b20 6c69 656c     R: Someone kille
   25c9c:	2064 6874 2065 6373 6568 7564 656c 0072     d the scheduler.
   25cac:	5245 4f52 3a52 5220 6665 7375 6e69 2067     ERROR: Refusing 
   25cbc:	6f74 7320 6174 7472 4f20 2053 6373 6568     to start OS sche
   25ccc:	7564 656c 2072 7564 2065 6f74 6520 7272     duler due to err
   25cdc:	726f 7328 0029 7553 7070 726f 6574 2064     or(s).Supported 
   25cec:	6f43 6d6d 6e61 7364 003a 200a 3125 7330     Commands:.. %10s
   25cfc:	3a20 2520 332e 7332 2e20 2e2e 0a00 2520      : %.32s ..... %
   25d0c:	3031 2073 203a 7325 0a00 2720 6568 706c     10s : %s.. 'help
   25d1c:	3c20 6f63 6d6d 6e61 3e64 2027 6f74 6720      <command>' to g
   25d2c:	7465 6820 6c65 2070 666f 6120 6320 6d6f     et help of a com
   25d3c:	616d 646e 4800 6c65 2070 6f6e 2074 7073     mand.Help not sp
   25d4c:	6365 6669 6569 2064 6f66 2072 6874 7369     ecified for this
   25d5c:	6320 6d6f 616d 646e 4300 6d6f 616d 646e      command.Command
   25d6c:	4920 766e 6c61 6469 202e 5420 7972 2720      Invalid.  Try '
   25d7c:	6568 706c 2027 6f63 6d6d 6e61 0064 6f43     help' command.Co
   25d8c:	6d6d 6e61 2064 6166 6c69 6465 2021 4320     mmand failed!  C
   25d9c:	6d6f 616d 646e 7327 6820 6c65 2070 7369     ommand's help is
   25dac:	203a 2500 7337 0020 4aa9 0002 5867 0002     : .%7s ..J..gX..
   25dbc:	4ab5 0002 4aaf 0002 3a30 6f6c 2e67 7363     .J...J..0:log.cs
   25dcc:	0076 6146 6c69 6465 6620 6c69 2065 7277     v.Failed file wr
   25ddc:	7469 3a65 0020 7245 6f72 2072 7525 7720     ite: .Error %u w
   25dec:	6972 6974 676e 6c20 676f 6966 656c 202e     riting logfile. 
   25dfc:	7525 252f 2075 7277 7469 6574 2e6e 4620     %u/%u written. F
   25e0c:	7470 3a72 2520 0a75 6c00 676f 6567 0072     ptr: %u..logger.
   25e1c:	5245 4f52 3a52 6c20 676f 6567 2072 6e69     ERROR: logger in
   25e2c:	7469 6169 696c 617a 6974 6e6f 6620 6961     itialization fai
   25e3c:	756c 6572 2500 2f64 6425 252c 3230 3a64     lure.%d/%d,%02d:
   25e4c:	3025 6432 253a 3230 2c64 7525 252c 2c73     %02d:%02d,%u,%s,
   25e5c:	7325 252c 2573 2c73 7525 002c 4148 544c     %s,%s%s,%u,.HALT
   25e6c:	4e49 2047 5953 5453 4d45 203a 7453 6361     ING SYSTEM: Stac
   25e7c:	206b 766f 7265 6c66 776f 6220 2079 6174     k overflow by ta
   25e8c:	6b73 203a 0a00 7254 2079 6e69 7263 6165     sk: ..Try increa
   25e9c:	6973 676e 7320 6174 6b63 6d20 6d65 726f     sing stack memor
   25eac:	2079 666f 7420 6968 2073 6174 6b73 0a2e     y of this task..
   25ebc:	4800 4c41 4954 474e 5320 5359 4554 3a4d     .HALTING SYSTEM:
   25ecc:	5920 756f 2072 7973 7473 6d65 7220 6e61      Your system ran
   25edc:	6f20 7475 6f20 2066 656d 6f6d 7972 2820      out of memory (
   25eec:	4152 294d 0a21 a500                              RAM)!..

00025ef3 <ucExpectedStackBytes.6574>:
   25ef3:	a5a5 a5a5 a5a5 a5a5 a5a5 a5a5 a5a5 a5a5     ................
   25f03:	a5a5 a5a5 4449 454c 2500 2075 5249 2051     ....IDLE.%u IRQ 
   25f13:	6177 2073 7274 6769 6567 6572 2c64 6220     was triggered, b
   25f23:	7475 6e20 206f 5249 2051 6573 7672 6369     ut no IRQ servic
   25f33:	2065 6177 2073 6564 6966 656e 2164 000a     e was defined!..
   25f43:	4d4e 2049 6146 6c75 0a74 4d00 6d65 4620     NMI Fault..Mem F
   25f53:	7561 746c 000a 5542 2053 6146 6c75 0a74     ault..BUS Fault.
   25f63:	5500 6173 6567 4620 7561 746c 000a 4244     .Usage Fault..DB
   25f73:	4d47 4e4f 4620 7561 746c 000a 5249 2051     GMON Fault..IRQ 
   25f83:	6f6e 2074 6572 6967 7473 7265 6465 0021     not registered!.
   25f93:	616d 6e69 2928 7320 6f68 6c75 2064 656e     main() should ne
   25fa3:	6576 2072 7865 7469 6f20 206e 6874 7369     ver exit on this
   25fb3:	7320 7379 6574 0a6d 5300 7379 6574 206d      system..System 
   25fc3:	6f50 6577 2d72 6e6f 203a 6f42 746f 6e69     Power-on: Bootin
   25fd3:	2067 2e2e 002e 7953 7473 6d65 4320 6172     g ....System Cra
   25fe3:	6873 203a 6552 622d 6f6f 6974 676e 2e20     sh: Re-booting .
   25ff3:	2e2e 5700 7461 6863 6f64 2067 7953 7473     ...Watchdog Syst
   26003:	6d65 5220 7365 7465 203a 6f42 746f 6e69     em Reset: Bootin
   26013:	2067 2e2e 002e 654d 6f6d 7972 4920 666e     g ....Memory Inf
   26023:	726f 616d 6974 6e6f 0a3a 6c47 626f 6c61     ormation:.Global
   26033:	5520 6573 2064 2020 203a 3525 0a64 616d      Used   : %5d.ma
   26043:	6c6c 636f 5520 6573 2064 2020 203a 3525     lloc Used   : %5
   26053:	0a64 616d 6c6c 636f 4120 6176 6c69 202e     d.malloc Avail. 
   26063:	203a 3525 0a64 7953 7473 6d65 4120 6176     : %5d.System Ava
   26073:	6c69 202e 203a 3525 0a64 654e 7478 4820     il. : %5d.Next H
   26083:	6165 2070 7470 2072 2020 3a20 3020 2578     eap ptr    : 0x%
   26093:	3830 0a58 614c 7473 7320 7262 286b 2029     08X.Last sbrk() 
   260a3:	7470 2072 3a20 3020 2578 3830 0a58 614c     ptr  : 0x%08X.La
   260b3:	7473 7320 7262 286b 2029 6973 657a 3a20     st sbrk() size :
   260c3:	2520 0a75 754e 206d 7320 7262 286b 2029      %u.Num  sbrk() 
   260d3:	6163 6c6c 3a73 2520 0a75 5500 656e 7078     calls: %u..Unexp
   260e3:	6365 6574 2064 5349 2052 6163 6c6c 6120     ected ISR call a
   260f3:	2074 706c 5f63 7973 2e73 0063 00ff               t lpc_sys.c..

00026100 <vtable for __cxxabiv1::__si_class_type_info>:
   26100:	0000 0000 612c 0002 b559 0001 b56d 0001     ....,a..Y...m...
   26110:	badd 0001 badd 0001 bbc3 0001 bb0d 0001     ................
   26120:	b633 0001 b57f 0001 b5fb 0001               3...........

0002612c <typeinfo for __cxxabiv1::__si_class_type_info>:
   2612c:	6108 0002 6138 0002 6204 0002               .a..8a...b..

00026138 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   26138:	314e 5f30 635f 7878 6261 7669 3231 5f30     N10__cxxabiv120_
   26148:	735f 5f69 6c63 7361 5f73 7974 6570 695f     _si_class_type_i
   26158:	666e 456f ff00 ffff                         nfoE....

00026160 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   26160:	6108 0002 616c 0002 6204 0002               .a..la...b..

0002616c <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   2616c:	314e 5f30 635f 7878 6261 7669 3231 5f31     N10__cxxabiv121_
   2617c:	765f 696d 635f 616c 7373 745f 7079 5f65     _vmi_class_type_
   2618c:	6e69 6f66 0045 ffff                         infoE...

00026194 <vtable for __cxxabiv1::__vmi_class_type_info>:
   26194:	0000 0000 6160 0002 b65d 0001 b671 0001     ....`a..]...q...
   261a4:	badd 0001 badd 0001 bbc3 0001 bb0d 0001     ................
   261b4:	b9af 0001 b721 0001 b683 0001               ....!.......

000261c0 <typeinfo for std::type_info>:
   261c0:	61e0 0002 61c8 0002                         .a...a..

000261c8 <typeinfo name for std::type_info>:
   261c8:	7453 7439 7079 5f65 6e69 6f66 ff00 ffff     St9type_info....

000261d8 <vtable for __cxxabiv1::__class_type_info>:
   261d8:	0000 0000 6204 0002 bb4d 0001 bb61 0001     .....b..M...a...
   261e8:	badd 0001 badd 0001 bbc3 0001 bb0d 0001     ................
   261f8:	bb73 0001 bb8b 0001 bb41 0001               s.......A...

00026204 <typeinfo for __cxxabiv1::__class_type_info>:
   26204:	6108 0002 6210 0002 61c0 0002               .a...b...a..

00026210 <typeinfo name for __cxxabiv1::__class_type_info>:
   26210:	314e 5f30 635f 7878 6261 7669 3131 5f37     N10__cxxabiv117_
   26220:	635f 616c 7373 745f 7079 5f65 6e69 6f66     _class_type_info
   26230:	0045                                        E.

00026232 <_ctype_>:
   26232:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
   26242:	2020 2020 2020 2020 2020 2020 2020 2020                     
   26252:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
   26262:	0410 0404 0404 0404 0404 1004 1010 1010     ................
   26272:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
   26282:	0101 0101 0101 0101 0101 0101 1010 1010     ................
   26292:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
   262a2:	0202 0202 0202 0202 0202 0202 1010 1010     ................
   262b2:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
   26332:	ff00                                        ..

00026334 <__sf_fake_stdin>:
	...

00026354 <__sf_fake_stdout>:
	...

00026374 <__sf_fake_stderr>:
	...
   26394:	0043 ffff                                   C...

00026398 <_global_impure_ptr>:
   26398:	c0e0 2007                                   ... 

0002639c <_DAYS_BEFORE_MONTH>:
   2639c:	0000 0000 001f 0000 003b 0000 005a 0000     ........;...Z...
   263ac:	0078 0000 0097 0000 00b5 0000 00d4 0000     x...............
   263bc:	00f3 0000 0111 0000 0130 0000 014e 0000     ........0...N...

000263cc <DAYS_IN_MONTH>:
   263cc:	001f 0000 001c 0000 001f 0000 001e 0000     ................
   263dc:	001f 0000 001e 0000 001f 0000 001f 0000     ................
   263ec:	001e 0000 001f 0000 001e 0000 001f 0000     ................

000263fc <__month_lengths>:
   263fc:	001f 0000 001c 0000 001f 0000 001e 0000     ................
   2640c:	001f 0000 001e 0000 001f 0000 001f 0000     ................
   2641c:	001e 0000 001f 0000 001e 0000 001f 0000     ................
   2642c:	001f 0000 001d 0000 001f 0000 001e 0000     ................
   2643c:	001f 0000 001e 0000 001f 0000 001f 0000     ................
   2644c:	001e 0000 001f 0000 001e 0000 001f 0000     ................
   2645c:	4e49 0046 6e69 0066 414e 004e 616e 006e     INF.inf.NAN.nan.
   2646c:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF
   2647c:	3000 3231 3433 3635 3837 6139 6362 6564     .0123456789abcde
   2648c:	0066 2565 646c ff00                         f.e%ld..

00026494 <fpinan.5401>:
   26494:	0034 0000 fbce ffff 03cb 0000 0001 0000     4...............
   264a4:	0000 0000                                   ....

000264a8 <fpi.5365>:
   264a8:	0035 0000 fbce ffff 03cb 0000 0001 0000     5...............
   264b8:	0000 0000 ffff ffff                         ........

000264c0 <tinytens>:
   264c0:	89bc 97d8 d2b2 3c9c a733 d5a8 f623 3949     .......<3...#.I9
   264d0:	a73d 44f4 0ffd 32a5 979d cf8c ba08 255b     =..D...2......[%
   264e0:	6f43 64ac 0628 1168 5a54 4700 544d 2500     Co.d(.h.TZ.GMT.%
   264f0:	3031 5e5b 2d30 2c39 2d2b 255d 006e 254d     10[^0-9,+-]%n.M%
   26500:	7568 6e25 252e 7568 6e25 252e 7568 6e25     hu%n.%hu%n.%hu%n
   26510:	2f00 6825 2575 3a6e 6825 2575 3a6e 6825     ./%hu%n:%hu%n:%h
   26520:	2575 006e                                   u%n.

00026524 <day_name.4752>:
   26524:	7553 4d6e 6e6f 7554 5765 6465 6854 4675     SunMonTueWedThuF
   26534:	6972 6153 2574 332e 2073 2e25 7333 3325     riSat%.3s %.3s%3
   26544:	2064 2e25 6432 253a 322e 3a64 2e25 6432     d %.2d:%.2d:%.2d
   26554:	2520 0a64 4a00                                    %d..

00026559 <mon_name.4753>:
   26559:	614a 466e 6265 614d 4172 7270 614d 4a79     JanFebMarAprMayJ
   26569:	6e75 754a 416c 6775 6553 4f70 7463 6f4e     unJulAugSepOctNo
   26579:	4476 6365 6e49 6966 696e 7974 4e00 4e61     vDecInfinity.NaN
   26589:	5000 534f 5849 0000                              .POSIX.

00026590 <__mprec_tens>:
   26590:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
   265a0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
   265b0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
   265c0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
   265d0:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
   265e0:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
   265f0:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
   26600:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
   26610:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
   26620:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
   26630:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
   26640:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
   26650:	9db4 79d9 7843 44ea                         ...yCx.D

00026658 <p05.5408>:
   26658:	0005 0000 0019 0000 007d 0000 ffff ffff     ........}.......

00026668 <__mprec_bigtens>:
   26668:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
   26678:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
   26688:	bf3c 7f73 4fdd 7515 2d23 2b30 0020 6c68     <.s..O.u#-0+ .hl
   26698:	004c 6665 4567 4746 ff00 ffff 66c2 0002     L.efgEFG.....f..
   266a8:	66c5 0002 66c8 0002 2d41 6146 662d 3938     .f...f..A-Fa-f89
   266b8:	3130 3332 3534 3736 005d 2d2b 3000 0030     01234567].+-.00.
   266c8:	5878 ff00                                   xX..

000266cc <__init_array_start>:
   266cc:	00011695 	.word	0x00011695
