   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"storage.cpp"
  16              		.text
  17              		.align	1
  18              		.global	_ZN7Storage4copyEPKcS1_PjS2_S2_
  19              		.thumb
  20              		.thumb_func
  22              	_ZN7Storage4copyEPKcS1_PjS2_S2_:
  23              		@ args = 4, pretend = 0, frame = 608
  24              		@ frame_needed = 0, uses_anonymous_args = 0
  25 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  26 0004 ADF5197D 		sub	sp, sp, #612
  27 0008 04AE     		add	r6, sp, #16
  28 000a 0C46     		mov	r4, r1
  29 000c 9146     		mov	r9, r2
  30 000e 0146     		mov	r1, r0
  31 0010 0122     		movs	r2, #1
  32 0012 3046     		mov	r0, r6
  33 0014 9A46     		mov	r10, r3
  34 0016 FFF7FEFF 		bl	f_open
  35 001a 0028     		cmp	r0, #0
  36 001c 51D1     		bne	.L25
  37 001e 0A22     		movs	r2, #10
  38 0020 2146     		mov	r1, r4
  39 0022 0EA8     		add	r0, sp, #56
  40 0024 FFF7FEFF 		bl	f_open
  41 0028 0546     		mov	r5, r0
  42 002a 20B1     		cbz	r0, .L3
  43 002c 3046     		mov	r0, r6
  44 002e FFF7FEFF 		bl	f_close
  45 0032 2846     		mov	r0, r5
  46 0034 45E0     		b	.L25
  47              	.L3:
  48 0036 0746     		mov	r7, r0
  49 0038 8046     		mov	r8, r0
  50 003a 02AC     		add	r4, sp, #8
  51 003c 2060     		str	r0, [r4]
  52 003e 0390     		str	r0, [sp, #12]
  53              	.L11:
  54 0040 FFF7FEFF 		bl	sys_get_uptime_ms
  55 0044 2346     		mov	r3, r4
  56 0046 8346     		mov	fp, r0
  57 0048 4FF40072 		mov	r2, #512
  58 004c 18A9     		add	r1, sp, #96
  59 004e 3046     		mov	r0, r6
  60 0050 FFF7FEFF 		bl	f_read
  61 0054 0346     		mov	r3, r0
  62 0056 88B9     		cbnz	r0, .L4
  63 0058 2268     		ldr	r2, [r4]
  64 005a 7AB1     		cbz	r2, .L4
  65 005c FFF7FEFF 		bl	sys_get_uptime_ms
  66 0060 B0EB0B00 		subs	r0, r0, fp
  67 0064 8044     		add	r8, r8, r0
  68 0066 FFF7FEFF 		bl	sys_get_uptime_ms
  69 006a 03AB     		add	r3, sp, #12
  70 006c 8346     		mov	fp, r0
  71 006e 2268     		ldr	r2, [r4]
  72 0070 18A9     		add	r1, sp, #96
  73 0072 0EA8     		add	r0, sp, #56
  74 0074 FFF7FEFF 		bl	f_write
  75 0078 0346     		mov	r3, r0
  76 007a B0B1     		cbz	r0, .L27
  77              	.L4:
  78 007c B9F1000F 		cmp	r9, #0
  79 0080 01D0     		beq	.L7
  80 0082 C9F80080 		str	r8, [r9]
  81              	.L7:
  82 0086 BAF1000F 		cmp	r10, #0
  83 008a 01D0     		beq	.L8
  84 008c CAF80070 		str	r7, [r10]
  85              	.L8:
  86 0090 A29A     		ldr	r2, [sp, #648]
  87 0092 02B1     		cbz	r2, .L9
  88 0094 1560     		str	r5, [r2]
  89              	.L9:
  90 0096 04A8     		add	r0, sp, #16
  91 0098 0193     		str	r3, [sp, #4]
  92 009a FFF7FEFF 		bl	f_close
  93 009e 0EA8     		add	r0, sp, #56
  94 00a0 FFF7FEFF 		bl	f_close
  95 00a4 019B     		ldr	r3, [sp, #4]
  96 00a6 1846     		mov	r0, r3
  97 00a8 0BE0     		b	.L25
  98              	.L27:
  99 00aa 0399     		ldr	r1, [sp, #12]
 100 00ac 2268     		ldr	r2, [r4]
 101 00ae 9142     		cmp	r1, r2
 102 00b0 E4D1     		bne	.L4
 103 00b2 FFF7FEFF 		bl	sys_get_uptime_ms
 104 00b6 2368     		ldr	r3, [r4]
 105 00b8 B0EB0B00 		subs	r0, r0, fp
 106 00bc 0744     		add	r7, r7, r0
 107 00be 1D44     		add	r5, r5, r3
 108 00c0 BEE7     		b	.L11
 109              	.L25:
 110 00c2 0DF5197D 		add	sp, sp, #612
 111              		@ sp needed
 112 00c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 114              		.align	1
 115              		.global	_ZN7Storage4readEPKcPvjj
 116              		.thumb
 117              		.thumb_func
 119              	_ZN7Storage4readEPKcPvjj:
 120              		@ args = 0, pretend = 0, frame = 48
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 00ca F0B5     		push	{r4, r5, r6, r7, lr}
 123 00cc 8DB0     		sub	sp, sp, #52
 124 00ce 0E46     		mov	r6, r1
 125 00d0 1746     		mov	r7, r2
 126 00d2 0146     		mov	r1, r0
 127 00d4 1D46     		mov	r5, r3
 128 00d6 0122     		movs	r2, #1
 129 00d8 0023     		movs	r3, #0
 130 00da 02A8     		add	r0, sp, #8
 131 00dc 0193     		str	r3, [sp, #4]
 132 00de FFF7FEFF 		bl	f_open
 133 00e2 0446     		mov	r4, r0
 134 00e4 70B9     		cbnz	r0, .L30
 135 00e6 1DB1     		cbz	r5, .L31
 136 00e8 2946     		mov	r1, r5
 137 00ea 02A8     		add	r0, sp, #8
 138 00ec FFF7FEFF 		bl	f_lseek
 139              	.L31:
 140 00f0 01AB     		add	r3, sp, #4
 141 00f2 3A46     		mov	r2, r7
 142 00f4 3146     		mov	r1, r6
 143 00f6 02A8     		add	r0, sp, #8
 144 00f8 FFF7FEFF 		bl	f_read
 145 00fc 0446     		mov	r4, r0
 146 00fe 02A8     		add	r0, sp, #8
 147 0100 FFF7FEFF 		bl	f_close
 148              	.L30:
 149 0104 2046     		mov	r0, r4
 150 0106 0DB0     		add	sp, sp, #52
 151              		@ sp needed
 152 0108 F0BD     		pop	{r4, r5, r6, r7, pc}
 154              		.align	1
 155              		.global	_ZN7Storage5writeEPKcPvjj
 156              		.thumb
 157              		.thumb_func
 159              	_ZN7Storage5writeEPKcPvjj:
 160              		@ args = 0, pretend = 0, frame = 48
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 010a F0B5     		push	{r4, r5, r6, r7, lr}
 163 010c 8DB0     		sub	sp, sp, #52
 164 010e 0E46     		mov	r6, r1
 165 0110 1746     		mov	r7, r2
 166 0112 0146     		mov	r1, r0
 167 0114 1D46     		mov	r5, r3
 168 0116 0A22     		movs	r2, #10
 169 0118 0023     		movs	r3, #0
 170 011a 02A8     		add	r0, sp, #8
 171 011c 0193     		str	r3, [sp, #4]
 172 011e FFF7FEFF 		bl	f_open
 173 0122 0446     		mov	r4, r0
 174 0124 70B9     		cbnz	r0, .L36
 175 0126 1DB1     		cbz	r5, .L37
 176 0128 2946     		mov	r1, r5
 177 012a 02A8     		add	r0, sp, #8
 178 012c FFF7FEFF 		bl	f_lseek
 179              	.L37:
 180 0130 01AB     		add	r3, sp, #4
 181 0132 3A46     		mov	r2, r7
 182 0134 3146     		mov	r1, r6
 183 0136 02A8     		add	r0, sp, #8
 184 0138 FFF7FEFF 		bl	f_write
 185 013c 0446     		mov	r4, r0
 186 013e 02A8     		add	r0, sp, #8
 187 0140 FFF7FEFF 		bl	f_close
 188              	.L36:
 189 0144 2046     		mov	r0, r4
 190 0146 0DB0     		add	sp, sp, #52
 191              		@ sp needed
 192 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 194              		.align	1
 195              		.global	_ZN7Storage6appendEPKcPvjj
 196              		.thumb
 197              		.thumb_func
 199              	_ZN7Storage6appendEPKcPvjj:
 200              		@ args = 0, pretend = 0, frame = 48
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 014a F0B5     		push	{r4, r5, r6, r7, lr}
 203 014c 8DB0     		sub	sp, sp, #52
 204 014e 0E46     		mov	r6, r1
 205 0150 1746     		mov	r7, r2
 206 0152 0146     		mov	r1, r0
 207 0154 1D46     		mov	r5, r3
 208 0156 1222     		movs	r2, #18
 209 0158 0023     		movs	r3, #0
 210 015a 02A8     		add	r0, sp, #8
 211 015c 0193     		str	r3, [sp, #4]
 212 015e FFF7FEFF 		bl	f_open
 213 0162 0446     		mov	r4, r0
 214 0164 80B9     		cbnz	r0, .L42
 215 0166 0DB1     		cbz	r5, .L43
 216 0168 2946     		mov	r1, r5
 217 016a 00E0     		b	.L45
 218              	.L43:
 219 016c 0599     		ldr	r1, [sp, #20]
 220              	.L45:
 221 016e 02A8     		add	r0, sp, #8
 222 0170 FFF7FEFF 		bl	f_lseek
 223 0174 01AB     		add	r3, sp, #4
 224 0176 3A46     		mov	r2, r7
 225 0178 3146     		mov	r1, r6
 226 017a 02A8     		add	r0, sp, #8
 227 017c FFF7FEFF 		bl	f_write
 228 0180 0446     		mov	r4, r0
 229 0182 02A8     		add	r0, sp, #8
 230 0184 FFF7FEFF 		bl	f_close
 231              	.L42:
 232 0188 2046     		mov	r0, r4
 233 018a 0DB0     		add	sp, sp, #52
 234              		@ sp needed
 235 018c F0BD     		pop	{r4, r5, r6, r7, pc}
 237              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
DEFINED SYMBOLS
                            *ABS*:00000000 storage.cpp
     /tmp/ccQ8xmOk.s:17     .text:00000000 $t
     /tmp/ccQ8xmOk.s:22     .text:00000000 _ZN7Storage4copyEPKcS1_PjS2_S2_
     /tmp/ccQ8xmOk.s:119    .text:000000ca _ZN7Storage4readEPKcPvjj
     /tmp/ccQ8xmOk.s:159    .text:0000010a _ZN7Storage5writeEPKcPvjj
     /tmp/ccQ8xmOk.s:199    .text:0000014a _ZN7Storage6appendEPKcPvjj

UNDEFINED SYMBOLS
f_open
f_close
sys_get_uptime_ms
f_read
f_write
f_lseek
