   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"uart_dev.cpp"
  16              		.text
  17              		.align	1
  18              		.global	_ZNK7UartDev7getCharEPcj
  19              		.thumb
  20              		.thumb_func
  22              	_ZNK7UartDev7getCharEPcj:
  23              		@ args = 0, pretend = 0, frame = 8
  24              		@ frame_needed = 0, uses_anonymous_args = 0
  25 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  26 0004 8046     		mov	r8, r0
  27 0006 8946     		mov	r9, r1
  28 0008 1646     		mov	r6, r2
  29 000a FFF7FEFF 		bl	xTaskGetSchedulerState
  30 000e 0128     		cmp	r0, #1
  31 0010 0AD1     		bne	.L2
  32 0012 0023     		movs	r3, #0
  33 0014 3246     		mov	r2, r6
  34 0016 4946     		mov	r1, r9
  35 0018 D8F80400 		ldr	r0, [r8, #4]
  36 001c FFF7FEFF 		bl	xQueueGenericReceive
  37 0020 0030     		adds	r0, r0, #0
  38 0022 18BF     		it	ne
  39 0024 0120     		movne	r0, #1
  40 0026 19E0     		b	.L3
  41              	.L2:
  42 0028 0023     		movs	r3, #0
  43 002a 02AD     		add	r5, sp, #8
  44 002c 45F8043D 		str	r3, [r5, #-4]!
  45 0030 FFF7FEFF 		bl	sys_get_uptime_ms
  46 0034 3044     		add	r0, r0, r6
  47 0036 0646     		mov	r6, r0
  48 0038 0027     		movs	r7, #0
  49              	.L5:
  50 003a 2A46     		mov	r2, r5
  51 003c 4946     		mov	r1, r9
  52 003e D8F80400 		ldr	r0, [r8, #4]
  53 0042 FFF7FEFF 		bl	xQueueReceiveFromISR
  54 0046 0446     		mov	r4, r0
  55 0048 38B9     		cbnz	r0, .L4
  56 004a FFF7FEFF 		bl	sys_get_uptime_ms
  57 004e 8F42     		cmp	r7, r1
  58 0050 08BF     		it	eq
  59 0052 8642     		cmpeq	r6, r0
  60 0054 F1D2     		bcs	.L5
  61 0056 2046     		mov	r0, r4
  62 0058 00E0     		b	.L3
  63              	.L4:
  64 005a 0120     		movs	r0, #1
  65              	.L3:
  66 005c 03B0     		add	sp, sp, #12
  67              		@ sp needed
  68 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
  70              		.align	1
  71              		.global	_ZN7UartDev7putCharEcj
  72              		.thumb
  73              		.thumb_func
  75              	_ZN7UartDev7putCharEcj:
  76              		@ args = 0, pretend = 0, frame = 16
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0062 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
  79 0064 0446     		mov	r4, r0
  80 0066 1646     		mov	r6, r2
  81 0068 8DF80710 		strb	r1, [sp, #7]
  82 006c FFF7FEFF 		bl	xTaskGetSchedulerState
  83 0070 0128     		cmp	r0, #1
  84 0072 0546     		mov	r5, r0
  85 0074 09D0     		beq	.L9
  86 0076 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
  87 007a 2368     		ldr	r3, [r4]
  88 007c 1A70     		strb	r2, [r3]
  89 007e 2268     		ldr	r2, [r4]
  90              	.L10:
  91 0080 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
  92 0082 5906     		lsls	r1, r3, #25
  93 0084 FCD5     		bpl	.L10
  94              	.L12:
  95 0086 0120     		movs	r0, #1
  96 0088 17E0     		b	.L11
  97              	.L9:
  98 008a 0023     		movs	r3, #0
  99 008c 3246     		mov	r2, r6
 100 008e 0DF10701 		add	r1, sp, #7
 101 0092 A068     		ldr	r0, [r4, #8]
 102 0094 0393     		str	r3, [sp, #12]
 103 0096 FFF7FEFF 		bl	xQueueGenericSend
 104 009a 70B1     		cbz	r0, .L11
 105 009c 2368     		ldr	r3, [r4]
 106 009e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 107 00a0 5B06     		lsls	r3, r3, #25
 108 00a2 F0D5     		bpl	.L12
 109 00a4 03AA     		add	r2, sp, #12
 110 00a6 0DF10701 		add	r1, sp, #7
 111 00aa A068     		ldr	r0, [r4, #8]
 112 00ac FFF7FEFF 		bl	xQueueReceiveFromISR
 113 00b0 2846     		mov	r0, r5
 114 00b2 2368     		ldr	r3, [r4]
 115 00b4 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 116 00b8 1A70     		strb	r2, [r3]
 117              	.L11:
 118 00ba 04B0     		add	sp, sp, #16
 119              		@ sp needed
 120 00bc 70BD     		pop	{r4, r5, r6, pc}
 122              		.align	1
 123              		.global	_ZN7UartDev3putEPKcj
 124              		.thumb
 125              		.thumb_func
 127              	_ZN7UartDev3putEPKcj:
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 00be 70B5     		push	{r4, r5, r6, lr}
 131 00c0 0546     		mov	r5, r0
 132 00c2 1646     		mov	r6, r2
 133 00c4 09B9     		cbnz	r1, .L20
 134              	.L23:
 135 00c6 0020     		movs	r0, #0
 136 00c8 70BD     		pop	{r4, r5, r6, pc}
 137              	.L20:
 138 00ca 4C1E     		subs	r4, r1, #1
 139              	.L22:
 140 00cc 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 141 00d0 31B1     		cbz	r1, .L24
 142 00d2 3246     		mov	r2, r6
 143 00d4 2846     		mov	r0, r5
 144 00d6 FFF7FEFF 		bl	_ZN7UartDev7putCharEcj
 145 00da 0028     		cmp	r0, #0
 146 00dc F6D1     		bne	.L22
 147 00de F2E7     		b	.L23
 148              	.L24:
 149 00e0 0120     		movs	r0, #1
 150 00e2 70BD     		pop	{r4, r5, r6, pc}
 152              		.align	1
 153              		.global	_ZN7UartDev7putlineEPKcj
 154              		.thumb
 155              		.thumb_func
 157              	_ZN7UartDev7putlineEPKcj:
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 00e4 38B5     		push	{r3, r4, r5, lr}
 161 00e6 0446     		mov	r4, r0
 162 00e8 1546     		mov	r5, r2
 163 00ea FFF7FEFF 		bl	_ZN7UartDev3putEPKcj
 164 00ee 2A46     		mov	r2, r5
 165 00f0 2046     		mov	r0, r4
 166 00f2 BDE83840 		pop	{r3, r4, r5, lr}
 167 00f6 0149     		ldr	r1, .L27
 168 00f8 FFF7FEBF 		b	_ZN7UartDev3putEPKcj
 169              	.L28:
 170              		.align	2
 171              	.L27:
 172 00fc 00000000 		.word	.LC0
 174              		.align	1
 175              		.global	_ZN7UartDev4getsEPcij
 176              		.thumb
 177              		.thumb_func
 179              	_ZN7UartDev4getsEPcij:
 180              		@ args = 0, pretend = 0, frame = 8
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0100 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 183 0104 0746     		mov	r7, r0
 184 0106 0D46     		mov	r5, r1
 185 0108 9046     		mov	r8, r2
 186 010a 9946     		mov	r9, r3
 187 010c 0024     		movs	r4, #0
 188 010e 02AE     		add	r6, sp, #8
 189 0110 06F8014D 		strb	r4, [r6, #-1]!
 190              	.L32:
 191 0114 4A46     		mov	r2, r9
 192 0116 3146     		mov	r1, r6
 193 0118 3846     		mov	r0, r7
 194 011a FFF7FEFF 		bl	_ZNK7UartDev7getCharEPcj
 195 011e 78B1     		cbz	r0, .L30
 196 0120 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 197 0124 0D2A     		cmp	r2, #13
 198 0126 03D0     		beq	.L31
 199 0128 0A2A     		cmp	r2, #10
 200 012a 1CBF     		itt	ne
 201 012c 2A70     		strbne	r2, [r5]
 202 012e 0135     		addne	r5, r5, #1
 203              	.L31:
 204 0130 0134     		adds	r4, r4, #1
 205 0132 4445     		cmp	r4, r8
 206 0134 03DA     		bge	.L35
 207 0136 0A2A     		cmp	r2, #10
 208 0138 ECD1     		bne	.L32
 209 013a 0120     		movs	r0, #1
 210 013c 00E0     		b	.L30
 211              	.L35:
 212 013e 0020     		movs	r0, #0
 213              	.L30:
 214 0140 002C     		cmp	r4, #0
 215 0142 C4BF     		itt	gt
 216 0144 0023     		movgt	r3, #0
 217 0146 2B70     		strbgt	r3, [r5]
 218 0148 03B0     		add	sp, sp, #12
 219              		@ sp needed
 220 014a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 222              		.align	1
 223              		.global	_ZN7UartDev6printfEPKcz
 224              		.thumb
 225              		.thumb_func
 227              	_ZN7UartDev6printfEPKcz:
 228              		@ args = 4, pretend = 12, frame = 8
 229              		@ frame_needed = 0, uses_anonymous_args = 1
 230 014e 0EB4     		push	{r1, r2, r3}
 231 0150 33B5     		push	{r0, r1, r4, r5, lr}
 232 0152 0446     		mov	r4, r0
 233 0154 FFF7FEFF 		bl	xTaskGetSchedulerState
 234 0158 0128     		cmp	r0, #1
 235 015a 06D1     		bne	.L44
 236 015c 0023     		movs	r3, #0
 237 015e 4FF0FF32 		mov	r2, #-1
 238 0162 1946     		mov	r1, r3
 239 0164 206A     		ldr	r0, [r4, #32]
 240 0166 FFF7FEFF 		bl	xQueueGenericReceive
 241              	.L44:
 242 016a 06AB     		add	r3, sp, #24
 243 016c 0093     		str	r3, [sp]
 244              	.L47:
 245 016e 009B     		ldr	r3, [sp]
 246 0170 059A     		ldr	r2, [sp, #20]
 247 0172 A18B     		ldrh	r1, [r4, #28]
 248 0174 A069     		ldr	r0, [r4, #24]
 249 0176 0193     		str	r3, [sp, #4]
 250 0178 FFF7FEFF 		bl	vsnprintf
 251 017c A38B     		ldrh	r3, [r4, #28]
 252 017e 0546     		mov	r5, r0
 253 0180 9842     		cmp	r0, r3
 254 0182 0CDB     		blt	.L46
 255 0184 20F00F03 		bic	r3, r0, #15
 256 0188 1033     		adds	r3, r3, #16
 257 018a A383     		strh	r3, [r4, #28]	@ movhi
 258 018c A069     		ldr	r0, [r4, #24]
 259 018e FFF7FEFF 		bl	free
 260 0192 A08B     		ldrh	r0, [r4, #28]
 261 0194 FFF7FEFF 		bl	malloc
 262 0198 A061     		str	r0, [r4, #24]
 263 019a 0028     		cmp	r0, #0
 264 019c E7D1     		bne	.L47
 265              	.L46:
 266 019e 4FF0FF32 		mov	r2, #-1
 267 01a2 A169     		ldr	r1, [r4, #24]
 268 01a4 2046     		mov	r0, r4
 269 01a6 FFF7FEFF 		bl	_ZN7UartDev3putEPKcj
 270 01aa FFF7FEFF 		bl	xTaskGetSchedulerState
 271 01ae 0128     		cmp	r0, #1
 272 01b0 05D1     		bne	.L48
 273 01b2 0023     		movs	r3, #0
 274 01b4 1A46     		mov	r2, r3
 275 01b6 1946     		mov	r1, r3
 276 01b8 206A     		ldr	r0, [r4, #32]
 277 01ba FFF7FEFF 		bl	xQueueGenericSend
 278              	.L48:
 279 01be 2846     		mov	r0, r5
 280 01c0 02B0     		add	sp, sp, #8
 281              		@ sp needed
 282 01c2 BDE83040 		pop	{r4, r5, lr}
 283 01c6 03B0     		add	sp, sp, #12
 284 01c8 7047     		bx	lr
 286              		.align	1
 287              		.global	_ZN7UartDev5flushEv
 288              		.thumb
 289              		.thumb_func
 291              	_ZN7UartDev5flushEv:
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 01ca 10B5     		push	{r4, lr}
 295 01cc 0446     		mov	r4, r0
 296 01ce FFF7FEFF 		bl	xTaskGetSchedulerState
 297 01d2 0128     		cmp	r0, #1
 298 01d4 07D1     		bne	.L52
 299              	.L54:
 300 01d6 A068     		ldr	r0, [r4, #8]
 301 01d8 FFF7FEFF 		bl	uxQueueMessagesWaiting
 302 01dc 18B1     		cbz	r0, .L52
 303 01de 0120     		movs	r0, #1
 304 01e0 FFF7FEFF 		bl	vTaskDelay
 305 01e4 F7E7     		b	.L54
 306              	.L52:
 307 01e6 10BD     		pop	{r4, pc}
 309              		.align	1
 310              		.global	_ZN7UartDev5scanfEPKcz
 311              		.thumb
 312              		.thumb_func
 314              	_ZN7UartDev5scanfEPKcz:
 315              		@ args = 4, pretend = 12, frame = 264
 316              		@ frame_needed = 0, uses_anonymous_args = 1
 317 01e8 0EB4     		push	{r1, r2, r3}
 318 01ea 30B5     		push	{r4, r5, lr}
 319 01ec 0546     		mov	r5, r0
 320 01ee C2B0     		sub	sp, sp, #264
 321 01f0 45AB     		add	r3, sp, #276
 322 01f2 53F8044B 		ldr	r4, [r3], #4
 323 01f6 4FF48072 		mov	r2, #256
 324 01fa 0021     		movs	r1, #0
 325 01fc 02A8     		add	r0, sp, #8
 326 01fe 0193     		str	r3, [sp, #4]
 327 0200 FFF7FEFF 		bl	memset
 328 0204 4FF0FF33 		mov	r3, #-1
 329 0208 4FF48072 		mov	r2, #256
 330 020c 02A9     		add	r1, sp, #8
 331 020e 2846     		mov	r0, r5
 332 0210 FFF7FEFF 		bl	_ZN7UartDev4getsEPcij
 333 0214 20B1     		cbz	r0, .L59
 334 0216 019A     		ldr	r2, [sp, #4]
 335 0218 2146     		mov	r1, r4
 336 021a 02A8     		add	r0, sp, #8
 337 021c FFF7FEFF 		bl	vsscanf
 338              	.L59:
 339 0220 42B0     		add	sp, sp, #264
 340              		@ sp needed
 341 0222 BDE83040 		pop	{r4, r5, lr}
 342 0226 03B0     		add	sp, sp, #12
 343 0228 7047     		bx	lr
 345              		.align	1
 346              		.global	_ZNK7UartDev14recentlyActiveEj
 347              		.thumb
 348              		.thumb_func
 350              	_ZNK7UartDev14recentlyActiveEj:
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 022a 38B5     		push	{r3, r4, r5, lr}
 354 022c 0D46     		mov	r5, r1
 355 022e 4469     		ldr	r4, [r0, #20]
 356 0230 FFF7FEFF 		bl	xTaskGetTickCount
 357 0234 001B     		subs	r0, r0, r4
 358 0236 A842     		cmp	r0, r5
 359 0238 2CBF     		ite	cs
 360 023a 0020     		movcs	r0, #0
 361 023c 0120     		movcc	r0, #1
 362 023e 38BD     		pop	{r3, r4, r5, pc}
 364              		.global	__aeabi_ui2d
 365              		.global	__aeabi_dadd
 366              		.global	__aeabi_d2uiz
 367              		.align	1
 368              		.global	_ZN7UartDev11setBaudRateEj
 369              		.thumb
 370              		.thumb_func
 372              	_ZN7UartDev11setBaudRateEj:
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0240 0368     		ldr	r3, [r0]
 376 0242 8022     		movs	r2, #128
 377 0244 10B5     		push	{r4, lr}
 378 0246 1A73     		strb	r2, [r3, #12]
 379 0248 0446     		mov	r4, r0
 380 024a C068     		ldr	r0, [r0, #12]
 381 024c 0901     		lsls	r1, r1, #4
 382 024e B0FBF1F0 		udiv	r0, r0, r1
 383 0252 FFF7FEFF 		bl	__aeabi_ui2d
 384 0256 0022     		movs	r2, #0
 385 0258 074B     		ldr	r3, .L63
 386 025a FFF7FEFF 		bl	__aeabi_dadd
 387 025e FFF7FEFF 		bl	__aeabi_d2uiz
 388 0262 2368     		ldr	r3, [r4]
 389 0264 80B2     		uxth	r0, r0
 390 0266 020A     		lsrs	r2, r0, #8
 391 0268 1A71     		strb	r2, [r3, #4]
 392 026a 2368     		ldr	r3, [r4]
 393 026c C0B2     		uxtb	r0, r0
 394 026e 1870     		strb	r0, [r3]
 395 0270 2368     		ldr	r3, [r4]
 396 0272 0322     		movs	r2, #3
 397 0274 1A73     		strb	r2, [r3, #12]
 398 0276 10BD     		pop	{r4, pc}
 399              	.L64:
 400              		.align	2
 401              	.L63:
 402 0278 0000E03F 		.word	1071644672
 404              		.align	1
 405              		.global	_ZN7UartDev15handleInterruptEv
 406              		.thumb
 407              		.thumb_func
 409              	_ZN7UartDev15handleInterruptEv:
 410              		@ args = 0, pretend = 0, frame = 8
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 027c 73B5     		push	{r0, r1, r4, r5, r6, lr}
 413 027e 0268     		ldr	r2, [r0]
 414 0280 0023     		movs	r3, #0
 415 0282 0193     		str	r3, [sp, #4]
 416 0284 8DF80330 		strb	r3, [sp, #3]
 417 0288 9368     		ldr	r3, [r2, #8]
 418 028a 0446     		mov	r4, r0
 419 028c 03F00E03 		and	r3, r3, #14
 420 0290 042B     		cmp	r3, #4
 421 0292 17D0     		beq	.L67
 422 0294 0C2B     		cmp	r3, #12
 423 0296 15D0     		beq	.L67
 424 0298 022B     		cmp	r3, #2
 425 029a 35D1     		bne	.L92
 426 029c 8068     		ldr	r0, [r0, #8]
 427 029e FFF7FEFF 		bl	uxQueueMessagesWaitingFromISR
 428 02a2 638A     		ldrh	r3, [r4, #18]
 429 02a4 9842     		cmp	r0, r3
 430 02a6 03D9     		bls	.L69
 431 02a8 A068     		ldr	r0, [r4, #8]
 432 02aa FFF7FEFF 		bl	uxQueueMessagesWaitingFromISR
 433 02ae 6082     		strh	r0, [r4, #18]	@ movhi
 434              	.L69:
 435 02b0 1026     		movs	r6, #16
 436 02b2 0025     		movs	r5, #0
 437              	.L72:
 438 02b4 01AA     		add	r2, sp, #4
 439 02b6 0DF10301 		add	r1, sp, #3
 440 02ba A068     		ldr	r0, [r4, #8]
 441 02bc FFF7FEFF 		bl	xQueueReceiveFromISR
 442 02c0 20BB     		cbnz	r0, .L70
 443 02c2 2DE0     		b	.L76
 444              	.L67:
 445 02c4 FFF7FEFF 		bl	xTaskGetTickCountFromISR
 446 02c8 0025     		movs	r5, #0
 447 02ca 6061     		str	r0, [r4, #20]
 448              	.L73:
 449 02cc 2368     		ldr	r3, [r4]
 450 02ce 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 451 02d0 D207     		lsls	r2, r2, #31
 452 02d2 0ED5     		bpl	.L74
 453 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 454 02d6 01AA     		add	r2, sp, #4
 455 02d8 8DF80330 		strb	r3, [sp, #3]
 456 02dc 0DF10301 		add	r1, sp, #3
 457 02e0 0023     		movs	r3, #0
 458 02e2 6068     		ldr	r0, [r4, #4]
 459 02e4 FFF7FEFF 		bl	xQueueGenericSendFromISR
 460 02e8 019B     		ldr	r3, [sp, #4]
 461 02ea 002B     		cmp	r3, #0
 462 02ec 18BF     		it	ne
 463 02ee 0125     		movne	r5, #1
 464 02f0 ECE7     		b	.L73
 465              	.L74:
 466 02f2 6068     		ldr	r0, [r4, #4]
 467 02f4 FFF7FEFF 		bl	uxQueueMessagesWaitingFromISR
 468 02f8 238A     		ldrh	r3, [r4, #16]
 469 02fa 9842     		cmp	r0, r3
 470 02fc 10D9     		bls	.L76
 471 02fe 6068     		ldr	r0, [r4, #4]
 472 0300 FFF7FEFF 		bl	uxQueueMessagesWaitingFromISR
 473 0304 2082     		strh	r0, [r4, #16]	@ movhi
 474 0306 0BE0     		b	.L76
 475              	.L92:
 476 0308 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
 477 030a 0EE0     		b	.L65
 478              	.L70:
 479 030c 2368     		ldr	r3, [r4]
 480 030e 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 481 0312 1A70     		strb	r2, [r3]
 482 0314 019B     		ldr	r3, [sp, #4]
 483 0316 002B     		cmp	r3, #0
 484 0318 18BF     		it	ne
 485 031a 0125     		movne	r5, #1
 486 031c 013E     		subs	r6, r6, #1
 487 031e C9D1     		bne	.L72
 488              	.L76:
 489 0320 1DB1     		cbz	r5, .L65
 490 0322 034B     		ldr	r3, .L93
 491 0324 4FF08052 		mov	r2, #268435456
 492 0328 1A60     		str	r2, [r3]
 493              	.L65:
 494 032a 02B0     		add	sp, sp, #8
 495              		@ sp needed
 496 032c 70BD     		pop	{r4, r5, r6, pc}
 497              	.L94:
 498 032e 00BF     		.align	2
 499              	.L93:
 500 0330 04ED00E0 		.word	-536810236
 502              		.align	1
 503              		.global	_ZN7UartDevC2EPj
 504              		.thumb
 505              		.thumb_func
 507              	_ZN7UartDevC2EPj:
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0334 0023     		movs	r3, #0
 511 0336 10B5     		push	{r4, lr}
 512 0338 0446     		mov	r4, r0
 513 033a 0160     		str	r1, [r0]
 514 033c 4360     		str	r3, [r0, #4]
 515 033e 8360     		str	r3, [r0, #8]
 516 0340 C360     		str	r3, [r0, #12]
 517 0342 0382     		strh	r3, [r0, #16]	@ movhi
 518 0344 4382     		strh	r3, [r0, #18]	@ movhi
 519 0346 4361     		str	r3, [r0, #20]
 520 0348 8361     		str	r3, [r0, #24]
 521 034a 8383     		strh	r3, [r0, #28]	@ movhi
 522 034c 80F82430 		strb	r3, [r0, #36]
 523 0350 0120     		movs	r0, #1
 524 0352 FFF7FEFF 		bl	xQueueCreateMutex
 525 0356 2062     		str	r0, [r4, #32]
 526 0358 2046     		mov	r0, r4
 527 035a 10BD     		pop	{r4, pc}
 529              		.global	_ZN7UartDevC1EPj
 530              		.thumb_set _ZN7UartDevC1EPj,_ZN7UartDevC2EPj
 531              		.align	1
 532              		.global	_ZN7UartDevD2Ev
 533              		.thumb
 534              		.thumb_func
 536              	_ZN7UartDevD2Ev:
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539 035c 10B5     		push	{r4, lr}
 540 035e 0446     		mov	r4, r0
 541 0360 8069     		ldr	r0, [r0, #24]
 542 0362 08B1     		cbz	r0, .L97
 543 0364 FFF7FEFF 		bl	free
 544              	.L97:
 545 0368 2046     		mov	r0, r4
 546 036a 10BD     		pop	{r4, pc}
 548              		.global	_ZN7UartDevD1Ev
 549              		.thumb_set _ZN7UartDevD1Ev,_ZN7UartDevD2Ev
 550              		.align	1
 551              		.global	_ZN7UartDev4initEjjii
 552              		.thumb
 553              		.thumb_func
 555              	_ZN7UartDev4initEjjii:
 556              		@ args = 4, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 036c 38B5     		push	{r3, r4, r5, lr}
 559 036e 1D46     		mov	r5, r3
 560 0370 C160     		str	r1, [r0, #12]
 561 0372 2A4B     		ldr	r3, .L114
 562 0374 0168     		ldr	r1, [r0]
 563 0376 0446     		mov	r4, r0
 564 0378 9942     		cmp	r1, r3
 565 037a 08D1     		bne	.L102
 566 037c 2848     		ldr	r0, .L114+4
 567 037e D0F8C430 		ldr	r3, [r0, #196]
 568 0382 43F00803 		orr	r3, r3, #8
 569 0386 C0F8C430 		str	r3, [r0, #196]
 570 038a 2020     		movs	r0, #32
 571 038c 19E0     		b	.L113
 572              	.L102:
 573 038e 254B     		ldr	r3, .L114+8
 574 0390 9942     		cmp	r1, r3
 575 0392 09D1     		bne	.L104
 576 0394 03F5C823 		add	r3, r3, #409600
 577 0398 D3F8C400 		ldr	r0, [r3, #196]
 578 039c 40F08070 		orr	r0, r0, #16777216
 579 03a0 C3F8C400 		str	r0, [r3, #196]
 580 03a4 8020     		movs	r0, #128
 581 03a6 0CE0     		b	.L113
 582              	.L104:
 583 03a8 1F4B     		ldr	r3, .L114+12
 584 03aa 9942     		cmp	r1, r3
 585 03ac 32D1     		bne	.L105
 586 03ae 03F5C023 		add	r3, r3, #393216
 587 03b2 D3F8C400 		ldr	r0, [r3, #196]
 588 03b6 40F00070 		orr	r0, r0, #33554432
 589 03ba C3F8C400 		str	r0, [r3, #196]
 590 03be 4FF48070 		mov	r0, #256
 591              	.L113:
 592 03c2 1A4B     		ldr	r3, .L114+16
 593 03c4 1860     		str	r0, [r3]
 594 03c6 4123     		movs	r3, #65
 595 03c8 0B72     		strb	r3, [r1, #8]
 596 03ca 2368     		ldr	r3, [r4]
 597 03cc 2046     		mov	r0, r4
 598 03ce 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 599 03d0 41F00601 		orr	r1, r1, #6
 600 03d4 1972     		strb	r1, [r3, #8]
 601 03d6 1146     		mov	r1, r2
 602 03d8 FFF7FEFF 		bl	_ZN7UartDev11setBaudRateEj
 603 03dc 6268     		ldr	r2, [r4, #4]
 604 03de 42B9     		cbnz	r2, .L106
 605 03e0 082D     		cmp	r5, #8
 606 03e2 2846     		mov	r0, r5
 607 03e4 4FF00101 		mov	r1, #1
 608 03e8 B8BF     		it	lt
 609 03ea 0820     		movlt	r0, #8
 610 03ec FFF7FEFF 		bl	xQueueGenericCreate
 611 03f0 6060     		str	r0, [r4, #4]
 612              	.L106:
 613 03f2 A268     		ldr	r2, [r4, #8]
 614 03f4 3AB9     		cbnz	r2, .L107
 615 03f6 0498     		ldr	r0, [sp, #16]
 616 03f8 0121     		movs	r1, #1
 617 03fa 0828     		cmp	r0, #8
 618 03fc B8BF     		it	lt
 619 03fe 0820     		movlt	r0, #8
 620 0400 FFF7FEFF 		bl	xQueueGenericCreate
 621 0404 A060     		str	r0, [r4, #8]
 622              	.L107:
 623 0406 2368     		ldr	r3, [r4]
 624 0408 0722     		movs	r2, #7
 625 040a 5A60     		str	r2, [r3, #4]
 626 040c 6368     		ldr	r3, [r4, #4]
 627 040e 0BB1     		cbz	r3, .L105
 628 0410 A368     		ldr	r3, [r4, #8]
 629 0412 0BB9     		cbnz	r3, .L109
 630              	.L105:
 631 0414 0020     		movs	r0, #0
 632 0416 38BD     		pop	{r3, r4, r5, pc}
 633              	.L109:
 634 0418 0120     		movs	r0, #1
 635 041a 38BD     		pop	{r3, r4, r5, pc}
 636              	.L115:
 637              		.align	2
 638              	.L114:
 639 041c 00C00040 		.word	1073790976
 640 0420 00C00F40 		.word	1074774016
 641 0424 00800940 		.word	1074364416
 642 0428 00C00940 		.word	1074380800
 643 042c 00E100E0 		.word	-536813312
 645              		.section	.rodata.str1.1,"aMS",%progbits,1
 646              	.LC0:
 647 0000 0D0A00   		.ascii	"\015\012\000"
 648              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
DEFINED SYMBOLS
                            *ABS*:00000000 uart_dev.cpp
     /tmp/ccfLaOUE.s:17     .text:00000000 $t
     /tmp/ccfLaOUE.s:22     .text:00000000 _ZNK7UartDev7getCharEPcj
     /tmp/ccfLaOUE.s:75     .text:00000062 _ZN7UartDev7putCharEcj
     /tmp/ccfLaOUE.s:127    .text:000000be _ZN7UartDev3putEPKcj
     /tmp/ccfLaOUE.s:157    .text:000000e4 _ZN7UartDev7putlineEPKcj
     /tmp/ccfLaOUE.s:172    .text:000000fc $d
     /tmp/ccfLaOUE.s:174    .text:00000100 $t
     /tmp/ccfLaOUE.s:179    .text:00000100 _ZN7UartDev4getsEPcij
     /tmp/ccfLaOUE.s:227    .text:0000014e _ZN7UartDev6printfEPKcz
     /tmp/ccfLaOUE.s:291    .text:000001ca _ZN7UartDev5flushEv
     /tmp/ccfLaOUE.s:314    .text:000001e8 _ZN7UartDev5scanfEPKcz
     /tmp/ccfLaOUE.s:350    .text:0000022a _ZNK7UartDev14recentlyActiveEj
     /tmp/ccfLaOUE.s:372    .text:00000240 _ZN7UartDev11setBaudRateEj
     /tmp/ccfLaOUE.s:402    .text:00000278 $d
     /tmp/ccfLaOUE.s:404    .text:0000027c $t
     /tmp/ccfLaOUE.s:409    .text:0000027c _ZN7UartDev15handleInterruptEv
     /tmp/ccfLaOUE.s:500    .text:00000330 $d
     /tmp/ccfLaOUE.s:502    .text:00000334 $t
     /tmp/ccfLaOUE.s:507    .text:00000334 _ZN7UartDevC2EPj
     /tmp/ccfLaOUE.s:507    .text:00000334 _ZN7UartDevC1EPj
     /tmp/ccfLaOUE.s:536    .text:0000035c _ZN7UartDevD2Ev
     /tmp/ccfLaOUE.s:536    .text:0000035c _ZN7UartDevD1Ev
     /tmp/ccfLaOUE.s:555    .text:0000036c _ZN7UartDev4initEjjii
     /tmp/ccfLaOUE.s:639    .text:0000041c $d

UNDEFINED SYMBOLS
xTaskGetSchedulerState
xQueueGenericReceive
sys_get_uptime_ms
xQueueReceiveFromISR
xQueueGenericSend
vsnprintf
free
malloc
uxQueueMessagesWaiting
vTaskDelay
memset
vsscanf
xTaskGetTickCount
__aeabi_ui2d
__aeabi_dadd
__aeabi_d2uiz
uxQueueMessagesWaitingFromISR
xTaskGetTickCountFromISR
xQueueGenericSendFromISR
xQueueCreateMutex
xQueueGenericCreate
