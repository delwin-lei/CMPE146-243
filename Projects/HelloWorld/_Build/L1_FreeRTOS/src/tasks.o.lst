   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"tasks.c"
  16              		.text
  17              		.align	1
  18              		.thumb
  19              		.thumb_func
  21              	prvResetRunTimeStatsInList:
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24 0000 10B5     		push	{r4, lr}
  25 0002 4368     		ldr	r3, [r0, #4]
  26 0004 0024     		movs	r4, #0
  27 0006 5A68     		ldr	r2, [r3, #4]
  28 0008 00F10803 		add	r3, r0, #8
  29 000c 4260     		str	r2, [r0, #4]
  30 000e 9A42     		cmp	r2, r3
  31 0010 04BF     		itt	eq
  32 0012 5A68     		ldreq	r2, [r3, #4]
  33 0014 4260     		streq	r2, [r0, #4]
  34 0016 4268     		ldr	r2, [r0, #4]
  35 0018 D168     		ldr	r1, [r2, #12]
  36              	.L4:
  37 001a 4268     		ldr	r2, [r0, #4]
  38 001c 5268     		ldr	r2, [r2, #4]
  39 001e 9342     		cmp	r3, r2
  40 0020 4260     		str	r2, [r0, #4]
  41 0022 04BF     		itt	eq
  42 0024 C268     		ldreq	r2, [r0, #12]
  43 0026 4260     		streq	r2, [r0, #4]
  44 0028 4268     		ldr	r2, [r0, #4]
  45 002a D268     		ldr	r2, [r2, #12]
  46 002c 9142     		cmp	r1, r2
  47 002e 9464     		str	r4, [r2, #72]
  48 0030 F3D1     		bne	.L4
  49 0032 10BD     		pop	{r4, pc}
  51              		.align	1
  52              		.thumb
  53              		.thumb_func
  55              	prvIdleTask:
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59 0034 08B5     		push	{r3, lr}
  60 0036 044C     		ldr	r4, .L10
  61              	.L9:
  62 0038 2368     		ldr	r3, [r4]
  63 003a 012B     		cmp	r3, #1
  64 003c 01D9     		bls	.L8
  65 003e FFF7FEFF 		bl	vPortYield
  66              	.L8:
  67 0042 FFF7FEFF 		bl	vApplicationIdleHook
  68 0046 F7E7     		b	.L9
  69              	.L11:
  70              		.align	2
  71              	.L10:
  72 0048 00000000 		.word	.LANCHOR0
  74              		.align	1
  75              		.thumb
  76              		.thumb_func
  78              	prvAddCurrentTaskToDelayedList:
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 004c 10B5     		push	{r4, lr}
  82 004e 0C4B     		ldr	r3, .L15
  83 0050 0446     		mov	r4, r0
  84 0052 9A6A     		ldr	r2, [r3, #40]
  85 0054 5060     		str	r0, [r2, #4]
  86 0056 DA6A     		ldr	r2, [r3, #44]
  87 0058 9042     		cmp	r0, r2
  88 005a 06D2     		bcs	.L13
  89 005c BDE81040 		pop	{r4, lr}
  90 0060 186B     		ldr	r0, [r3, #48]
  91 0062 996A     		ldr	r1, [r3, #40]
  92 0064 0431     		adds	r1, r1, #4
  93 0066 FFF7FEBF 		b	vListInsert
  94              	.L13:
  95 006a 586B     		ldr	r0, [r3, #52]
  96 006c 996A     		ldr	r1, [r3, #40]
  97 006e 0431     		adds	r1, r1, #4
  98 0070 FFF7FEFF 		bl	vListInsert
  99 0074 034B     		ldr	r3, .L15+4
 100 0076 1A68     		ldr	r2, [r3]
 101 0078 9442     		cmp	r4, r2
 102 007a 38BF     		it	cc
 103 007c 1C60     		strcc	r4, [r3]
 104 007e 10BD     		pop	{r4, pc}
 105              	.L16:
 106              		.align	2
 107              	.L15:
 108 0080 00000000 		.word	.LANCHOR0
 109 0084 00000000 		.word	.LANCHOR1
 111              		.align	1
 112              		.thumb
 113              		.thumb_func
 115              	prvListTaskWithinSingleList:
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0088 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 119 008c 0C68     		ldr	r4, [r1]
 120 008e 002C     		cmp	r4, #0
 121 0090 3ED0     		beq	.L23
 122 0092 4B68     		ldr	r3, [r1, #4]
 123 0094 01F10807 		add	r7, r1, #8
 124 0098 5C68     		ldr	r4, [r3, #4]
 125 009a 4C60     		str	r4, [r1, #4]
 126 009c BC42     		cmp	r4, r7
 127 009e 04BF     		itt	eq
 128 00a0 7B68     		ldreq	r3, [r7, #4]
 129 00a2 4B60     		streq	r3, [r1, #4]
 130 00a4 4B68     		ldr	r3, [r1, #4]
 131 00a6 D3F80CC0 		ldr	ip, [r3, #12]
 132 00aa 00F11C03 		add	r3, r0, #28
 133 00ae 0020     		movs	r0, #0
 134              	.L22:
 135 00b0 4C68     		ldr	r4, [r1, #4]
 136 00b2 6468     		ldr	r4, [r4, #4]
 137 00b4 A742     		cmp	r7, r4
 138 00b6 4C60     		str	r4, [r1, #4]
 139 00b8 04BF     		itt	eq
 140 00ba CC68     		ldreq	r4, [r1, #12]
 141 00bc 4C60     		streq	r4, [r1, #4]
 142 00be 4C68     		ldr	r4, [r1, #4]
 143 00c0 E468     		ldr	r4, [r4, #12]
 144 00c2 04F13405 		add	r5, r4, #52
 145 00c6 43F81C4C 		str	r4, [r3, #-28]
 146 00ca 43F8185C 		str	r5, [r3, #-24]
 147 00ce E56B     		ldr	r5, [r4, #60]
 148 00d0 03F8102C 		strb	r2, [r3, #-16]
 149 00d4 43F8145C 		str	r5, [r3, #-20]
 150 00d8 E56A     		ldr	r5, [r4, #44]
 151 00da 43F80C5C 		str	r5, [r3, #-12]
 152 00de 656C     		ldr	r5, [r4, #68]
 153 00e0 43F8085C 		str	r5, [r3, #-8]
 154 00e4 A56C     		ldr	r5, [r4, #72]
 155 00e6 43F8045C 		str	r5, [r3, #-4]
 156 00ea D4F830E0 		ldr	lr, [r4, #48]
 157 00ee 7646     		mov	r6, lr
 158              	.L21:
 159 00f0 CEEB0605 		rsb	r5, lr, r6
 160 00f4 16F8018B 		ldrb	r8, [r6], #1	@ zero_extendqisi2
 161 00f8 ADB2     		uxth	r5, r5
 162 00fa B8F1A50F 		cmp	r8, #165
 163 00fe F7D0     		beq	.L21
 164 0100 A445     		cmp	ip, r4
 165 0102 23F8205B 		strh	r5, [r3], #32	@ movhi
 166 0106 00F10100 		add	r0, r0, #1
 167 010a D1D1     		bne	.L22
 168 010c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 169              	.L23:
 170 0110 2046     		mov	r0, r4
 171 0112 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 173              		.align	1
 174              		.global	xTaskGenericCreate
 175              		.thumb
 176              		.thumb_func
 178              	xTaskGenericCreate:
 179              		@ args = 16, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0116 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 182 011a 8146     		mov	r9, r0
 183 011c 4C20     		movs	r0, #76
 184 011e 0E46     		mov	r6, r1
 185 0120 1446     		mov	r4, r2
 186 0122 9A46     		mov	r10, r3
 187 0124 0A9F     		ldr	r7, [sp, #40]
 188 0126 DDF830B0 		ldr	fp, [sp, #48]
 189 012a FFF7FEFF 		bl	pvPortMalloc
 190 012e 0546     		mov	r5, r0
 191 0130 0028     		cmp	r0, #0
 192 0132 00F0A080 		beq	.L28
 193 0136 BBF1000F 		cmp	fp, #0
 194 013a 03D1     		bne	.L39
 195 013c A000     		lsls	r0, r4, #2
 196 013e FFF7FEFF 		bl	pvPortMalloc
 197 0142 00E0     		b	.L29
 198              	.L39:
 199 0144 5846     		mov	r0, fp
 200              	.L29:
 201 0146 2863     		str	r0, [r5, #48]
 202 0148 18B9     		cbnz	r0, .L30
 203 014a 2846     		mov	r0, r5
 204 014c FFF7FEFF 		bl	vPortFree
 205 0150 91E0     		b	.L28
 206              	.L30:
 207 0152 A400     		lsls	r4, r4, #2
 208 0154 2246     		mov	r2, r4
 209 0156 A521     		movs	r1, #165
 210 0158 FFF7FEFF 		bl	memset
 211 015c 2B6B     		ldr	r3, [r5, #48]
 212 015e 043C     		subs	r4, r4, #4
 213 0160 1C44     		add	r4, r4, r3
 214 0162 24F00704 		bic	r4, r4, #7
 215 0166 731E     		subs	r3, r6, #1
 216 0168 05F13302 		add	r2, r5, #51
 217 016c 0736     		adds	r6, r6, #7
 218              	.L32:
 219 016e 13F9011F 		ldrsb	r1, [r3, #1]!
 220 0172 02F8011F 		strb	r1, [r2, #1]!
 221 0176 93F90010 		ldrsb	r1, [r3]
 222 017a 09B1     		cbz	r1, .L31
 223 017c B342     		cmp	r3, r6
 224 017e F6D1     		bne	.L32
 225              	.L31:
 226 0180 BB46     		mov	fp, r7
 227 0182 012F     		cmp	r7, #1
 228 0184 28BF     		it	cs
 229 0186 4FF0010B 		movcs	fp, #1
 230 018a 4FF00008 		mov	r8, #0
 231 018e 2E1D     		adds	r6, r5, #4
 232 0190 3046     		mov	r0, r6
 233 0192 85F83B80 		strb	r8, [r5, #59]
 234 0196 C5F82CB0 		str	fp, [r5, #44]
 235 019a C5F844B0 		str	fp, [r5, #68]
 236 019e FFF7FEFF 		bl	vListInitialiseItem
 237 01a2 05F11800 		add	r0, r5, #24
 238 01a6 FFF7FEFF 		bl	vListInitialiseItem
 239 01aa CBF10203 		rsb	r3, fp, #2
 240 01ae AB61     		str	r3, [r5, #24]
 241 01b0 2D61     		str	r5, [r5, #16]
 242 01b2 6D62     		str	r5, [r5, #36]
 243 01b4 C5F84880 		str	r8, [r5, #72]
 244 01b8 5246     		mov	r2, r10
 245 01ba 4946     		mov	r1, r9
 246 01bc 2046     		mov	r0, r4
 247 01be FFF7FEFF 		bl	pxPortInitialiseStack
 248 01c2 0B9B     		ldr	r3, [sp, #44]
 249 01c4 2860     		str	r0, [r5]
 250 01c6 03B1     		cbz	r3, .L33
 251 01c8 1D60     		str	r5, [r3]
 252              	.L33:
 253 01ca 2D4C     		ldr	r4, .L53
 254 01cc FFF7FEFF 		bl	vPortEnterCritical
 255 01d0 A36B     		ldr	r3, [r4, #56]
 256 01d2 0133     		adds	r3, r3, #1
 257 01d4 A363     		str	r3, [r4, #56]
 258 01d6 A36A     		ldr	r3, [r4, #40]
 259 01d8 0BBB     		cbnz	r3, .L34
 260 01da A562     		str	r5, [r4, #40]
 261 01dc A36B     		ldr	r3, [r4, #56]
 262 01de 012B     		cmp	r3, #1
 263 01e0 25D1     		bne	.L36
 264 01e2 2046     		mov	r0, r4
 265 01e4 FFF7FEFF 		bl	vListInitialise
 266 01e8 04F13C09 		add	r9, r4, #60
 267 01ec 04F11400 		add	r0, r4, #20
 268 01f0 FFF7FEFF 		bl	vListInitialise
 269 01f4 04F15008 		add	r8, r4, #80
 270 01f8 4846     		mov	r0, r9
 271 01fa FFF7FEFF 		bl	vListInitialise
 272 01fe 4046     		mov	r0, r8
 273 0200 FFF7FEFF 		bl	vListInitialise
 274 0204 04F16400 		add	r0, r4, #100
 275 0208 FFF7FEFF 		bl	vListInitialise
 276 020c 04F17800 		add	r0, r4, #120
 277 0210 FFF7FEFF 		bl	vListInitialise
 278 0214 C4F83490 		str	r9, [r4, #52]
 279 0218 C4F83080 		str	r8, [r4, #48]
 280 021c 07E0     		b	.L36
 281              	.L34:
 282 021e D4F88C30 		ldr	r3, [r4, #140]
 283 0222 23B9     		cbnz	r3, .L36
 284 0224 A36A     		ldr	r3, [r4, #40]
 285 0226 DB6A     		ldr	r3, [r3, #44]
 286 0228 9F42     		cmp	r7, r3
 287 022a 28BF     		it	cs
 288 022c A562     		strcs	r5, [r4, #40]
 289              	.L36:
 290 022e D4F89030 		ldr	r3, [r4, #144]
 291 0232 EA6A     		ldr	r2, [r5, #44]
 292 0234 0133     		adds	r3, r3, #1
 293 0236 EB63     		str	r3, [r5, #60]
 294 0238 C4F89030 		str	r3, [r4, #144]
 295 023c 0125     		movs	r5, #1
 296 023e D4F89430 		ldr	r3, [r4, #148]
 297 0242 05FA02F1 		lsl	r1, r5, r2
 298 0246 1420     		movs	r0, #20
 299 0248 0B43     		orrs	r3, r3, r1
 300 024a 00FB0240 		mla	r0, r0, r2, r4
 301 024e 3146     		mov	r1, r6
 302 0250 C4F89430 		str	r3, [r4, #148]
 303 0254 FFF7FEFF 		bl	vListInsertEnd
 304 0258 FFF7FEFF 		bl	vPortExitCritical
 305 025c D4F88C30 		ldr	r3, [r4, #140]
 306 0260 33B1     		cbz	r3, .L41
 307 0262 074B     		ldr	r3, .L53
 308 0264 9B6A     		ldr	r3, [r3, #40]
 309 0266 DB6A     		ldr	r3, [r3, #44]
 310 0268 9F42     		cmp	r7, r3
 311 026a 01D9     		bls	.L41
 312 026c FFF7FEFF 		bl	vPortYield
 313              	.L41:
 314 0270 2846     		mov	r0, r5
 315 0272 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 316              	.L28:
 317 0276 4FF0FF30 		mov	r0, #-1
 318 027a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 319              	.L54:
 320 027e 00BF     		.align	2
 321              	.L53:
 322 0280 00000000 		.word	.LANCHOR0
 324              		.align	1
 325              		.global	xTaskIsTaskSuspended
 326              		.thumb
 327              		.thumb_func
 329              	xTaskIsTaskSuspended:
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333 0284 4369     		ldr	r3, [r0, #20]
 334 0286 064A     		ldr	r2, .L61
 335 0288 9342     		cmp	r3, r2
 336 028a 07D1     		bne	.L60
 337 028c 806A     		ldr	r0, [r0, #40]
 338 028e 143B     		subs	r3, r3, #20
 339 0290 9842     		cmp	r0, r3
 340 0292 03D0     		beq	.L60
 341 0294 B0FA80F0 		clz	r0, r0
 342 0298 4009     		lsrs	r0, r0, #5
 343 029a 7047     		bx	lr
 344              	.L60:
 345 029c 0020     		movs	r0, #0
 346 029e 7047     		bx	lr
 347              	.L62:
 348              		.align	2
 349              	.L61:
 350 02a0 78000000 		.word	.LANCHOR0+120
 352              		.align	1
 353              		.global	vTaskResume
 354              		.thumb
 355              		.thumb_func
 357              	vTaskResume:
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 02a4 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 361 02a6 0446     		mov	r4, r0
 362 02a8 38B3     		cbz	r0, .L63
 363 02aa 144D     		ldr	r5, .L71
 364 02ac AB6A     		ldr	r3, [r5, #40]
 365 02ae 9842     		cmp	r0, r3
 366 02b0 23D0     		beq	.L63
 367 02b2 FFF7FEFF 		bl	vPortEnterCritical
 368 02b6 2046     		mov	r0, r4
 369 02b8 FFF7FEFF 		bl	xTaskIsTaskSuspended
 370 02bc 0128     		cmp	r0, #1
 371 02be 0646     		mov	r6, r0
 372 02c0 17D1     		bne	.L66
 373 02c2 271D     		adds	r7, r4, #4
 374 02c4 3846     		mov	r0, r7
 375 02c6 FFF7FEFF 		bl	uxListRemove
 376 02ca E26A     		ldr	r2, [r4, #44]
 377 02cc D5F89430 		ldr	r3, [r5, #148]
 378 02d0 9640     		lsls	r6, r6, r2
 379 02d2 1420     		movs	r0, #20
 380 02d4 1E43     		orrs	r6, r6, r3
 381 02d6 00FB0250 		mla	r0, r0, r2, r5
 382 02da 3946     		mov	r1, r7
 383 02dc C5F89460 		str	r6, [r5, #148]
 384 02e0 FFF7FEFF 		bl	vListInsertEnd
 385 02e4 AB6A     		ldr	r3, [r5, #40]
 386 02e6 E26A     		ldr	r2, [r4, #44]
 387 02e8 DB6A     		ldr	r3, [r3, #44]
 388 02ea 9A42     		cmp	r2, r3
 389 02ec 01D3     		bcc	.L66
 390 02ee FFF7FEFF 		bl	vPortYield
 391              	.L66:
 392 02f2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 393 02f6 FFF7FEBF 		b	vPortExitCritical
 394              	.L63:
 395 02fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 396              	.L72:
 397              		.align	2
 398              	.L71:
 399 02fc 00000000 		.word	.LANCHOR0
 401              		.align	1
 402              		.global	xTaskResumeFromISR
 403              		.thumb
 404              		.thumb_func
 406              	xTaskResumeFromISR:
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 0300 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 410 0304 0646     		mov	r6, r0
 411 0306 FFF7FEFF 		bl	ulPortSetInterruptMask
 412 030a 8046     		mov	r8, r0
 413 030c 3046     		mov	r0, r6
 414 030e FFF7FEFF 		bl	xTaskIsTaskSuspended
 415 0312 0128     		cmp	r0, #1
 416 0314 0746     		mov	r7, r0
 417 0316 23D1     		bne	.L76
 418 0318 154C     		ldr	r4, .L77
 419 031a D4F89830 		ldr	r3, [r4, #152]
 420 031e CBB9     		cbnz	r3, .L75
 421 0320 A36A     		ldr	r3, [r4, #40]
 422 0322 F56A     		ldr	r5, [r6, #44]
 423 0324 DB6A     		ldr	r3, [r3, #44]
 424 0326 06F10409 		add	r9, r6, #4
 425 032a 9D42     		cmp	r5, r3
 426 032c 4846     		mov	r0, r9
 427 032e 34BF     		ite	cc
 428 0330 0025     		movcc	r5, #0
 429 0332 0125     		movcs	r5, #1
 430 0334 FFF7FEFF 		bl	uxListRemove
 431 0338 F26A     		ldr	r2, [r6, #44]
 432 033a D4F89430 		ldr	r3, [r4, #148]
 433 033e 9740     		lsls	r7, r7, r2
 434 0340 1420     		movs	r0, #20
 435 0342 1F43     		orrs	r7, r7, r3
 436 0344 4946     		mov	r1, r9
 437 0346 00FB0240 		mla	r0, r0, r2, r4
 438 034a C4F89470 		str	r7, [r4, #148]
 439 034e FFF7FEFF 		bl	vListInsertEnd
 440 0352 06E0     		b	.L74
 441              	.L75:
 442 0354 06F11801 		add	r1, r6, #24
 443 0358 04F16400 		add	r0, r4, #100
 444 035c FFF7FEFF 		bl	vListInsertEnd
 445              	.L76:
 446 0360 0025     		movs	r5, #0
 447              	.L74:
 448 0362 4046     		mov	r0, r8
 449 0364 FFF7FEFF 		bl	vPortClearInterruptMask
 450 0368 2846     		mov	r0, r5
 451 036a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 452              	.L78:
 453 036e 00BF     		.align	2
 454              	.L77:
 455 0370 00000000 		.word	.LANCHOR0
 457              		.align	1
 458              		.global	vTaskStartScheduler
 459              		.thumb
 460              		.thumb_func
 462              	vTaskStartScheduler:
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0374 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 466 0376 0F4D     		ldr	r5, .L81
 467 0378 0024     		movs	r4, #0
 468 037a 05F19C03 		add	r3, r5, #156
 469 037e 0193     		str	r3, [sp, #4]
 470 0380 0394     		str	r4, [sp, #12]
 471 0382 0294     		str	r4, [sp, #8]
 472 0384 0094     		str	r4, [sp]
 473 0386 2346     		mov	r3, r4
 474 0388 8022     		movs	r2, #128
 475 038a 0B49     		ldr	r1, .L81+4
 476 038c 0B48     		ldr	r0, .L81+8
 477 038e FFF7FEFF 		bl	xTaskGenericCreate
 478 0392 0128     		cmp	r0, #1
 479 0394 0646     		mov	r6, r0
 480 0396 0BD1     		bne	.L79
 481 0398 FFF7FEFF 		bl	ulPortSetInterruptMask
 482 039c C5F88C60 		str	r6, [r5, #140]
 483 03a0 EC62     		str	r4, [r5, #44]
 484 03a2 FFF7FEFF 		bl	vConfigureTimerForRunTimeStats
 485 03a6 04B0     		add	sp, sp, #16
 486              		@ sp needed
 487 03a8 BDE87040 		pop	{r4, r5, r6, lr}
 488 03ac FFF7FEBF 		b	xPortStartScheduler
 489              	.L79:
 490 03b0 04B0     		add	sp, sp, #16
 491              		@ sp needed
 492 03b2 70BD     		pop	{r4, r5, r6, pc}
 493              	.L82:
 494              		.align	2
 495              	.L81:
 496 03b4 00000000 		.word	.LANCHOR0
 497 03b8 00000000 		.word	.LC0
 498 03bc 00000000 		.word	prvIdleTask
 500              		.align	1
 501              		.global	vTaskEndScheduler
 502              		.thumb
 503              		.thumb_func
 505              	vTaskEndScheduler:
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 03c0 08B5     		push	{r3, lr}
 509 03c2 FFF7FEFF 		bl	ulPortSetInterruptMask
 510 03c6 044B     		ldr	r3, .L84
 511 03c8 0022     		movs	r2, #0
 512 03ca C3F88C20 		str	r2, [r3, #140]
 513 03ce BDE80840 		pop	{r3, lr}
 514 03d2 FFF7FEBF 		b	vPortEndScheduler
 515              	.L85:
 516 03d6 00BF     		.align	2
 517              	.L84:
 518 03d8 00000000 		.word	.LANCHOR0
 520              		.align	1
 521              		.global	vTaskSuspendAll
 522              		.thumb
 523              		.thumb_func
 525              	vTaskSuspendAll:
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529 03dc 034A     		ldr	r2, .L87
 530 03de D2F89830 		ldr	r3, [r2, #152]
 531 03e2 0133     		adds	r3, r3, #1
 532 03e4 C2F89830 		str	r3, [r2, #152]
 533 03e8 7047     		bx	lr
 534              	.L88:
 535 03ea 00BF     		.align	2
 536              	.L87:
 537 03ec 00000000 		.word	.LANCHOR0
 539              		.align	1
 540              		.global	xTaskGetTickCount
 541              		.thumb
 542              		.thumb_func
 544              	xTaskGetTickCount:
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 03f0 10B5     		push	{r4, lr}
 548 03f2 FFF7FEFF 		bl	vPortEnterCritical
 549 03f6 034B     		ldr	r3, .L90
 550 03f8 DC6A     		ldr	r4, [r3, #44]
 551 03fa FFF7FEFF 		bl	vPortExitCritical
 552 03fe 2046     		mov	r0, r4
 553 0400 10BD     		pop	{r4, pc}
 554              	.L91:
 555 0402 00BF     		.align	2
 556              	.L90:
 557 0404 00000000 		.word	.LANCHOR0
 559              		.align	1
 560              		.global	xTaskGetTickCountFromISR
 561              		.thumb
 562              		.thumb_func
 564              	xTaskGetTickCountFromISR:
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567 0408 10B5     		push	{r4, lr}
 568 040a FFF7FEFF 		bl	ulPortSetInterruptMask
 569 040e 034B     		ldr	r3, .L93
 570 0410 DC6A     		ldr	r4, [r3, #44]
 571 0412 FFF7FEFF 		bl	vPortClearInterruptMask
 572 0416 2046     		mov	r0, r4
 573 0418 10BD     		pop	{r4, pc}
 574              	.L94:
 575 041a 00BF     		.align	2
 576              	.L93:
 577 041c 00000000 		.word	.LANCHOR0
 579              		.align	1
 580              		.global	uxTaskGetNumberOfTasks
 581              		.thumb
 582              		.thumb_func
 584              	uxTaskGetNumberOfTasks:
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588 0420 014B     		ldr	r3, .L96
 589 0422 986B     		ldr	r0, [r3, #56]
 590 0424 7047     		bx	lr
 591              	.L97:
 592 0426 00BF     		.align	2
 593              	.L96:
 594 0428 00000000 		.word	.LANCHOR0
 596              		.align	1
 597              		.global	xTaskGetIdleTaskHandle
 598              		.thumb
 599              		.thumb_func
 601              	xTaskGetIdleTaskHandle:
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605 042c 014B     		ldr	r3, .L99
 606 042e D3F89C00 		ldr	r0, [r3, #156]
 607 0432 7047     		bx	lr
 608              	.L100:
 609              		.align	2
 610              	.L99:
 611 0434 00000000 		.word	.LANCHOR0
 613              		.align	1
 614              		.global	xTaskIncrementTick
 615              		.thumb
 616              		.thumb_func
 618              	xTaskIncrementTick:
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621 0438 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 622 043c 384C     		ldr	r4, .L127
 623 043e D4F89830 		ldr	r3, [r4, #152]
 624 0442 002B     		cmp	r3, #0
 625 0444 3CD1     		bne	.L102
 626 0446 E36A     		ldr	r3, [r4, #44]
 627 0448 DFF8D890 		ldr	r9, .L127+4
 628 044c 0133     		adds	r3, r3, #1
 629 044e E362     		str	r3, [r4, #44]
 630 0450 E76A     		ldr	r7, [r4, #44]
 631 0452 A7B9     		cbnz	r7, .L103
 632 0454 626B     		ldr	r2, [r4, #52]
 633 0456 216B     		ldr	r1, [r4, #48]
 634 0458 6163     		str	r1, [r4, #52]
 635 045a 2263     		str	r2, [r4, #48]
 636 045c D4F8A020 		ldr	r2, [r4, #160]
 637 0460 0132     		adds	r2, r2, #1
 638 0462 C4F8A020 		str	r2, [r4, #160]
 639 0466 626B     		ldr	r2, [r4, #52]
 640 0468 1268     		ldr	r2, [r2]
 641 046a 12B9     		cbnz	r2, .L126
 642 046c 4FF0FF32 		mov	r2, #-1
 643 0470 03E0     		b	.L124
 644              	.L126:
 645 0472 626B     		ldr	r2, [r4, #52]
 646 0474 D268     		ldr	r2, [r2, #12]
 647 0476 D268     		ldr	r2, [r2, #12]
 648 0478 5268     		ldr	r2, [r2, #4]
 649              	.L124:
 650 047a C9F80020 		str	r2, [r9]
 651              	.L103:
 652 047e D9F80020 		ldr	r2, [r9]
 653 0482 0025     		movs	r5, #0
 654 0484 9742     		cmp	r7, r2
 655 0486 12D3     		bcc	.L106
 656 0488 4FF0010A 		mov	r10, #1
 657 048c 4FF0140B 		mov	fp, #20
 658              	.L107:
 659 0490 626B     		ldr	r2, [r4, #52]
 660 0492 1268     		ldr	r2, [r2]
 661 0494 12B9     		cbnz	r2, .L122
 662 0496 4FF0FF32 		mov	r2, #-1
 663 049a 06E0     		b	.L125
 664              	.L122:
 665 049c 204B     		ldr	r3, .L127
 666 049e 5A6B     		ldr	r2, [r3, #52]
 667 04a0 D268     		ldr	r2, [r2, #12]
 668 04a2 D668     		ldr	r6, [r2, #12]
 669 04a4 7268     		ldr	r2, [r6, #4]
 670 04a6 9742     		cmp	r7, r2
 671 04a8 18D2     		bcs	.L123
 672              	.L125:
 673 04aa C9F80020 		str	r2, [r9]
 674              	.L106:
 675 04ae A36A     		ldr	r3, [r4, #40]
 676 04b0 DA6A     		ldr	r2, [r3, #44]
 677 04b2 1423     		movs	r3, #20
 678 04b4 5343     		muls	r3, r2, r3
 679 04b6 E358     		ldr	r3, [r4, r3]
 680 04b8 022B     		cmp	r3, #2
 681 04ba 28BF     		it	cs
 682 04bc 0125     		movcs	r5, #1
 683 04be 07E0     		b	.L112
 684              	.L102:
 685 04c0 D4F8A430 		ldr	r3, [r4, #164]
 686 04c4 0025     		movs	r5, #0
 687 04c6 0133     		adds	r3, r3, #1
 688 04c8 C4F8A430 		str	r3, [r4, #164]
 689 04cc FFF7FEFF 		bl	vApplicationTickHook
 690              	.L112:
 691 04d0 D4F8A430 		ldr	r3, [r4, #164]
 692 04d4 0BBB     		cbnz	r3, .L118
 693 04d6 FFF7FEFF 		bl	vApplicationTickHook
 694 04da 1EE0     		b	.L118
 695              	.L123:
 696 04dc 06F10408 		add	r8, r6, #4
 697 04e0 4046     		mov	r0, r8
 698 04e2 FFF7FEFF 		bl	uxListRemove
 699 04e6 B26A     		ldr	r2, [r6, #40]
 700 04e8 1AB1     		cbz	r2, .L110
 701 04ea 06F11800 		add	r0, r6, #24
 702 04ee FFF7FEFF 		bl	uxListRemove
 703              	.L110:
 704 04f2 F06A     		ldr	r0, [r6, #44]
 705 04f4 D4F89420 		ldr	r2, [r4, #148]
 706 04f8 0AFA00F1 		lsl	r1, r10, r0
 707 04fc 0A43     		orrs	r2, r2, r1
 708 04fe 0BFB0040 		mla	r0, fp, r0, r4
 709 0502 4146     		mov	r1, r8
 710 0504 C4F89420 		str	r2, [r4, #148]
 711 0508 FFF7FEFF 		bl	vListInsertEnd
 712 050c A26A     		ldr	r2, [r4, #40]
 713 050e F16A     		ldr	r1, [r6, #44]
 714 0510 D26A     		ldr	r2, [r2, #44]
 715 0512 9142     		cmp	r1, r2
 716 0514 28BF     		it	cs
 717 0516 0125     		movcs	r5, #1
 718 0518 BAE7     		b	.L107
 719              	.L118:
 720 051a 2846     		mov	r0, r5
 721 051c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 722              	.L128:
 723              		.align	2
 724              	.L127:
 725 0520 00000000 		.word	.LANCHOR0
 726 0524 00000000 		.word	.LANCHOR1
 728              		.align	1
 729              		.global	xTaskResumeAll
 730              		.thumb
 731              		.thumb_func
 733              	xTaskResumeAll:
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0528 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 737 052c 2C4C     		ldr	r4, .L153
 738 052e FFF7FEFF 		bl	vPortEnterCritical
 739 0532 D4F89830 		ldr	r3, [r4, #152]
 740 0536 013B     		subs	r3, r3, #1
 741 0538 C4F89830 		str	r3, [r4, #152]
 742 053c D4F89870 		ldr	r7, [r4, #152]
 743 0540 0FB1     		cbz	r7, .L130
 744              	.L132:
 745 0542 0024     		movs	r4, #0
 746 0544 47E0     		b	.L131
 747              	.L130:
 748 0546 A36B     		ldr	r3, [r4, #56]
 749 0548 002B     		cmp	r3, #0
 750 054a FAD0     		beq	.L132
 751 054c 2546     		mov	r5, r4
 752 054e 4FF00108 		mov	r8, #1
 753 0552 4FF01409 		mov	r9, #20
 754              	.L133:
 755 0556 636E     		ldr	r3, [r4, #100]
 756 0558 F3B1     		cbz	r3, .L152
 757 055a 2B6F     		ldr	r3, [r5, #112]
 758 055c DE68     		ldr	r6, [r3, #12]
 759 055e 06F1040A 		add	r10, r6, #4
 760 0562 06F11800 		add	r0, r6, #24
 761 0566 FFF7FEFF 		bl	uxListRemove
 762 056a 5046     		mov	r0, r10
 763 056c FFF7FEFF 		bl	uxListRemove
 764 0570 F06A     		ldr	r0, [r6, #44]
 765 0572 D5F89430 		ldr	r3, [r5, #148]
 766 0576 08FA00F2 		lsl	r2, r8, r0
 767 057a 1343     		orrs	r3, r3, r2
 768 057c 5146     		mov	r1, r10
 769 057e 09FB0050 		mla	r0, r9, r0, r5
 770 0582 C5F89430 		str	r3, [r5, #148]
 771 0586 FFF7FEFF 		bl	vListInsertEnd
 772 058a AB6A     		ldr	r3, [r5, #40]
 773 058c F26A     		ldr	r2, [r6, #44]
 774 058e DB6A     		ldr	r3, [r3, #44]
 775 0590 9A42     		cmp	r2, r3
 776 0592 28BF     		it	cs
 777 0594 0127     		movcs	r7, #1
 778 0596 DEE7     		b	.L133
 779              	.L152:
 780 0598 114B     		ldr	r3, .L153
 781 059a D3F8A430 		ldr	r3, [r3, #164]
 782 059e 73B1     		cbz	r3, .L136
 783              	.L137:
 784 05a0 D4F8A430 		ldr	r3, [r4, #164]
 785 05a4 5BB1     		cbz	r3, .L136
 786 05a6 FFF7FEFF 		bl	xTaskIncrementTick
 787 05aa D4F8A430 		ldr	r3, [r4, #164]
 788 05ae 0028     		cmp	r0, #0
 789 05b0 03F1FF33 		add	r3, r3, #-1
 790 05b4 18BF     		it	ne
 791 05b6 0127     		movne	r7, #1
 792 05b8 C4F8A430 		str	r3, [r4, #164]
 793 05bc F0E7     		b	.L137
 794              	.L136:
 795 05be 012F     		cmp	r7, #1
 796 05c0 03D0     		beq	.L140
 797 05c2 D4F8A830 		ldr	r3, [r4, #168]
 798 05c6 012B     		cmp	r3, #1
 799 05c8 BBD1     		bne	.L132
 800              	.L140:
 801 05ca 0023     		movs	r3, #0
 802 05cc C4F8A830 		str	r3, [r4, #168]
 803 05d0 FFF7FEFF 		bl	vPortYield
 804 05d4 0124     		movs	r4, #1
 805              	.L131:
 806 05d6 FFF7FEFF 		bl	vPortExitCritical
 807 05da 2046     		mov	r0, r4
 808 05dc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 809              	.L154:
 810              		.align	2
 811              	.L153:
 812 05e0 00000000 		.word	.LANCHOR0
 814              		.align	1
 815              		.global	vTaskDelayUntil
 816              		.thumb
 817              		.thumb_func
 819              	vTaskDelayUntil:
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822 05e4 38B5     		push	{r3, r4, r5, lr}
 823 05e6 FFF7FEFF 		bl	vTaskSuspendAll
 824 05ea 184A     		ldr	r2, .L167
 825 05ec 0568     		ldr	r5, [r0]
 826 05ee D36A     		ldr	r3, [r2, #44]
 827 05f0 6C18     		adds	r4, r5, r1
 828 05f2 AB42     		cmp	r3, r5
 829 05f4 02D2     		bcs	.L156
 830 05f6 A542     		cmp	r5, r4
 831 05f8 07D9     		bls	.L161
 832 05fa 01E0     		b	.L166
 833              	.L156:
 834 05fc A542     		cmp	r5, r4
 835 05fe 06D8     		bhi	.L162
 836              	.L166:
 837 0600 A342     		cmp	r3, r4
 838 0602 2CBF     		ite	cs
 839 0604 0023     		movcs	r3, #0
 840 0606 0123     		movcc	r3, #1
 841 0608 02E0     		b	.L157
 842              	.L161:
 843 060a 0023     		movs	r3, #0
 844 060c 00E0     		b	.L157
 845              	.L162:
 846 060e 0123     		movs	r3, #1
 847              	.L157:
 848 0610 0460     		str	r4, [r0]
 849 0612 93B1     		cbz	r3, .L158
 850 0614 906A     		ldr	r0, [r2, #40]
 851 0616 0D4D     		ldr	r5, .L167
 852 0618 0430     		adds	r0, r0, #4
 853 061a FFF7FEFF 		bl	uxListRemove
 854 061e 48B9     		cbnz	r0, .L159
 855 0620 AB6A     		ldr	r3, [r5, #40]
 856 0622 D5F89420 		ldr	r2, [r5, #148]
 857 0626 D96A     		ldr	r1, [r3, #44]
 858 0628 0123     		movs	r3, #1
 859 062a 8B40     		lsls	r3, r3, r1
 860 062c 22EA0303 		bic	r3, r2, r3
 861 0630 C5F89430 		str	r3, [r5, #148]
 862              	.L159:
 863 0634 2046     		mov	r0, r4
 864 0636 FFF709FD 		bl	prvAddCurrentTaskToDelayedList
 865              	.L158:
 866 063a FFF7FEFF 		bl	xTaskResumeAll
 867 063e 18B9     		cbnz	r0, .L155
 868 0640 BDE83840 		pop	{r3, r4, r5, lr}
 869 0644 FFF7FEBF 		b	vPortYield
 870              	.L155:
 871 0648 38BD     		pop	{r3, r4, r5, pc}
 872              	.L168:
 873 064a 00BF     		.align	2
 874              	.L167:
 875 064c 00000000 		.word	.LANCHOR0
 877              		.align	1
 878              		.global	vTaskDelay
 879              		.thumb
 880              		.thumb_func
 882              	vTaskDelay:
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0650 38B5     		push	{r3, r4, r5, lr}
 886 0652 18B9     		cbnz	r0, .L170
 887              	.L172:
 888 0654 BDE83840 		pop	{r3, r4, r5, lr}
 889 0658 FFF7FEBF 		b	vPortYield
 890              	.L170:
 891 065c FFF7FEFF 		bl	vTaskSuspendAll
 892 0660 0C4C     		ldr	r4, .L176
 893 0662 E36A     		ldr	r3, [r4, #44]
 894 0664 C518     		adds	r5, r0, r3
 895 0666 A06A     		ldr	r0, [r4, #40]
 896 0668 0430     		adds	r0, r0, #4
 897 066a FFF7FEFF 		bl	uxListRemove
 898 066e 48B9     		cbnz	r0, .L171
 899 0670 A36A     		ldr	r3, [r4, #40]
 900 0672 D4F89420 		ldr	r2, [r4, #148]
 901 0676 D96A     		ldr	r1, [r3, #44]
 902 0678 0123     		movs	r3, #1
 903 067a 8B40     		lsls	r3, r3, r1
 904 067c 22EA0303 		bic	r3, r2, r3
 905 0680 C4F89430 		str	r3, [r4, #148]
 906              	.L171:
 907 0684 2846     		mov	r0, r5
 908 0686 FFF7E1FC 		bl	prvAddCurrentTaskToDelayedList
 909 068a FFF7FEFF 		bl	xTaskResumeAll
 910 068e 0028     		cmp	r0, #0
 911 0690 E0D0     		beq	.L172
 912 0692 38BD     		pop	{r3, r4, r5, pc}
 913              	.L177:
 914              		.align	2
 915              	.L176:
 916 0694 00000000 		.word	.LANCHOR0
 918              		.align	1
 919              		.global	uxTaskGetSystemState
 920              		.thumb
 921              		.thumb_func
 923              	uxTaskGetSystemState:
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926 0698 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 927 069a 0646     		mov	r6, r0
 928 069c 1746     		mov	r7, r2
 929 069e FFF7FEFF 		bl	vTaskSuspendAll
 930 06a2 184D     		ldr	r5, .L184
 931 06a4 AB6B     		ldr	r3, [r5, #56]
 932 06a6 8B42     		cmp	r3, r1
 933 06a8 27D8     		bhi	.L180
 934 06aa 0122     		movs	r2, #1
 935 06ac 05F11401 		add	r1, r5, #20
 936 06b0 FFF7EAFC 		bl	prvListTaskWithinSingleList
 937 06b4 0122     		movs	r2, #1
 938 06b6 0446     		mov	r4, r0
 939 06b8 2946     		mov	r1, r5
 940 06ba 06EB4010 		add	r0, r6, r0, lsl #5
 941 06be FFF7E3FC 		bl	prvListTaskWithinSingleList
 942 06c2 0444     		add	r4, r4, r0
 943 06c4 696B     		ldr	r1, [r5, #52]
 944 06c6 0222     		movs	r2, #2
 945 06c8 06EB4410 		add	r0, r6, r4, lsl #5
 946 06cc FFF7DCFC 		bl	prvListTaskWithinSingleList
 947 06d0 0444     		add	r4, r4, r0
 948 06d2 296B     		ldr	r1, [r5, #48]
 949 06d4 0222     		movs	r2, #2
 950 06d6 06EB4410 		add	r0, r6, r4, lsl #5
 951 06da FFF7D5FC 		bl	prvListTaskWithinSingleList
 952 06de 0444     		add	r4, r4, r0
 953 06e0 06EB4410 		add	r0, r6, r4, lsl #5
 954 06e4 0322     		movs	r2, #3
 955 06e6 05F17801 		add	r1, r5, #120
 956 06ea FFF7CDFC 		bl	prvListTaskWithinSingleList
 957 06ee 0444     		add	r4, r4, r0
 958 06f0 27B1     		cbz	r7, .L179
 959 06f2 FFF7FEFF 		bl	uxGetTimerForRunTimeStats
 960 06f6 3860     		str	r0, [r7]
 961 06f8 00E0     		b	.L179
 962              	.L180:
 963 06fa 0024     		movs	r4, #0
 964              	.L179:
 965 06fc FFF7FEFF 		bl	xTaskResumeAll
 966 0700 2046     		mov	r0, r4
 967 0702 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 968              	.L185:
 969              		.align	2
 970              	.L184:
 971 0704 00000000 		.word	.LANCHOR0
 973              		.align	1
 974              		.global	vTaskSwitchContext
 975              		.thumb
 976              		.thumb_func
 978              	vTaskSwitchContext:
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981 0708 38B5     		push	{r3, r4, r5, lr}
 982 070a 244B     		ldr	r3, .L196
 983 070c D3F89820 		ldr	r2, [r3, #152]
 984 0710 1C46     		mov	r4, r3
 985 0712 1AB1     		cbz	r2, .L187
 986 0714 0122     		movs	r2, #1
 987 0716 C3F8A820 		str	r2, [r3, #168]
 988 071a 38BD     		pop	{r3, r4, r5, pc}
 989              	.L187:
 990 071c FFF7FEFF 		bl	uxGetTimerForRunTimeStats
 991 0720 D4F8AC10 		ldr	r1, [r4, #172]
 992 0724 8842     		cmp	r0, r1
 993 0726 04D9     		bls	.L189
 994 0728 A26A     		ldr	r2, [r4, #40]
 995 072a 936C     		ldr	r3, [r2, #72]
 996 072c 5B1A     		subs	r3, r3, r1
 997 072e 0344     		add	r3, r3, r0
 998 0730 9364     		str	r3, [r2, #72]
 999              	.L189:
 1000 0732 A16A     		ldr	r1, [r4, #40]
 1001 0734 A26A     		ldr	r2, [r4, #40]
 1002 0736 0968     		ldr	r1, [r1]
 1003 0738 126B     		ldr	r2, [r2, #48]
 1004 073a 184B     		ldr	r3, .L196
 1005 073c 9142     		cmp	r1, r2
 1006 073e C4F8AC00 		str	r0, [r4, #172]
 1007 0742 04D8     		bhi	.L190
 1008 0744 986A     		ldr	r0, [r3, #40]
 1009 0746 996A     		ldr	r1, [r3, #40]
 1010 0748 3431     		adds	r1, r1, #52
 1011 074a FFF7FEFF 		bl	vApplicationStackOverflowHook
 1012              	.L190:
 1013 074e A36A     		ldr	r3, [r4, #40]
 1014 0750 1422     		movs	r2, #20
 1015 0752 1349     		ldr	r1, .L196+4
 1016 0754 186B     		ldr	r0, [r3, #48]
 1017 0756 114D     		ldr	r5, .L196
 1018 0758 FFF7FEFF 		bl	memcmp
 1019 075c 20B1     		cbz	r0, .L191
 1020 075e A86A     		ldr	r0, [r5, #40]
 1021 0760 A96A     		ldr	r1, [r5, #40]
 1022 0762 3431     		adds	r1, r1, #52
 1023 0764 FFF7FEFF 		bl	vApplicationStackOverflowHook
 1024              	.L191:
 1025 0768 D4F89430 		ldr	r3, [r4, #148]
 1026              		.syntax unified
 1027              	@ 152 "../L1_FreeRTOS/portable/portmacro.h" 1
 1028 076c B3FA83F3 		clz r3, r3
 1029              	@ 0 "" 2
 1030              		.thumb
 1031              		.syntax unified
 1032 0770 DBB2     		uxtb	r3, r3
 1033 0772 C3F11F03 		rsb	r3, r3, #31
 1034 0776 1421     		movs	r1, #20
 1035 0778 01FB03F2 		mul	r2, r1, r3
 1036 077c A018     		adds	r0, r4, r2
 1037 077e 4568     		ldr	r5, [r0, #4]
 1038 0780 0832     		adds	r2, r2, #8
 1039 0782 6D68     		ldr	r5, [r5, #4]
 1040 0784 2244     		add	r2, r2, r4
 1041 0786 4560     		str	r5, [r0, #4]
 1042 0788 9542     		cmp	r5, r2
 1043 078a 01FB0343 		mla	r3, r1, r3, r4
 1044 078e 04BF     		itt	eq
 1045 0790 6A68     		ldreq	r2, [r5, #4]
 1046 0792 4260     		streq	r2, [r0, #4]
 1047 0794 5B68     		ldr	r3, [r3, #4]
 1048 0796 DB68     		ldr	r3, [r3, #12]
 1049 0798 A362     		str	r3, [r4, #40]
 1050 079a 38BD     		pop	{r3, r4, r5, pc}
 1051              	.L197:
 1052              		.align	2
 1053              	.L196:
 1054 079c 00000000 		.word	.LANCHOR0
 1055 07a0 00000000 		.word	.LANCHOR2
 1057              		.align	1
 1058              		.global	vTaskSuspend
 1059              		.thumb
 1060              		.thumb_func
 1062              	vTaskSuspend:
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065 07a4 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1066 07a6 0446     		mov	r4, r0
 1067 07a8 1D4E     		ldr	r6, .L208
 1068 07aa FFF7FEFF 		bl	vPortEnterCritical
 1069 07ae 04B9     		cbnz	r4, .L199
 1070 07b0 B46A     		ldr	r4, [r6, #40]
 1071              	.L199:
 1072 07b2 271D     		adds	r7, r4, #4
 1073 07b4 3846     		mov	r0, r7
 1074 07b6 FFF7FEFF 		bl	uxListRemove
 1075 07ba 68B9     		cbnz	r0, .L200
 1076 07bc E06A     		ldr	r0, [r4, #44]
 1077 07be 1422     		movs	r2, #20
 1078 07c0 4243     		muls	r2, r0, r2
 1079 07c2 B358     		ldr	r3, [r6, r2]
 1080 07c4 1649     		ldr	r1, .L208
 1081 07c6 3BB9     		cbnz	r3, .L200
 1082 07c8 D1F89420 		ldr	r2, [r1, #148]
 1083 07cc 0123     		movs	r3, #1
 1084 07ce 8340     		lsls	r3, r3, r0
 1085 07d0 22EA0303 		bic	r3, r2, r3
 1086 07d4 C1F89430 		str	r3, [r1, #148]
 1087              	.L200:
 1088 07d8 A36A     		ldr	r3, [r4, #40]
 1089 07da 1BB1     		cbz	r3, .L201
 1090 07dc 04F11800 		add	r0, r4, #24
 1091 07e0 FFF7FEFF 		bl	uxListRemove
 1092              	.L201:
 1093 07e4 0E4D     		ldr	r5, .L208
 1094 07e6 3946     		mov	r1, r7
 1095 07e8 05F17800 		add	r0, r5, #120
 1096 07ec FFF7FEFF 		bl	vListInsertEnd
 1097 07f0 FFF7FEFF 		bl	vPortExitCritical
 1098 07f4 B36A     		ldr	r3, [r6, #40]
 1099 07f6 9C42     		cmp	r4, r3
 1100 07f8 10D1     		bne	.L198
 1101 07fa D5F88C30 		ldr	r3, [r5, #140]
 1102 07fe 1BB1     		cbz	r3, .L203
 1103 0800 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1104 0804 FFF7FEBF 		b	vPortYield
 1105              	.L203:
 1106 0808 AA6B     		ldr	r2, [r5, #56]
 1107 080a A96F     		ldr	r1, [r5, #120]
 1108 080c 9142     		cmp	r1, r2
 1109 080e 01D1     		bne	.L204
 1110 0810 AB62     		str	r3, [r5, #40]
 1111 0812 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1112              	.L204:
 1113 0814 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1114 0818 FFF7FEBF 		b	vTaskSwitchContext
 1115              	.L198:
 1116 081c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1117              	.L209:
 1118 081e 00BF     		.align	2
 1119              	.L208:
 1120 0820 00000000 		.word	.LANCHOR0
 1122              		.align	1
 1123              		.global	vTaskPlaceOnEventList
 1124              		.thumb
 1125              		.thumb_func
 1127              	vTaskPlaceOnEventList:
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130 0824 38B5     		push	{r3, r4, r5, lr}
 1131 0826 124C     		ldr	r4, .L213
 1132 0828 0D46     		mov	r5, r1
 1133 082a A16A     		ldr	r1, [r4, #40]
 1134 082c 1831     		adds	r1, r1, #24
 1135 082e FFF7FEFF 		bl	vListInsert
 1136 0832 A06A     		ldr	r0, [r4, #40]
 1137 0834 0430     		adds	r0, r0, #4
 1138 0836 FFF7FEFF 		bl	uxListRemove
 1139 083a 2346     		mov	r3, r4
 1140 083c 48B9     		cbnz	r0, .L211
 1141 083e A26A     		ldr	r2, [r4, #40]
 1142 0840 D4F89410 		ldr	r1, [r4, #148]
 1143 0844 D06A     		ldr	r0, [r2, #44]
 1144 0846 0122     		movs	r2, #1
 1145 0848 8240     		lsls	r2, r2, r0
 1146 084a 21EA0202 		bic	r2, r1, r2
 1147 084e C4F89420 		str	r2, [r4, #148]
 1148              	.L211:
 1149 0852 6A1C     		adds	r2, r5, #1
 1150 0854 06D1     		bne	.L212
 1151 0856 996A     		ldr	r1, [r3, #40]
 1152 0858 0648     		ldr	r0, .L213+4
 1153 085a 0431     		adds	r1, r1, #4
 1154 085c BDE83840 		pop	{r3, r4, r5, lr}
 1155 0860 FFF7FEBF 		b	vListInsertEnd
 1156              	.L212:
 1157 0864 D86A     		ldr	r0, [r3, #44]
 1158 0866 2844     		add	r0, r0, r5
 1159 0868 BDE83840 		pop	{r3, r4, r5, lr}
 1160 086c FFF7EEBB 		b	prvAddCurrentTaskToDelayedList
 1161              	.L214:
 1162              		.align	2
 1163              	.L213:
 1164 0870 00000000 		.word	.LANCHOR0
 1165 0874 78000000 		.word	.LANCHOR0+120
 1167              		.align	1
 1168              		.global	xTaskRemoveFromEventList
 1169              		.thumb
 1170              		.thumb_func
 1172              	xTaskRemoveFromEventList:
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175 0878 70B5     		push	{r4, r5, r6, lr}
 1176 087a C368     		ldr	r3, [r0, #12]
 1177 087c 134C     		ldr	r4, .L219
 1178 087e DD68     		ldr	r5, [r3, #12]
 1179 0880 05F11806 		add	r6, r5, #24
 1180 0884 3046     		mov	r0, r6
 1181 0886 FFF7FEFF 		bl	uxListRemove
 1182 088a D4F89830 		ldr	r3, [r4, #152]
 1183 088e 83B9     		cbnz	r3, .L216
 1184 0890 2E1D     		adds	r6, r5, #4
 1185 0892 3046     		mov	r0, r6
 1186 0894 FFF7FEFF 		bl	uxListRemove
 1187 0898 E86A     		ldr	r0, [r5, #44]
 1188 089a D4F89420 		ldr	r2, [r4, #148]
 1189 089e 0123     		movs	r3, #1
 1190 08a0 8340     		lsls	r3, r3, r0
 1191 08a2 1343     		orrs	r3, r3, r2
 1192 08a4 C4F89430 		str	r3, [r4, #148]
 1193 08a8 1423     		movs	r3, #20
 1194 08aa 3146     		mov	r1, r6
 1195 08ac 03FB0040 		mla	r0, r3, r0, r4
 1196 08b0 02E0     		b	.L218
 1197              	.L216:
 1198 08b2 3146     		mov	r1, r6
 1199 08b4 04F16400 		add	r0, r4, #100
 1200              	.L218:
 1201 08b8 FFF7FEFF 		bl	vListInsertEnd
 1202 08bc A36A     		ldr	r3, [r4, #40]
 1203 08be E86A     		ldr	r0, [r5, #44]
 1204 08c0 DB6A     		ldr	r3, [r3, #44]
 1205 08c2 9842     		cmp	r0, r3
 1206 08c4 34BF     		ite	cc
 1207 08c6 0020     		movcc	r0, #0
 1208 08c8 0120     		movcs	r0, #1
 1209 08ca 70BD     		pop	{r4, r5, r6, pc}
 1210              	.L220:
 1211              		.align	2
 1212              	.L219:
 1213 08cc 00000000 		.word	.LANCHOR0
 1215              		.align	1
 1216              		.global	vTaskSetTimeOutState
 1217              		.thumb
 1218              		.thumb_func
 1220              	vTaskSetTimeOutState:
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223              		@ link register save eliminated.
 1224 08d0 034B     		ldr	r3, .L222
 1225 08d2 D3F8A020 		ldr	r2, [r3, #160]
 1226 08d6 DB6A     		ldr	r3, [r3, #44]
 1227 08d8 0260     		str	r2, [r0]
 1228 08da 4360     		str	r3, [r0, #4]
 1229 08dc 7047     		bx	lr
 1230              	.L223:
 1231 08de 00BF     		.align	2
 1232              	.L222:
 1233 08e0 00000000 		.word	.LANCHOR0
 1235              		.align	1
 1236              		.global	xTaskCheckForTimeOut
 1237              		.thumb
 1238              		.thumb_func
 1240              	xTaskCheckForTimeOut:
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243 08e4 38B5     		push	{r3, r4, r5, lr}
 1244 08e6 0D46     		mov	r5, r1
 1245 08e8 0446     		mov	r4, r0
 1246 08ea FFF7FEFF 		bl	vPortEnterCritical
 1247 08ee 2B68     		ldr	r3, [r5]
 1248 08f0 0D4A     		ldr	r2, .L230
 1249 08f2 591C     		adds	r1, r3, #1
 1250 08f4 D06A     		ldr	r0, [r2, #44]
 1251 08f6 10D0     		beq	.L227
 1252 08f8 D2F8A020 		ldr	r2, [r2, #160]
 1253 08fc 2168     		ldr	r1, [r4]
 1254 08fe 9142     		cmp	r1, r2
 1255 0900 6268     		ldr	r2, [r4, #4]
 1256 0902 01D0     		beq	.L226
 1257 0904 9042     		cmp	r0, r2
 1258 0906 0AD2     		bcs	.L229
 1259              	.L226:
 1260 0908 811A     		subs	r1, r0, r2
 1261 090a 8B42     		cmp	r3, r1
 1262 090c 07D9     		bls	.L229
 1263 090e 121A     		subs	r2, r2, r0
 1264 0910 1344     		add	r3, r3, r2
 1265 0912 2B60     		str	r3, [r5]
 1266 0914 2046     		mov	r0, r4
 1267 0916 FFF7FEFF 		bl	vTaskSetTimeOutState
 1268              	.L227:
 1269 091a 0024     		movs	r4, #0
 1270 091c 00E0     		b	.L225
 1271              	.L229:
 1272 091e 0124     		movs	r4, #1
 1273              	.L225:
 1274 0920 FFF7FEFF 		bl	vPortExitCritical
 1275 0924 2046     		mov	r0, r4
 1276 0926 38BD     		pop	{r3, r4, r5, pc}
 1277              	.L231:
 1278              		.align	2
 1279              	.L230:
 1280 0928 00000000 		.word	.LANCHOR0
 1282              		.align	1
 1283              		.global	vTaskMissedYield
 1284              		.thumb
 1285              		.thumb_func
 1287              	vTaskMissedYield:
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		@ link register save eliminated.
 1291 092c 024B     		ldr	r3, .L233
 1292 092e 0122     		movs	r2, #1
 1293 0930 C3F8A820 		str	r2, [r3, #168]
 1294 0934 7047     		bx	lr
 1295              	.L234:
 1296 0936 00BF     		.align	2
 1297              	.L233:
 1298 0938 00000000 		.word	.LANCHOR0
 1300              		.align	1
 1301              		.global	uxTaskGetTaskNumber
 1302              		.thumb
 1303              		.thumb_func
 1305              	uxTaskGetTaskNumber:
 1306              		@ args = 0, pretend = 0, frame = 0
 1307              		@ frame_needed = 0, uses_anonymous_args = 0
 1308              		@ link register save eliminated.
 1309 093c 00B1     		cbz	r0, .L236
 1310 093e 006C     		ldr	r0, [r0, #64]
 1311              	.L236:
 1312 0940 7047     		bx	lr
 1314              		.align	1
 1315              		.global	vTaskSetTaskNumber
 1316              		.thumb
 1317              		.thumb_func
 1319              	vTaskSetTaskNumber:
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323 0942 00B1     		cbz	r0, .L238
 1324 0944 0164     		str	r1, [r0, #64]
 1325              	.L238:
 1326 0946 7047     		bx	lr
 1328              		.align	1
 1329              		.global	uxTaskGetStackHighWaterMark
 1330              		.thumb
 1331              		.thumb_func
 1333              	uxTaskGetStackHighWaterMark:
 1334              		@ args = 0, pretend = 0, frame = 0
 1335              		@ frame_needed = 0, uses_anonymous_args = 0
 1336              		@ link register save eliminated.
 1337 0948 08B9     		cbnz	r0, .L244
 1338 094a 054B     		ldr	r3, .L248
 1339 094c 986A     		ldr	r0, [r3, #40]
 1340              	.L244:
 1341 094e 026B     		ldr	r2, [r0, #48]
 1342 0950 1346     		mov	r3, r2
 1343              	.L245:
 1344 0952 981A     		subs	r0, r3, r2
 1345 0954 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 1346 0958 80B2     		uxth	r0, r0
 1347 095a A529     		cmp	r1, #165
 1348 095c F9D0     		beq	.L245
 1349 095e 7047     		bx	lr
 1350              	.L249:
 1351              		.align	2
 1352              	.L248:
 1353 0960 00000000 		.word	.LANCHOR0
 1355              		.align	1
 1356              		.global	xTaskGetCurrentTaskHandle
 1357              		.thumb
 1358              		.thumb_func
 1360              	xTaskGetCurrentTaskHandle:
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363              		@ link register save eliminated.
 1364 0964 014B     		ldr	r3, .L251
 1365 0966 986A     		ldr	r0, [r3, #40]
 1366 0968 7047     		bx	lr
 1367              	.L252:
 1368 096a 00BF     		.align	2
 1369              	.L251:
 1370 096c 00000000 		.word	.LANCHOR0
 1372              		.align	1
 1373              		.global	xTaskGetSchedulerState
 1374              		.thumb
 1375              		.thumb_func
 1377              	xTaskGetSchedulerState:
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381 0970 054B     		ldr	r3, .L257
 1382 0972 D3F88C00 		ldr	r0, [r3, #140]
 1383 0976 28B1     		cbz	r0, .L254
 1384 0978 D3F89830 		ldr	r3, [r3, #152]
 1385 097c 002B     		cmp	r3, #0
 1386 097e 0CBF     		ite	eq
 1387 0980 0120     		moveq	r0, #1
 1388 0982 0220     		movne	r0, #2
 1389              	.L254:
 1390 0984 7047     		bx	lr
 1391              	.L258:
 1392 0986 00BF     		.align	2
 1393              	.L257:
 1394 0988 00000000 		.word	.LANCHOR0
 1396              		.align	1
 1397              		.global	vTaskPriorityInherit
 1398              		.thumb
 1399              		.thumb_func
 1401              	vTaskPriorityInherit:
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404 098c F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1405 098e 0446     		mov	r4, r0
 1406 0990 0028     		cmp	r0, #0
 1407 0992 37D0     		beq	.L259
 1408 0994 1C4B     		ldr	r3, .L269
 1409 0996 C26A     		ldr	r2, [r0, #44]
 1410 0998 996A     		ldr	r1, [r3, #40]
 1411 099a 1D46     		mov	r5, r3
 1412 099c C96A     		ldr	r1, [r1, #44]
 1413 099e 8A42     		cmp	r2, r1
 1414 09a0 30D2     		bcs	.L259
 1415 09a2 996A     		ldr	r1, [r3, #40]
 1416 09a4 1426     		movs	r6, #20
 1417 09a6 C96A     		ldr	r1, [r1, #44]
 1418 09a8 06FB0232 		mla	r2, r6, r2, r3
 1419 09ac C1F10201 		rsb	r1, r1, #2
 1420 09b0 8161     		str	r1, [r0, #24]
 1421 09b2 4169     		ldr	r1, [r0, #20]
 1422 09b4 9142     		cmp	r1, r2
 1423 09b6 22D1     		bne	.L268
 1424 09b8 071D     		adds	r7, r0, #4
 1425 09ba 3846     		mov	r0, r7
 1426 09bc FFF7FEFF 		bl	uxListRemove
 1427 09c0 58B9     		cbnz	r0, .L263
 1428 09c2 E16A     		ldr	r1, [r4, #44]
 1429 09c4 4E43     		muls	r6, r1, r6
 1430 09c6 AB59     		ldr	r3, [r5, r6]
 1431 09c8 3BB9     		cbnz	r3, .L263
 1432 09ca D5F89420 		ldr	r2, [r5, #148]
 1433 09ce 0123     		movs	r3, #1
 1434 09d0 8B40     		lsls	r3, r3, r1
 1435 09d2 22EA0303 		bic	r3, r2, r3
 1436 09d6 C5F89430 		str	r3, [r5, #148]
 1437              	.L263:
 1438 09da AB6A     		ldr	r3, [r5, #40]
 1439 09dc 0122     		movs	r2, #1
 1440 09de DB6A     		ldr	r3, [r3, #44]
 1441 09e0 D5F89400 		ldr	r0, [r5, #148]
 1442 09e4 9A40     		lsls	r2, r2, r3
 1443 09e6 0243     		orrs	r2, r2, r0
 1444 09e8 E362     		str	r3, [r4, #44]
 1445 09ea C5F89420 		str	r2, [r5, #148]
 1446 09ee 1420     		movs	r0, #20
 1447 09f0 3946     		mov	r1, r7
 1448 09f2 00FB0350 		mla	r0, r0, r3, r5
 1449 09f6 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1450 09fa FFF7FEBF 		b	vListInsertEnd
 1451              	.L268:
 1452 09fe 9B6A     		ldr	r3, [r3, #40]
 1453 0a00 DB6A     		ldr	r3, [r3, #44]
 1454 0a02 C362     		str	r3, [r0, #44]
 1455              	.L259:
 1456 0a04 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1457              	.L270:
 1458 0a06 00BF     		.align	2
 1459              	.L269:
 1460 0a08 00000000 		.word	.LANCHOR0
 1462              		.align	1
 1463              		.global	vTaskPriorityDisinherit
 1464              		.thumb
 1465              		.thumb_func
 1467              	vTaskPriorityDisinherit:
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470 0a0c 70B5     		push	{r4, r5, r6, lr}
 1471 0a0e 0446     		mov	r4, r0
 1472 0a10 50B3     		cbz	r0, .L271
 1473 0a12 C26A     		ldr	r2, [r0, #44]
 1474 0a14 436C     		ldr	r3, [r0, #68]
 1475 0a16 9A42     		cmp	r2, r3
 1476 0a18 26D0     		beq	.L271
 1477 0a1a 051D     		adds	r5, r0, #4
 1478 0a1c 2846     		mov	r0, r5
 1479 0a1e FFF7FEFF 		bl	uxListRemove
 1480 0a22 124B     		ldr	r3, .L277
 1481 0a24 60B9     		cbnz	r0, .L273
 1482 0a26 E66A     		ldr	r6, [r4, #44]
 1483 0a28 1421     		movs	r1, #20
 1484 0a2a 7143     		muls	r1, r6, r1
 1485 0a2c 5A58     		ldr	r2, [r3, r1]
 1486 0a2e 3AB9     		cbnz	r2, .L273
 1487 0a30 D3F89400 		ldr	r0, [r3, #148]
 1488 0a34 0122     		movs	r2, #1
 1489 0a36 B240     		lsls	r2, r2, r6
 1490 0a38 20EA0202 		bic	r2, r0, r2
 1491 0a3c C3F89420 		str	r2, [r3, #148]
 1492              	.L273:
 1493 0a40 626C     		ldr	r2, [r4, #68]
 1494 0a42 0120     		movs	r0, #1
 1495 0a44 C2F10201 		rsb	r1, r2, #2
 1496 0a48 A161     		str	r1, [r4, #24]
 1497 0a4a E262     		str	r2, [r4, #44]
 1498 0a4c D3F89440 		ldr	r4, [r3, #148]
 1499 0a50 9040     		lsls	r0, r0, r2
 1500 0a52 2043     		orrs	r0, r0, r4
 1501 0a54 C3F89400 		str	r0, [r3, #148]
 1502 0a58 1420     		movs	r0, #20
 1503 0a5a 2946     		mov	r1, r5
 1504 0a5c BDE87040 		pop	{r4, r5, r6, lr}
 1505 0a60 00FB0230 		mla	r0, r0, r2, r3
 1506 0a64 FFF7FEBF 		b	vListInsertEnd
 1507              	.L271:
 1508 0a68 70BD     		pop	{r4, r5, r6, pc}
 1509              	.L278:
 1510 0a6a 00BF     		.align	2
 1511              	.L277:
 1512 0a6c 00000000 		.word	.LANCHOR0
 1514              		.align	1
 1515              		.global	uxTaskGetCpuUsage
 1516              		.thumb
 1517              		.thumb_func
 1519              	uxTaskGetCpuUsage:
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522 0a70 10B5     		push	{r4, lr}
 1523 0a72 0446     		mov	r4, r0
 1524 0a74 08B9     		cbnz	r0, .L280
 1525 0a76 054B     		ldr	r3, .L281
 1526 0a78 9C6A     		ldr	r4, [r3, #40]
 1527              	.L280:
 1528 0a7a FFF7FEFF 		bl	uxGetTimerForRunTimeStats
 1529 0a7e A26C     		ldr	r2, [r4, #72]
 1530 0a80 6423     		movs	r3, #100
 1531 0a82 5343     		muls	r3, r2, r3
 1532 0a84 B3FBF0F0 		udiv	r0, r3, r0
 1533 0a88 10BD     		pop	{r4, pc}
 1534              	.L282:
 1535 0a8a 00BF     		.align	2
 1536              	.L281:
 1537 0a8c 00000000 		.word	.LANCHOR0
 1539              		.align	1
 1540              		.global	vTaskResetRunTimeStats
 1541              		.thumb
 1542              		.thumb_func
 1544              	vTaskResetRunTimeStats:
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 1547 0a90 10B5     		push	{r4, lr}
 1548 0a92 154C     		ldr	r4, .L304
 1549 0a94 FFF7FEFF 		bl	vTaskSuspendAll
 1550 0a98 6369     		ldr	r3, [r4, #20]
 1551 0a9a 1BB1     		cbz	r3, .L284
 1552 0a9c 04F11400 		add	r0, r4, #20
 1553 0aa0 FFF7AEFA 		bl	prvResetRunTimeStatsInList
 1554              	.L284:
 1555 0aa4 2368     		ldr	r3, [r4]
 1556 0aa6 13B1     		cbz	r3, .L285
 1557 0aa8 0F48     		ldr	r0, .L304
 1558 0aaa FFF7A9FA 		bl	prvResetRunTimeStatsInList
 1559              	.L285:
 1560 0aae 636B     		ldr	r3, [r4, #52]
 1561 0ab0 1B68     		ldr	r3, [r3]
 1562 0ab2 1BB1     		cbz	r3, .L286
 1563 0ab4 0C4B     		ldr	r3, .L304
 1564 0ab6 586B     		ldr	r0, [r3, #52]
 1565 0ab8 FFF7A2FA 		bl	prvResetRunTimeStatsInList
 1566              	.L286:
 1567 0abc 236B     		ldr	r3, [r4, #48]
 1568 0abe 1B68     		ldr	r3, [r3]
 1569 0ac0 1BB1     		cbz	r3, .L287
 1570 0ac2 094B     		ldr	r3, .L304
 1571 0ac4 186B     		ldr	r0, [r3, #48]
 1572 0ac6 FFF79BFA 		bl	prvResetRunTimeStatsInList
 1573              	.L287:
 1574 0aca A36F     		ldr	r3, [r4, #120]
 1575 0acc 13B1     		cbz	r3, .L288
 1576 0ace 0748     		ldr	r0, .L304+4
 1577 0ad0 FFF796FA 		bl	prvResetRunTimeStatsInList
 1578              	.L288:
 1579 0ad4 0023     		movs	r3, #0
 1580 0ad6 C4F8AC30 		str	r3, [r4, #172]
 1581 0ada FFF7FEFF 		bl	resetRunTimeCounter
 1582 0ade BDE81040 		pop	{r4, lr}
 1583 0ae2 FFF7FEBF 		b	xTaskResumeAll
 1584              	.L305:
 1585 0ae6 00BF     		.align	2
 1586              	.L304:
 1587 0ae8 00000000 		.word	.LANCHOR0
 1588 0aec 78000000 		.word	.LANCHOR0+120
 1590              		.global	pxCurrentTCB
 1591              		.section	.rodata
 1592              		.set	.LANCHOR2,. + 0
 1595              	ucExpectedStackBytes.5343:
 1596 0000 A5       		.byte	-91
 1597 0001 A5       		.byte	-91
 1598 0002 A5       		.byte	-91
 1599 0003 A5       		.byte	-91
 1600 0004 A5       		.byte	-91
 1601 0005 A5       		.byte	-91
 1602 0006 A5       		.byte	-91
 1603 0007 A5       		.byte	-91
 1604 0008 A5       		.byte	-91
 1605 0009 A5       		.byte	-91
 1606 000a A5       		.byte	-91
 1607 000b A5       		.byte	-91
 1608 000c A5       		.byte	-91
 1609 000d A5       		.byte	-91
 1610 000e A5       		.byte	-91
 1611 000f A5       		.byte	-91
 1612 0010 A5       		.byte	-91
 1613 0011 A5       		.byte	-91
 1614 0012 A5       		.byte	-91
 1615 0013 A5       		.byte	-91
 1616              		.section	.rodata.str1.1,"aMS",%progbits,1
 1617              	.LC0:
 1618 0000 49444C45 		.ascii	"IDLE\000"
 1618      00
 1619              		.data
 1620              		.align	2
 1621              		.set	.LANCHOR1,. + 0
 1624              	xNextTaskUnblockTime:
 1625 0000 FFFFFFFF 		.word	-1
 1626              		.bss
 1627              		.align	2
 1628              		.set	.LANCHOR0,. + 0
 1631              	pxReadyTasksLists:
 1632 0000 00000000 		.space	40
 1632      00000000 
 1632      00000000 
 1632      00000000 
 1632      00000000 
 1635              	pxCurrentTCB:
 1636 0028 00000000 		.space	4
 1639              	xTickCount:
 1640 002c 00000000 		.space	4
 1643              	pxOverflowDelayedTaskList:
 1644 0030 00000000 		.space	4
 1647              	pxDelayedTaskList:
 1648 0034 00000000 		.space	4
 1651              	uxCurrentNumberOfTasks:
 1652 0038 00000000 		.space	4
 1655              	xDelayedTaskList1:
 1656 003c 00000000 		.space	20
 1656      00000000 
 1656      00000000 
 1656      00000000 
 1656      00000000 
 1659              	xDelayedTaskList2:
 1660 0050 00000000 		.space	20
 1660      00000000 
 1660      00000000 
 1660      00000000 
 1660      00000000 
 1663              	xPendingReadyList:
 1664 0064 00000000 		.space	20
 1664      00000000 
 1664      00000000 
 1664      00000000 
 1664      00000000 
 1667              	xSuspendedTaskList:
 1668 0078 00000000 		.space	20
 1668      00000000 
 1668      00000000 
 1668      00000000 
 1668      00000000 
 1671              	xSchedulerRunning:
 1672 008c 00000000 		.space	4
 1675              	uxTaskNumber:
 1676 0090 00000000 		.space	4
 1679              	uxTopReadyPriority:
 1680 0094 00000000 		.space	4
 1683              	uxSchedulerSuspended:
 1684 0098 00000000 		.space	4
 1687              	xIdleTaskHandle:
 1688 009c 00000000 		.space	4
 1691              	xNumOfOverflows:
 1692 00a0 00000000 		.space	4
 1695              	uxPendedTicks:
 1696 00a4 00000000 		.space	4
 1699              	xYieldPending:
 1700 00a8 00000000 		.space	4
 1703              	ulTaskSwitchedInTime:
 1704 00ac 00000000 		.space	4
 1705              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
     /tmp/ccnDI8E1.s:17     .text:00000000 $t
     /tmp/ccnDI8E1.s:21     .text:00000000 prvResetRunTimeStatsInList
     /tmp/ccnDI8E1.s:55     .text:00000034 prvIdleTask
     /tmp/ccnDI8E1.s:72     .text:00000048 $d
     /tmp/ccnDI8E1.s:74     .text:0000004c $t
     /tmp/ccnDI8E1.s:78     .text:0000004c prvAddCurrentTaskToDelayedList
     /tmp/ccnDI8E1.s:108    .text:00000080 $d
     /tmp/ccnDI8E1.s:111    .text:00000088 $t
     /tmp/ccnDI8E1.s:115    .text:00000088 prvListTaskWithinSingleList
     /tmp/ccnDI8E1.s:178    .text:00000116 xTaskGenericCreate
     /tmp/ccnDI8E1.s:322    .text:00000280 $d
     /tmp/ccnDI8E1.s:324    .text:00000284 $t
     /tmp/ccnDI8E1.s:329    .text:00000284 xTaskIsTaskSuspended
     /tmp/ccnDI8E1.s:350    .text:000002a0 $d
     /tmp/ccnDI8E1.s:352    .text:000002a4 $t
     /tmp/ccnDI8E1.s:357    .text:000002a4 vTaskResume
     /tmp/ccnDI8E1.s:399    .text:000002fc $d
     /tmp/ccnDI8E1.s:401    .text:00000300 $t
     /tmp/ccnDI8E1.s:406    .text:00000300 xTaskResumeFromISR
     /tmp/ccnDI8E1.s:455    .text:00000370 $d
     /tmp/ccnDI8E1.s:457    .text:00000374 $t
     /tmp/ccnDI8E1.s:462    .text:00000374 vTaskStartScheduler
     /tmp/ccnDI8E1.s:496    .text:000003b4 $d
     /tmp/ccnDI8E1.s:500    .text:000003c0 $t
     /tmp/ccnDI8E1.s:505    .text:000003c0 vTaskEndScheduler
     /tmp/ccnDI8E1.s:518    .text:000003d8 $d
     /tmp/ccnDI8E1.s:520    .text:000003dc $t
     /tmp/ccnDI8E1.s:525    .text:000003dc vTaskSuspendAll
     /tmp/ccnDI8E1.s:537    .text:000003ec $d
     /tmp/ccnDI8E1.s:539    .text:000003f0 $t
     /tmp/ccnDI8E1.s:544    .text:000003f0 xTaskGetTickCount
     /tmp/ccnDI8E1.s:557    .text:00000404 $d
     /tmp/ccnDI8E1.s:559    .text:00000408 $t
     /tmp/ccnDI8E1.s:564    .text:00000408 xTaskGetTickCountFromISR
     /tmp/ccnDI8E1.s:577    .text:0000041c $d
     /tmp/ccnDI8E1.s:579    .text:00000420 $t
     /tmp/ccnDI8E1.s:584    .text:00000420 uxTaskGetNumberOfTasks
     /tmp/ccnDI8E1.s:594    .text:00000428 $d
     /tmp/ccnDI8E1.s:596    .text:0000042c $t
     /tmp/ccnDI8E1.s:601    .text:0000042c xTaskGetIdleTaskHandle
     /tmp/ccnDI8E1.s:611    .text:00000434 $d
     /tmp/ccnDI8E1.s:613    .text:00000438 $t
     /tmp/ccnDI8E1.s:618    .text:00000438 xTaskIncrementTick
     /tmp/ccnDI8E1.s:725    .text:00000520 $d
     /tmp/ccnDI8E1.s:728    .text:00000528 $t
     /tmp/ccnDI8E1.s:733    .text:00000528 xTaskResumeAll
     /tmp/ccnDI8E1.s:812    .text:000005e0 $d
     /tmp/ccnDI8E1.s:814    .text:000005e4 $t
     /tmp/ccnDI8E1.s:819    .text:000005e4 vTaskDelayUntil
     /tmp/ccnDI8E1.s:875    .text:0000064c $d
     /tmp/ccnDI8E1.s:877    .text:00000650 $t
     /tmp/ccnDI8E1.s:882    .text:00000650 vTaskDelay
     /tmp/ccnDI8E1.s:916    .text:00000694 $d
     /tmp/ccnDI8E1.s:918    .text:00000698 $t
     /tmp/ccnDI8E1.s:923    .text:00000698 uxTaskGetSystemState
     /tmp/ccnDI8E1.s:971    .text:00000704 $d
     /tmp/ccnDI8E1.s:973    .text:00000708 $t
     /tmp/ccnDI8E1.s:978    .text:00000708 vTaskSwitchContext
     /tmp/ccnDI8E1.s:1054   .text:0000079c $d
     /tmp/ccnDI8E1.s:1057   .text:000007a4 $t
     /tmp/ccnDI8E1.s:1062   .text:000007a4 vTaskSuspend
     /tmp/ccnDI8E1.s:1120   .text:00000820 $d
     /tmp/ccnDI8E1.s:1122   .text:00000824 $t
     /tmp/ccnDI8E1.s:1127   .text:00000824 vTaskPlaceOnEventList
     /tmp/ccnDI8E1.s:1164   .text:00000870 $d
     /tmp/ccnDI8E1.s:1167   .text:00000878 $t
     /tmp/ccnDI8E1.s:1172   .text:00000878 xTaskRemoveFromEventList
     /tmp/ccnDI8E1.s:1213   .text:000008cc $d
     /tmp/ccnDI8E1.s:1215   .text:000008d0 $t
     /tmp/ccnDI8E1.s:1220   .text:000008d0 vTaskSetTimeOutState
     /tmp/ccnDI8E1.s:1233   .text:000008e0 $d
     /tmp/ccnDI8E1.s:1235   .text:000008e4 $t
     /tmp/ccnDI8E1.s:1240   .text:000008e4 xTaskCheckForTimeOut
     /tmp/ccnDI8E1.s:1280   .text:00000928 $d
     /tmp/ccnDI8E1.s:1282   .text:0000092c $t
     /tmp/ccnDI8E1.s:1287   .text:0000092c vTaskMissedYield
     /tmp/ccnDI8E1.s:1298   .text:00000938 $d
     /tmp/ccnDI8E1.s:1300   .text:0000093c $t
     /tmp/ccnDI8E1.s:1305   .text:0000093c uxTaskGetTaskNumber
     /tmp/ccnDI8E1.s:1319   .text:00000942 vTaskSetTaskNumber
     /tmp/ccnDI8E1.s:1333   .text:00000948 uxTaskGetStackHighWaterMark
     /tmp/ccnDI8E1.s:1353   .text:00000960 $d
     /tmp/ccnDI8E1.s:1355   .text:00000964 $t
     /tmp/ccnDI8E1.s:1360   .text:00000964 xTaskGetCurrentTaskHandle
     /tmp/ccnDI8E1.s:1370   .text:0000096c $d
     /tmp/ccnDI8E1.s:1372   .text:00000970 $t
     /tmp/ccnDI8E1.s:1377   .text:00000970 xTaskGetSchedulerState
     /tmp/ccnDI8E1.s:1394   .text:00000988 $d
     /tmp/ccnDI8E1.s:1396   .text:0000098c $t
     /tmp/ccnDI8E1.s:1401   .text:0000098c vTaskPriorityInherit
     /tmp/ccnDI8E1.s:1460   .text:00000a08 $d
     /tmp/ccnDI8E1.s:1462   .text:00000a0c $t
     /tmp/ccnDI8E1.s:1467   .text:00000a0c vTaskPriorityDisinherit
     /tmp/ccnDI8E1.s:1512   .text:00000a6c $d
     /tmp/ccnDI8E1.s:1514   .text:00000a70 $t
     /tmp/ccnDI8E1.s:1519   .text:00000a70 uxTaskGetCpuUsage
     /tmp/ccnDI8E1.s:1537   .text:00000a8c $d
     /tmp/ccnDI8E1.s:1539   .text:00000a90 $t
     /tmp/ccnDI8E1.s:1544   .text:00000a90 vTaskResetRunTimeStats
     /tmp/ccnDI8E1.s:1587   .text:00000ae8 $d
     /tmp/ccnDI8E1.s:1635   .bss:00000028 pxCurrentTCB
     /tmp/ccnDI8E1.s:1595   .rodata:00000000 ucExpectedStackBytes.5343
     /tmp/ccnDI8E1.s:1620   .data:00000000 $d
     /tmp/ccnDI8E1.s:1624   .data:00000000 xNextTaskUnblockTime
     /tmp/ccnDI8E1.s:1627   .bss:00000000 $d
     /tmp/ccnDI8E1.s:1631   .bss:00000000 pxReadyTasksLists
     /tmp/ccnDI8E1.s:1639   .bss:0000002c xTickCount
     /tmp/ccnDI8E1.s:1643   .bss:00000030 pxOverflowDelayedTaskList
     /tmp/ccnDI8E1.s:1647   .bss:00000034 pxDelayedTaskList
     /tmp/ccnDI8E1.s:1651   .bss:00000038 uxCurrentNumberOfTasks
     /tmp/ccnDI8E1.s:1655   .bss:0000003c xDelayedTaskList1
     /tmp/ccnDI8E1.s:1659   .bss:00000050 xDelayedTaskList2
     /tmp/ccnDI8E1.s:1663   .bss:00000064 xPendingReadyList
     /tmp/ccnDI8E1.s:1667   .bss:00000078 xSuspendedTaskList
     /tmp/ccnDI8E1.s:1671   .bss:0000008c xSchedulerRunning
     /tmp/ccnDI8E1.s:1675   .bss:00000090 uxTaskNumber
     /tmp/ccnDI8E1.s:1679   .bss:00000094 uxTopReadyPriority
     /tmp/ccnDI8E1.s:1683   .bss:00000098 uxSchedulerSuspended
     /tmp/ccnDI8E1.s:1687   .bss:0000009c xIdleTaskHandle
     /tmp/ccnDI8E1.s:1691   .bss:000000a0 xNumOfOverflows
     /tmp/ccnDI8E1.s:1695   .bss:000000a4 uxPendedTicks
     /tmp/ccnDI8E1.s:1699   .bss:000000a8 xYieldPending
     /tmp/ccnDI8E1.s:1703   .bss:000000ac ulTaskSwitchedInTime

UNDEFINED SYMBOLS
vPortYield
vApplicationIdleHook
vListInsert
pvPortMalloc
vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vPortEnterCritical
vListInitialise
vListInsertEnd
vPortExitCritical
uxListRemove
ulPortSetInterruptMask
vPortClearInterruptMask
vConfigureTimerForRunTimeStats
xPortStartScheduler
vPortEndScheduler
vApplicationTickHook
uxGetTimerForRunTimeStats
vApplicationStackOverflowHook
memcmp
resetRunTimeCounter
